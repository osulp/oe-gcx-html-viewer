!function(){function e(e,t,r){if("string"==typeof e&&(r=t,t=e),void 0!==r)for(var a=t.split("."),s=null,i=window,n=0,u=a.length;n<u;n++)s=a[n],n==u-1?i[s]=r:i[s]||(i[s]={}),i=i[s];else console.warn("Undefined shim for: "+t)}var t="<div class='clusters' data-binding='{@source: selectedClusterLayer}'>    <div class='form-stacked' data-binding='{@template-for: selectedClusterLayer}'>        <h4 class='visualization-title' data-binding='{@text: @language-clustering-title}'></h4>        <div class='form-item'>            <label class='form-label' data-binding='{@text: @language-clustering-radius}'></label>            <div class='form-control'>                <input type='number' data-binding='{@value: clusterRadius}{title: @language-clustering-radius}' />            </div>        </div>        <div class='form-item'>            <label class='form-label' data-binding='{@text: @language-clustering-maximum-features}'></label>            <div class='form-control'>                <input type='number' min='0' data-binding='{@value: maxFeaturesInCluster}{title: @language-clustering-maximum-features}' />            </div>        </div>    </div></div>";require({cache:{"Mapping/modules/ClusterLayers/ClusterLayerModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function a(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(a.prototype=r.prototype,new a)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/framework/observables","geocortex/infrastructure/ClusterLayer","geocortex/essentials/LayerType"],function(t,r,a,s,i,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var u=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.clusterLayers=new s.ObservableCollection(null),e.hideClusters=new s.Observable(i.ClusterHidingOptions.none),e}return e(r,t),r.prototype.initialize=function(e){var t=this;if(e.hasOwnProperty("hideClusters")&&null!=e.hideClusters){var r=e.hideClusters;void 0===i.ClusterHidingOptions[r]||null===i.ClusterHidingOptions[r]?this.app.trace.warning('Invalid clustering option "'+r+'" given.'):this.hideClusters.set(i.ClusterHidingOptions[r])}this.app.command("AddClusterLayer").register(this,this._addClusterLayer,this._canExecuteAddClusterLayer),this.app.command("RemoveClusterLayer").register(this,this._removeClusterLayer,this._canExecuteRemoveClusterLayer),this.app.map&&this.app.map.loaded?this._checkIfClustersAreEnabledByDefault():this.app.event("MapLoadedEvent").once(this,function(e){t._checkIfClustersAreEnabledByDefault()}),this.app.event("MapServiceRemovedEvent").subscribe(this,function(e){e.featureClustering&&e.featureClustering.enabled&&t.app.command("RemoveClusterLayer").execute({gcxLayer:e.layers[0]})})},r.prototype._addClusterLayer=function(e){var t=this._returnGeocortexLayer(e);if(t.type===n.LayerType.FEATURE_LAYER){this.app.command("RemoveVisualization").execute({gcxLayer:t});var r=new i.ClusterLayer(t,this.app);t.mapService.featureClustering.enabled=!0,r.hideClusters.set(this.hideClusters.get());var a;for(a=0;a<this.app.map.graphicsLayerIds.length&&this.app.map.graphicsLayerIds[a]!==t.mapService.id;a++);this.app.map.addLayer(r,a+1),this.clusterLayers.addItem(r),this.app.command("AddClusterLayer").raiseCanExecuteChanged(),this.app.command("RemoveClusterLayer").raiseCanExecuteChanged(),this.app.event("ClusterLayerAddedEvent").publish(r),this.app.event("LayerVisualizationChangedEvent").publish(t)}else this.app.trace.info("Can only create a cluster layer from a feature layer.")},r.prototype._canExecuteAddClusterLayer=function(e){var t=this._returnGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.featureClustering)&&!t.mapService.featureClustering.enabled},r.prototype._removeClusterLayer=function(e){var t=this._returnGeocortexLayer(e);if(t){for(var r=0;r<this.clusterLayers.getLength();r++){var a=this.clusterLayers.getAt(r);a.id===t.mapService.id+"-cluster"&&(this.clusterLayers.removeItem(a),this.app.event("ClusterLayerRemovedEvent").publish(a),this.app.event("LayerVisualizationChangedEvent").publish(t))}t.mapService.featureClustering.enabled=!1,this.app.command("AddClusterLayer").raiseCanExecuteChanged(),this.app.command("RemoveClusterLayer").raiseCanExecuteChanged()}},r.prototype._canExecuteRemoveClusterLayer=function(e){var t=this._returnGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.featureClustering)&&t.mapService.featureClustering.enabled},r.prototype._canExecuteSetActiveClusterLayer=function(e){return!(!this._returnGeocortexLayer(e)||this.clusterLayers.getLength()<=0)},r.prototype._checkIfClustersAreEnabledByDefault=function(){var e=this.app.site;if(e&&e.essentialsMap)for(var t=0;t<e.essentialsMap.mapServices.length;t++){var r=e.essentialsMap.mapServices[t];if(r.featureClustering&&r.featureClustering.enabled)for(var a=0;a<r.layers.length;a++)this._addClusterLayer({gcxLayer:r.layers[a]})}},r.prototype._returnGeocortexLayer=function(e){if("string"==typeof e){if(!this.app.site||!this.app.site.essentialsMap)return null;return this.app.site.essentialsMap.allLayers().filter(function(t){return e===t.mapService.id})[0]}return e.gcxLayer},r}(a.ModuleBase);r.ClusterLayerModule=u})},"Mapping/modules/ClusterLayers/ClusterLayerView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function a(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(a.prototype=r.prototype,new a)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var s=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return e(r,t),r}(a.ViewBase);r.ClusterLayerView=s})},"Mapping/modules/ClusterLayers/ClusterLayerViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function a(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(a.prototype=r.prototype,new a)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(t,r,a,s){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.clusterLayers=new s.ObservableCollection(null),e.selectedClusterLayer=new s.Observable(null),e.selectedGeocortexLayer=new s.Observable(null),e}return e(r,t),r.prototype.initialize=function(e){var r=this;t.prototype.initialize.call(this,e),this.app.event("ClusterLayerAddedEvent").subscribe(this,function(e){r.clusterLayers.addItem(e)}),this.app.event("ClusterLayerRemovedEvent").subscribe(this,function(e){r.clusterLayers.removeItem(e),r.selectedClusterLayer.get()===e&&r.selectedClusterLayer.set(null)}),this.app.event("VisualizationViewActivatedEvent").subscribe(this,function(e){r.selectedGeocortexLayer.set(e);var t=r.clusterLayers.get().filter(function(t){return t.gcxLayer===e});t.length>0&&r.selectedClusterLayer.set(t[0])}),this.app.event("LayerVisualizationChangedEvent").subscribe(this,function(e){var t=r.clusterLayers.get().filter(function(t){return t.gcxLayer===e});t.length>0&&r.selectedClusterLayer.set(t[0])}),this.app.event("ClusterLayerOptionsChangedEvent").subscribe(this,function(){r.selectedClusterLayer.get().recluster()})},r}(a.ViewModelBase);r.ClusterLayerViewModel=i})},"Mapping/modules/ClusterLayers/ClusterLayerVisualizationProvider":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function a(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(a.prototype=r.prototype,new a)}}();define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase"],function(t,r,a){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var s=function(t){function r(e,r){var a=t.call(this,e,r)||this;a.displayName=a.app.getResource(r,"language-clustering-name");var s={provider:a,name:a.displayName,id:a.displayName};return a.visualizations.push(s),a.enabledVisualization=s,a}return e(r,t),r.prototype.canSupport=function(e){return!(!e||!e.mapService)&&(e.mapService.featureClustering&&e.mapService.featureClustering.userCanToggle)},r.prototype.handleCurrentLayerChanged=function(e){e.mapService&&e.mapService.featureClustering?(this.isEnabled.set(e.mapService.featureClustering.enabled),this.isSupported.set(e.mapService.featureClustering.userCanToggle),this.app.event("LayerVisualizationChangedEvent").publish(e)):(this.isEnabled.set(!1),this.isSupported.set(!1)),this.isEnabled.get()&&(this.enabledVisualization=this.visualizations[0])},r.prototype.handleActivate=function(){this.app.command("AddClusterLayer").execute({gcxLayer:this.currentLayer.get()})},r.prototype.handleApply=function(){this.app.event("ClusterLayerOptionsChangedEvent").publish()},r}(a.VisualizationProviderBase);r.ClusterLayerVisualizationProvider=s})},"url:/Mapping/modules/ClusterLayers/ClusterLayerView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/ClusterLayers/CSS/common.css","css",""),e.resourceManager.register("Mapping","inv","Mapping/modules/ClusterLayers/ClusterLayerView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/ClusterLayers/ClusterLayerModule","Mapping/modules/ClusterLayers/ClusterLayerView","Mapping/modules/ClusterLayers/ClusterLayerViewModel","Mapping/modules/ClusterLayers/ClusterLayerVisualizationProvider"],function(t,r,a,s){e(t,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerModule",t.ClusterLayerModule),e(r,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerView",r.ClusterLayerView),e(a,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerViewModel",a.ClusterLayerViewModel),e(s,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerVisualizationProvider",s.ClusterLayerVisualizationProvider)})}();