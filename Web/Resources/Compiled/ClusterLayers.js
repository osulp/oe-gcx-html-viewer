!function(){var t="<div class='clusters' data-binding='{@source: selectedClusterLayer}'>    <div class='form-stacked' data-binding='{@template-for: selectedClusterLayer}'>        <h2 class='visualization-title' data-binding='{@text: @language-clustering-title}'></h2>        <div class='form-item'>            <label class='form-label' data-binding='{@text: @language-clustering-radius}'></label>            <div class='form-control'>                <input type='number' data-binding='{@value: clusterRadius}{aria-label: @language-clustering-radius}' />            </div>        </div>        <div class='form-item'>            <label class='form-label' data-binding='{@text: @language-clustering-maximum-features}'></label>            <div class='form-control'>                <input type='number' min='0' data-binding='{@value: maxFeaturesInCluster}{aria-label: @language-clustering-maximum-features}' />            </div>        </div>    </div></div>";function s(e,t,r){if("string"==typeof e&&(r=t,t=e),void 0!==r)for(var a=t.split("."),s=null,i=window,n=0,u=a.length;n<u;n++)s=a[n],n==u-1?i[s]=r:i[s]||(i[s]={}),i=i[s];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/ClusterLayers/ClusterLayerModule":function(){var a,l=this&&this.__extends||(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/framework/observables","geocortex/infrastructure/ClusterLayer","geocortex/essentials/LayerType"],function(e,t,r,a,s,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,u=(n=r.ModuleBase,l(o,n),o.prototype.initialize=function(e){var t=this;if(e.hasOwnProperty("hideClusters")&&null!=e.hideClusters){var r=e.hideClusters;void 0===s.ClusterHidingOptions[r]||null===s.ClusterHidingOptions[r]?this.app.trace.warning('Invalid clustering option "'+r+'" given.'):this.hideClusters.set(s.ClusterHidingOptions[r])}this.app.command("AddClusterLayer").register(this,this._addClusterLayer,this._canExecuteAddClusterLayer),this.app.command("RemoveClusterLayer").register(this,this._removeClusterLayer,this._canExecuteRemoveClusterLayer),this.app.waitUntilMapLoaded().then(function(){t._checkIfClustersAreEnabledByDefault()}),this.app.event("MapServiceRemovedEvent").subscribe(this,function(e){e.featureClustering&&e.featureClustering.enabled&&t.app.command("RemoveClusterLayer").execute({gcxLayer:e.layers[0]})})},o.prototype._addClusterLayer=function(e){var t=this._returnGeocortexLayer(e);if(t.type===i.LayerType.FEATURE_LAYER){this.app.applicationReady&&0===this.app.pendingModulesForCommand("RemoveVisualization").length&&this.app.command("RemoveVisualization").execute({gcxLayer:t});var r,a=new s.ClusterLayer(t,this.app);for(t.mapService.featureClustering.enabled=!0,a.hideClusters.set(this.hideClusters.get()),r=0;r<this.app.map.graphicsLayerIds.length&&this.app.map.graphicsLayerIds[r]!==t.mapService.id;r++);this.app.map.addLayer(a,r+1),this.clusterLayers.addItem(a),this.app.command("AddClusterLayer").raiseCanExecuteChanged(),this.app.command("RemoveClusterLayer").raiseCanExecuteChanged(),this.app.event("ClusterLayerAddedEvent").publish(a),this.app.event("LayerVisualizationChangedEvent").publish(t)}else this.app.trace.info("Can only create a cluster layer from a feature layer.")},o.prototype._canExecuteAddClusterLayer=function(e){var t=this._returnGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.featureClustering)&&!t.mapService.featureClustering.enabled},o.prototype._removeClusterLayer=function(e){var t=this._returnGeocortexLayer(e);if(t){for(var r=0;r<this.clusterLayers.getLength();r++){var a=this.clusterLayers.getAt(r);a.id===t.mapService.id+"-cluster"&&(this.clusterLayers.removeItem(a),this.app.event("ClusterLayerRemovedEvent").publish(a),this.app.event("LayerVisualizationChangedEvent").publish(t))}t.mapService.featureClustering.enabled=!1,this.app.command("AddClusterLayer").raiseCanExecuteChanged(),this.app.command("RemoveClusterLayer").raiseCanExecuteChanged()}},o.prototype._canExecuteRemoveClusterLayer=function(e){var t=this._returnGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.featureClustering)&&t.mapService.featureClustering.enabled},o.prototype._canExecuteSetActiveClusterLayer=function(e){return!(!this._returnGeocortexLayer(e)||this.clusterLayers.getLength()<=0)},o.prototype._checkIfClustersAreEnabledByDefault=function(){var e=this.app.site;if(e&&e.essentialsMap)for(var t=0,r=e.essentialsMap.mapServices;t<r.length;t++){var a=r[t];if(a.featureClustering&&a.featureClustering.enabled)for(var s=0,i=a.layers;s<i.length;s++){var n=i[s];this._addClusterLayer({gcxLayer:n})}}},o.prototype._returnGeocortexLayer=function(t){return"string"!=typeof t?t.gcxLayer:this.app.site&&this.app.site.essentialsMap?this.app.site.essentialsMap.allLayers().filter(function(e){return t===e.mapService.id})[0]:null},o);function o(){var e=null!==n&&n.apply(this,arguments)||this;return e.clusterLayers=new a.ObservableCollection(null),e.hideClusters=new a.Observable(s.ClusterHidingOptions.none),e}t.ClusterLayerModule=u})},"Mapping/modules/ClusterLayers/ClusterLayerView":function(){var a,n=this&&this.__extends||(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,s=(a=r.ViewBase,n(i,a),i);function i(){return null!==a&&a.apply(this,arguments)||this}t.ClusterLayerView=s})},"Mapping/modules/ClusterLayers/ClusterLayerViewModel":function(){var a,u=this&&this.__extends||(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,t,r,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s,i=(s=r.ViewModelBase,u(n,s),n.prototype.initialize=function(e){var r=this;s.prototype.initialize.call(this,e),this.app.event("ClusterLayerAddedEvent").subscribe(this,function(e){r.clusterLayers.addItem(e)}),this.app.event("ClusterLayerRemovedEvent").subscribe(this,function(e){r.clusterLayers.removeItem(e),r.selectedClusterLayer.get()===e&&r.selectedClusterLayer.set(null)}),this.app.event("VisualizationViewActivatedEvent").subscribe(this,function(t){r.selectedGeocortexLayer.set(t);var e=r.clusterLayers.get().filter(function(e){return e.gcxLayer===t});0<e.length&&r.selectedClusterLayer.set(e[0])}),this.app.event("LayerVisualizationChangedEvent").subscribe(this,function(t){var e=r.clusterLayers.get().filter(function(e){return e.gcxLayer===t});0<e.length&&r.selectedClusterLayer.set(e[0])}),this.app.event("ClusterLayerOptionsChangedEvent").subscribe(this,function(e){void 0===e&&(e=!1),e&&r.selectedClusterLayer.get().reset(),r.selectedClusterLayer.get().recluster()})},n);function n(){var e=null!==s&&s.apply(this,arguments)||this;return e.clusterLayers=new a.ObservableCollection(null),e.selectedClusterLayer=new a.Observable(null),e.selectedGeocortexLayer=new a.Observable(null),e}t.ClusterLayerViewModel=i})},"Mapping/modules/ClusterLayers/ClusterLayerVisualizationProvider":function(){var a,n=this&&this.__extends||(a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase"],function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s,a=(s=r.VisualizationProviderBase,n(i,s),i.prototype.canSupport=function(e){return!(!e||!e.mapService)&&e.mapService.featureClustering&&e.mapService.featureClustering.userCanToggle},i.prototype.handleCurrentLayerChanged=function(e){e.mapService&&e.mapService.featureClustering?(this.isEnabled.set(e.mapService.featureClustering.enabled),this.isSupported.set(e.mapService.featureClustering.userCanToggle),e!==this._oldLayer&&(this._oldLayer=e,this.app.event("LayerVisualizationChangedEvent").publish(e))):(this.isEnabled.set(!1),this.isSupported.set(!1)),this.isEnabled.get()&&(this.enabledVisualization=this.visualizations[0])},i.prototype.handleActivate=function(){this.app.command("AddClusterLayer").execute({gcxLayer:this.currentLayer.get()})},i.prototype.handleApply=function(){this.app.event("ClusterLayerOptionsChangedEvent").publish()},i.prototype.handleReset=function(){this.app.event("ClusterLayerOptionsChangedEvent").publish(!0)},i);function i(e,t){var r=s.call(this,e,t)||this;r._oldLayer=null,r.displayName=r.app.getResource(t,"language-clustering-name");var a={provider:r,name:r.displayName,id:r.displayName};return r.visualizations.push(a),r.enabledVisualization=a,r}t.ClusterLayerVisualizationProvider=a})},"url:/Mapping/modules/ClusterLayers/ClusterLayerView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/ClusterLayers/CSS/common.css","css",""),e.resourceManager.register("Mapping","inv","Mapping/modules/ClusterLayers/ClusterLayerView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/ClusterLayers/ClusterLayerModule","Mapping/modules/ClusterLayers/ClusterLayerView","Mapping/modules/ClusterLayers/ClusterLayerViewModel","Mapping/modules/ClusterLayers/ClusterLayerVisualizationProvider"],function(e,t,r,a){s(e,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerModule",e.ClusterLayerModule),s(t,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerView",t.ClusterLayerView),s(r,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerViewModel",r.ClusterLayerViewModel),s(a,"geocortex.essentialsHtmlViewer.mapping.modules.clusterLayers.ClusterLayerVisualizationProvider",a.ClusterLayerVisualizationProvider)})}();