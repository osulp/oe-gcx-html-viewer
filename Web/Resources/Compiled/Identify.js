!function(){var t="<ul class='transient-identify'>    <li data-binding='{@source: bufferToggleButton}'>        <button class='toolbar-item' data-binding='{@template-for: bufferToggleButton}{@disabled: disabled}{@class-hidden: hidden}{@class-toggled-on: isToggledOn}{@noclass-toggled-off: isToggledOn}{@event-onclick: handleToolbarItemClick}{title: tooltip}'>            <img class='icon' data-binding='{@visible: iconUri}{src: iconUri}{alt: @language-identify-buffer-toggle-button-icon}' src='Resources/Images/Icons/Toolbar/icon-blank-24.png' />        <p data-binding='{@text: name}'></p>        </button>    </li>    <li data-binding='{@source: selectLayersButton}'>        <button class='toolbar-item' data-binding='{@template-for: selectLayersButton}{@disabled: disabled}{@event-onclick: handleToolbarItemClick}{title: tooltip}'>            <img class='icon' data-binding='{@visible: iconUri}{src: iconUri}{alt: @language-identify-select-layer-button-icon}' src='Resources/Images/Icons/Toolbar/icon-blank-24.png'  />            <p data-binding='{@text: name}'></p>        </button>    </li></ul>",i="<ul class='markup-edit'>    <li data-binding='{@source: bufferToggleButton}'>        <button class='toolbar-item' data-binding='{@template-for: bufferToggleButton}{@disabled: disabled}{@class-hidden: hidden}{@class-toggled-on: isToggledOn}{@noclass-toggled-off: isToggledOn}{@event-onclick: handleToolbarItemClick}{title: tooltip}'>            <img class='icon' data-binding='{@visible: iconUri}{src: iconUri}{alt: @language-identify-buffer-toggle-button-icon}' src='Resources/Images/Icons/Toolbar/icon-blank-24.png' />            <p data-binding='{@text: name}'></p>        </button>    </li>    <li data-binding='{@source: selectLayersButton}'>        <button class='toolbar-item' data-binding='{@template-for: selectLayersButton}{@disabled: disabled}{@event-onclick: handleToolbarItemClick}{title: tooltip}'>            <img class='icon' data-binding='{@visible: iconUri}{src: iconUri}{alt: @language-identify-select-layer-button-icon}' src='Resources/Images/Icons/Toolbar/icon-blank-24.png' />            <p data-binding='{@text: name}'></p>        </button>    </li></ul>";function f(e,t,i){if("string"==typeof e&&(i=t,t=e),void 0!==i)for(var r=t.split("."),n=null,o=window,a=0,s=r.length;a<s;a++)n=r[a],a==s-1?o[n]=i:o[n]||(o[n]={}),o=o[n];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/Identify/IdentifyLayerSelectorView":function(){var r,s=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/layerselector/LayerSelectorViewBase","geocortex/framework-ui/animation/AnimationSequence"],function(e,t,i,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=(n=i.LayerSelectorViewBase,s(a,n),a.prototype.attach=function(e){e&&(n.prototype.attach.call(this,e),this.registerCommands())},a.prototype.registerCommands=function(){this.app.command("ActivateSelectLayersForIdentify").register(this,this.executeActivateSelectLayersForIdentify),this.app.command("DeactivateSelectLayersForIdentify").register(this,this.executeDeactivateSelectLayersForIdentify)},a.prototype.executeActivateSelectLayersForIdentify=function(){var e=this;r.runWhenIdle(function(){e.app.viewManager.activateView(e),e.viewModel.activateSelectLayersForIdentify()})},a.prototype.executeDeactivateSelectLayersForIdentify=function(){this.app.viewManager.deactivateView(this),this.viewModel.deactivateSelectLayersForIdentify()},a);function a(){return null!==n&&n.apply(this,arguments)||this}t.IdentifyLayerSelectorView=o})},"Mapping/modules/Identify/IdentifyLayerSelectorViewModel":function(){var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/layerselector/LayerSelectorViewModelBase"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,n=(r=i.LayerSelectorViewModelBase,a(o,r),o.prototype.filter=function(e){var t="serviceLayer"===e.itemType?e.serviceLayer.gcxMapService:e.layer.gcxLayer;return!!t&&t.identifiable},o.prototype.handleLayerStateChange=function(e){this._setLayerStateForIdentify(e)},o.prototype.handleAllLayersEnabled=function(){this.app.command("EnableAllLayersForIdentify").execute()},o.prototype.handleAllLayersDisabled=function(){this.app.command("DisableAllLayersForIdentify").execute()},o.prototype.activateSelectLayersForIdentify=function(){var t=this,e=this.layerSelector.filteredLayerSelectorLayerItems.filter(function(e){return!e.isEnabled.get()});this.app.command("EnableAllLayersForIdentify").execute(),e.length&&e.forEach(function(e){return t._setLayerStateForIdentify(e)}),this.app.event("SelectLayersForIdentifyActivatedEvent").publish(this.layerSelector.filteredLayerSelectorLayerItems.slice(0))},o.prototype.deactivateSelectLayersForIdentify=function(){this.app.command("EnableAllLayersForIdentify").execute(),this.app.event("SelectLayersForIdentifyDeactivatedEvent").publish(this.layerSelector.filteredLayerSelectorLayerItems.slice(0))},o.prototype._setLayerStateForIdentify=function(e){var t="serviceLayer"===e.itemType?e.serviceLayer.gcxMapService:e.layer.serviceLayerInfo.gcxMapService,i="layer"===e.itemType?e.layer.gcxLayer:null;if(t){var r={};r.mapServiceId=t.id,r.layerId=i?i.id:null,e.isEnabled.get()?this.app.command("EnableLayerForIdentify").execute(r):this.app.command("DisableLayerForIdentify").execute(r)}else this.app.trace.error("IdentifyLayerSelectorViewModel: Could not handle layer state change. MapService not defined.")},o);function o(e,t){var i=r.call(this,e,t)||this;return i.selectAllButtonTitle.set(i.app.getResource(t,"language-layer-selector-identify-select-all-tooltip")),i.clearAllButtonTitle.set(i.app.getResource(t,"language-layer-selector-identify-clear-all-tooltip")),i}t.IdentifyLayerSelectorViewModel=n})},"Mapping/modules/Identify/IdentifyModule":function(){var r,y=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/application/ModuleBase","./LayerSelectorForIdentify","geocortex/framework/utils/utils","geocortex/infrastructure/FeatureSetCollection","geocortex/infrastructure/selection/CombineMode","geocortex/infrastructure/results/ResultsUtils","geocortex/framework/utils/ArrayUtils"],function(e,t,i,r,l,c,d,p,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,a=(o=i.ModuleBase,y(s,o),s.prototype.initialize=function(e){if(o.prototype.initialize.call(this,e),e){e.resultsDisplayName&&(this._fscDisplayName=e.resultsDisplayName),this.pixelTolerance=isNaN(parseInt(e.pixelTolerance,10))?5:parseInt(e.pixelTolerance,10),this.polygonPixelTolerance=isNaN(parseInt(e.polygonPixelTolerance,10))?2:parseInt(e.polygonPixelTolerance,10),this.topMostLayerOnly=void 0!==e.topMostLayerOnly&&!!e.topMostLayerOnly,this.returnGeometry=void 0===e.returnGeometry||!!e.returnGeometry,this.visibleLayersOnly=void 0===e.visibleLayersOnly||!!e.visibleLayersOnly,this.layersInVisibleScaleRangeOnly=void 0===e.layersInVisibleScaleRangeOnly||!!e.layersInVisibleScaleRangeOnly,this.bufferingEnabled=void 0===e.bufferingEnabled||!!e.bufferingEnabled,this.restrictRasterIdentifyToPoint=void 0===e.restrictRasterIdentifyToPoint||!!e.restrictRasterIdentifyToPoint,dojo.isArray(e.tools)&&this.app&&this.app.toolRegistry&&this.app.toolRegistry.createTools(e.tools,!0),this.layerSelectorForIdentify=new r.LayerSelectorForIdentify(this.app,this),dojo.isArray(e.identifyProviders)&&this._loadProviders(e.identifyProviders);var t=n.firstOrDefault(this.app.configModel.moduleConfigs,function(e){return"MapTips"===e.moduleName});this._mapTipsAllowMultiple=t.configuration&&t.configuration.allowMultiple}},s.prototype._setIdentifyCombineMode=function(e){-1===Object.keys(d.CombineMode).map(function(e){return Object[e]}).indexOf(e)?(this._combineMode=e,this.app.event("IdentifyCombineModeChangeEvent").publish(e)):this.app.trace.error("Invalid identify combine mode: "+e)},s.prototype._setIdentifyCombineModeCanExecute=function(e){return!0},s.prototype._loadProviders=function(e){for(var t=0,i=e;t<i.length;t++){var r=i[t];r&&(r.libraryId&&!this.app.allLibrariesLoaded?this._loadProviderWhenLibrariesDownloaded(r):this._loadProvider(r))}},s.prototype._loadProviderWhenLibrariesDownloaded=function(e){var t=this,i=this.app.event("ViewerLibrariesDownloadedEvent").subscribe(this,function(){t.app.event("ViewerLibrariesDownloadedEvent").unsubscribe(i),t._loadProvider(e)})},s.prototype._loadProvider=function(e){var t=dojo.getObject(e.type);if(t){var i=new t(this.app,e.libraryId||this.libraryId);i.isEnabled=!(!1===e.enabled),i.initialize(e.configuration||{}),this._providers.push(i)}else this.app.trace.error(this.id+" can't find identify provider typed "+e.type)},s.prototype.search=function(e){var t=this,i=this._processIdentifyArgs(e);this.cancelSearch();try{if(i.geometry&&"polygon"===i.geometry.type){var r=i.geometry;if(r.rings&&1===r.rings.length&&5===r.rings[0].length){var n=i.geometry.getExtent();if(!l.isNullOrUndefined(n)&&this.app.site){var o=this.app.site.getMap();if(o){var a=o.toScreen(new esri.geometry.Point(n.xmin,n.ymin,n.spatialReference)),s=o.toScreen(new esri.geometry.Point(n.xmax,n.ymax,n.spatialReference));96===Math.abs(s.x-a.x)&&96===Math.abs(s.y-a.y)&&(i.geometry=n.getCenter())}}}}}catch(e){this.app.trace.warning("Could not perform rectangle validation of polygon geometry: "+e)}i.source=i.source||"Identify",i.doNotBuffer?this._executeIdentifyImpl(i):this._applyBufferIfConfigured(i).then(function(e){i.geometry=e.geometry,t._executeIdentifyImpl(i)},function(e){t.app.trace.error("Identify: Could not apply buffer. Operation failed.")})},s.prototype._executeIdentifyImpl=function(r){var n=this;if(!this._searchSuppressed){var e=r.source||"Identify";this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-identify-accessibility-execute"));var o=new c.FeatureSetCollection;o.displayName.set(this._fscDisplayName),o.tag=r.geometry,this._previousFscSource=o.sourceName=e;var a=this.app.featureSetManager.currentResultSet.get()||this.app.featureSetManager.getCollectionById(this._previousFscIds[e]),t=this.app.featureSetManager.getCollectionById(p.DEFAULT_COLLECTION_ID);(!a||0===a.featureSets.getLength())&&t&&0<t.featureSets.getLength()&&(a=t);var s=0;if(r.combineMode!==d.CombineMode.REPLACE&&a)o.id=a.id,s=a.countFeatures();else{for(!this._previousFscSource||"MapTip"===e&&this._mapTipsAllowMultiple||(this.app.featureSetManager.tryCloseCollection(this._previousFscIds[this._previousFscSource]),this._previousFscIds[e]&&(this.app.featureSetManager.removeCollectionById(this._previousFscIds[e]),delete this._previousFscIds[e]));this._fscSourceCount[e]=this._fscSourceCount.hasOwnProperty(e)?this._fscSourceCount[e]+1:0,o.id=e+this._fscSourceCount[e],this.app.featureSetManager.getCollectionById(o.id););this._previousFscIds[e]=o.id,this.app.featureSetManager.addCollection(o)}var i=[];this._providers.forEach(function(e){if(e.isEnabled){var t=e.search(o,r);t&&(t=t.then(function(){var e=r.combineMode;e!==d.CombineMode.REPLACE&&e!==d.CombineMode.INTERSECT&&a&&(e===d.CombineMode.UNION?a.unionInPlace(o):e===d.CombineMode.SUBTRACT&&a.subtractInPlace(o),a.featureSets.pulse())}),i.push(t))}}),i.length?Promise.all(i).then(function(){if(r.combineMode===d.CombineMode.INTERSECT&&a&&(a.intersectInPlace(o),a.featureSets.pulse()),"Identify"===r.source&&a){var e=void 0;switch(r.combineMode){case d.CombineMode.UNION:e=n.getResource("language-common-results-added-confirmation");break;case d.CombineMode.SUBTRACT:e=n.getResource("language-common-results-removed-confirmation")}if(e){if(0===s&&r.combineMode===d.CombineMode.SUBTRACT)e=n.getResource("language-common-results-combine-no-results");else{var t=a.countFeatures(),i=Math.abs(t-s);e=e.format(i,n.getResource("language-common-identify-results"))}n.app.command("AddResultsStatus").execute(e)}}n.app.event("_identifyTaskCompleteEvent").publish(),n.app.command("SetIdentifyCombineMode").raiseCanExecuteChanged()}):this.app.event("_identifyTaskCompleteEvent").publish()}},s.prototype.cancelSearch=function(e){var t=this;void 0===e&&(e=!1);for(var i=0,r=this._providers;i<r.length;i++)r[i].cancelSearch();e&&(this._searchSuppressed=!0,setTimeout(function(){return t._searchSuppressed=!1},this._searchSuppressionDuration))},s.prototype._processIdentifyArgs=function(e){var t={geometry:e instanceof esri.geometry.Geometry?e:e.geometry,source:e.source||"Identify",extent:e instanceof esri.geometry.Geometry?null:e.extent||null,width:e instanceof esri.geometry.Geometry?null:parseInt(e.width,10)||null,height:e instanceof esri.geometry.Geometry?null:parseInt(e.height,10)||null,pixelTolerance:isNaN(parseInt(e.pixelTolerance,10))?this.pixelTolerance:parseInt(e.pixelTolerance,10),polygonPixelTolerance:isNaN(parseInt(e.polygonPixelTolerance,10))?this.polygonPixelTolerance:parseInt(e.polygonPixelTolerance,10),topMostLayerOnly:void 0!==e.topMostLayerOnly?!!e.topMostLayerOnly:this.topMostLayerOnly,visibleLayersOnly:void 0!==e.visibleLayersOnly?!!e.visibleLayersOnly:this.visibleLayersOnly,visibleMapServicesOnly:void 0!==e.visibleMapServicesOnly&&!!e.visibleMapServicesOnly,layersInVisibleScaleRangeOnly:void 0!==e.layersInVisibleScaleRangeOnly?!!e.layersInVisibleScaleRangeOnly:this.layersInVisibleScaleRangeOnly,restrictRasterIdentifyToPoint:void 0!==e.restrictRasterIdentifyToPoint?!!e.restrictRasterIdentifyToPoint:this.restrictRasterIdentifyToPoint,returnGeometry:void 0!==e.returnGeometry?!!e.returnGeometry:this.returnGeometry,delayFSCOpen:void 0!==e.delayFSCOpen&&!!e.delayFSCOpen,layerRestriction:void 0!==e.layerRestriction&&dojo.isFunction(e.layerRestriction)?e.layerRestriction:null,doNotBuffer:void 0!==e.doNotBuffer&&!!e.doNotBuffer,combineMode:e.combineMode||d.CombineMode.REPLACE};return"Identify"===t.source&&(t.identifiableLayerInfo=this.layerSelectorForIdentify.mapServiceLayersToIdentify,e.combineMode||(t.combineMode=this._combineMode)),t},s.prototype._applyBufferIfConfigured=function(n){var o=this;return new Promise(function(t,i){var e=o.app.command("BufferGeometry");if(o.bufferingEnabled&&!e.isWrapper){var r={geometry:n.geometry,callback:function(e){return t(e)},errback:function(e){return i(e)},sourceCommand:n.source};e.execute(r)}else t({geometry:n.geometry})})},s);function s(e,t){var i=o.call(this,e,t)||this;return i.bufferingEnabled=!0,i._providers=[],i._previousFscSource=null,i._previousFscIds={},i._fscSourceCount={},i._fscDisplayName="",i._combineMode=d.CombineMode.REPLACE,i._searchSuppressed=!1,i._searchSuppressionDuration=750,i._mapTipsAllowMultiple=!1,i.app.command("Identify").register(i,i.search),i.app.command("SetIdentifyCombineMode").register(i,i._setIdentifyCombineMode,i._setIdentifyCombineModeCanExecute),i._fscDisplayName=e.getResource(t,"language-identify-results-header"),i.app.command("CancelSearch").register(i,i.cancelSearch),i}t.IdentifyModule=a})},"Mapping/modules/Identify/IdentifyOptionsView":function(){var r,a=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,n=(r=i.ViewBase,a(o,r),o.prototype.attach=function(e){r.prototype.attach.call(this,e)},o.prototype.handleClickClose=function(){this.app.command("ClearActiveTool").execute()},o.prototype.handleToolbarItemClick=function(e,t,i){i.execute()},o);function o(e,t){return r.call(this,e,t)||this}t.IdentifyOptionsView=n})},"Mapping/modules/Identify/IdentifyOptionsViewModel":function(){var r,c=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/infrastructure/toolbarGroup/types/ToolbarToggleButton","geocortex/infrastructure/toolbarGroup/types/ToolbarButton","geocortex/framework/utils/utils"],function(e,t,i,r,n,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,s=(a=i.ViewModelBase,c(l,a),l.prototype.initialize=function(e){this.bufferOnIconUri=e.bufferOnIconUri||e.bufferIconUri||this.DEFAULT_BUFFER_ICON_URI,this.bufferOffIconUri=e.bufferOffIconUri||e.bufferIconUri||this.DEFAULT_BUFFER_ICON_URI,this.selectLayersIconUri=e.selectLayersOnIconUri||e.selectLayersIconUri||this.DEFAULT_SELECT_LAYERS_ICON_URI,this.bufferToggleButton=new r.ToolbarToggleButton(this.app,this.libraryId,this._getBufferToggleButtonEntry()),this.selectLayersButton=new n.ToolbarButton(this.app,this.libraryId,this._getSelectLayersButtonEntry())},l.prototype._getBufferToggleButtonEntry=function(){var e={};return e.id=o.alphaNumericToken(),e.type="toggleButton",e.hideOnDisable=!1,e.tooltip=this.app.getResource(this.libraryId,"language-toolbar-buffer-toggle-tooltip"),e.toggleOn={},e.toggleOn.name=this.app.getResource(this.libraryId,"language-toolbar-toggle-buffer-on-name"),e.toggleOn.iconUri=this.bufferOnIconUri,e.toggleOn.command="ActivateBufferingAndDisplayOptions",e.toggleOn.commandParameter="Identify",e.toggleOff={},e.toggleOff.name=this.app.getResource(this.libraryId,"language-toolbar-toggle-buffer-off-name"),e.toggleOff.iconUri=this.bufferOffIconUri,e.toggleOff.command="DeactivateBufferingAndDismissOptions",e.toggleOff.commandParameter="Identify",e},l.prototype._getSelectLayersButtonEntry=function(){var e={};return e.id=o.alphaNumericToken(),e.type="button",e.tooltip=this.app.getResource(this.libraryId,"language-toolbar-select-layers-toggle-tooltip"),e.name=this.app.getResource(this.libraryId,"language-toolbar-select-layers-toggle-on-name"),e.command="ActivateSelectLayersForIdentify",e.commandParameter=null,e.hideOnDisable=!1,e.iconUri=this.selectLayersIconUri,e},l);function l(e,t){var i=a.call(this,e,t)||this;return i.DEFAULT_BUFFER_ICON_URI="Resources/Images/Icons/Toolbar/buffer-identify-24.png",i.DEFAULT_SELECT_LAYERS_ICON_URI="Resources/Images/Icons/Toolbar/layers-filtered-24.png",i}t.IdentifyOptionsViewModel=s})},"Mapping/modules/Identify/LayerSelectorForIdentify":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=(r.prototype.onSiteInitialized=function(){this._loadMapServicesAndLayers(),this.registerCommands(),this.subscribeEvents()},r.prototype.registerCommands=function(){this.app.command("EnableAllLayersForIdentify").register(this,this.executeEnableAllLayersForIdentify),this.app.command("DisableAllLayersForIdentify").register(this,this.executeDisableAllLayersForIdentify),this.app.command("EnableLayerForIdentify").register(this,this.executeEnableLayerForIdentify),this.app.command("DisableLayerForIdentify").register(this,this.executeDisableLayerForIdentify)},r.prototype.subscribeEvents=function(){this.app.event("MapServiceAddedEvent").subscribe(this,this._loadMapServicesAndLayers),this.app.event("MapServiceRemovedEvent").subscribe(this,this._loadMapServicesAndLayers),this.app.event("MapServiceLayersChangedWithResultEvent").subscribe(this,this._loadMapServicesAndLayers)},r.prototype.executeEnableAllLayersForIdentify=function(){for(var e=0,t=this.mapServiceLayersToIdentify;e<t.length;e++){var i=t[e],r=this.app.site.essentialsMap.findMapServiceById(i.mapServiceId);if(r){for(var n=[],o=0,a=r.layers;o<a.length;o++){var s=a[o];s.identifiable&&n.push(s.id)}i.layerIds=n,i.mapServiceIdentifiable=!!r.identifiable,this.app.event("AllLayersEnabledForIdentifyEvent").publish(this.mapServiceLayersToIdentify)}else this.app.trace.error("LayerSelectorForIdentify: Could not apply EnableAllLayersForIdentify to map service with id {0}. Map service not found.".format(i.mapServiceId))}},r.prototype.executeDisableAllLayersForIdentify=function(){for(var e=0,t=this.mapServiceLayersToIdentify;e<t.length;e++){var i=t[e];i.mapServiceIdentifiable=!1,i.layerIds=[]}this.app.event("AllLayersDisabledForIdentifyEvent").publish(this.mapServiceLayersToIdentify)},r.prototype.executeEnableLayerForIdentify=function(e){for(var t=0,i=this.mapServiceLayersToIdentify;t<i.length;t++){var r=i[t];if(r.mapServiceId===e.mapServiceId){var n=this.app.site.essentialsMap.findMapServiceById(e.mapServiceId),o=e.layerId?n&&n.findLayerById(e.layerId):null;if(o&&o.identifiable||!o&&n&&n.identifiable){o?r.layerIds.push(e.layerId):r.mapServiceIdentifiable=!0,this.app.event("LayerEnabledForIdentifyEvent").publish(e);break}}}},r.prototype.executeDisableLayerForIdentify=function(e){for(var t=0,i=this.mapServiceLayersToIdentify;t<i.length;t++){var r=i[t];if(r.mapServiceId===e.mapServiceId)if(null!=e.layerId){for(var n=r.layerIds.length-1;0<=n;n--)if(null!=e.layerId&&r.layerIds[n]===e.layerId){r.layerIds.splice(n,1),this.app.event("LayerDisabledForIdentifyEvent").publish(e);break}}else if(!0===r.mapServiceIdentifiable){r.mapServiceIdentifiable=!1,this.app.event("LayerDisabledForIdentifyEvent").publish(e);break}}},r.prototype._loadMapServicesAndLayers=function(){for(var e=this.mapServiceLayersToIdentify.length=0,t=this.app.site.essentialsMap.mapServices;e<t.length;e++){for(var i=t[e],r=[],n=0,o=i.layers;n<o.length;n++){var a=o[n];a.identifiable&&r.push(a.id)}var s=!!i.identifiable;this.mapServiceLayersToIdentify.push({mapServiceId:i.id,mapServiceIdentifiable:s,layerIds:r})}this.app.event("AllLayersEnabledForIdentifyEvent").publish(this.mapServiceLayersToIdentify)},r);function r(e,t){var i=this;this.mapServiceLayersToIdentify=[],this.app=e,this.identifyModule=t,this.app.waitUntilSiteInitialized().then(function(){i.onSiteInitialized()})}t.LayerSelectorForIdentify=i})},"url:/Mapping/modules/Identify/IdentifyOptionsView.html":t,"url:/Mapping/modules/Identify/Widgets/IdentifyOptionsTransientView.html":i}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Identify/IdentifyOptionsView.html","html",t),e.resourceManager.register("Mapping","inv","Mapping/modules/Identify/Widgets/IdentifyOptionsTransientView.html","html",i)}),require({cache:{}}),define(["geocortex/infrastructure/identify/GraphicsLayerIdentifyProvider","Mapping/modules/Identify/IdentifyLayerSelectorView","Mapping/modules/Identify/IdentifyLayerSelectorViewModel","Mapping/modules/Identify/IdentifyModule","Mapping/modules/Identify/IdentifyOptionsView","Mapping/modules/Identify/IdentifyOptionsViewModel","Mapping/modules/Identify/LayerSelectorForIdentify","geocortex/infrastructure/identify/IdentifyUtils","geocortex/infrastructure/identify/MapIdentifyTask","geocortex/infrastructure/identify/MapIdentifyTaskIdentifyProvider","geocortex/infrastructure/identify/RasterIdentifyTask","geocortex/infrastructure/identify/RasterIdentifyTaskIdentifyProvider","geocortex/infrastructure/identify/RasterIdentifyUtils"],function(e,t,i,r,n,o,a,s,l,c,d,p,y){f(e,"geocortex.essentialsHtmlViewer.mapping.modules.identify.GraphicsLayerIdentifyProvider",e.GraphicsLayerIdentifyProvider),f(t,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyLayerSelectorView",t.IdentifyLayerSelectorView),f(i,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyLayerSelectorViewModel",i.IdentifyLayerSelectorViewModel),f(r,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyModule",r.IdentifyModule),f(n,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyOptionsView",n.IdentifyOptionsView),f(o,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyOptionsViewModel",o.IdentifyOptionsViewModel),f(a,"geocortex.essentialsHtmlViewer.mapping.modules.identify.LayerSelectorForIdentify",a.LayerSelectorForIdentify),f(s,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyUtils.getIdentifyLayerIds",s.getIdentifyLayerIds),f(s,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyUtils.getLayerDefinitions",s.getLayerDefinitions),f(s,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyUtils.getDynamicLayerInfos",s.getDynamicLayerInfos),f(s,"geocortex.essentialsHtmlViewer.mapping.modules.identify.IdentifyUtils.appendToFeatureSetCollection",s.appendToFeatureSetCollection),f(l,"geocortex.essentialsHtmlViewer.mapping.modules.identify.MapIdentifyTask",l.MapIdentifyTask),f(c,"geocortex.essentialsHtmlViewer.mapping.modules.identify.MapIdentifyTaskIdentifyProvider",c.MapIdentifyTaskIdentifyProvider),f(d,"geocortex.essentialsHtmlViewer.mapping.modules.identify.RasterIdentifyTask",d.RasterIdentifyTask),f(p,"geocortex.essentialsHtmlViewer.mapping.modules.identify.RasterIdentifyTaskIdentifyProvider",p.RasterIdentifyTaskIdentifyProvider),f(y,"geocortex.essentialsHtmlViewer.mapping.modules.identify.RasterIdentifyUtils",y.RasterIdentifyUtils)})}();