function shim(e,t,a){if("string"==typeof e&&(a=t,t=e),"undefined"==typeof a)return void console.warn("Undefined shim for: "+t);for(var i=t.split("."),n=null,r=window,o=0,s=i.length;o<s;o++)n=i[o],o==s-1?r[n]=a:r[n]||(r[n]={}),r=r[n]}require({cache:{"Mapping/modules/Native/AttachFileView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,a){"use strict";var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.handleTakeNativePhotoCamera=function(e,t,a){this.viewModel._handlePhotoFromNativeApp(!0)},t.prototype.handleTakeNativePhotoGallery=function(e,t,a){this.viewModel._handlePhotoFromNativeApp(!1)},t.prototype.handleSelectedFileInput=function(e,t,a){var i=e.currentTarget.files[0];this.viewModel._handleFileFromBrowser(i)},t.prototype.clearFileInputField=function(){this.uploadFormElement.reset()},t}(a.ViewBase);t.AttachFileView=i})},"Mapping/modules/Native/AttachFileViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/MapUtils"],function(e,t,a,i,n){"use strict";var r=function(e){function t(t,a){var n=e.call(this,t,a)||this;return n.feature=new i.Observable(null),n.esriFeature=new i.Observable(null),n.esriFeatureLayer=new i.Observable(null),n.isUploading=new i.Observable((!1)),n._attachFileViewId=null,n._canEditOffline=!1,n.browserFileAPISupported=new i.Observable(n._fileApiSupported()),n.deviceCordovaSupported=new i.Observable(n._cordovaSupported()),n.app.command("AttachFileToFeature").register(n,n._executeAttachFile,n._canExecuteAttachFile),n}return __extends(t,e),t.prototype.initialize=function(t){var a=this;e.prototype.initialize.call(this,t),this._attachFileViewId=t.attachFileViewId,this.app.nativeManager.hasNativeCapability("editing").then(function(e){a._canEditOffline=e})},t.prototype._fileApiSupported=function(){return this._isFileInputSupported()&&window.File&&window.FileReader},t.prototype._cordovaSupported=function(){return!(!navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/)||!navigator.camera||"undefined"==typeof navigator.camera.getPicture)},t.prototype._handleFileFromBrowser=function(e){var t=this;this.isUploading.set(!0);var a=new FileReader;a.onload=function(a){var i={data:decodeURIComponent(a.target.result.substring(a.target.result.indexOf("base64,")+7)),fileName:e.name,fileType:e.type};t._handleReceiveFileData(i,function(e){t._handleCallback.call(t,e)})},a.readAsDataURL(e)},t.prototype._handlePhotoFromNativeApp=function(e){var t=this;if(!navigator.camera)return void this._reportStatus("language-native-no-photo-no-camera-detected");var a=60,i="undefined"!=typeof window.Camera&&window.Camera.DestinationType?window.Camera.DestinationType.DATA_URL:1,n=e?window.Camera.PictureSourceType.CAMERA:window.Camera.PictureSourceType.PHOTOLIBRARY;navigator.camera.getPicture(function(e){setTimeout(function(){var a={data:e};t._handleReceiveFileData(a,function(e){t._handleCallback.call(t,e)})},0)},function(e){},{quality:a,sourceType:n,destinationType:i,correctOrientation:!0})},t.prototype._handleReceiveFileData=function(e,t){this.feature.get()&&this.feature.get().esriFeature.get()&&this.feature.get().esriFeature.get().getLayer()&&this.feature.get().esriFeature.get().getLayer()instanceof esri.layers.FeatureLayer&&this.feature.get().esriFeature.get().getLayer().isEditable()&&this.feature.get().esriFeature.get().getLayer().hasAttachments||this._resolveFeature(this.feature.get());var a=this.esriFeature.get(),i=this.esriFeatureLayer.get();if(!this.esriFeature.get()||!this.esriFeatureLayer.get())return void this._reportStatus("language-native-feature-no-layer");var n=null;if(i&&i.url?n=i.url:i._essentialsMetadata&&(n=i._essentialsMetadata.serviceUrl),!n)return void this._reportStatus("language-native-feature-no-layer-url");var r={feature:a,layer:i,featureUrl:n,filename:this._formatAttachmentName(e.fileName),contentType:e.fileType||"image/jpeg",payload:e.data,callback:t};this.app.command("CreateAttachment").execute(r)},t.prototype._formatAttachmentName=function(e){var t=new Date,a=e?e.substr(0,e.lastIndexOf(".")):"image",i=e?e.substr(e.lastIndexOf(".")+1):"jpg",n="{0}-{1}.{2}.{3}-{4}-{5}-{6}.{7}".format(a,t.getHours(),t.getMinutes(),t.getSeconds(),t.getDate(),t.getMonth()+1,t.getFullYear(),i);return n},t.prototype._handleCallback=function(e){var t={};try{t=JSON.parse(e.currentTarget.response).error}catch(a){e.currentTarget&&e.currentTarget.statusText?t.message=e.currentTarget.statusText:t.message=this.app.getResource(this.libraryId,"language-native-internal-server-error")}t&&t.message?this._reportStatus("language-native-file-upload-failed",t.message):(this._reportStatus("language-native-file-upload-success"),this.app.event("FeatureAttachmentAddedEvent").publish(this.feature.get()))},t.prototype._executeAttachFile=function(e){this._resolveFeature(e),this.app.command("HideFeatureTemplatePicker").execute(),this.esriFeature.get()&&this.esriFeatureLayer.get()?this.app.command("ActivateView").execute(this._attachFileViewId):this._reportStatus("language-native-feature-no-layer")},t.prototype._canExecuteAttachFile=function(e){if(e&&(this._resolveFeature(e,!1),this.esriFeature.get()&&this.esriFeatureLayer.get())){var t=this.esriFeatureLayer.get(),a=this.app.site.essentialsMap.mapServices.filter(function(e){return e.serviceLayer===t})[0];if(a&&a.canAddAttachments){if(this.app.isOffline.get()){if(!this._canEditOffline)return!1;if(parseFloat(a.serverVersion)>=10.4)return!0;var i=this.app.offlineManager.syncInfo.findLayerOrTable(a.serviceLayer.url);if(!i.canAddAttachments)return!1}if(this.browserFileAPISupported.get()||this.deviceCordovaSupported.get())return!0}}return!1},t.prototype._resolveFeature=function(e,t){void 0===t&&(t=!0);var a=null;if(e.esriFeature){var i=e.esriFeature.get();i.getLayer()||e.layer&&e.layer.mapService&&e.layer.mapService.serviceLayer&&(i._graphicsLayer=e.layer.mapService.serviceLayer),a=e.layer||e.featureLayer&&"Table"!=e.featureLayer.type?n.findFeatureInMap(i,this.app.site):e.esriFeature.get()}if(!a)return this.feature.set(null),this.esriFeature.set(null),void this.esriFeatureLayer.set(null);t&&e.esriFeature.set(a),this.feature.set(e),this.esriFeature.set(a);var r=a.getLayer();r&&r.id&&r.id.indexOf("-explodedClusterLayer")!==-1&&(r=this.app.map.getLayer(r.id.replace("-explodedClusterLayer",""))),r&&r.isEditable&&r.isEditable()?this.esriFeatureLayer.set(r):this.esriFeatureLayer.set(null)},t.prototype._reportStatus=function(e,t){var a=this;this.isUploading.set(!1);var i=this.app.getResource(this.libraryId,e);i=t?i+t:i,this.app.command("Alert").execute(i,null,function(){var e=a.app.viewManager.getViewById(a._attachFileViewId);e&&e.isActive&&(e.clearFileInputField(),a.app.command("DeactivateView").execute(a._attachFileViewId))})},t.prototype._isFileInputSupported=function(){if(navigator.userAgent.match(/(Android (1.0|1.1|1.5|1.6|2.0|2.1))|(Windows Phone (OS 7|8.0))|(XBLWP)|(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|(Kindle\/(1.0|2.0|2.5|3.0))/))return!1;var e=document.createElement("input");return e.type="file",!e.disabled},t}(a.ViewModelBase);t.AttachFileViewModel=r})},"Mapping/modules/Native/NativeMessageTesterView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/CancellationTokenSource"],function(e,t,a,i){"use strict";var n=function(e){function t(t,a){return e.call(this,t,a)||this}return __extends(t,e),t.prototype.sayHello_Click=function(){var e=this;this.output.textContent="Sending message...\n",this.app.nativeManager.message("MessageTest_Hello",{name:this.nameInput.value}).then(function(t){e.output.textContent+="Promise resolved: "+t.hello+"\n"})["catch"](function(t){e.output.textContent+="Error: "+t.message+"\n"})},t.prototype.workerJob_Click=function(){var e=this;this._workerJobCancellation=new i.CancellationTokenSource,this.output.textContent="Sending message...\n",this.app.nativeManager.message("MessageTest_Worker",{iterations:this.iterationsInput.value,durationPerIteration:this.iterationDurationInput.value},this._workerJobCancellation.token(),function(t){e.output.textContent+=t.status+": "+t.details.message+"\n"}).then(function(t){e.output.textContent+="Promise resolved."})["catch"](function(t){"OperationCanceled"==t.name?e.output.textContent+="Canceled.\n":e.output.textContent+="Error: "+t.message+"\n"})},t.prototype.workerJobCancel_Click=function(){this._workerJobCancellation&&this._workerJobCancellation.cancel()},t.prototype.download_Click=function(){var e=this;this._downloadCancellation=new i.CancellationTokenSource,this.output.textContent="Sending message...\n",this.app.nativeManager.message("DownloadResource",{url:this.downloadInput.value},this._downloadCancellation.token(),function(t){e.output.textContent+=t.status+": "+t.details.status+". "+t.details.message+". Bytes downloaded: "+t.details.bytesDownloaded+"\n"}).then(function(t){e.output.textContent+="Promise resolved."}).error(function(t){e.output.textContent+="Error: "+t.message+"\n"})},t.prototype.downloadCancel_Click=function(){this._downloadCancellation&&this._downloadCancellation.cancel()},t}(a.ViewBase);t.NativeMessageTesterView=n})},"Mapping/modules/Native/NativeModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/commandArgs/AddStatusArgs"],function(e,t,a,i){"use strict";var n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.nativeInitialized=!1,t}return __extends(t,e),t.prototype.initialize=function(e){var t=this,a=function(e){if("undefined"!=typeof window.gcxNativeReady)e&&e();else{var t=window.gcxNativeReadyCallback;window.gcxNativeReadyCallback=function(){t&&t(),e&&e()}}};a(function(){t.nativeInitialized=!0,t.app.isNative.set(!0),geocortex.GeocortexNativeApp.registerNativeEventListener(dojo.hitch(t,t.handleNativeEvent)),t.app.command("NativeHasCapability").register(t,function(e,a){t.app.nativeManager.hasNativeCapability(e).then(function(e){a.apply(t,[e])})}),t.app.command("SetNativeTitle").register(t,function(e){geocortex.GeocortexNativeApp.setNativeTitle(e)})}),this.app.event("NativeMessageEvent").subscribe(this,this._onNativeMessageEvent),dojo.subscribe("SiteSignInRequired",function(e){t.app.nativeManager.isNative()?t.app.nativeManager.message("InformGmafOfSignInRequirement",{errorCode:e.error,url:t.app.site.url})["finally"](e.callback):e.callback()})},t.prototype._onNativeMessageEvent=function(e){var t;if(this.app.trace.debug("Received native event message: "+JSON.stringify(e)),"native ready"===e.type)this.app.localServerAddress=e.parameters.localServerAddress,this.app.localServerNamespace=e.parameters.localServerNamespace,this.app.localServerToken=e.parameters.localServerToken,this.app.trace.info("Native initialization complete.  Geocortex Mobile Application Framework version: {0}  Local Server Address: {1}  Locale: {2}".format(e.parameters.version,e.parameters.localServerAddress,e.parameters.locale)),this.app.nativeManager.signalNativeInitialized();else if("download"===e.type){var a=e.parameters;t=new i.AddStatusArgs(null),t.timeoutMS=1e4,t.id="native-download-status","Downloading"===a.state?(t.text=this.getResource("language-native-download-downloading").format(a.fileName,a.progress),this.app.command("AddStatus").execute(t)):"Completed"===a.state?(t.text=this.getResource("language-native-download-complete").format(a.fileName),this.app.command("AddStatus").execute(t)):"Failed"===a.state&&(t.text=this.getResource("language-native-download-failed").format(a.fileName),this.app.command("AddStatus").execute(t)),this.app.command("ActivateView").execute(t.id)}else"low memory"===e.type?(t=new i.AddStatusArgs(this.getResource("language-native-low-memory")),t.timeoutMS=3e4,t.id="native-low-memory-status",this.app.command("AddStatus").execute(t),this.app.command("ActivateView").execute(t.id)):"license information"===e.type&&this.app.trace.info("ArcGIS License Level: {0}. Expiry: {1}".format(e.parameters.level,e.parameters.expiry))},t.prototype.handleNativeEvent=function(e){this.app.event("NativeMessageEvent").publish(e)},t}(a.ModuleBase);t.NativeIntegrationModule=n})},"url:/Mapping/modules/Native/AttachFileView.html":'<div class="attach-photo">\r\n\r\n    <div class="panel-content" data-binding="{@hidden: browserFileAPISupported}">\r\n        <p class="heading"><span data-binding="{@text: @language-native-image-select-heading}"></span></p>\r\n        <p><button class="btn" href="javascript:void(0)" data-binding="{@event-onclick: handleTakeNativePhotoCamera}{@text: @language-native-photo-from-camera}"></button></p>\r\n        <p><button class="btn" href="javascript:void(0)" data-binding="{@event-onclick: handleTakeNativePhotoGallery}{@text: @language-native-photo-from-gallery}"></button></p>\r\n    </div>\r\n\r\n    <div class="panel-content" data-binding="{@visible: browserFileAPISupported}">\r\n        <p class="heading"><span data-binding="{@text: @language-native-file-select-heading}"></span></p>\r\n        <form data-binding="{@var: uploadFormElement}">\r\n            <input type="file" class="inp" data-binding="{@event-onchange: handleSelectedFileInput}" />\r\n        </form>\r\n        <p class="loading"><span data-binding="{@visible: isUploading}{@text: @language-native-file-uploading}"></span></p>\r\n    </div>\r\n\r\n</div>',"url:/Mapping/modules/Native/NativeMessageTesterView.html":'<div style="padding: 0px 10px 10px 10px;">\r\n    <div style="margin-top: 10px;">\r\n        <label>Name: </label><input type="text" data-binding="{@var: nameInput}" value="Jeff" />\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <button class="native-test-button" data-binding="{@event-onclick: sayHello_Click}">Say Hello</button>\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <label>Iterations: </label><input type="text" data-binding="{@var: iterationsInput}" value="10" />\r\n        <label>Duration (ms): </label><input type="text" data-binding="{@var: iterationDurationInput}" value="500" />\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <button class="native-test-button" data-binding="{@event-onclick: workerJob_Click}">Start Iterations</button>\r\n        <button class="native-test-button" data-binding="{@event-onclick: workerJobCancel_Click}">Cancel</button>\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <label>URL: </label><input type="text" data-binding="{@var: downloadInput}" value="http://jsiemens-pc2.latitudegeo.com/tpks/ImageryTPK.tpk" />\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <button class="native-test-button" data-binding="{@event-onclick: download_Click}">Download</button>\r\n        <button class="native-test-button" data-binding="{@event-onclick: downloadCancel_Click}">Cancel</button>\r\n    </div>\r\n    <div style="margin-top: 10px;">\r\n        <textarea data-binding="{@var: output}" rows="8" style="height: 400px;"></textarea>\r\n    </div>\r\n</div>'}}),define(["Mapping/modules/Native/AttachFileView","Mapping/modules/Native/AttachFileViewModel","Mapping/modules/Native/NativeMessageTesterView","Mapping/modules/Native/NativeModule"],function(e,t,a,i){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.nativeIntegration.AttachFileView",e.AttachFileView),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.nativeIntegration.AttachFileViewModel",t.AttachFileViewModel),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.nativeIntegration.NativeMessageTesterView",a.NativeMessageTesterView),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.nativeIntegration.NativeIntegrationModule",i.NativeIntegrationModule)});