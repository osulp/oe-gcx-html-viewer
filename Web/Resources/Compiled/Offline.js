require({cache:{"Mapping/modules/Offline/Catalog":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/Offline/OfflineModule":function(){var i,p=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/GeometryUtils","geocortex/essentials/utilities/UrlUtilities"],function(e,t,n,i,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,o=(a=n.ModuleBase,p(s,a),s.prototype.initialize=function(e){var t=this;a.prototype.initialize.call(this,e),this.app.isOffline.bind(this,function(e){t._handleOfflineStatusChangeForTokenRefresh(e)}),this.app.nativeManager.isNative()&&this._attachTokenRefreshHooks(),this._registerCommands(),this.app.event("OfflineMapsLoadedEvent").subscribe(this,this._offlineMapsLoadedEventHandler),this.app.event("OfflineMapActivatedEvent").subscribe(this,this._offlineMapActivatedEventHandler),this.app.event("UserSigningOutEvent").subscribe(this,this._onUserSigningOut),this.app.event("FeatureCreatedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("FeatureEditedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("FeatureDeletedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("SitePrincipalUpdated").subscribe(this,this._onPrincipalUpdated)},s.prototype._registerCommands=function(){var t=this;this.app.command("ClearStorageForApplication").register(this,function(e){return t._clearStorage(!1,e)}),this.app.command("ClearStorageForDomain").register(this,function(e){return t._clearStorage(!0,e)}),this.app.command("ResumeOfflineTokenRefresh").register(this,this._handleResumeOfflineTokenRefresh),this.app.command("SignOut").register(this,this._tellNativeUserLoggedOut),this.app.command("SignIn").register(this,this._tellNativeUserLoggingIn)},s.prototype._refreshSyncInfo=function(){this.app.offlineManager.refreshSyncInfo()},s.prototype._tellNativeUserLoggedOut=function(){this.app.nativeManager.message("SignOutNative",{fromViewer:!0})},s.prototype._tellNativeUserLoggingIn=function(){this.app.nativeManager.message("SigningInNative",{fromViewer:!0})},s.prototype._attachTokenRefreshHooks=function(){var n=this;dojo.subscribe("geocortex_sessionExpiring",function(t){(n._geocortexSessionExpiryArgs=t).handled=!0,t.suspendRefresh(),n._tokenRefreshSuspended=!0,n.app.nativeManager.message("CanReachHost",{url:n.app.site.url}).then(function(e){e.result?t.resumeRefresh()&&(n._tokenRefreshSuspended=!1):n.app.trace.info("Principal expiring offline. Flagged for refresh the next time the user goes online.")})})},s.prototype._handleOfflineStatusChangeForTokenRefresh=function(e){this._geocortexSessionExpiryArgs&&!e&&this._tokenRefreshSuspended&&(this._geocortexSessionExpiryArgs.resumeRefresh(),this._tokenRefreshSuspended=!1)},s.prototype._handleResumeOfflineTokenRefresh=function(){this._handleOfflineStatusChangeForTokenRefresh(!1)},s.prototype._clearStorage=function(e,t){function n(){r.call(i.app.store,function(){i.app.trace.info("Offline data for this application cleared."),i.app.event("ApplicationStorageClearedEvent").publish();var e=i.getResource("language-offline-data-cleared"),t=i.getResource("language-offline-data-cleared-title");i.app.command("Alert").execute(e,t)},function(e){i.app.trace.info("There was an error clearing offline data.");var t=i.getResource("language-offline-error-clearing-data").format(e);i.app.command("Alert").execute(t)})}var i=this,r=e?this.app.store.clearAllData:this.app.store.clear;t?this.app.command("Confirm").execute(this.getResource("language-clear-storage-confirm"),this.getResource("language-clear-storage"),function(e){e&&n()}):n()},s.prototype._offlineMapsLoadedEventHandler=function(t){var n=this;t.activeOfflineMap&&this.app.waitUntilSiteInitializing().then(function(){var e=new esri.geometry.Polygon(t.activeOfflineMap.content.geometry);n.app.site.essentialsMap.extentManager.setExtentWithPriority(e.getExtent().expand(s._zoomExtentExpandFactor),10)})},s.prototype._offlineMapActivatedEventHandler=function(e){var t=this;if(e.offlineMap&&e.userAction){var n=new esri.geometry.Polygon(e.offlineMap.content.geometry);i.intersects(this.app.map.extent.getCenter(),n).then(function(e){e||t.app.map.setExtent(n.getExtent().expand(s._zoomExtentExpandFactor))})}},s.prototype._onUserSigningOut=function(e){var n=this;this.app.nativeManager.isNative()&&this.app.offlineManager.isOfflineMapActive.get()&&(e.isCancelled=!0,this.app.nativeManager.message("CanReachHost",{url:this.app.site.url}).then(function(e){if(e.result)n.app.offlineManager.getStoreResource(n.app.offlineManager.getActiveOfflineMap(),"__site_").then(function(e){var t=JSON.parse(e||"{}");return t.principal&&(t.principal.isAuthenticated=!1,t.principal.label="Guest",t.principal.expiry=null,t.principal.identities=[],t.principal.tokens={arcgis:{},geocortex:{},site:null}),n.app.offlineManager.setStoreResource(n.app.offlineManager.getActiveOfflineMap(),"__site_",JSON.stringify(t))}).then(function(){n.app.site.signOut()});else{var t=r.UrlUtilities.getUrlComponents(n.app.site.url).hostname;n.app.command("Alert").execute(n.getResource("language-offline-signout-offline").format(t),n.getResource("language-offline-signout-title"))}}).catch(function(e){n.app.command("Alert").execute(n.getResource("language-offline-signout-unexpected-error").format(e.message||e),n.getResource("language-offline-signout-title"))}))},s.prototype._onPrincipalUpdated=function(){this.app.offlineManager.updatePrincipal()},s._zoomExtentExpandFactor=1.5,s);function s(){var e=null!==a&&a.apply(this,arguments)||this;return e._nativeAppHasBeenNotified=!1,e._geocortexSessionExpiryArgs=null,e._tokenRefreshSuspended=!1,e}t.OfflineModule=o})},"Mapping/modules/Offline/OfflineModuleConfig":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})}}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Offline/CSS/common.css","css","")}),require({cache:{}}),define(["Mapping/modules/Offline/OfflineModule"],function(e){!function(e,t,n){if("string"==typeof e&&(n=t,t=e),void 0!==n)for(var i=t.split("."),r=null,a=window,o=0,s=i.length;o<s;o++)r=i[o],o==s-1?a[r]=n:a[r]||(a[r]={}),a=a[r];else console.warn("Undefined shim for: "+t)}(e,"geocortex.essentialsHtmlViewer.mapping.modules.offline.OfflineModule",e.OfflineModule)});