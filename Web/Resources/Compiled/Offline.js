!function(){function e(e,t,i){if("string"==typeof e&&(i=t,t=e),void 0!==i)for(var n=t.split("."),a=null,s=window,o=0,r=n.length;o<r;o++)a=n[o],o==r-1?s[a]=i:s[a]||(s[a]={}),s=s[a];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/Offline/Catalog":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/Offline/OfflineModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/GeometryUtils","geocortex/essentials/utilities/UrlUtilities"],function(t,i,n,a,s){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var o=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e._nativeAppHasBeenNotified=!1,e._geocortexSessionExpiryArgs=null,e._tokenRefreshSuspended=!1,e}return e(i,t),i.prototype.initialize=function(e){var i=this;t.prototype.initialize.call(this,e),this.app.isOffline.bind(this,function(e){i._handleOfflineStatusChangeForTokenRefresh(e)}),this.app.nativeManager.isNative()&&this._attachTokenRefreshHooks(),this._registerCommands(),this.app.event("OfflineMapsLoadedEvent").subscribe(this,this._offlineMapsLoadedEventHandler),this.app.event("OfflineMapActivatedEvent").subscribe(this,this._offlineMapActivatedEventHandler),this.app.event("UserSigningOutEvent").subscribe(this,this._onUserSigningOut),this.app.event("FeatureCreatedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("FeatureEditedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("FeatureDeletedEvent").subscribe(this,this._refreshSyncInfo),this.app.event("SitePrincipalUpdated").subscribe(this,this._onPrincipalUpdated)},i.prototype._registerCommands=function(){var e=this;this.app.command("ClearStorageForApplication").register(this,function(t){return e._clearStorage(!1,t)}),this.app.command("ClearStorageForDomain").register(this,function(t){return e._clearStorage(!0,t)}),this.app.command("ResumeOfflineTokenRefresh").register(this,this._handleResumeOfflineTokenRefresh),this.app.command("SignOut").register(this,this._tellNativeUserLoggedOut),this.app.command("SignIn").register(this,this._tellNativeUserLoggingIn)},i.prototype._refreshSyncInfo=function(){this.app.offlineManager.refreshSyncInfo()},i.prototype._tellNativeUserLoggedOut=function(){this.app.nativeManager.message("SignOutNative",{fromViewer:!0})},i.prototype._tellNativeUserLoggingIn=function(){this.app.nativeManager.message("SigningInNative",{fromViewer:!0})},i.prototype._attachTokenRefreshHooks=function(){var e=this;dojo.subscribe("geocortex_sessionExpiring",function(t){e._geocortexSessionExpiryArgs=t,t.handled=!0,t.suspendRefresh(),e._tokenRefreshSuspended=!0,e.app.nativeManager.message("CanReachHost",{url:e.app.site.url}).then(function(i){i.result?t.resumeRefresh()&&(e._tokenRefreshSuspended=!1):e.app.trace.info("Principal expiring offline. Flagged for refresh the next time the user goes online.")})})},i.prototype._handleOfflineStatusChangeForTokenRefresh=function(e){this._geocortexSessionExpiryArgs&&!e&&this._tokenRefreshSuspended&&(this._geocortexSessionExpiryArgs.resumeRefresh(),this._tokenRefreshSuspended=!1)},i.prototype._handleResumeOfflineTokenRefresh=function(){this._handleOfflineStatusChangeForTokenRefresh(!1)},i.prototype._clearStorage=function(e,t){var i=this,n=e?this.app.store.clearAllData:this.app.store.clear,a=function(){n.call(i.app.store,function(){i.app.trace.info("Offline data for this application cleared."),i.app.event("ApplicationStorageClearedEvent").publish();var e=i.getResource("language-offline-data-cleared"),t=i.getResource("language-offline-data-cleared-title");i.app.command("Alert").execute(e,t)},function(e){i.app.trace.info("There was an error clearing offline data.");var t=i.getResource("language-offline-error-clearing-data").format(e);i.app.command("Alert").execute(t)})};t?this.app.command("Confirm").execute(this.getResource("language-clear-storage-confirm"),this.getResource("language-clear-storage"),function(e){e&&a()}):a()},i.prototype._offlineMapsLoadedEventHandler=function(e){var t=this;e.activeOfflineMap&&this.app.waitUntilSiteInitialized().then(function(){var n=new esri.geometry.Polygon(e.activeOfflineMap.content.geometry);t.app.site.essentialsMap.extentManager.setExtentWithPriority(n.getExtent().expand(i._zoomExtentExpandFactor),10)})},i.prototype._offlineMapActivatedEventHandler=function(e){var t=this;if(e.offlineMap&&e.userAction){var n=new esri.geometry.Polygon(e.offlineMap.content.geometry);a.intersects(this.app.map.extent.getCenter(),n).then(function(e){e||t.app.map.setExtent(n.getExtent().expand(i._zoomExtentExpandFactor))})}},i.prototype._onUserSigningOut=function(e){var t=this;this.app.nativeManager.isNative()&&this.app.offlineManager.isOfflineMapActive.get()&&(e.isCancelled=!0,this.app.nativeManager.message("CanReachHost",{url:this.app.site.url}).then(function(e){if(e.result)t.app.offlineManager.getStoreResource(t.app.offlineManager.getActiveOfflineMap(),"__site_").then(function(e){var i=JSON.parse(e||"{}");return i.principal&&(i.principal.isAuthenticated=!1,i.principal.label="Guest",i.principal.expiry=null,i.principal.identities=[],i.principal.tokens={arcgis:{},geocortex:{},site:null}),t.app.offlineManager.setStoreResource(t.app.offlineManager.getActiveOfflineMap(),"__site_",JSON.stringify(i))}).then(function(){t.app.site.signOut()});else{var i=s.UrlUtilities.getUrlComponents(t.app.site.url).hostname;t.app.command("Alert").execute(t.getResource("language-offline-signout-offline").format(i),t.getResource("language-offline-signout-title"))}}).catch(function(e){t.app.command("Alert").execute(t.getResource("language-offline-signout-unexpected-error").format(e.message||e),t.getResource("language-offline-signout-title"))}))},i.prototype._onPrincipalUpdated=function(){this.app.offlineManager.updatePrincipal()},i}(n.ModuleBase);o._zoomExtentExpandFactor=1.5,i.OfflineModule=o})},"Mapping/modules/Offline/OfflineModuleConfig":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/ListOfflineMapsView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","./OfflineMapsModule"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e._offlineMapIfBusyBindingTokens={},e}return e(i,t),i.prototype.attach=function(e){t.prototype.attach.call(this,e),e&&(e.isBusy.bind(this,this._calculateIsBusy),e.mergedOfflineMaps.bind(this,this._offlineMapsChanged))},i.prototype.activated=function(){t.prototype.activated.call(this),this.viewModel.activate()},i.prototype.handleOfflineMapClick=function(e,t,i){var n=this;if(!i.isActive.get())if(i.isDownloaded.get()){if(this.isBusy.get())return;i.isBusy.set(!0),this.app.offlineManager.activateOfflineMap(i.doc,!0).then(function(){i.isBusy.set(!1)},function(e){i.isBusy.set(!1),n.app.trace.error("Failed to activate offline map. "+(e.message||e.toString())),n.app.command("Alert").execute(n.getResource("language-offline-maps-activate-failed"))})}else{if(i.isBusy.get())return;this.app.command("Confirm").execute(this.getResource("language-offline-maps-add-confirm"),i.doc.title,function(e){e&&n._guaranteeOfflineMapContent(i).then(function(e){a.OfflineMapsModule._execCommandFromConfig(n.app,n.configuration.download,{offlineMap:e})},function(e){n.app.trace.error("Failed to download offline map. "+(e.message||e.toString())),n.app.command("Alert").execute(e.message||e.toString())})})}},i.prototype.handleOfflineMapForgetClick=function(e,t,i){var n=this;!i.isDownloaded.get()||i.isActive.get()||i.isBusy.get()||this.app.command("Confirm").execute(this.getResource("language-offline-maps-delete-from-device-confirm"),i.doc.title,function(e){e&&(i.isBusy.set(!0),n.app.offlineManager.removeOfflineMap(i.doc).then(function(){i.isBusy.set(!1),n._calculateIsBusy()},function(e){i.isBusy.set(!1),n.app.command("Alert").execute(e.message||e.toString()),n._calculateIsBusy()}))})},i.prototype.handleOfflineMapSyncClick=function(e,t,i){var n=this;i.isDownloaded.get()&&!i.isBusy.get()&&this.app.site.documentStore.getById(i.doc.id,!0).then(function(e){return e},function(e){return n.app.trace.warning("Error fetching existing offline map: "+e),i.doc}).then(function(e){a.OfflineMapsModule._execCommandFromConfig(n.app,n.configuration.sync,{offlineMap:e})})},i.prototype.handleDeactivateOfflineMapClick=function(e,t,i){var n=this;if(!this.isBusy.get()&&this.viewModel.hasActiveOfflineMap.get()){var a=this.app.offlineManager.getActiveOfflineMap();a&&(this.viewModel.offlineManagerOfflineMaps.get().filter(function(e){return e.doc.id===a.id})[0]?(this.isBusy.set(!0),this.app.offlineManager.deactivateOfflineMap(!0).then(function(){n.isBusy.set(!1)},function(e){n.isBusy.set(!1),n.app.command("Alert").execute(e.message||e.toString())})):this.app.trace.error("Can't find view model matching the active offline map."))}},i.prototype.handleThumbnailLoadError=function(e,t,i){t.src!==this.viewModel.defaultThumbnail&&(t.src=this.viewModel.defaultThumbnail,t.src!==this.viewModel.defaultThumbnail&&(this.viewModel.defaultThumbnail=t.src))},i.prototype.resolveWidget=function(e,i,n){switch(t.prototype.resolveWidget.call(this,e,i,n),e){case"ListOfflineMapsActionsWidget":return this.app.menuRegistry.createMenuWidget(this,i,n)}},i.prototype._guaranteeOfflineMapContent=function(e){return e.doc.content?Promise.resolve(e.doc):this.app.site.documentStore.getById(e.doc.id,!0).then(function(t){return e.update(t),t})},i.prototype._offlineMapsChanged=function(e){for(var t=e.rangeStart;t<=e.rangeEnd;t++){var i=this.viewModel.mergedOfflineMaps.getAt(t);switch(e.type){case"append":case"insert":case"set":this._offlineMapIfBusyBindingTokens[i.doc.id]=i.isBusy.bind(this,this._calculateIsBusy);break;case"remove":case"clear":i.isBusy.unbind(this._offlineMapIfBusyBindingTokens[i.doc.id]),delete this._offlineMapIfBusyBindingTokens[i.doc.id]}}},i.prototype._calculateIsBusy=function(){for(var e=this.viewModel.isBusy.get(),t=0,i=this.viewModel.mergedOfflineMaps.length();!e&&t<i;t++)e=this.viewModel.mergedOfflineMaps.getAt(t).isBusy.get();this.isBusy.set(e)},i}(n.ViewBase);i.ListOfflineMapsView=s})},"Mapping/modules/OfflineMaps/ListOfflineMapsViewConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/ManageOfflineMapsView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","./OfflineMapsModule"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n._isManaging=!1,n.app.event("ViewContainerViewClosedEvent").subscribe(n,n._onViewContainerViewClosedEvent),n}return e(i,t),i.prototype.attach=function(e){t.prototype.attach.call(this,e),e&&(this.isBusy.sync(e.isBusy),e.showManageDoneButton.set(!1!==this.configuration.showDonebutton))},i.prototype.activated=function(){t.prototype.activated.call(this),this.viewModel.activate(),this._isManaging||(this.viewModel.startManaging(),this._isManaging=!0)},i.prototype.handleEditOfflineMapClick=function(e,t,i){var n=this;this.isBusy.get()||(i.doc.content?a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.editOfflineMap,{offlineMap:i.doc}):(this.isBusy.set(!0),this.app.site.documentStore.getById(i.doc.id,!0).then(function(e){i.update(e),a.OfflineMapsModule._execCommandFromConfig(n.app,n.configuration.editOfflineMap,{offlineMap:i.doc}),n.isBusy.set(!1)},function(e){n.app.trace.error("Error fetching offlinemap document. "+(e.message||e));var t=n.getResource("language-offline-maps-fetch-error"),i=n.getResource("language-offline-maps-fetch-error-title");n.app.command("Alert").execute(t,i),n.isBusy.set(!1)})))},i.prototype.handleDeleteOfflineMapClick=function(e,t,i){var n=this;this.isBusy.get()||this.app.command("Confirm").execute(this.getResource("language-offline-maps-delete-from-server").format(i.title.get()),this.getResource("language-offline-maps-delete-from-server-title"),function(e){e&&n.viewModel.deleteOfflineMap(i)})},i.prototype.handleNewOfflineMapClick=function(e,t,i){this.isBusy.get()||a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.newOfflineMap)},i.prototype.handleDoneClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id),this._stopManaging()},i.prototype._onViewContainerViewClosedEvent=function(e){e.viewId===this.id&&this._stopManaging()},i.prototype._stopManaging=function(){this.viewModel.stopManaging(),this._isManaging=!1},i.prototype.handleThumbnailLoadError=function(e,t,i){t.src!==this.viewModel.defaultThumbnail&&(t.src=this.viewModel.defaultThumbnail,t.src!==this.viewModel.defaultThumbnail&&(this.viewModel.defaultThumbnail=t.src))},i.prototype.resolveWidget=function(e,i,n){switch(t.prototype.resolveWidget.call(this,e,i,n),e){case"ManageOfflineMapsActionsWidget":return this.app.menuRegistry.createMenuWidget(this,i,n)}},i}(n.ViewBase);i.ManageOfflineMapsView=s})},"Mapping/modules/OfflineMaps/ManageOfflineMapsViewConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/ModuleConfig":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/OfflineMapModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/FormatUtils"],function(t,i,n,a,s){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var o=function(t){function i(e,i,n){var s=t.call(this,e,i)||this;return s.title=new a.Observable,s.thumbnail=new a.Observable,s.isBusy=new a.Observable(!1),s.isActive=new a.Observable(!1),s.isDownloaded=new a.Observable(!1),s.hasProgress=new a.Observable(!1),s.isOrphaned=new a.Observable(!1),s.canEdit=new a.Observable(!1),s.canChange=new a.Observable(!1),s.numberOfEdits=new a.Observable(0),s.lastSyncTime=new a.Observable(""),s.dataSizeBytes=new a.Observable(0),s.dataSizeDisplayValue=new a.Observable("…"),s.update(n),s.dataSizeDisplayValue.syncTransform(s.dataSizeBytes,function(e){return s._getDisplayBytes(e)}),s}return e(i,t),i.prototype._getDisplayBytes=function(e){var t=e/1024,i=t/1024,n=i/1024;return n>=1?this.getResource("language-offline-maps-size-gb").format(s.formatNumber(n,null,{fractionalDigits:2})):i>=1?this.getResource("language-offline-maps-size-mb").format(s.formatNumber(i,null,{fractionalDigits:1})):this.getResource("language-offline-maps-size-kb").format(s.formatNumber(t,null,{fractionalDigits:0}))},i.prototype.update=function(e){this.doc=e,this.title.set(e.title),this.thumbnail.set(e.thumbnail?e.thumbnail.location:null),this.canEdit.set(e.access.edit),this.canChange.set(e.access.change)},i}(n.ViewModelBase);i.OfflineMapModel=o})},"Mapping/modules/OfflineMaps/OfflineMapsModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/ArrayUtils"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e._syncNotificationString="SyncNotifications",e._oneWeekSyncNotificationString="OneWeekSyncNotification",e._syncNotificationOfflineString="SyncNotificationsOffline",e}return e(i,t),i.prototype.initialize=function(e){var i=this;t.prototype.initialize.call(this,e),this.app.offlineManager.aoiMask.configure(e.aoiMask),this.app.nativeManager.onNativeInitialized().then(function(){i.app.isNative.get()&&(i.app.event("MapLoadedEvent").subscribe(i,i._handleMapLoadedEvent),i.app.event("SyncInfoRefreshedEvent").subscribe(i,i._syncInfoRefreshedEventHandler))})},i._execCommandsFromConfig=function(e,t,i){var n=this;t&&t.forEach(function(t){return n._execCommandFromConfig(e,t,i)})},i._execCommandFromConfig=function(e,t,n){if(t){var a=t.commandParameter;a&&n&&(a=i._replaceCommandParameterTokens(a,n)),e.command(t.command).execute(a)}},i._replaceCommandParameterTokens=function(e,t){var i,n=this;if("string"==typeof e)return i=/{{(.+)}}/.exec(e),a=t[i[1]];var a={};for(var s in e)e.hasOwnProperty(s)&&("string"==typeof e[s]&&(i=/{{(.+)}}/.exec(e[s]))&&t.hasOwnProperty(i[1])?a[s]=t[i[1]]:dojo.isArray(e[s])?a[s]=e[s].map(function(e){return n._replaceCommandParameterTokens(e,t)}):"object"==typeof e[s]?a[s]=this._replaceCommandParameterTokens(e[s],t):a[s]=e[s]);return a},i.prototype._checkForInternetAndDisplayNotification=function(){var e=this,t=!1;this.app.offlineManager.hasInternetCheck().then(function(e){t=e.result}),setInterval(function(){e.app.offlineManager.hasInternetCheck().then(function(i){t!=i.result&&((t=i.result)?(e.displayOnlineSyncNotification(),e.app.command("RemoveNotification").execute(e._syncNotificationOfflineString)):(e.displayOfflineSyncNotification(),e.app.command("RemoveNotification").execute(e._syncNotificationString),e.app.command("RemoveNotification").execute(e._oneWeekSyncNotificationString))),e.app.event("NetworkConnectivityChangedEvent").publish(t)})},6e4)},i.prototype._shouldDisplayWeeklyNotification=function(e,t){return this._daysBetween(e,new Date)>6&&this._daysBetween(t,new Date)>6},i.prototype._syncInfoRefreshedEventHandler=function(e){this.displayOnlineSyncNotification()},i.prototype._handleMapLoadedEvent=function(){var e=this;this._checkForInternetAndDisplayNotification(),this.app.offlineManager.hasInternetCheck().then(function(t){t?e.displayOnlineSyncNotification():e.displayOfflineSyncNotification()})},i.prototype.displayOfflineSyncNotification=function(){var e=this,t=this.app.offlineManager.getOfflineMapsWithState();if(t){var i=0;t.forEach(function(t,n){t.syncInfoPromise.then(function(t){var n=a.ArrayUtils.sum(t.servers,function(e){return e.numberOfAdds+e.numberOfDeletes+e.numberOfEdits});if((i+=n)>0){var s=e.getResource("language-offline-maps-unsynced-edits-offline").format(i);1==i&&(s=e.getResource("language-offline-maps-unsynced-edit-offline"));var o={id:e._syncNotificationOfflineString,text:s,iconProperties:{uri:"Resources/Images/Icons/toolbar/sync-24.png",altText:"Sync Button"},closeButton:{}};e.app.command("DisplayNotification").execute(o)}})})}},i.prototype.displayOnlineSyncNotification=function(){var e=this;this.app.offlineManager.hasInternetCheck().then(function(t){if(t.result){var i=e.app.offlineManager.getOfflineMapsWithState();if(i){e.app.command("RemoveNotification").execute(e._oneWeekSyncNotificationString);var n=[],s=0,o=new Date,r=new Date;i.forEach(function(t,i){t.syncInfoPromise.then(function(i){var l=a.ArrayUtils.sum(i.servers,function(e){return e.numberOfAdds+e.numberOfDeletes+e.numberOfEdits}),p=!1;l>0&&(n.push(t.offlineMap),p=!0),s+=l;var f=i.getOldestSyncTime();if(!p&&e._daysBetween(f,new Date)&&n.push(t.offlineMap),o>f&&(o=f),r>i.lastSyncNotificationDate&&(r=i.lastSyncNotificationDate),s>0){var c=e.getResource("language-offline-maps-unsynced-edits").format(s);1==s&&(c=e.getResource("language-offline-maps-unsynced-edit"));u={id:e._syncNotificationString,text:c,iconProperties:{uri:"Resources/Images/Icons/toolbar/sync-24.png",altText:"Sync Button"},buttons:[{text:e.getResource("language-offline-maps-sync-now-button"),callback:function(){e.app.command("StartOfflineFeatureSync").execute({offlineMaps:n})}}]};e.app.command("DisplayNotification").execute(u)}else if(e.app.command("RemoveNotification").execute(e._syncNotificationString),e._shouldDisplayWeeklyNotification(o,r)){var u={id:e._oneWeekSyncNotificationString,text:e.getResource("language-offline-maps-not-synced-in-one-week").format(e._daysBetween(o,new Date)),iconProperties:{uri:"Resources/Images/Icons/toolbar/sync-24.png",altText:"Sync Button"},buttons:[{text:e.getResource("language-offline-maps-sync-now-button"),callback:function(){e.app.command("StartOfflineFeatureSync").execute({offlineMaps:n})}}],closeButton:{callback:function(){e.app.nativeManager.message("SaveSyncJsonData",{localServerNamespace:e.app.localServerNamespace,lastSyncNotificationDate:new Date})}}};e.app.command("DisplayNotification").execute(u)}})})}else e.app.command("RemoveNotification").execute(e._syncNotificationString)}else e.app.command("RemoveNotification").execute(e._syncNotificationString),e.app.command("RemoveNotification").execute(e._oneWeekSyncNotificationString)})},i.prototype._daysBetween=function(e,t){var i=e.getTime(),n=t.getTime()-i;return Math.floor(n/864e5)},i}(n.ModuleBase);i.OfflineMapsModule=s})},"Mapping/modules/OfflineMaps/OfflineMapsViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./OfflineMapModel","geocortex/infrastructure/offline/OfflineMap","geocortex/infrastructure/ArrayUtils","geocortex/infrastructure/FormatUtils"],function(t,i,n,a,s,o,r,l){"use strict";function p(e,t){return(e.doc.title||"").toLocaleLowerCase().localeCompare((t.doc.title||"").toLocaleLowerCase())}Object.defineProperty(i,"__esModule",{value:!0});var f=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e.docstoreOfflineMaps=new a.ObservableCollection,e.offlineManagerOfflineMaps=new a.ObservableCollection,e.mergedOfflineMaps=new a.ObservableCollection,e.canCreate=new a.Observable(!1),e.hasActiveOfflineMap=new a.Observable(!1),e.showManageDoneButton=new a.Observable(!0),e.switchedToOnlineMap=new a.Observable(!1),e.isBusy=new a.Observable(!1),e.statusFetching=new a.Observable(!1),e.statusEmpty=new a.Observable(!1),e.statusOffline=new a.Observable(!1),e.statusUnsupported=new a.Observable(!1),e.statusNative=new a.Observable(!1),e._activated=!1,e._populated=!1,e._queryPageSize=20,e}return e(i,t),i.prototype.initialize=function(e){var i=this;t.prototype.initialize.call(this,e),this.defaultThumbnail=e.defaultThumbnail,this.mergedOfflineMaps.bind(this,function(){i.statusEmpty.set(0===i.mergedOfflineMaps.length())}),this.app.nativeManager.onNativeInitialized().then(function(){i.statusNative.set(!0)}),this.app.waitUntilSiteInitialized().then(function(){return i.app.site.documentStore.onInitialized()}).then(function(){return i.canCreate.set(i.app.site.documentStore.canCreate())}),this._downloadedOfflineMapsLoaded({offlineMaps:this.app.offlineManager.getOfflineMaps(),activeOfflineMap:this.app.offlineManager.getActiveOfflineMap(),offlineMapStates:this.app.offlineManager.getOfflineMapsWithState().map(function(e){return e.state})}),this.app.command("RefreshOfflineMapsList").register(this,this.populateFromDocStore),this.app.event("OfflineMapsLoadedEvent").subscribe(this,this._downloadedOfflineMapsLoaded),this.app.event("OfflineMapAddedEvent").subscribe(this,this._downloadedOfflineMapAdded),this.app.event("OfflineMapRemovedEvent").subscribe(this,this._refreshOfflineMapStatus),this.app.event("OfflineMapPartialDataRemovedEvent").subscribe(this,this._refreshOfflineMapStatus),this.app.event("OfflineMapSyncedEvent").subscribe(this,this._downloadedOfflineMapSynced),this.app.event("OfflineMapSyncErrorEvent").subscribe(this,this._downloadedOfflineMapSyncError),this.app.event("OfflineMapActivatedEvent").subscribe(this,this._offlineMapActivated),this.app.event("SyncInfoRefreshedEvent").subscribe(this,this._onSyncInfoRefreshed),this.app.event("NetworkConnectivityChangedEvent").subscribe(this,this._onNetworkConnectivityChangedEvent),e.saveOfflineMaps&&this.app.event("OfflineMapEditorFinishedEvent").subscribe(this,this._onOfflineMapEditorFinishedEvent),e.menus&&this.app.menuRegistry&&this.app.menuRegistry.loadMenus({menus:e.menus})},i.prototype.activate=function(){var e=this;this._activated||(this._activated=!0,this.app.waitUntilSiteInitialized().finally(function(){e.statusUnsupported.set(!e.app.site.documentStore.supported),e.populateFromDocStore()}))},i.prototype.startManaging=function(){this.app.nativeManager.nativeInitialized&&(this._offlineMapWhenManagingStarted=this.app.offlineManager.getActiveOfflineMap(),this._offlineMapWhenManagingStarted&&this.app.offlineManager.deactivateOfflineMap(!1),this.switchedToOnlineMap.set(!!this._offlineMapWhenManagingStarted))},i.prototype.stopManaging=function(){this.app.nativeManager.nativeInitialized&&this._offlineMapWhenManagingStarted&&this.app.offlineManager.activateOfflineMap(this._offlineMapWhenManagingStarted,!1)},i.prototype.populateFromDocStore=function(){var e=this;if(this.app.site.documentStore.supported&&this._activated){this.isBusy.set(!0),this.statusFetching.set(!0);var t={filters:{require:[{field:"fileType",method:"values",range:[{string:"offlinemap"}]},{field:"properties.siteId.string",method:"values",range:[{string:this.app.site.id}]}]},limit:this._queryPageSize};this._queryDocStore(t,0,[]).then(function(t){e._populated=!0,e.statusOffline.set(!1),e.docstoreOfflineMaps.set(t)}).catch(function(t){e.statusOffline.set(!0),e.app.trace.error("Unable to fetch offline maps. "+t)}).then(function(){e.statusFetching.set(!1),e.updateMergedOfflineMaps()}).catch(function(t){e.app.trace.error("Unable to update metadata for offline maps. "+t)}).finally(function(){e.isBusy.set(!1)})}},i.prototype._queryDocStore=function(e,t,i){var n=this;return e.start=t,this.app.waitUntilSiteInitialized().then(function(){return n.app.site.principal.isAuthenticated?Promise.resolve():n.app.site.refreshPrincipal()}).then(function(){return n.app.site.documentStore.query(e)}).then(function(a){var o=a.results.map(function(e){return new s.OfflineMapModel(n.app,n.libraryId,e.entity)});return o.length>0&&(i=i.concat(o)),o.length==e.limit?n._queryDocStore(e,t+e.limit,i):Promise.resolve(i.sort(p))})},i.prototype.deleteOfflineMap=function(e){var t=this;this.app.site.documentStore.supported&&(this.isBusy.set(!0),this.app.site.documentStore.deleteById(e.doc.id).then(function(){t.isBusy.set(!1),t.docstoreOfflineMaps.removeItem(e),t.updateMergedOfflineMaps()},function(i){if(t.isBusy.set(!1),i.error&&404===i.error.code)return t.docstoreOfflineMaps.removeItem(e),void t.updateMergedOfflineMaps();var n=i.message||i.error&&i.error.message||i.toString();t.app.command("Alert").execute(n,t.getResource("language-offline-maps-delete-from-server-title"))}))},i.prototype.updateOfflineManagerOfflineMaps=function(){var e=this,t=this.app.offlineManager.getOfflineMapsWithState().map(function(t){var i=new s.OfflineMapModel(e.app,e.libraryId,t.offlineMap);return i.isDownloaded.set(t.state.isDownloaded),i.hasProgress.set(t.state.hasProgress),i});return this.offlineManagerOfflineMaps.set(t),this.offlineManagerOfflineMaps},i.prototype.updateMergedOfflineMaps=function(){for(var e=this.app.offlineManager.getActiveOfflineMap(),t=this._calculateMergedOfflineMaps(),i=0;i<t.length;i++){var n=t[i];this._updateMetadataForOfflineMap(n),e&&n.doc.id===e.id&&n.isActive.set(!0)}this.mergedOfflineMaps.set(t)},i.prototype._calculateMergedOfflineMaps=function(){var e=this,t=this.updateOfflineManagerOfflineMaps().get(),i=this.docstoreOfflineMaps.get();return this._populated&&t.forEach(function(t){var n=e.app.site.documentStore.isInitialized&&e.app.site.documentStore.userMonikers.some(function(e){return t.doc.access&&t.doc.access.monikerIds&&-1!==t.doc.access.monikerIds.indexOf(e.id)})&&!i.some(function(e){return e.doc.id===t.doc.id});t.isOrphaned.set(n)}),i=i.filter(function(e){return!t.some(function(t){return t.doc.id===e.doc.id})}),t.concat(i).sort(p)},i.prototype._downloadedOfflineMapsLoaded=function(e){this.updateMergedOfflineMaps(),this._offlineMapActivated({offlineMap:e.activeOfflineMap})},i.prototype._downloadedOfflineMapAdded=function(e){this.updateMergedOfflineMaps()},i.prototype._refreshOfflineMapStatus=function(e){this.updateMergedOfflineMaps()},i.prototype._offlineMapActivated=function(e){this.hasActiveOfflineMap.set(!!e.offlineMap);for(var t=0,i=this.offlineManagerOfflineMaps.length();t<i;t++){var n=this.offlineManagerOfflineMaps.getAt(t);n.isActive.set(null!=e.offlineMap&&e.offlineMap.id===n.doc.id)}},i.prototype._downloadedOfflineMapSynced=function(e){for(var t=0,i=this.offlineManagerOfflineMaps.length();t<i;t++){var n=this.offlineManagerOfflineMaps.getAt(t);if(n.doc.id===e.offlineMap.id)return n.update(e.offlineMap),void this._updateMetadataForOfflineMap(e.offlineMap)}},i.prototype._downloadedOfflineMapSyncError=function(e){this._updateMetadataForOfflineMap(e.offlineMap)},i.prototype._refreshActiveMapState=function(){this.hasActiveOfflineMap.get()&&this._getActiveMap().isActive.set(!0)},i.prototype._getActiveMap=function(){if(this.hasActiveOfflineMap.get())for(var e=this.app.offlineManager.getActiveOfflineMap().id,t=0;t<this.mergedOfflineMaps.length();t++){var i=this.mergedOfflineMaps.getAt(t);if(i.doc.id===e)return i}},i.prototype._onSyncInfoRefreshed=function(e){this._updateMetadataForOfflineMap(e.offlineMap)},i.prototype._onNetworkConnectivityChangedEvent=function(e){this.populateFromDocStore()},i.prototype._updateMetadataForOfflineMap=function(e){var t=this;if(!this.app.nativeManager.nativeInitialized)return Promise.resolve();var i=e instanceof s.OfflineMapModel?e:this.mergedOfflineMaps.get().filter(function(t){return t.doc.id===e.id})[0];if(!i)return Promise.reject("Offline map not downloaded.");var n=[];i.dataSizeBytes.set(0);var a=0,p=i.lastSyncTime.get(),f=null,c=this.app.offlineManager.getOfflineMapWithStateById(i.doc.id);return c&&n.push(c.syncInfoPromise.then(function(e){a=r.ArrayUtils.sum(e.servers,function(e){return e.numberOfAdds+e.numberOfDeletes+e.numberOfEdits}),p=l.formatDate(r.ArrayUtils.max(e.servers,function(e){return e.lastSyncTime})),f=i.dataSizeBytes.get()+r.ArrayUtils.sum(e.servers,function(e){return e.totalSizeInBytes})}).finally(function(){i.numberOfEdits.set(a),i.lastSyncTime.set(p),i.dataSizeBytes.set(f)})),i.doc.content&&i.doc.content.basemaps.filter(function(e){return e.sourceType===o.OfflineMapBasemap.Type.EXPORT_TILES}).forEach(function(e){n.push(t.app.nativeManager.getViewerResourceInfo(e.filename).then(function(e){"number"==typeof e.length&&i.dataSizeBytes.set(i.dataSizeBytes.get()+e.length)}))}),i.hasProgress.set(!!c&&c.state.hasProgress),Promise.all(n)},i.prototype._onOfflineMapEditorFinishedEvent=function(e){var t=this;if(this.app.site.documentStore.supported&&!e.canceled)if(e.newOfflineMap.contentType="application/json",e.newOfflineMap.fileType="offlinemap",e.existingOfflineMap){e.newOfflineMap.id=e.existingOfflineMap.id;var i=o.OfflineMap.diff(e.existingOfflineMap,e.newOfflineMap);if(!i)return void this.app.trace.warning("OfflineMapEditorFinishedEvent called without any changes to send.  Bailing.");i.content&&(i.content=e.newOfflineMap.content),this.isBusy.set(!0),this.app.site.documentStore.updateById(e.existingOfflineMap.id,i).then(function(e){t.isBusy.set(!1);for(var i=0;i<t.docstoreOfflineMaps.length();i++)if(t.docstoreOfflineMaps.getAt(i).doc.id===e.id){t.docstoreOfflineMaps.getAt(i).update(e);break}},function(e){t.isBusy.set(!1),t.app.trace.error("Error updating offline map in doc store. "+(e.message||e));var i=t.getResource("language-offline-maps-update-profile-error").format(e.message||e),n=t.getResource("language-offline-maps-update-profile-error-title");t.app.command("Alert").execute(i,n)})}else this.isBusy.set(!0),this.app.site.documentStore.add(e.newOfflineMap).then(function(e){t.isBusy.set(!1);var i=new s.OfflineMapModel(t.app,t.libraryId,e),n=t.docstoreOfflineMaps.get().concat([i]).sort(p);t.docstoreOfflineMaps.set(n),t.updateMergedOfflineMaps()},function(e){t.isBusy.set(!1),t.app.trace.error("Error adding offline map to doc store. "+(e.message||e));var i=t.getResource("language-offline-maps-add-error").format(e.message||e),n=t.getResource("language-offline-maps-add-error-title");t.app.command("Alert").execute(i,n)})},i}(n.ViewModelBase);i.OfflineMapsViewModel=f})},"Mapping/modules/OfflineMaps/OfflineMapsViewModelConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Editor/MapState":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e){var t=this;this.appInfo=e,this.extent=e.map.extent,this.layers={},e.mapInfo.getLayerInfos().forEach(function(e){t.layers[e.uniqueId]={visible:e.isVisible(),definitionExpression:e.getDefinitionExpression()}})}return e.prototype.restore=function(){var e=this;this.appInfo.map.setExtent(this.extent),this.appInfo.mapInfo.getLayerInfos().forEach(function(t){if(e.layers.hasOwnProperty(t.uniqueId))try{t.setEsriLayerVisibility(e.layers[t.uniqueId].visible),t.setDefinitionExpression(e.layers[t.uniqueId].definitionExpression)}catch(e){}})},e}();t.MapState=i})},"Mapping/modules/OfflineMaps/Editor/OfflineMapEditorBasemap":function(){define(["require","exports","geocortex/framework/observables","geocortex/infrastructure/offline/OfflineMap","geocortex/essentials/MapServiceConstants","geocortex/infrastructure/ExportTilesUtils","geocortex/framework/utils/utils","geocortex/infrastructure/offline/BasemapDownloading"],function(e,t,i,n,a,s,o,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=function(){function e(t,s,o){var r=this;this.app=t,this.libraryId=s,this.source=o,this.type=new i.Observable(null),this.isNone=new i.Observable(!0),this.isStatic=new i.Observable(!1),this.isExportTiles=new i.Observable(!1),this.isValid=new i.Observable(!0),this.geometry=new i.Observable(null),this.supportsStatic=new i.Observable(!1),this.supportsExportTiles=new i.Observable(!1),this.supportsAny=new i.Observable(!1),this.staticTpks=new i.ObservableCollection([]),this.staticTpk=new i.Observable(null),this.exportTilesMinLevel=new i.Observable(0),this.exportTilesMaxLevel=new i.Observable(22),this.exportTilesMapServiceMinLevel=new i.Observable(0),this.exportTilesMapServiceMaxLevel=new i.Observable(22),this.exportTilesRefreshInterval=new i.Observable(0),this.filename=new i.Observable(""),this.displayName=new i.Observable(""),this.iconUri=new i.Observable(""),this.size=new i.Observable(e.sizeUnknown),this.sizePresentable=new i.Observable(""),this.errorConfigurationMessage=new i.Observable(null),this.errorExportTilesMessage=new i.Observable(null),this._hasTiledMapService=!1,this._staticTpksSet=!1,this._exportFileName=null,this._calculateSizeGen=1,this.displayName.set(o.displayName),this.iconUri.set(o.iconUri),this.type.bind(this,function(e){r.isNone.set("none"===e),r.isStatic.set(e===n.OfflineMapBasemap.Type.PREGENERATED),r.isExportTiles.set(e===n.OfflineMapBasemap.Type.EXPORT_TILES),r._calculateSize(),r._calculateFileName()}),this.staticTpks.bind(this,function(){r._staticTpksSet=!0;var e=r.staticTpks.isEmpty();r.supportsStatic.set(r._hasTiledMapService&&!e),r.staticTpk.get()||e||r.staticTpk.set(r.staticTpks.getAt(0))}),this.staticTpk.bind(this,function(){r._calculateSize(),r._calculateFileName()}),this.supportsExportTiles.bind(this,function(){return r.supportsAny.set(r.supportsExportTiles.get()||r.supportsStatic.get())}),this.supportsStatic.bind(this,function(){return r.supportsAny.set(r.supportsExportTiles.get()||r.supportsStatic.get())}),this.exportTilesMinLevel.bind(this,function(){return r._calculateSize()}),this.exportTilesMaxLevel.bind(this,function(){return r._calculateSize()}),this.exportTilesMapServiceMinLevel.bind(this,function(e){r.exportTilesMinLevel.get()<e&&r.exportTilesMinLevel.set(e),r.exportTilesMaxLevel.get()<e&&r.exportTilesMaxLevel.set(e)}),this.exportTilesMapServiceMaxLevel.bind(this,function(e){r.exportTilesMinLevel.get()>e&&r.exportTilesMinLevel.set(e),r.exportTilesMaxLevel.get()>e&&r.exportTilesMaxLevel.set(e)}),this.geometry.bind(this,function(){return r._calculateSize()}),this.size.bind(this,function(){return r._calculateIsValid()}),this.sizePresentable.syncTransform(this.size,function(e){return r._formatBytes(e)}),this._hasTiledMapService=o.services.filter(function(e){return e.mapService.mapServiceType===a.MapServiceType.TILED}).length>0,this._hasTiledMapService?this._calculateExportTilesMapServiceUri():(this.supportsStatic.set(!1),this.supportsExportTiles.set(!1),this.errorConfigurationMessage.set(this.getResource("language-offlinemapeditor-basemaps-notiled")))}return e.prototype.load=function(e){var t=this;switch(this.type.set(e.sourceType),this.filename.set(e.filename),this._exportFileName=null,e.sourceType){case n.OfflineMapBasemap.Type.PREGENERATED:this._staticTpksSet?this._setStaticTpkByUrl(e.url):this.staticTpks.once(this,function(){t._setStaticTpkByUrl(e.url)});break;case n.OfflineMapBasemap.Type.EXPORT_TILES:this.exportTilesMinLevel.set(Math.max(e.minLevel,this.app.map.getMinZoom())),this.exportTilesMaxLevel.set(Math.min(e.maxLevel,this.app.map.getMaxZoom())),this.exportTilesRefreshInterval.set(this._sanitizeRefreshInterval(e.refreshInterval)),this._exportFileName=e.filename;break;default:throw new Error("Unknown sourceType.")}},e.prototype.save=function(){switch(this.type.get()){case"none":throw new Error("This OfflineMapBasemap is set to none and not savable.");case n.OfflineMapBasemap.Type.PREGENERATED:return{baseMapId:this.source.id,sourceType:this.type.get(),url:this.staticTpk.get()?this.staticTpk.get().url:null,filename:this.filename.get(),size:Math.max(this.size.get(),0)};case n.OfflineMapBasemap.Type.EXPORT_TILES:return{baseMapId:this.source.id,sourceType:this.type.get(),url:this._exportTilesMapServiceUri,filename:this.filename.get(),minLevel:this.exportTilesMinLevel.get(),maxLevel:this.exportTilesMaxLevel.get(),size:Math.max(this.size.get(),0),refreshInterval:this._sanitizeRefreshInterval(this.exportTilesRefreshInterval.get())};default:throw new Error("Unknown sourceType.")}},e.prototype.reset=function(){this.type.set("none"),this.staticTpks.isEmpty()||this.staticTpk.set(this.staticTpks.getAt(0)),this.exportTilesMinLevel.set(Math.max(this.exportTilesMapServiceMinLevel.get(),this.app.map.getMinZoom())),this.exportTilesMaxLevel.set(Math.min(this.exportTilesMapServiceMaxLevel.get(),this.app.map.getMaxZoom())),this.exportTilesRefreshInterval.set(0),this._exportFileName=null},e.prototype._calculateExportTilesMapServiceUri=function(){var e=this;if(this.errorConfigurationMessage.set(null),this.source.exportTilesMapServiceUri)this._getExportTilesMapServiceInfo(this.source.exportTilesMapServiceUri).then(function(t){return e._enableExportTilesSupport(e.source.exportTilesMapServiceUri,t)},function(t){e.app.trace.warning("Unable to use configured Map Service '"+e.source.exportTilesMapServiceUri+"' to create the Custom Offline Basemap. "+(t.message||t)),t.message&&/No token available for service /.test(t.message)?e.errorConfigurationMessage.set(e.getResource("language-offlinemapeditor-basemaps-exporttiles-error-agollogin")):t.error&&499==t.error.code?e.errorConfigurationMessage.set(e.getResource("language-offlinemapeditor-basemaps-exporttiles-error-auth")):e.errorConfigurationMessage.set(e.getResource("language-offlinemapeditor-basemaps-exporttiles-error-misconfigured")),e._exportTilesMapServiceUri=null,e.supportsExportTiles.set(!1)});else{var t=this.source.services.map(function(e){return e.mapService.serviceUrl}).filter(function(e){return!!e}),i=t.map(function(t){return e._getExportTilesMapServiceInfo(t)}),n=function(a){a>=i.length?(e._exportTilesMapServiceUri=null,e.supportsExportTiles.set(!1)):i[a].then(function(i){return e._enableExportTilesSupport(t[a],i)},function(){return n(a+1)})};n(0)}},e.prototype._getExportTilesMapServiceInfo=function(e){var t=r.getServiceTokenForMapService(this.app,e);return esri.request({callbackParamName:"callback",content:t?{f:"json",token:t}:{f:"json"},handleAs:"json",url:e}).then(function(e){if(!e.currentVersion||!e.tileInfo)throw new Error("Not a map service.");if(e.currentVersion<10.2)throw new Error("Version not supported.");if(!e.exportTilesAllowed)throw new Error("Export tiles not supported.");return e})},e.prototype._enableExportTilesSupport=function(e,t){var i=t.tileInfo;this._exportTilesMapServiceUri=e,this.exportTilesMapServiceMinLevel.set(i.lods[0].level),this.exportTilesMapServiceMaxLevel.set(i.lods[i.lods.length-1].level),this.supportsExportTiles.set(this._hasTiledMapService)},e.prototype._setStaticTpkByUrl=function(e){var t,i=this.staticTpks.length();for(t=0;t<i&&this.staticTpks.getAt(t).url!==e;t++);t===i&&(t=0),this.staticTpk.set(this.staticTpks.getAt(t))},e.prototype._calculateSize=function(){var t=this;this._calculateSizeHandle&&clearTimeout(this._calculateSizeHandle),this.errorExportTilesMessage.set(null);var i=e.sizeUnknown,n=++this._calculateSizeGen;this.isExportTiles.get()?(i=e.sizeCalculating,this._calculateSizeHandle=setTimeout(function(){if(n===t._calculateSizeGen){var i=t.geometry.get();if(i){var a=t.exportTilesMinLevel.get(),o=t.exportTilesMaxLevel.get(),l=a!==o?a+"-"+o:""+a,p=r.getServiceTokenForMapService(t.app,t._exportTilesMapServiceUri);s.estimateExportTilesSize(t._exportTilesMapServiceUri,{tilePackage:!0,optimizeTilesForSize:!0,compressionQuality:90,exportBy:"levelId",levels:l,areaOfInterest:JSON.stringify({features:[{geometry:i.toJson()}]}),token:p}).then(function(i){n===t._calculateSizeGen&&(i&&"number"==typeof i.totalSize?t.size.set(i.totalSize):(t.app.trace.error('ExportTilesUtils.estimateExportTilesSize returned unexpected result. "'+JSON.stringify(i)+'"'),t.size.set(e.sizeUnknown)))},function(i){if(n===t._calculateSizeGen){var a=i&&i.message?i.message:i;t.errorExportTilesMessage.set(a),t.app.trace.error("Error fetching TPK size: "+a),t.size.set(e.sizeInvalid)}})}else t.size.set(e.sizeUnknown)}},2e3)):this.isStatic.get()&&this.staticTpk.get()&&(i=this.staticTpk.get().size),this.size.set(i)},e.prototype._calculateFileName=function(){var e=null;if(this.isStatic.get()){var t=this.staticTpk.get();e=t?t.filename:null}else if(this.isExportTiles.get()){if(!this._exportFileName){var i=/([^\/]+)\/MapServer\/?/.exec(this._exportTilesMapServiceUri);this._exportFileName=encodeURIComponent(i?i[1]:this.source.id)+"-"+o.alphaNumericToken(12)+".tpk"}e=this._exportFileName}this.filename.set(e)},e.prototype._calculateIsValid=function(){var e=!1;this.isNone.get()?e=!0:this.isStatic.get()?e=!0:this.isExportTiles.get()&&(e=this.size.get()>=0),this.isValid.set(e)},e.prototype._formatBytes=function(e){if(-3===e)return this.app.getResource(this.libraryId,"language-offlinemapeditor-basemaps-size-invalid");if(-2===e)return this.app.getResource(this.libraryId,"language-offlinemapeditor-basemaps-size-calculating");if(-1===e)return this.app.getResource(this.libraryId,"language-offlinemapeditor-basemaps-size-unknown");if(0===e)return"0";var t;for(t=0;e>1e3;t++)e/=1e3;return e.toFixed(t>0?2:0)+" "+["B","KB","MB","GB","TB","PB"][t]},e.prototype._sanitizeRefreshInterval=function(e){var t=parseInt(e);return isNaN(t)&&(t=0),t<0&&(t=0),t},e.prototype.getResource=function(e){return this.app.getResource(this.libraryId,e)},e}();l.sizeUnknown=-1,l.sizeCalculating=-2,l.sizeInvalid=-3,t.OfflineMapEditorBasemap=l})},"Mapping/modules/OfflineMaps/Editor/OfflineMapEditorView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","./../OfflineMapsModule"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n.app.command("ShowOfflineMapEditor").register(n,n._onShowOfflineMapEditor),n.app.event("ViewContainerViewClosedEvent").subscribe(n,n._onViewContainerViewClosedEvent),n}return e(i,t),i.prototype._onShowOfflineMapEditor=function(e){this._setTitle(!!e.existingOfflineMap),this.viewModel.startEditing(e),this.app.command("ActivateView").execute(this.id)},i.prototype.activated=function(){t.prototype.activated.call(this),this.viewModel.calculateIsValid()},i.prototype.handleCancelClick=function(e,t,i){this.viewModel.finishEditing(!0),this.app.command("DeactivateView").execute(this.id)},i.prototype.handleDoneClick=function(e,t,i){var n=this;this.isBusy.set(!0),this.viewModel.finishEditing().then(function(){n.isBusy.set(!1),n.app.command("DeactivateView").execute(n.id)})},i.prototype.handleLayersClick=function(e,t,i){a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.showLayersEditor)},i.prototype.handleGeometryClick=function(e,t,i){a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.showGeometryEditor)},i.prototype.handleBasemapsClick=function(e,t,i){a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.showBasemapsEditor)},i.prototype.handleSharingClick=function(e,t,i){a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.showSharingEditor)},i.prototype._setTitle=function(e){if(this.configuration.title){var t=e?this.configuration.title.forExisting:this.configuration.title.forNew;t&&(t.startsWith("@")&&(this.configuration.title.libraryId,t=this.app.getResource(this.configuration.title.libraryId?this.configuration.title.libraryId:this.libraryId,t)),this.title.set(t))}},i.prototype._onViewContainerViewClosedEvent=function(e){e.viewId===this.id&&this.viewModel.finishEditing(!0)},i}(n.ViewBase);i.OfflineMapEditorView=s})},"Mapping/modules/OfflineMaps/Editor/OfflineMapEditorViewConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Editor/OfflineMapEditorViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/events/Event","geocortex/infrastructure/offline/OfflineMap","geocortex/framework/observables","./MapState","./Layers/LayerSelectorViewModel","./OfflineMapEditorBasemap","geocortex/infrastructure/documents/GrantEditorViewModel","geocortex/essentials/GeometryUtilities","geocortex/infrastructure/gis/AppInfo","./../OfflineMapsModule","geocortex/essentials/ReportParameters","geocortex/essentials/documents/DocumentConstants"],function(t,i,n,a,s,o,r,l,p,f,c,u,d,h,g){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var m=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n.savingEvent=new a.Event("OfflineMapEditorViewModelSaving"),n.isEditing=new o.Observable(!1),n.loadError=new o.Observable(null),n.canChange=new o.Observable(!1),n.name=new o.Observable(""),n.thumbnail=new o.Observable(""),n.basemaps=new o.ObservableCollection([]),n.geometry=new o.Observable(null),n.includeAttachments=new o.Observable(!0),n.layersChanged=new o.Observable(!1),n.geometryChanged=new o.Observable(!1),n.basemapsChanged=new o.Observable(!1),n.layersText=new o.Observable(""),n.basemapsText=new o.Observable(""),n.hasBasemaps=new o.Observable(!1),n.hasSharing=new o.Observable(!1),n.isLayersValid=new o.Observable(!1),n.isGeometryValid=new o.Observable(!1),n.isBasemapsValid=new o.Observable(!1),n.isBasemapsCalculating=new o.Observable(!1),n.isValid=new o.Observable(!1),n.layerSelectorViewModel=new l.LayerSelectorViewModel(e,i),n.layerSelectorViewModel.onEnabledItemsChanged=function(){return n.layersChanged.set(!0)},n.layerSelectorViewModel.onAllLayersEnabled=function(){return n.includeAttachments.set(!0)},n.layerSelectorViewModel.onAllLayersDisabled=function(){return n.includeAttachments.set(!1)},n.layerSelectorViewModel.initialize({}),n.layerSelectorViewModel.geometry.sync(n.geometry),n.grantEditorViewModel=new f.GrantEditorViewModel(e,"Mapping.Infrastructure"),n.grantEditorViewModel.enabled.sync(n.canChange),n.name.bind(n,n.calculateIsValid),n.geometry.bind(n,function(){return n.geometryChanged.set(!0)}),n.app.command("SetOfflineMapEditorGeometry").register(n,function(e){e&&"extent"===e.type&&(e=c.envelopeToPolygon(e)),e&&"polygon"!==e.type?n.app.trace.error("SetOfflineMapEditorGeometry does not support geometry type '"+e.type+"'."):n.geometry.set(e)}),n}return e(i,t),i.prototype.initialize=function(e){this.config=e,t.prototype.initialize.call(this,e),e.tools&&this.app.toolRegistry&&this.app.toolRegistry.createTools(e.tools,!0),e.menus&&this.app.menuRegistry&&this.app.menuRegistry.loadMenus({menus:e.menus})},i.prototype.startEditing=function(e){if(!this.app.site.isInitialized)throw new Error("Can't start editing before the site is initialized.");this.isEditing.get()&&this.finishEditing(!0),this.basemaps.isEmpty()&&this.app.site.essentialsMap.baseMaps.length>0&&this._initBasemaps(),this.isEditing.set(!0),this.loadError.set(null),this.initialMapState=new r.MapState(u.AppInfo.fromGeocortexApp(this.app)),this.existingOfflineMap=e.existingOfflineMap,e.existingOfflineMap&&this._loadExistingOfflineMapDoc(e.existingOfflineMap)||this._reset(),d.OfflineMapsModule._execCommandsFromConfig(this.app,this.config.onEditingStarted)},i.prototype._initBasemaps=function(){var e=this,t=this.app.site.essentialsMap.baseMaps.map(function(t){var i=new p.OfflineMapEditorBasemap(e.app,e.libraryId,t);return i.geometry.sync(e.geometry),i.isValid.bind(e,e.calculateIsValid),i.type.bind(e,function(){return e.basemapsChanged.set(!0)}),i});this.basemaps.set(t),this.app.site.getOfflineBasemaps(function(e){t.forEach(function(t){return t.staticTpks.set(e)})},function(t){e.app.trace.error("Unable to fetch offline basemaps: "+t)})},i.prototype._loadExistingOfflineMapDoc=function(e){var t=this;try{return this.name.set(e.title),this.thumbnail.set(e.thumbnail?e.thumbnail.location:null),this.geometry.set(new esri.geometry.Polygon(e.content.geometry)),this.includeAttachments.set(e.content.includeAttachments),this.canChange.set(e.access.change),this.app.map.setExtent(this.geometry.get().getExtent()),this.layerSelectorViewModel.getAllItems().filter(function(e){return!e.isFolder}).forEach(function(i){var n=e.content.layers.filter(function(e){return t.layerSelectorViewModel.filter(i)&&e.layerInfoUniqueId===i.layer.uniqueId});if(n.length>0){var a=n[0];i.definitionExpression.set(a?a.definitionExpression:null),i.isEnabled.set(!0)}else i.definitionExpression.set(null),i.isEnabled.set(!1)}),this.layerSelectorViewModel.setVisibleLayersFromSelectedItems(),this.basemaps.get().forEach(function(t){var i=e.content.basemaps.filter(function(e){return e.baseMapId===t.source.id});i.length>0?t.load(i[0]):t.reset()}),this.grantEditorViewModel.loadById(e.id),this.layersChanged.set(!0),this.geometryChanged.set(!0),this.basemapsChanged.set(!0),!0}catch(e){return this.app.trace.error("Unable to load existing offline map.  "+(e.message||e)),this.loadError.set(this.getResource("language-offlinemapeditor-error-load").format(e.message||e)),!1}},i.prototype._reset=function(){this.canChange.set(!0),this.name.set(""),this.thumbnail.set(""),this.geometry.set(esri.geometry.Polygon.fromExtent(this.app.map.extent)),this.includeAttachments.set(!0),this.layerSelectorViewModel.setSelectedItemsFromVisibleLayers(),this.layerSelectorViewModel.getAllItems().filter(function(e){return!e.isFolder}).forEach(function(e){e.layer&&e.definitionExpression.set(e.layer.getDefinitionExpression())}),this.basemaps.get().forEach(function(e){e.reset()}),this.grantEditorViewModel.reset(),this.layersChanged.set(!1),this.geometryChanged.set(!1),this.basemapsChanged.set(!1)},i.prototype.finishEditing=function(e){var t=this;if(void 0===e&&(e=!1),!this.isEditing.get())throw this.app.trace.error("OfflineMapEditorViewModel.finishEditing called when not editing."),new Error("Not editing.");this.savingEvent.publish();var i={existingOfflineMap:this.existingOfflineMap,newOfflineMap:null,canceled:e},n=Promise.resolve();return e||(i.newOfflineMap={content:{layers:this.layerSelectorViewModel.getAllItems().filter(function(e){return e.layer&&e.isEnabled.get()}).map(function(e){var t=e,i={layerInfoUniqueId:t.layer.uniqueId,definitionExpression:t.definitionExpression.get()};return t.layer.gcxLayer&&t.layer.gcxLayer.isUserCreated&&(i.isUserCreated=t.layer.gcxLayer.isUserCreated,i.layerJson=t.layer.gcxLayer.toJson(),i.serviceInfo={url:t.layer.serviceLayerInfo.serviceLayer.url,capabilities:t.layer.serviceLayerInfo.capabilities}),i}),geometry:this.geometry.get()?this.geometry.get().toJson():null,basemaps:this.basemaps.get().filter(function(e){return e.type.get()===s.OfflineMapBasemap.Type.PREGENERATED||e.type.get()===s.OfflineMapBasemap.Type.EXPORT_TILES}).map(function(e){return e.save()}),includeAttachments:this.includeAttachments.get()},title:this.name.get(),thumbnail:{location:this.thumbnail.get()},properties:{siteId:{string:this.app.site.id},viewerId:{string:(this.app.configModel.viewerId||"null").toLowerCase()}},grants:this.grantEditorViewModel.grants},i.newOfflineMap.thumbnail&&this.existingOfflineMap&&JSON.stringify(this.existingOfflineMap.content.layers)===JSON.stringify(i.newOfflineMap.content.layers)&&JSON.stringify(this.existingOfflineMap.content.geometry)===JSON.stringify(i.newOfflineMap.content.geometry)||(n=this._getThumbnailUri().then(function(e){e&&(i.newOfflineMap.thumbnail.location=e)}))),this.initialMapState.restore(),this.isEditing.set(!1),this.initialMapState=null,this.existingOfflineMap=null,n.then(function(){d.OfflineMapsModule._execCommandsFromConfig(t.app,t.config.onEditingFinished),t.app.event("OfflineMapEditorFinishedEvent").publish(i)})},i.prototype._getThumbnailUri=function(){var e=this,t=new h.ReportParameters;return t.outputFormat="PNG",t.includeData=!0,t.imageWidth=this.config.thumbnail&&this.config.thumbnail.width||150,t.imageHeight=this.config.thumbnail&&this.config.thumbnail.height||150,t.resolution={displayName:"custom",dpi:this.config.thumbnail&&this.config.thumbnail.dpi||20},t.customExtent=this.geometry.get().getExtent(),t.extentType=h.ReportParameters.CUSTOM_EXTENT,t.populateMapGraphicsLayers(this.app.map),new Promise(function(i,n){e.app.site.essentialsMap.exportMap(t,function(e){i(e.data?"data:image/png;base64,"+e.data:e.href?e.href:null)},function(t){e.app.trace.error("Error exporting map for thumbnail: "+t.message),i(null)})})},i.prototype.calculateIsValid=function(){var e=this.layerSelectorViewModel.getAllItems().filter(function(e){return e.layer&&e.isEnabled.get()}).length,t=e>0;this.isLayersValid.set(t),this.layersText.set(this.getResource("language-offlinemapeditor-layers-text").format(e));var i=!!this.geometry.get();this.isGeometryValid.set(i);var n=this.basemaps.get().every(function(e){return e.isValid.get()});this.isBasemapsValid.set(n),this.isBasemapsCalculating.set(this.basemaps.get().some(function(e){return e.size.get()===p.OfflineMapEditorBasemap.sizeCalculating}));var a=this.basemaps.get().filter(function(e){return!e.isNone.get()}).length;this.hasBasemaps.set(a>0),this.basemapsText.set(this.getResource("language-offlinemapeditor-basemaps-text").format(a));var s=g.GrantKind.READER,o=g.GrantKind.WRITER,r=this.grantEditorViewModel.monikers.get().filter(function(e){return e.grants.filter(function(e){return e.assert&&!e.revoke&&(e.kind===s||e.kind===o)}).length>0}).length;this.hasSharing.set(r>0);var l=t&&i&&n&&!!this.name.get();this.isValid.set(l)},i}(n.ViewModelBase);i.OfflineMapEditorViewModel=m})},"Mapping/modules/OfflineMaps/Editor/OfflineMapEditorViewModelConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Sync/SyncStatusView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","./../Widgets/ProgressBarWidgetViewModel"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n.app=e,n._switchedToOnline=!1,n.app.command("StartOfflineFeatureSync").register(n,n._startOfflineFeatureSync),n.app.command("StartOfflineSyncAndShowProgress").register(n,n._startOfflineSyncAndShowProgress),n.app.command("StartOfflineDownloadAndShowProgress").register(n,n._startOfflineDownloadAndShowProgress),n}return e(i,t),i.prototype.attach=function(e){t.prototype.attach.call(this,e)},i.prototype.activated=function(){t.prototype.activated.call(this)},i.prototype.resolveWidget=function(e,i,n){if(t.prototype.resolveWidget.call(this,e,i,n),"syncProgressBar"===e){var s=this.app.viewManager.createView({typeName:"geocortex.essentialsHtmlViewer.mapping.modules.offlineMaps.widgets.ProgressBarWidget",markupResource:"Mapping/modules/OfflineMaps/Widgets/ProgressBarWidget.html"});return s.app=this.app,s.libraryId=this.libraryId,this.progressBarViewModel=new a.ProgressBarWidgetViewModel(this.app,this.libraryId),s.attach(this.progressBarViewModel),s}},i.prototype.deactivated=function(){t.prototype.deactivated.call(this),this.viewModel.reset(),this.progressBarViewModel.widthStyle.set("0%"),this._switchedToOnline&&this.app.isOffline.set(!0)},i.prototype._startOfflineFeatureSync=function(e){var t=this;if(!this.app.offlineManager.currentOperation){this.viewModel.reset();var i=Promise.resolve(),n=!1;e.offlineMaps.forEach(function(a,s){var o=t.app.offlineManager.getOfflineMapById(a.id);t._setup(o),t.viewModel.updateProgressText(a,t.getResource("language-offline-maps-sync-waiting"),!0),i=i.finally(function(){t.viewModel.updateProgressText(a,t.getResource("language-offline-maps-sync-syncing"),!0);var i=s===e.offlineMaps.length-1;return t.app.offlineManager.syncOfflineMap(a,function(i){var n=i.percentage/e.offlineMaps.length+s/e.offlineMaps.length*100;t.progressBarViewModel.widthStyle.set(n+"%"),setTimeout(function(){t.viewModel.overallPercentage.set(Math.round(10*n)/10),t.viewModel.statusText.set(i.message),i.isWarning&&t.viewModel.warnings.addItem(i.message)},500)},{basemapDownloads:!1,featureDataSync:!0,refreshMap:i,updateBundle:!1})}).then(function(){setTimeout(function(){t.viewModel.updateProgressText(a,t.getResource("language-offline-maps-sync-done"),!0)},500)}).catch(function(e){n=!0,setTimeout(function(){var i=e.message||e;t.viewModel.updateProgressText(a,i,!1)},500)})}),i.finally(function(){setTimeout(function(){t._closeConditionally(n),t.viewModel.showProgress.set(!1),t.viewModel.showCancel.set(!1),t.viewModel.showClose.set(!0),t.viewModel.isResuming.set(!1),n&&(t.viewModel.showClose.set(!1),t.viewModel.partialDataText.set(t.getResource("language-offline-maps-delete-partial-data-text")))},500)})}},i.prototype._startOfflineSyncAndShowProgress=function(e){var t=this;if(!this.app.offlineManager.currentOperation){var i=this.app.offlineManager.getOfflineMapById(e.offlineMap.id);this.viewModel.reset(),this._setup(i),this.app.offlineManager.syncOfflineMap(e.offlineMap,function(e){t.progressBarViewModel.widthStyle.set(e.percentage+"%"),setTimeout(function(){t.viewModel.overallPercentage.set(Math.round(10*e.percentage)/10),t.viewModel.statusText.set(e.message),e.isWarning&&t.viewModel.warnings.addItem(e.message)},500)}).then(function(){setTimeout(function(){t.viewModel.updateProgressText(e.offlineMap,t.getResource("language-offline-maps-sync-done"),!0),t._closeConditionally()},500)}).catch(function(i){setTimeout(function(){var n=i.message||i;t.viewModel.updateProgressText(e.offlineMap,n,!1),t.viewModel.partialDataText.set(t.getResource("language-offline-maps-delete-partial-data-text"))},500)}).finally(function(){setTimeout(function(){t.viewModel.showProgress.set(!1),t.viewModel.showCancel.set(!1),null==t.viewModel.partialDataText.get()&&t.viewModel.showClose.set(!0),t.viewModel.isResuming.set(!1)},500)})}},i.prototype._startOfflineDownloadAndShowProgress=function(e){var t=this;this.viewModel.reset(),this._setup(e.offlineMap),this.app.offlineManager.addOfflineMap(e.offlineMap,function(e){t.progressBarViewModel.widthStyle.set(e.percentage+"%"),setTimeout(function(){t.viewModel.overallPercentage.set(Math.round(10*e.percentage)/10),t.viewModel.statusText.set(e.message),e.isWarning&&t.viewModel.warnings.addItem(e.message)},500)}).then(function(){t.app.offlineManager.activateOfflineMap(e.offlineMap,!0)}).then(function(){setTimeout(function(){t.viewModel.updateProgressText(e.offlineMap,t.getResource("language-offline-maps-sync-done"),!0),t._closeConditionally()},500)}).catch(function(i){setTimeout(function(){var n=i.message||i;t.viewModel.updateProgressText(e.offlineMap,n,!1),t.viewModel.partialDataText.set(t.getResource("language-offline-maps-delete-partial-data-text"))},500)}).finally(function(){setTimeout(function(){t.viewModel.showProgress.set(!1),t.viewModel.showCancel.set(!1),null==t.viewModel.partialDataText.get()&&t.viewModel.showClose.set(!0),t.viewModel.isResuming.set(!1)},500)})},i.prototype._closeConditionally=function(e){var t=this;void 0===e&&(e=!1),this.viewModel.closeWhenDone.get()&&0===this.viewModel.warnings.get().length&&!e&&setTimeout(function(){t._close()},100)},i.prototype._close=function(){this.app.viewManager.deactivateView(this)},i.prototype._open=function(){this.app.viewManager.getViewById(this.id).isActive||this.app.command("ActivateView").execute(this.id)},i.prototype._setup=function(e){this.app.isOffline.get()?(this.app.isOffline.set(!1),this._switchedToOnline=!0):this._switchedToOnline=!1,this.viewModel.setup(e);var t=this.app.offlineManager.getOfflineMapWithStateById(e.id);this.viewModel.isResuming.set(!!t&&t.state.hasProgress),this._open()},i.prototype.handleCancelClick=function(e,t,i){var n=this;this.viewModel.cancellingText.set(this.getResource("language-offline-maps-sync-cancelling")),this.viewModel.showProgress.set(!1),this.viewModel.isCancelling=!0,this.app.offlineManager.cancel().finally(function(){n.viewModel.isCancelling&&n._close()}),setTimeout(function(){n.viewModel.isCancelling&&(n.viewModel.showCancel.set(!1),n.viewModel.showClose.set(!0))},1e4)},i.prototype.handleCloseClick=function(e,t,i){this.viewModel.isCancelling&&(this.app.offlineManager.forgetLast(),this.app.offlineManager.removeOfflineMap(this.viewModel.offlineMap)),this._close()},i.prototype.handleDeleteData=function(e,t,i){var n=this,a=this.viewModel.progressModels.getItems().filter(function(e){return!e.success}),s=[];Promise.each(a,function(e){var t=n.app.offlineManager.getOfflineMapWithStateById(e.context.id);t.state.hasProgress=!1;var i=!t.state.isDownloaded;return n.app.offlineManager.removeOfflineMapPartialData(e.context,i).then(function(){if(i)return n.app.offlineManager.removeOfflineMap(e.context)}).catch(function(e){s.push(e.message||e.toString())})}).finally(function(){s.length>0&&n.app.command("Alert").execute(s.join("\n")),n._close()})},i.prototype.handleToggleDetailsClick=function(e,t,i){this.viewModel.showStatusText.set(!this.viewModel.showStatusText.get())},i}(n.ViewBase);i.SyncStatusView=s})},"Mapping/modules/OfflineMaps/Sync/SyncStatusViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n.app=e,n._bindings=new Array,n.name=new a.Observable,n.overallPercentage=new a.Observable,n.cancellingText=new a.Observable,n.progressModels=new a.ObservableCollection,n.statusText=new a.Observable,n.closeWhenDone=new a.Observable(!1),n.warnings=new a.ObservableCollection,n.partialDataText=new a.Observable,n.showStatusText=new a.Observable(!1),n.hideStatusText=new a.Observable(!0),n.showProgress=new a.Observable(!0),n.showCancel=new a.Observable(!0),n.showClose=new a.Observable(!1),n.canCancel=new a.Observable(!1),n.isCancelling=!1,n.isResuming=new a.Observable(!1),n}return e(i,t),i.prototype.setup=function(e){this._bindings.push({token:this.showStatusText.bind(this,this.showStatusTextChanged),observable:this.showStatusText}),this._bindings.push({token:this.closeWhenDone.bind(this,this.closeWhenDoneChanged),observable:this.closeWhenDone}),this.canCancel.sync(this.app.offlineManager.canCancel);var t=localStorage.getItem("geocortex.offlineMaps.SyncStatusViewModel.showStatusText");"string"==typeof t&&this.showStatusText.set("true"===t);var i=localStorage.getItem("geocortex.offlineMaps.SyncStatusViewModel.closeWhenDone");"string"==typeof i&&this.closeWhenDone.set("true"===i),this.name.set(e.title),this.statusText.set(this.getResource("language-offline-maps-progress-pending")),this.offlineMap=e,this.showClose.set(!1),this.showCancel.set(!0)},i.prototype.reset=function(){this._bindings.forEach(function(e){return e.observable.unbind(e.token)}),this._bindings.length=0,this.overallPercentage.set(0),this.cancellingText.set(null),this.partialDataText.set(null),this.statusText.set(null),this.showProgress.set(!0),this.progressModels.clear(),this.warnings.clear(),this.isCancelling=!1},i.prototype.updateProgressText=function(e,t,i){var n=this.progressModels.getItems().filter(function(t){return t.context.id===e.id})[0];n||(n=new o,this.progressModels.addItem(n)),n.mapNameDisplay.set(String.format("{0}: ",e.title)),n.progressClass.set(i?"success":"error"),n.message.set(t),n.context=e,n.success=i},i.prototype.showStatusTextChanged=function(e){localStorage.setItem("geocortex.offlineMaps.SyncStatusViewModel.showStatusText",e+""),this.hideStatusText.set(!e)},i.prototype.closeWhenDoneChanged=function(e){localStorage.setItem("geocortex.offlineMaps.SyncStatusViewModel.closeWhenDone",e+"")},i}(n.ViewModelBase);i.SyncStatusViewModel=s;var o=function(){return function(){this.message=new a.Observable,this.progressClass=new a.Observable,this.mapNameDisplay=new a.Observable,this.success=!1}}();i.ProgressViewModel=o})},"Mapping/modules/OfflineMaps/Widgets/ProgressBarWidget":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var a=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return e(i,t),i}(n.ViewBase);i.ProgressBarWidget=a})},"Mapping/modules/OfflineMaps/Widgets/ProgressBarWidgetViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e.widthStyle=new a.Observable("0%"),e}return e(i,t),i}(n.ViewModelBase);i.ProgressBarWidgetViewModel=s})},"Mapping/modules/OfflineMaps/Editor/Basemap/OfflineMapEditorBasemapLevelsConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Editor/Basemap/OfflineMapEditorBasemapLevelsView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var a=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n._bindings=new Array,n._statusId="offlineBasemapDefineLevels",n.app.command("ShowOfflineMapEditorBasemapLevels").register(n,n._showOfflineMapEditorBasemapLevels),n}return e(i,t),i.prototype._showOfflineMapEditorBasemapLevels=function(e){this.viewModel.basemap.set(e.basemap),this.app.command("ActivateView").execute(this.id)},i.prototype.attach=function(e){var i=this;t.prototype.attach.call(this,e),this.viewModel.basemap.bind(this,function(){return i._initSliderAndMapBindings()})},i.prototype.deactivated=function(){t.prototype.deactivated.call(this);for(var e=0;e<this._bindings.length;e++){var i=this._bindings[e];i.observable&&i.token?i.observable.unbind(i.token):i.esriHandle&&i.esriHandle.remove()}this._bindings.length=0,this.app.command("RemoveNotification").execute(this._statusId),this.app.map._params.maxZoom=this._mapMaxZoom},i.prototype._initSliderAndMapBindings=function(){var e=this;this.viewModel;if($(this.slider).slider({range:!1,min:Math.max(this.viewModel.basemap.get().exportTilesMapServiceMinLevel.get(),this.app.map.getMinZoom()),max:Math.min(this.viewModel.basemap.get().exportTilesMapServiceMaxLevel.get(),this.app.map.getMaxZoom()),value:this.viewModel.basemap.get().exportTilesMaxLevel.get(),slide:function(t,i){e.viewModel.basemap.get().exportTilesMaxLevel.get()!==i.value&&e.viewModel.basemap.get().exportTilesMaxLevel.set(i.value)}}),this._bindings.push({observable:this.viewModel.basemap.get().exportTilesMaxLevel,token:this.viewModel.basemap.get().exportTilesMaxLevel.bind(this,function(t){$(e.slider).slider("value",t),e.app.map.getLevel()!==t&&e.app.map.setLevel(t)})}),this._bindings.push({esriHandle:this.app.map.on("extent-change",function(t){t.lod.level!==e.viewModel.basemap.get().exportTilesMaxLevel.get()&&e.viewModel.basemap.get().exportTilesMaxLevel.set(t.lod.level)})}),this.app.map.setZoom(this.viewModel.basemap.get().exportTilesMaxLevel.get()),"Handheld"!=this.app.shellName){var t={id:this._statusId,text:this.getResource("language-offlinemapeditor-basemaps-levels-mapinstructions"),closeButton:{callback:function(){e.app.command("DeactivateView").execute(e.id)}}};this.app.command("DisplayNotification").execute(t)}var i=this.app.map;this._mapMaxZoom=i._params.maxZoom,i._params.maxZoom=this.viewModel.basemap.get().exportTilesMapServiceMaxLevel.get()},i.prototype.handleDoneClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id)},i}(n.ViewBase);i.OfflineMapEditorBasemapLevelsView=a})},"Mapping/modules/OfflineMaps/Editor/Basemap/OfflineMapEditorBasemapLevelsViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(e,i){var n=t.call(this,e,i)||this;return n.basemap=new a.Observable(null),n}return e(i,t),i}(n.ViewModelBase);i.OfflineMapEditorBasemapLevelsViewModel=s})},"Mapping/modules/OfflineMaps/Editor/Basemap/OfflineMapEditorBasemapsView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","./../../OfflineMapsModule"],function(t,i,n,a){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return e(i,t),i.prototype.handleTypeRadioClick=function(e,t,i){i.type.set(t.value)},i.prototype.handleEditLevelsClick=function(e,t,i){a.OfflineMapsModule._execCommandFromConfig(this.app,this.configuration.showBasemapsLevelEditorView,{basemap:i})},i.prototype.handleBackClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id)},i}(n.ViewBase);i.OfflineMapEditorBasemapsView=s})},"Mapping/modules/OfflineMaps/Editor/Geometry/OfflineMapEditorGeometryView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var a=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return e(i,t),i.prototype.attach=function(e){var i=this;t.prototype.attach.call(this,e),this.viewModel.isEditing.bind(this,function(e){i._getGraphicsLayer().setVisibility(e)}),this.viewModel.savingEvent.subscribe(this,function(){i._getGraphicsLayer().setVisibility(!1)}),this.viewModel.geometry.bind(this,function(e){var t=i._getGraphicsLayer();if(t.clear(),e){var n=new esri.Graphic;n.setGeometry(e),t.add(n)}})},i.prototype.activated=function(){t.prototype.activated.call(this),this._getGraphicsLayer().setOpacity(1)},i.prototype.deactivated=function(){t.prototype.deactivated.call(this),this._getGraphicsLayer().setOpacity(this.configuration.offViewOpacity),this.app.command("ClearActiveTool").execute()},i.prototype.resolveWidget=function(e,i,n){switch(t.prototype.resolveWidget.call(this,e,i,n),e){case"OfflineMapEditorGeometryActionsWidget":return this.app.menuRegistry.createMenuWidget(this,i,n)}},i.prototype.handleBackClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id)},i.prototype._getGraphicsLayer=function(){if(this._layer)return this._layer;if(this._layer=this.app.map.getLayer(this.configuration.geometryLayerId),!this._layer){this._layer=new esri.layers.GraphicsLayer,this._layer.id=this.configuration.geometryLayerId;var e=new esri.symbol.SimpleLineSymbol;e.color.setColor(new esri.Color(this.configuration.outlineColor)),e.setWidth(this.configuration.outlineWidth);var t=new esri.symbol.SimpleFillSymbol;t.setColor(new esri.Color(this.configuration.fillColor)),t.setOutline(e);var i=new esri.renderer.SimpleRenderer(t);this._layer.setRenderer(i),this._layer.setOpacity(this.configuration.offViewOpacity),this.app.map.addLayer(this._layer)}return this._layer},i}(n.ViewBase);i.OfflineMapEditorGeometryView=a})},"Mapping/modules/OfflineMaps/Editor/Geometry/OfflineMapEditorGeometryViewConfiguration":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Editor/Layers/LayerSelectorItem":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/OfflineMaps/Editor/Layers/LayerSelectorViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/infrastructure/layerselector/LayerSelectorViewModelBase","geocortex/framework/observables","geocortex/essentials/MapServiceConstants","geocortex/essentials/LayerType","geocortex/infrastructure/TaskUtils"],function(t,i,n,a,s,o,r){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var l=function(t){function i(){var e=null!==t&&t.apply(this,arguments)||this;return e.geometry=new a.Observable,e}return e(i,t),i.prototype.filter=function(e){if(e.layer){var t=e.layer;if(t.gcxLayer&&(!t.gcxLayer.isUserCreated||t.gcxLayer.catalogId&&t.serviceLayerInfo.gcxMapService.mapServiceType===s.MapServiceType.DYNAMIC&&t.gcxLayer.isDynamic))return t.serviceLayerInfo.gcxMapService?t.serviceLayerInfo.gcxMapService.mapServiceType===s.MapServiceType.DYNAMIC||t.serviceLayerInfo.gcxMapService.mapServiceType===s.MapServiceType.FEATURE:t.serviceLayerInfo.serviceType===s.MapServiceType.FEATURE&&t.gcxLayer.type===o.LayerType.FEATURE_LAYER}return!1},i.prototype.handleLayerStateChange=function(e){if(this.filter(e)&&e.layer){var t=e,i=this.filter(t)&&t.isEnabled.get();t.layer.setEsriLayerVisibility(i),this.onEnabledItemsChanged&&this.onEnabledItemsChanged()}},i.prototype.handleAllLayersEnabled=function(){this.setVisibleLayersFromSelectedItems(),this.onEnabledItemsChanged&&this.onEnabledItemsChanged(),this.onAllLayersEnabled&&this.onAllLayersEnabled()},i.prototype.handleAllLayersDisabled=function(){this.setVisibleLayersFromSelectedItems(),this.onEnabledItemsChanged&&this.onEnabledItemsChanged(),this.onAllLayersDisabled&&this.onAllLayersDisabled()},i.prototype.onLayerSelectorFolderItemCreated=function(e){this._addCustomLayerSelectorMembers(e)},i.prototype.onLayerSelectorLayerItemCreated=function(e){var t=this;e.isEnabled.set(!1),this._addCustomLayerSelectorMembers(e);var i=e;i.definitionExpression.bind(this,function(t){e.layer.setDefinitionExpression(t)}),i.isEnabled.bind(this,function(){return t._calculateNumFeaturesInLayer(i)}),i.definitionExpression.bind(this,function(){return t._calculateNumFeaturesInLayer(i)}),this.geometry.bind(this,function(){return t._calculateNumFeaturesInLayer(i)});var n=e.layer.serviceLayerInfo.capabilities;n&&n.indexOf("Sync")>=0?i.editableOrReadOnlyText.set(this.getResource("language-offlinemapeditor-layers-editable-offline")):i.editableOrReadOnlyText.set(this.getResource("language-offlinemapeditor-layers-readonly-offline"))},i.prototype.onLayerSelectorServiceLayerItemCreated=function(e){this._addCustomLayerSelectorMembers(e)},i.prototype._addCustomLayerSelectorMembers=function(e){var t=e;t.definitionExpression=new a.Observable(null),t.invalidDefinitionExpression=new a.Observable(!1),t.numFeatures=new a.Observable("0"),t.numFeaturesTitle=new a.Observable(""),t.editableOrReadOnlyText=new a.Observable("")},i.prototype._calculateNumFeaturesInLayer=function(e){var t=this;if(e.invalidDefinitionExpression.set(!1),!e.isEnabled.get()||!this.geometry.get()||e.layer.gcxLayer&&!e.layer.gcxLayer.supportsQuery)return e.numFeatures.set("0"),void e.numFeaturesTitle.set(this.getResource("language-offlinemapeditor-layers-numfeatures-title").format(0));e.numFeatures.set(this.getResource("language-offlinemapeditor-layers-numfeatures-calculating")),e.numFeaturesTitle.set(this.getResource("language-offlinemapeditor-layers-numfeatures-calculating-title"));var i=new esri.tasks.Query;i.where=e.definitionExpression.get(),i.geometry=this.geometry.get(),r.getQueryTask(e.layer.gcxLayer).executeForCount(i).then(function(i){e.numFeatures.set(i),e.numFeaturesTitle.set(t.getResource("language-offlinemapeditor-layers-numfeatures-title").format(i))},function(i){dojo.isArray(i.details)&&i.details.some(function(e){return"Invalid query"===e})&&e.invalidDefinitionExpression.set(!0);var n=i.message?i.message:i;t.app.trace.error("Error querying layer '"+e.layer.id+"': "+n),e.numFeatures.set(t.getResource("language-offlinemapeditor-layers-numfeatures-unknown")),e.numFeaturesTitle.set(t.getResource("language-offlinemapeditor-layers-numfeatures-unknown-title"))})},i.prototype.setVisibleLayersFromSelectedItems=function(){var e=this;this.getAllItems().forEach(function(t){if(t.layer){var i=t,n=e.filter(i)&&i.isEnabled.get();i.layer.setEsriLayerVisibility(n)}})},i.prototype.setSelectedItemsFromVisibleLayers=function(){var e=this;this.getAllItems().forEach(function(t){return t.isEnabled.set(e.filter(t)&&t.layer.isVisible()&&!!t.layer.gcxLayer&&(!t.layer.gcxLayer.isUserCreated||!!t.layer.gcxLayer.catalogId&&t.layer.serviceLayerInfo.gcxMapService.mapServiceType===s.MapServiceType.DYNAMIC&&t.layer.gcxLayer.isDynamic))})},i}(n.LayerSelectorViewModelBase);i.LayerSelectorViewModel=l})},"Mapping/modules/OfflineMaps/Editor/Layers/OfflineMapEditorLayersView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var a=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return e(i,t),i.prototype.activated=function(){this.viewModel.layerSelectorViewModel.layerSelectorInitialized.get()||this.viewModel.layerSelectorViewModel.setupLayerSelector()},i.prototype.selectAllLayers=function(e,t,i){this.viewModel.layerSelectorViewModel.layerSelector.enableAllLayers()},i.prototype.clearAllLayers=function(e,t,i){this.viewModel.layerSelectorViewModel.layerSelector.disableAllLayers()},i.prototype.handleExpanderClick=function(e,t,i){i.isExpanded.set(!i.isExpanded.get())},i.prototype.handleDefinitionExpressionClick=function(e,t,i){this.app.command("Prompt").execute(this.getResource("language-offlinemapeditor-layers-lde-title"),this.getResource("language-offlinemapeditor-layers-lde-description"),i.definitionExpression.get(),function(e){"string"==typeof e&&i.definitionExpression.set(e)})},i.prototype.handleBackClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id)},i}(n.ViewBase);i.OfflineMapEditorLayersView=a})},"Mapping/modules/OfflineMaps/Editor/Sharing/OfflineMapEditorSharingView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var a=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return e(i,t),i.prototype.resolveWidget=function(e,i,n){if(t.prototype.resolveWidget.call(this,e,i),!e)return null;switch(e){case"GrantEditorWidget":var a=this.app.viewManager.createView({typeName:"geocortex.essentialsHtmlViewer.mapping.infrastructure.documents.GrantEditorView",markupResource:"Mapping/infrastructure/documents/GrantEditorView.html",libraryId:"Mapping.Infrastructure",isVisible:!0});return a&&a.attach(this.viewModel.grantEditorViewModel),a;default:return null}},i.prototype.handleBackClick=function(e,t,i){this.app.command("DeactivateView").execute(this.id)},i}(n.ViewBase);i.OfflineMapEditorSharingView=a})}}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Offline/CSS/common.css","css","")}),require({cache:{}}),define(["Mapping/modules/Offline/OfflineModule"],function(t){e(t,"geocortex.essentialsHtmlViewer.mapping.modules.offline.OfflineModule",t.OfflineModule)})}();