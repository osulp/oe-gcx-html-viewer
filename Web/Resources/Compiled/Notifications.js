function shim(i,t,o){if("string"==typeof i&&(o=t,t=i),"undefined"==typeof o)return void console.warn("Undefined shim for: "+t);for(var e=t.split("."),n=null,a=window,s=0,c=e.length;s<c;s++)n=e[s],s==c-1?a[n]=o:a[n]||(a[n]={}),a=a[n]}require({cache:{"Mapping/modules/Notifications/NotificationsModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase","./NotificationViewModel"],function(i,t,o,e){"use strict";var n=function(i){function t(t,o){var e=i.call(this,t,o)||this;return e.viewInstanceCounter=0,e.totalViewInstancesAdded=0,e._defaultNotificationViewId="NotificationView",e._notificationViewIds=[],e.app.command("DisplayNotification").register(e,e.displayNotification),e.app.command("RemoveNotification").register(e,e.removeNotification),e}return __extends(t,i),t.prototype.displayNotification=function(i){"string"==typeof i&&(i={id:String.format("{0}{1}",this._defaultNotificationViewId,this.totalViewInstancesAdded),closeButton:{},text:i}),i.id||(i.id=String.format("{0}{1}",this._defaultNotificationViewId,this.totalViewInstancesAdded));var t=i.id,o=this.app.viewManager.getViewById(t),n=o?o.viewModel:null,a="undefined"==typeof o;if(a){if(this._notificationViewIds.length>0){var s=this._getTopNotificationView();s.viewModel.isTopNotification.set(!1)}var c=i.regionName||this.configuration.region||"TopMapRegion";o=this.createView("NotificationView",t,c),this._storeNotificationView(t)}n||(n=new e.NotificationViewModel(this.app,this.libraryId),o.attach(n)),n.notificationId=t;var r=a||this._isTopNotificationView(t);n.isTopNotification.set(r),n.setNotificationText(i.text),i.iconProperties&&(n.iconUri.set(i.iconProperties.uri),n.iconAltText.set(i.iconProperties.altText)),i.buttons&&(n.notificationButtons.clear(),n.notificationButtons.addItems(i.buttons)),i.closeButton&&(i.closeButton.text||(i.closeButton.text=this.getResource("language-common-close")),n.closeButton.set(i.closeButton))},t.prototype.removeNotification=function(i){var t,o=null;if(i&&(t=this._isTopNotificationView(i),o=this._removeNotificationView(i)),o&&(this.app.viewManager.destroyView(o),t&&this._notificationViewIds.length>0)){var e=this._getTopNotificationView();e.viewModel.isTopNotification.set(!0)}},t.prototype.createView=function(i,t,o){return this.app.viewManager.createView({viewId:t,typeName:"geocortex.essentialsHtmlViewer.mapping.modules.notifications."+i,markupResource:this.libraryId+"/modules/Notifications/"+i+".html",isVisible:!0,libraryId:this.libraryId,regionName:o})},t.prototype._storeNotificationView=function(i){this._notificationViewIds.push(i),this.viewInstanceCounter++,this.totalViewInstancesAdded++},t.prototype._removeNotificationView=function(i){for(var t=0;t<this._notificationViewIds.length;t++){var o=this._notificationViewIds[t];if(o===i)return this._notificationViewIds.splice(t,1),this.viewInstanceCounter--,this.app.viewManager.getViewById(i)}},t.prototype._isTopNotificationView=function(i){return this._notificationViewIds[this.viewInstanceCounter-1]===i},t.prototype._getTopNotificationView=function(){var i=this._notificationViewIds[this.viewInstanceCounter-1];return this.app.viewManager.getViewById(i)},t.prototype.initialize=function(t){i.prototype.initialize.call(this,t)},t}(o.ModuleBase);t.NotificationsModule=n})},"Mapping/modules/Notifications/NotificationView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(i,t,o){"use strict";var e=function(i){function t(t,o){return i.call(this,t,o)||this}return __extends(t,i),t.prototype.handleClickNotificationButton=function(i,t,o){o.callback()},t.prototype.handleClose=function(i,t,o){this.app.command("RemoveNotification").execute(this.viewModel.notificationId),o.callback&&o.callback()},t}(o.ViewBase);t.NotificationView=e})},"Mapping/modules/Notifications/NotificationViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(i,t,o,e){"use strict";var n=function(i){function t(){var t=null!==i&&i.apply(this,arguments)||this;return t.isTopNotification=new e.Observable,t.iconUri=new e.Observable,t.iconAltText=new e.Observable,t.notificationText=new e.Observable,t.truncatedNotificationText=new e.Observable,t.notificationButtons=new e.ObservableCollection,t.closeButton=new e.Observable,t.MAX_CHARS_NO_BUTTON=160,t.MAX_CHARS_BUTTON=125,t}return __extends(t,i),t.prototype.setNotificationText=function(i){this.notificationText.set(i);var t=this._getTruncatedNotificationText(i,this.notificationButtons.length()>0);this.truncatedNotificationText.set(t)},t.prototype._getTruncatedNotificationText=function(i,t){var o=t?this.MAX_CHARS_BUTTON-3:this.MAX_CHARS_NO_BUTTON-3;return i.length>o?String.format("{0}...",i.substr(0,o)):i},t}(o.ViewModelBase);t.NotificationViewModel=n})},"url:/Mapping/modules/Notifications/NotificationView.html":'<div class="gcx-notify" data-binding="{@visible: isTopNotification}">\r\n    <div class="gcx-notify-container">\r\n        <div class="gcx-icon notify-item" data-binding="{@visible: iconUri}">\r\n            <img data-binding="{src: iconUri}{alt: iconAltText}" aria-hidden="true" />\r\n        </div>\r\n        <div class="gcx-notify-content notify-item">\r\n            <span class="notify-text" data-binding="{@text: truncatedNotificationText}{title: notificationText}"></span>\r\n        </div>\r\n        <ul class="gcx-buttons-list notify-item" data-binding="{@source: notificationButtons}{@visible: notificationButtons}">\r\n            <li class="gcx-button-item" data-binding="{@template-for: notificationButtons}">\r\n                <button class="button" data-binding="{@text: text}{@event-onclick: handleClickNotificationButton}"></button>\r\n            </li>\r\n        </ul>\r\n        <div class="gcx-panel-close notify-item" data-binding="{@source: closeButton}">\r\n            <button class="icon-button close-16" data-binding="{@template-for: closeButton}{title: @language-common-close}{@event-onclick: handleClose}"></button>\r\n        </div>\r\n    </div>\r\n</div>'}}),define(["Mapping/modules/Notifications/NotificationView"],function(i){shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.notifications.NotificationView",i.NotificationView)});