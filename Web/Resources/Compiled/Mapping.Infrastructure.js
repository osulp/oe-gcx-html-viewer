/*

Copyright (c) 2016, Latitude Geographics Group Ltd.
All rights reserved.

Redistribution is not permitted.

Use in binary form, without modification, is permitted provided that neither
the name of the organization nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.

THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDER ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL LATITUDE GEOGRAPHICS GROUP LTD. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

dojo.require("esri.urlUtils");
dojo.require("esri.arcgis.utils");
dojo.require("esri.arcgis.Portal");
dojo.require("esri.layers.FeatureLayer");
dojo.require("esri.layers.wms");
dojo.require("esri.layers.wmts");
dojo.require("esri.layers.WebTiledLayer");
dojo.require("esri.virtualearth.VETiledLayer");
dojo.require("dojox.data.CsvStore");
dojo.require("dojo.aspect");
dojo.require("dojo.on");
dojo.require("dojox.gfx.matrix");
dojo.require("esri.toolbars.draw");
dojo.require("esri.toolbars.edit");
dojo.require("moment.moment");
moment = moment.moment;
var geocortex;
(function (d) {
	(function (d) {
		(function (d) {
			d.commandsMetadata = [{
					name : "ActivateView",
					metadata : {
						arguments : "string",
						description : "Activates a view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeactivateView",
					metadata : {
						arguments : "string",
						description : "Deactivates a view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleView",
					metadata : {
						arguments : "string",
						description : "Activates or deactivates a view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleLogView",
					metadata : {
						arguments : "none",
						description : "Activates or deactivates log view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowLog",
					metadata : {
						arguments : "boolean",
						description : "Shows the log view if the parameter is true.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideLog",
					metadata : {
						arguments : "none",
						description : "Hides the log view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleResultsFrame",
					metadata : {
						arguments : "none",
						description : "Activates or deactivates Results frame.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleDataFrame",
					metadata : {
						arguments : "none",
						description : "Activates or deactivates data frame.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DestroyView",
					metadata : {
						arguments : "string",
						description : "Destroys a view, wiping out its bindings and DOM substructure.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseModalRegion",
					metadata : {
						arguments : "none",
						description : "Closes the ModalWindowRegion.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenWebPage",
					metadata : {
						arguments : "string",
						description : "Opens a web page in another tab/window.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Alert",
					metadata : {
						arguments : "string",
						description : "Displays an alert.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Confirm",
					metadata : {
						arguments : "list",
						description : "Displays a confirm.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "Identify",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Executes an identify operation on a geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "IdentifyBufferedGeometry",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Activates the Buffer Options dialog, buffers input geometry using settings specified by the user, places temporary markup on the map and identifies using the buffered geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "IdentifyBufferedFeature",
					metadata : {
						arguments : "esri.Graphic|essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Activates the Buffer Options dialog, buffers input feature geometry using settings specified by the user, places temporary markup on the map and identifies using the buffered geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "IdentifyBufferedFeatureSet",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSet|essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection|string",
						description : "Activates the Buffer Options dialog, buffers input feature set geometry using settings specified by the user, places temporary markup on the map and identifies using the buffered geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "IdentifyBufferedFeatureSetCollection",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection|string",
						description : "Activates the Buffer Options dialog, buffers input feature set collection geometry using settings specified by the user, places temporary markup on the map and identifies using the buffered geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "Prompt",
					metadata : {
						arguments : "object",
						description : "Displays a prompt.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "StartOfflineSyncAndShowProgress",
					metadata : {
						arguments : "string",
						description : "Starts downloading or syncing an offline map an displays the progress to the user.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "StepZoomIn",
					metadata : {
						arguments : "none",
						description : "Zooms in a step.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "StepZoomOut",
					metadata : {
						arguments : "none",
						description : "Zooms out a step.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RecenterMapOnNextMapResize",
					metadata : {
						arguments : "none",
						description : "Recenters the map to its existing position the next time the map is resized.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "PanToPoint",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Pans to a point or other type of Geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "PanUp",
					metadata : {
						arguments : "none",
						description : "Pans the map up.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "PlotCoordinates",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.coordinates.CoordinateBase|essentialsHtmlViewer.mapping.infrastructure.coordinates.CoordinateBase[]",
						description : "Plots a coordinate (or a number of coordinates) on the map.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "PanDown",
					metadata : {
						arguments : "none",
						description : "Pans the map down.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "PanLeft",
					metadata : {
						arguments : "none",
						description : "Pans the map left.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "PanRight",
					metadata : {
						arguments : "none",
						description : "Pans the map right.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToExtent",
					metadata : {
						arguments : "esri.geometry.Extent",
						description : "Zooms to the given extent.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToScale",
					metadata : {
						arguments : "number",
						description : "Zooms to the given scale.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomOutToExtent",
					metadata : {
						arguments : "esri.geometry.Extent",
						description : "Zooms out to the given extent.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToLayerExtent",
					metadata : {
						arguments : "geocortex.essentials.Layer",
						description : "Zooms to the extent of all the features in a layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ZoomToLayerVisibleScale",
					metadata : {
						arguments : "geocortex.essentials.Layer",
						description : "Zooms to the scale at which features in a layer become visible.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "InitializeSite",
					metadata : {
						arguments : "none",
						description : "Tells the Geocortex Essentials Site object to begin initialization.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToInitialExtent",
					metadata : {
						arguments : "none",
						description : "Zooms to the initial extent of the current Site.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToPreviousExtent",
					metadata : {
						arguments : "none",
						description : "Zooms to the previous recorded map extent if any.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToNamedExtent",
					metadata : {
						arguments : "string",
						description : "Zooms to the bookmarked extent with the specified name.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToNextExtent",
					metadata : {
						arguments : "none",
						description : "Zooms to the next recorded map extent if any.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToOfflineMapExtent",
					metadata : {
						arguments : "none",
						description : "Zooms to the extent of the currently active offline map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToFullExtent",
					metadata : {
						arguments : "none",
						description : "Zooms to the full extent of the current Site.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "MapResize",
					metadata : {
						arguments : "none",
						description : "Tells the map control to resize itself. This should be called after altering the map container's dimensions.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "MaximizePanel",
					metadata : {
						arguments : "string",
						description : "Instructs the region hosting a view to maximize itself if it supports this action. As of v2.4, only the BottomPanelRegion and its sub regions support this action.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RestorePanel",
					metadata : {
						arguments : "string",
						description : "Instructs the region hosting a view to restore itself to default dimensions if it supports this action. As of v2.4, only the BottomPanelRegion and its sub regions support this action.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AddTemporaryMarkupGeometry",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Adds a temporary markup graphic to the map. The {@link Commands.ClearTemporaryMarkup} command will clear this piece of markup.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ClearTemporaryMarkup",
					metadata : {
						arguments : "none",
						description : "Removes temporary markup created by the command 'AddTemporaryMarkupGeometry'",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ZoomToFeature",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Zooms to a feature.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ZoomToFeatureIfOutsideMapExtent",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Zooms to a feature if the it's outside of the map's extent, otherwise nothing happens.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ZoomToFeatures",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSet",
						description : "Zooms to the extent of all the features in the feature set.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ZoomToAllFeatures",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature[]",
						description : "Zooms to the extent of all the features.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowMap",
					metadata : {
						arguments : "none",
						description : "Activates map view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowMapElement",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.ShowMapElementArgs",
						description : "Displays an element anchored to a specific point on the map.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowMapCallout",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.ShowMapElementArgs",
						description : "Displays a map callout anchored to a given point.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "HideMapElement",
					metadata : {
						arguments : "string",
						description : "Removes an element previously anchored to the map using {@link Commands.ShowMapElement}.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowMapTipResults",
					metadata : {
						arguments : "string",
						description : "Shows map tip results for a FeatureSetCollection previously added to the FeatureSetManager.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowMapTipResultsInCallout",
					metadata : {
						arguments : "string",
						description : "Shows map tip results for a FeatureSetCollection previously added to the FeatureSetManager, in a floating callout window on the map (the default behavior prior to version 2.4).",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenDataFrame",
					metadata : {
						arguments : "none",
						description : "Opens the DataRegion, if it is present in the current shell.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseDataFrame",
					metadata : {
						arguments : "none",
						description : "Closes the DataRegion, if it is present in the current shell.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenBottomRegion",
					metadata : {
						arguments : "none",
						description : "Opens the BottomPanelRegion, if it is present in the current shell.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseBottomRegion",
					metadata : {
						arguments : "none",
						description : "Closes the BottomPanelRegion, if it is present in the current shell.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RunWorkflowById",
					metadata : {
						arguments : "string",
						description : "Runs a workflow.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RunWorkflowWithGeometry",
					metadata : {
						arguments : "object",
						description : "Runs a workflow with a geometry used as an input argument.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "RunWorkflowWithArguments",
					metadata : {
						arguments : "object",
						description : "Runs a workflow with a set of input arguments.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisplayWorkflowContainerContent",
					metadata : {
						arguments : "object",
						description : "Displays a view in a workflow container.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ClearActiveTool",
					metadata : {
						arguments : "none",
						description : "Clears the active tool.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetActiveTool",
					metadata : {
						arguments : "string",
						description : "Sets the active tool.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Geolocate",
					metadata : {
						arguments : "object",
						description : "Zooms to the current location of the device when it becomes available.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GeolocateTrack",
					metadata : {
						arguments : "none",
						description : "Enables the tracking of the device's location when it is available, without panning the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GeolocateFollow",
					metadata : {
						arguments : "none",
						description : "Enables the following of the device's location when it is available, panning the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GeolocateStop",
					metadata : {
						arguments : "none",
						description : "Stops the tracking and following of the device's location.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GeolocateShowBuffer",
					metadata : {
						arguments : "none",
						description : "Display a circular buffer showing the accuracy of the latest GPS reading.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GeolocateHideBuffer",
					metadata : {
						arguments : "none",
						description : "Hide a circular buffer showing the accuracy of the latest GPS reading.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "TakeApplicationOffline",
					metadata : {
						arguments : "none",
						description : "Puts the application in an offline state.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "TapToDismiss",
					metadata : {
						arguments : "args: {view: framework.ui.ViewBase; onOtherInteracted?: (evt?: Event) => void ; onElementInteracted?: (evt?: Event) => void}",
						description : "Dismisses the specified view on the next tap anywhere on the screen. Optionally fires specified callbacks.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "TakeApplicationOnline",
					metadata : {
						arguments : "none",
						description : "Connects the application to the internet.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "SetGMAFOfflineButtonState",
					metadata : {
						arguments : "string",
						description : "Sets the visibility of the online/offline button in the GMAF app.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleConnectivity",
					metadata : {
						arguments : "none",
						description : "Toggles the connectivity of the app, from offline to online or viceversa",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RefreshOfflineMapsList",
					metadata : {
						arguments : "string",
						description : "Refresh the list of offline maps on the OfflineMapsList view.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "OpenFeatureSetCollection",
					metadata : {
						arguments : "string",
						description : "Opens the FeatureSetCollection.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenPortalMyContentWindow",
					metadata : {
						arguments : "none",
						description : "Opens a new browser window to the authenticated users ArcGIS Portal 'My Content' page.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseFeatureSetCollection",
					metadata : {
						arguments : "string",
						description : "Closes the FeatureSetCollection.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveFeatureSetCollection",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",
						description : "Removes the specified collection from the FeatureSetManager.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "RemoveFeatureSetCollectionById",
					metadata : {
						arguments : "string",
						description : "Removes the collection specified by ID from the FeatureSetManager.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Search",
					metadata : {
						arguments : "string",
						description : "Performs a search on all active providers.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "GlobalSearch",
					metadata : {
						arguments : "string",
						description : "Performs a search on all active providers.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "BufferGeometry",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.buffer.BufferGeometryArgs",
						description : "Buffers input geometry, adds buffer markup to the map, and fires the callback and event with the buffered geometry. When the source command is specified, buffers using current settings for the command.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "CancelEditCoordinate",
					metadata : {
						arguments : "none",
						description : "Cancels editing of a coordinate if currently active.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CancelSearch",
					metadata : {
						arguments : "none",
						description : "Cancel the search on all providers.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearSearch",
					metadata : {
						arguments : "none",
						description : "Clear the search results.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearSelection",
					metadata : {
						arguments : "none",
						description : "Clears the open identify results/selection.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowExportWebMapDialog",
					metadata : {
						arguments : "none",
						description : "Activates the export web map view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowFeatureDetails",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Creates and displays the Feature Details dialog for the Feature or FeatureSetCollection specified.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowFeatureDetailsCompact",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Creates and displays the Feature Details dialog for the {@link geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature} in Compact View mode. If the feature is not specified, details for the last feature will be displayed.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowFeatureDetailsExpanded",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Creates and displays the Feature Details dialog for the {@link geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature} in Expanded View mode. If the feature is not specified, details for the last feature will be displayed.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "SetFeatureDetailsMode",
					metadata : {
						arguments : "string",
						description : "Sets the feature details dialog to the specified view mode.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowFeatureParentDetails",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Shows the previously opened feature when browsing related features in the feature details view.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowFeatureAttributeEditor",
					metadata : {
						arguments : "none",
						description : "Shows the feature attribute editor used to set feature attributes.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideFeatureAttributeEditor",
					metadata : {
						arguments : "none",
						description : "Hides the feature attribute editor used to set feature attributes.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowFeatureTemplatePicker",
					metadata : {
						arguments : "layer",
						description : "Shows the feature template picker used to create new features. If a layer is supplied, shows the templates for the layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "HideFeatureTemplatePicker",
					metadata : {
						arguments : "none",
						description : "Hides the feature template picker used to create new features.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "FSMCollectionSetCommand",
					metadata : {
						arguments : "string, string",
						description : "Set the preferred command to open the FeatureSetCollection for the given source name.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "PanToAllFeatures",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature[]",
						description : "Pans to the extent of all the features.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "PanToFeature",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Pans to a Geocortex feature.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "PanToFeatureIfOutsideMapExtent",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Pans to a Geocortex feature if the feature is outside of the map's extent, otherwise nothing happens.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "Project",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs",
						description : "Calls a geometry service to project geometries between different coordinate systems.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "InvokeMapTip",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : 'Executes an Identify operation on the given geometry and sets "MapTip" as its source tag.',
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowMapTip",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Displays a feature in the map tip view.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowMapTipInCallout",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Displays a feature in a map tip callout anchored to the map.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "SuspendMapTips",
					metadata : {
						arguments : "none",
						description : "Suspends the display of map tips, allowing other components the opportunity to interact with the map without invoking map tips on click/tap events.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SwitchToLayerTheme",
					metadata : {
						arguments : "string",
						description : "Switches to the specified layer theme, identified by ID or display name.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ResumeMapTips",
					metadata : {
						arguments : "none",
						description : "Resumes the previously suspended display of map tips.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearStorageForApplication",
					metadata : {
						arguments : "none",
						description : "Clears the offline data for the current application.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearStorageForDomain",
					metadata : {
						arguments : "none",
						description : "Clears all offline data for the current domain. This includes data for all applications loaded from the current domain.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ListReports",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",
						description : "Presents a user interface for choosing to run a report from a list of reports that are available to the given reportable input (group of features).",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "RunFeatureReport",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Alias to 'ListReports' for backwards compatibility with the Silverlight viewer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RunFeaturesReport",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",
						description : "Alias to 'ListReports' for backwards compatibility with the Silverlight viewer.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "RunReport",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.RunReportArgs",
						description : "Runs a given report on the provided features, and displays the result (a download link to the report file) to the user.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "ShowResultsList",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",
						description : "Displays the list of features in the given FeatureSetCollection as a list.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "ShowResultsTable",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",
						description : "Displays the list of features in the given FeatureSetCollection in a tabular view.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "SwitchToListResultsView",
					metadata : {
						arguments : "none",
						description : "Switches from Results Table to Results List view if the Results Table view is currently active.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SwitchToTabularResultsView",
					metadata : {
						arguments : "none",
						description : "Switches from Results List to Results Table view if the Results List view is currently active.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenResultsFrame",
					metadata : {
						arguments : "none",
						description : "Activates the ResultsRegion.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseResultsFrame",
					metadata : {
						arguments : "none",
						description : "Deactivates the ResultsRegion.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowLayerList",
					metadata : {
						arguments : "none",
						description : "Displays the layer list.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SwitchToLayerView",
					metadata : {
						arguments : "none",
						description : "Displays the layer list.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SwitchToLegendView",
					metadata : {
						arguments : "none",
						description : "Displays the legend view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowLayerActions",
					metadata : {
						arguments : "geocortex.essentials.Layer",
						description : "Shows available actions for a given layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "PulseStatus",
					metadata : {
						arguments : "string",
						description : "Resets the timer of the status view model.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveStatus",
					metadata : {
						arguments : "string",
						description : "Removes the status indicator from the screen with the specified ID.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AddStatus",
					metadata : {
						arguments : "string",
						description : "Adds a status indicator to the screen.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CreateHighlightLayer",
					metadata : {
						arguments : "string",
						description : "Creates a new highlight layer with the specified name.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetActiveHighlightLayer",
					metadata : {
						arguments : "string",
						description : "Sets the layer with the specified name as active, if there is one.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetActiveHighlightLayerDefault",
					metadata : {
						arguments : "none",
						description : "Sets the default highlight layer as the active highlight layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HighlightEsriFeatureSet",
					metadata : {
						arguments : "esri.tasks.FeatureSet",
						description : "Highlights all of the features in the specified Esri feature set in the active highlight layer.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "SetHighlightBorderColor",
					metadata : {
						arguments : "string",
						description : "Sets the border color used for new highlights, specified in 6 or 8 digit hex in RGB or ARGB form.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetHighlightFillColor",
					metadata : {
						arguments : "string",
						description : "Sets the current highlight fill color to use, if the feature does not specify one.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveHighlightLayer",
					metadata : {
						arguments : "string",
						description : "Removes the highlight layer with the specified name, if there is one.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveUserAddedLayer",
					metadata : {
						arguments : "essentials.Layer",
						description : "Remove a user added layer (and its parent map service) off of the map and out of the viewer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ClearHighlights",
					metadata : {
						arguments : "none",
						description : "Removes the highlights from the active highlight layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearDefaultHighlights",
					metadata : {
						arguments : "none",
						description : "Removes the highlights from the default highlight layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HighlightFeatureSet",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.FeatureSet",
						description : "Highlights all of the features in the specified feature set in the active highlight layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "HighlightFeature",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Highlights the feature in the active highlight layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "HighlightFeatureDefault",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Highlights the feature in the default highlight layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddMarkup",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Adds the given geometry to the markup layer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddMarkupGeometry",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Adds the given geometry to the markup layer.  (Identical to the AddMarkup command.)",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddTextMarkup",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Prompts the user for text to add as markup. When completed, text markup is added at the provided geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ClearMarkup",
					metadata : {
						arguments : "none",
						description : "Prompts the user for confirmation, and if approved, clears all of the markup from the markup layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearMarkupQuiet",
					metadata : {
						arguments : "none",
						description : "Clears all of the markup from the markup layer without prompting for confirmation.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "MeasureDistance",
					metadata : {
						arguments : "esri.geometry.Polyline",
						description : "Computes the total and segment distance measurements for the specified Polyline geometry and plots it on the map along with its measurements. NOTE: An Esri or Geocortex feature may also be provided as arguments in lieu of a polyline geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "MeasureArea",
					metadata : {
						arguments : "esri.geometry.Polygon",
						description : "Computes the area, perimeter and individual segment distances for the specified Polylgon geometry and plots it on the map along with its measurements. NOTE: An Esri or Geocortex feature may also be provided as arguments in lieu of a polygon geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "DeleteMeasurement",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Deletes measurement markup within the given geometry",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "SetMeasurementUnits",
					metadata : {
						arguments : "string, string",
						description : "Sets the measurement units for the measurements performed by the measurement module. Also updates existing measurements already on the map.",
						isHyperlinkable : !1,
						visibility : "private"
					}
				}, {
					name : "ResizeShell",
					metadata : {
						arguments : "none",
						description : "Recalculate the size and layout of the shell and refresh the shell accordingly.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivateHomePanel",
					metadata : {
						arguments : "none",
						description : "Activates Home Panel if it is configured to be included.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivatePlotCoordinatesView",
					metadata : {
						arguments : "none",
						description : "Activates the Plot Coordinates view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowHomePanel",
					metadata : {
						arguments : "none",
						description : "Activates Home Panel if it is configured to be included.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AttachFileToFeature",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Checks for HTML5 FileReader / Cordova support and activates File Attachments if supported.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ToggleToolbar",
					metadata : {
						arguments : "none",
						description : "Toggles the visibility of the toolbar if present.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "OpenToolbar",
					metadata : {
						arguments : "none",
						description : "Opens the toolbar, if present.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CloseToolbar",
					metadata : {
						arguments : "none",
						description : "Closes the toolbar, if present.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "PrintMap",
					metadata : {
						arguments : "none",
						description : "Displays a dialog to create a printable map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowExportMapDialog",
					metadata : {
						arguments : "none",
						description : "Displays a dialog to save a map image.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowBookmarks",
					metadata : {
						arguments : "none",
						description : "Displays the Bookmarked Locations menu if the BookmarkViewModel's property, bookmarksEnabled, is set to true.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AddBookmark",
					metadata : {
						arguments : "string",
						description : "Bookmark the current extent with the given name.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowAddBookmark",
					metadata : {
						arguments : "none",
						description : "Prompts the user to bookmark the current extent by entering a name.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowCoordinateActions",
					metadata : {
						arguments : "string",
						description : "Shows the configured coordinate actions.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveBookmark",
					metadata : {
						arguments : "string",
						description : "Removes a bookmark with the given name if exists.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SelectBaseMap",
					metadata : {
						arguments : "string",
						description : "A map can have a number of basemaps associated with it. SelectBaseMap allows you to programmatically select one of the basemaps to display. All other basemaps are then faded out.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivateSelectLayersForIdentify",
					metadata : {
						arguments : "none",
						description : "Activates the Layer Selector for Identify and applies current settings.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeactivateSelectLayersForIdentify",
					metadata : {
						arguments : "none",
						description : "Deactivates the Layer Selector for Identify and enables all default identifiable layers.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivateBuffering",
					metadata : {
						arguments : "string|string[]",
						description : "Activates buffering for the specified command(s). Uses currently configured settings for the command.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivateBufferingAndDisplayOptions",
					metadata : {
						arguments : "string",
						description : "Activates buffering for the specified command and displays the associated Buffer Options dialog. ",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ActivateTransientElements",
					metadata : {
						arguments : "string",
						description : "Activates any transient elements configured against a specific ID in the toolbar module.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeactivateBuffering",
					metadata : {
						arguments : "string|string[]",
						description : "Deactivates buffering, if active, for the specified command(s).",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeactivateBufferingAndDismissOptions",
					metadata : {
						arguments : "string",
						description : "Deactivates buffering for the specified command and dismisses the associated Buffer Options dialog if its active. ",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeactivateTransientElements",
					metadata : {
						arguments : "string",
						description : "Deactivates any transient elements configured against a specific ID in the toolbar module.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeleteAllCoordinates",
					metadata : {
						arguments : "none",
						description : "Deletes all plotted Coordinates from the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DeleteCoordinates",
					metadata : {
						arguments : "string|string[]",
						description : "Deletes one or many plotted Coordinates from the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EditCoordinate",
					metadata : {
						arguments : "string|null",
						description : "Edits a plotted Coordinate on the map or creates a new coordinate in edit mode if no descriptor Id is provided.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EditMarkup",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Edits markup that intersects the extent of the provided geometry.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "DeleteMarkup",
					metadata : {
						arguments : "esri.geometry.Geometry",
						description : "Deletes markup within the given geometry",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "CreateMarkupStyleView",
					metadata : {
						arguments : "string",
						description : "Activates the style picker if 'point', 'polyline', 'polygon', or 'text' is the string provided. If it is null, then the app will try and detect what style selector to activate.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ChangeMarkupStyle",
					metadata : {
						arguments : "MarkupTemplate",
						description : "Takes a MarkupTemplate, PointTemplate, PolylineTemplate, PolygonTemplate, or TextTemplate. It will change the style of the markup to suit the template provided.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "StopEditingMarkup",
					metadata : {
						arguments : "boolean",
						description : "Stops editing. If arg is true, clears the active tool, if arg is false, doesn't clear active tool.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "StartEditingFeature",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Shows the editing form.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "EnableSearchRefinement",
					metadata : {
						arguments : "boolean",
						description : "Enables or disables the refinement of a global search from within search hints (if any).",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ExportResultsTo",
					metadata : {
						arguments : "{ format: string, fsc: geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection }",
						description : "Enables or disables the refinement of a global search from within search hints (if any).",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ExportMarkupLayer",
					metadata : {
						arguments : "none",
						description : "Exports markup layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ExportGraphicsLayer",
					metadata : {
						arguments : "{ args:  geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ExportGraphicsLayerArgs}",
						description : "Exports graphics layer.",
						isHyperlinkable : !1,
						visibility : "public"
					}
				}, {
					name : "HideAllCoordinates",
					metadata : {
						arguments : "none",
						description : "Hides all plotted Coordinates temporarily.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideCoordinates",
					metadata : {
						arguments : "string|string[]",
						description : "Hides one or many plotted Coordinates temporarily.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideCoordinateActions",
					metadata : {
						arguments : "none",
						description : "Hide any coordinate actions view that is currently open.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SignIn",
					metadata : {
						arguments : "string",
						description : "Navigates to the sign-in page. The sign in experience can be customized by crafting a custom sign-in URL, otherwise the default sign-in URL for the site will be used.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SignOut",
					metadata : {
						arguments : "string",
						description : "Navigates to the sign-out page, which will sign the current user out.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "LogOptimizerEvent",
					metadata : {
						arguments : "string, string",
						description : "Logs an event for Geocortex Optimizer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddPushpin",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Creates and displays a pushpin for the Feature specified.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddPushpins",
					metadata : {
						arguments : "string",
						description : "Creates and displays pushpins for the FeatureSetCollection specified.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemovePushpin",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.Feature",
						description : "Removes the pushpin from the map for the given feature, if there is one.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "RemovePushpins",
					metadata : {
						arguments : "none",
						description : "Removes all pushpins from the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnablePushpins",
					metadata : {
						arguments : "none",
						description : "Enables the display of pushpins/markers on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisablePushpins",
					metadata : {
						arguments : "none",
						description : "Disables the display of pushpins/markers on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowPushpins",
					metadata : {
						arguments : "none",
						description : "Displays pushpins by setting their visibility to true, for each result in the results list or results table.  Pushpins must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HidePushpins",
					metadata : {
						arguments : "none",
						description : "Prevents the display of pushpins by setting their visibility to false.  Pushpins must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetCollectionOfInterest",
					metadata : {
						arguments : "string",
						description : "Sets the FeatureSetCollection of interest that will be used to generate data for Charts.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowChartingView",
					metadata : {
						arguments : "none",
						description : "Activates the charting view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisplayBufferOptions",
					metadata : {
						arguments : "string",
						description : "Displays the Buffer Options dialog for the specified target command",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisplayChartById",
					metadata : {
						arguments : "string",
						description : "Opens the specified chart in the charting view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveChartById",
					metadata : {
						arguments : "string",
						description : "Removes the specified chart from the charting view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearCharts",
					metadata : {
						arguments : "none",
						description : "Removes all charts from the charting view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ClearFeatureInformation",
					metadata : {
						arguments : "none",
						description : "Used to 'reset' the information stored within RelatedFeatures (which features are currently open, etc.)",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisableMapClick",
					metadata : {
						arguments : "none",
						description : "Prevents the commands configured to execute on map click from executing and also prevents the MapClickedEvent from firing.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisableMapTips",
					metadata : {
						arguments : "none",
						description : "Disables the display of map tips on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnableAllLayersForIdentify",
					metadata : {
						arguments : "none",
						description : "Enables all identifiable layers such that they participate in Identify operations",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisableAllLayersForIdentify",
					metadata : {
						arguments : "none",
						description : "Disables all identifiable layers such that they do not participate in Identify operations",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnableLayerForIdentify",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.identify.LayerDescriptor",
						description : "Enables the specified layer, if it's identifiable, such that it participates in Identify operations.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisableLayerForIdentify",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.identify.LayerDescriptor",
						description : "Disables the specified layer, if it's in the list of identifiable layers, such that it does not participate in Identify operations.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnableMapClick",
					metadata : {
						arguments : "none",
						description : "Enables all configured commands to execute on map click and also wires up the MapClickEvent to fire when the map is clicked.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnableMapTips",
					metadata : {
						arguments : "none",
						description : "Enables the display of map tips on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideAllMapTips",
					metadata : {
						arguments : "none",
						description : "Prevents the display of map tips by setting their visibility to `false`.  Map tips must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "HideMapTips",
					metadata : {
						arguments : "none",
						description : "Prevents the display of map tips by setting their visibility to `false`, and suspends displaying map tips.  Map tips must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RestoreAllMapTips",
					metadata : {
						arguments : "none",
						description : "Displays previously hidden map tips by setting their visibility to `true`.  Map tips must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowAllCoordinates",
					metadata : {
						arguments : "none",
						description : "Shows all plotted coordinates (including temporarily hidden ones) on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowCoordinates",
					metadata : {
						arguments : "string|string[]",
						description : "Shows one or many plotted, hidden Coordinates on the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowMapTips",
					metadata : {
						arguments : "none",
						description : "Displays previously hidden map tips by setting their visibility to `true`, and resumes displaying map tips.  Map tips must be enabled for this command to work.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleMouseCoordinates",
					metadata : {
						arguments : "none",
						description : "Toggles the visibility of the mouse coordinates widget if present.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SetTimeExtent",
					metadata : {
						arguments : "esri.TimeExtent",
						description : "Sets the time extent for the map.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowShareView",
					metadata : {
						arguments : "none",
						description : "Activates the share view",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShareOn",
					metadata : {
						arguments : "string",
						description : "Shares the Viewer url on the specified platform",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ScreenReaderNarrate",
					metadata : {
						arguments : "string",
						description : "If a user has screenreader software enabled, then the provided string is immediately spoken to them.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisableScreenReaderNarrate",
					metadata : {
						arguments : "none",
						description : "Disables the 'ScreenReaderNarrate' command temporarily.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "EnableScreenReaderNarrate",
					metadata : {
						arguments : "none",
						description : "Enables screen reader narration if it was previously disabled using DisableScreenReaderNarrate.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "BroadcastCurrentViewpoint",
					metadata : {
						arguments : "string",
						description : "Broadcasts the viewers current viewpoint to the specified external component.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "UpdateStatus",
					metadata : {
						arguments : "string",
						description : "Updates the message shown on the status indicator.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "UploadData",
					metadata : {
						arguments : "none",
						description : "Prompt the user to upload layers onto the map straight from their own computer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowExternalComponentView",
					metadata : {
						arguments : "none",
						description : "Activates the external component view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisplayDockedExternalComponentById",
					metadata : {
						arguments : "string",
						description : "Opens the specified external component in the external components view. If this component is open in a seperate window, it will be closed.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "DisplayUndockedExternalComponentById",
					metadata : {
						arguments : "string",
						description : "Opens the specified external component in a seperate window from the viewer. If this component is open in the viewer, it will be closed.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveExternalComponentById",
					metadata : {
						arguments : "string",
						description : "Removes the specified external component from the viewer. If the component is in a seperate window, that window will be closed.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ToggleExternalComponentSyncById",
					metadata : {
						arguments : "string",
						description : "Toggle whether the specified external component is synchronized with the viewer.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ListenToExternalComponentFrame",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.integration.ComponentFrameInfo",
						description : "Wires up a PostMessage Transport and enables bi-directional communication with the component.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "CreateOrEditFeatureFromBarcodeScan",
					metadata : {
						arguments : "object",
						description : "Launch the barcode scanner, and use the result to create a new feature or edit an existing one.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "LaunchBarcodeScannerWithCallback",
					metadata : {
						arguments : "none",
						description : "Lauches a QR scan, then calls the provided callback with the result.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowMarkers",
					metadata : {
						arguments : "none",
						description : "Displays markers by setting their visibility to `true`.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "HideMarkers",
					metadata : {
						arguments : "none",
						description : "Prevents the display of markers by setting their visibility to `false`.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "AddMarker",
					metadata : {
						arguments : "string",
						description : "Creates and displays a marker on the map.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "RemoveMarker",
					metadata : {
						arguments : "string",
						description : "Removes the marker from the map.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "UpdateMarker",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.MarkerArgs",
						description : "Updates the marker with the given marker arguments.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ShowAccessibilityView",
					metadata : {
						arguments : "none",
						description : "Activates the accessibility view.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AddClusterLayer",
					metadata : {
						arguments : "string",
						description : "Adds a cluster layer to an existing Geocortex Layer that holds an Esri FeatureLayer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveClusterLayer",
					metadata : {
						arguments : "string",
						description : "Removes a cluster layer from an existing Geocortex Layer that holds an Esri FeatureLayer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "AddHeatMap",
					metadata : {
						arguments : "string",
						description : "Adds a heat map visualization to a given Geocortex layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Redo",
					metadata : {
						arguments : "none",
						description : "Reverses the last recorded undo operation or transaction.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveHeatMap",
					metadata : {
						arguments : "string",
						description : "Removes a heat map visualization from a Geocortex layer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RemoveVisualization",
					metadata : {
						arguments : "string",
						description : "Removes the visualization from a Geocortex layer, if one is enabled.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowVisualizationView",
					metadata : {
						arguments : "string",
						description : "Shows the visualization options view for a given Geocortex layer if the layer supports any visualizations.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "Undo",
					metadata : {
						arguments : "none",
						description : "Invokes the last recorded undo operation or transaction.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "CreateGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.EditInMemoryArgs",
						description : "Creates new graphics. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "UpdateGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.UpdateGraphicsArgs",
						description : "Updates existing graphics. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "DeleteGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.EditInMemoryArgs",
						description : "Deletes graphics. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "CutGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.CutGraphicsArgs",
						description : "Cut graphics using a polyline. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "ExplodeGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.EditInMemoryArgs",
						description : "Separates multi-part graphics into individual graphics. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "UnionGraphicsInMemory",
					metadata : {
						arguments : "essentialsHtmlViewer.mapping.infrastructure.commandArgs.EditInMemoryArgs",
						description : "Merge graphics into a single graphic. These edits are only applied to the graphics layer in memory.",
						isHyperlinkable : !0,
						visibility : "private"
					}
				}, {
					name : "DeleteProject",
					metadata : {
						arguments : "string",
						description : "Deletes a project.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "LoadProject",
					metadata : {
						arguments : "string",
						description : "Loads a project and applies it to the viewer.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "RefreshProjectsList",
					metadata : {
						arguments : "none",
						description : "Refresh the list of browsable projects.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SaveAsProject",
					metadata : {
						arguments : "none",
						description : "Displays the user interface to fill in details about a project to be saved.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "SaveProject",
					metadata : {
						arguments : "none",
						description : "Save the current state of the viewer as a project or displays the user interface to fill in details about the project to be saved.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowProjectEditor",
					metadata : {
						arguments : "string",
						description : "Shows the user interface for editing a project.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowProjects",
					metadata : {
						arguments : "none",
						description : "Shows the user interface for browsing and loading projects.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}, {
					name : "ShowShareProject",
					metadata : {
						arguments : "string",
						description : "Shows the user interface for sharing projects.",
						isHyperlinkable : !0,
						visibility : "public"
					}
				}
			];
			d.metadataForCommandName = function (h) {
				for (var g = 0; g < d.commandsMetadata.length; g++) {
					var m =
						d.commandsMetadata[g];
					if (m.name === h)
						return m.metadata
				}
				return null
			};
			d.publicCommands = function () {
				for (var h = [], g = 0; g < d.commandsMetadata.length; g++) {
					var m = d.commandsMetadata[g];
					"public" === m.metadata.visibility && h.push(m)
				}
				return h
			}
		})(d.Commands || (d.Commands = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = [],
				m = !1,
				c = function () {
					function b(a) {
						this._debounceInterval = 250;
						this._flags = 0;
						this._app = a
					}
					b.prototype.hasFlag = function (a) {
						return (this._flags & a) === a
					};
					b.prototype.setFlag = function (a) {
						this._flags |= a
					};
					b.prototype.screenUris = function (a) {
						this._siteValidator || (this._siteValidator = new d.validation.SiteUrlValidator(this._app));
						for (var b = [], f = 0; f < a.length; f++) {
							var l = a[f];
							l.uri = this._screenDataUri(l.uri);
							null === l.uri ? this._app.trace.debug("Skipped unknown, untrusted data URI.") :
							b.push(l)
						}
						return this._validateUris(b)
					};
					b.prototype.tryScreenNavLinkSynchronously = function (a) {
						if (!this._siteValidator)
							return !1;
						var b = this._siteValidator.tryValidateSynchronously(a.uri);
						return b ? b : this._getMemoizedResult(a) || !1
					};
					b.prototype._validateUris = function (a) {
						var b = this,
						f = [],
						l = [],
						l = a.map(function (a) {
								return new Promise(function (l, c) {
									var m = a.uri;
									return b.hasFlag(2) && a.type === d.FilterUtils.UriType.Markup && "img" === a.tag && "src" === a.attribute ? l(a) : b._validateUriAgainstSite(a).then(function (b) {
										if (null ==
											b.validatedValue || "" === b.validatedValue)
											return a.uri = m, f.push(a), l(null);
										a.type === d.FilterUtils.UriType.NavigableLink && a.forcePrompt && f.push(a);
										return l(a)
									}, function (b) {
										a.uri = m;
										f.push(a);
										return l(a)
									})
								})
							});
						return Promise.all(l).then(function () {
							return b._promptForUris(f)
						}).then(function () {
							return a
						})
					};
					b.prototype._validateUriAgainstSite = function (a) {
						return this._siteValidator ? this._siteValidator.validate(a.uri) : (a.uri = "", Promise.resolve({
								validatedValue : null
							}))
					};
					b.prototype._promptForUris = function (a) {
						var b =
							this;
						return Promise.map(a, function (a, l) {
							return new Promise(function (l, c) {
								b._enqueueConfirmation({
									uriDetails : a,
									resolve : l
								})
							})
						})
					};
					b.prototype._enqueueConfirmation = function (a) {
						g.push(a);
						this._processConfirmationQueue()
					};
					b.prototype._processConfirmationQueue = function () {
						if (!m) {
							m = !0;
							try {
								for (; g.length; ) {
									var a = g.shift();
									if (this._getConfirmation(a))
										return
								}
							} catch (b) {
								throw m = !1,
								b;
							}
							m = !1
						}
					};
					b.prototype._getConfirmation = function (a) {
						var b = this;
						if (!a.uriDetails.forcePrompt && this.hasFlag(1))
							return a.resolve(a.uriDetails),
							!1;
						var f = a.uriDetails.type === d.FilterUtils.UriType.NavigableLink,
						l = this._getMemoizedResult(a.uriDetails);
						if (f || !0 !== l) {
							if (f || !1 !== l) {
								var l = function (l) {
									m = !1;
									b._memoizeResult(a.uriDetails, l);
									!0 !== l && (a.uriDetails.uri = "");
									a.resolve(a.uriDetails);
									try {
										if (f) {
											var c = a.uriDetails.linkChallengeCallback;
											c && c(l, a.uriDetails)
										}
									}
									finally {
										b._processConfirmationQueue()
									}
								},
								c = {
									okLabel : this._app.getResource("Mapping.Infrastructure", "language-content-policy-prompt-uri-accept-btn"),
									cancelLabel : this._app.getResource("Mapping.Infrastructure",
										"language-content-policy-prompt-uri-reject-btn")
								},
								p = this._app.getResource("Mapping.Infrastructure", "language-content-policy-prompt-uri-title"),
								r = this._app.getResource("Mapping.Infrastructure", "language-content-policy-prompt-uri-desc"),
								r = r.format(a.uriDetails.uri);
								if (this._app.command("Confirm").canExecute(r, p, l, c))
									this._app.command("Confirm").execute(r, p, l, c);
								else
									return c = window.confirm(r), l(c), !1;
								return !0
							}
							a.uriDetails.uri = "";
							a.resolve(a.uriDetails);
							return !1
						}
						a.resolve(a.uriDetails);
						return !1
					};
					b.prototype._getMemoizationKey =
					function (a) {
						var b = d.UrlUtils.getFolder(a.uri),
						b = String.quickHashCode(b.toString().replace(/[\?#]+$/, ""));
						return "uri." + d.FilterUtils.UriType[a.type].toLowerCase() + "." + b
					};
					b.prototype._memoizeResult = function (a, b) {
						var f = this._getMemoizationKey(a);
						window.localStorage.setItem(f, b.toString())
					};
					b.prototype._getMemoizedResult = function (a) {
						a = this._getMemoizationKey(a);
						a = window.localStorage.getItem(a);
						return null === a ? null : "true" === a
					};
					b.prototype._screenDataUri = function (a) {
						var b = !!d.FilterUtils.DataUri.parseDataUri(a),
						f = d.FilterUtils.DataUri.isDataUriSafe(a);
						return !b || f ? a : ""
					};
					return b
				}
				();
				d.ContentPolicy = c
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function m(b) {
						if (b = c[b])
							return b;
						throw Error("Units cannot be converted because are not supported");
					}
					var c = {};
					c[d.essentials.DistanceUnitType.METERS] = 1;
					c[d.essentials.DistanceUnitType.MILLIMETERS] = 0.001;
					c[d.essentials.DistanceUnitType.CENTIMETERS] = 0.01;
					c[d.essentials.DistanceUnitType.DECIMETERS] = 0.1;
					c[d.essentials.DistanceUnitType.KILOMETERS] = 1E3;
					c[d.essentials.DistanceUnitType.INCHES] = 0.0254;
					c[d.essentials.DistanceUnitType.FEET] = 0.3048;
					c[d.essentials.DistanceUnitType.US_SURVEY_FEET] = 0.3048006096012192;
					c[d.essentials.DistanceUnitType.YARDS] = 0.9144;
					c[d.essentials.DistanceUnitType.MILES] = 1609.344;
					c[d.essentials.DistanceUnitType.NAUTICAL_MILES] = 1852;
					c[d.essentials.DistanceUnitType.DEGREES] = 111319.49079327357;
					c[d.essentials.DistanceUnitType.GRADS] = 100187.54171394621;
					c[d.essentials.DistanceUnitType.RADIANS] = 6378136.999999998;
					g.canConvert = function (b, a) {
						var e = !1,
						f = !1;
						if (b === a)
							return !0;
						for (var l in d.essentials.DistanceUnitType)
							d.essentials.DistanceUnitType.hasOwnProperty(l) &&
							(d.essentials.DistanceUnitType[l] === b ? e = !0 : d.essentials.DistanceUnitType[l] === a && (f = !0));
						return f && e
					};
					g.convert = function (b, a, e) {
						if (!a || b === e)
							return a;
						e = m(e);
						a *= e;
						b = m(b);
						return a / b
					}
				})(h.distances || (h.distances = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						function c(b, a) {
							this.app = b;
							this.libraryId = a
						}
						c.prototype.initialize = function (b) {
							b.id && (this.id = b.id)
						};
						return c
					}
					();
					d.AccessibilityProviderBase = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						function c() {}

						c.MOUSE = "mouse";
						c.KEYBOARD = "keyboard";
						return c
					}
					();
					d.InputMethod = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function m() {}

					m.translate = function (c, b, a, e) {
						if (!c || !b)
							return null;
						switch (c.type) {
						case "point":
							c = b.toScreen(c);
							c = b.toMap(c.offset(a, e));
							break;
						case "polyline":
							c = this._applyOffset(c, c.paths, a, e, b);
							break;
						case "polygon":
							c = this._applyOffset(c, c.rings, a, e, b)
						}
						return {
							geometry : c,
							transform : dojox.gfx.matrix.translate(a, e)
						}
					};
					m.rotate = function (c, b, a, e) {
						if (!c || !b)
							return null;
						e = e || this.getCentroid(c);
						var f = dojox.gfx.matrix.rotategAt(-a, e.x, e.y);
						switch (c.type) {
						case "polyline":
							c = this._applyTransform(c, c.paths, f);
							break;
						case "polygon":
							c = this._applyTransform(c, c.rings, f)
						}
						b = b.toScreen(e);
						return {
							geometry : c,
							transform : dojox.gfx.matrix.rotategAt(-a, b.x, b.y)
						}
					};
					m.scale = function (c, b, a, e) {
						void 0 === e && (e = null);
						if (!c || !b)
							return null;
						if (isNaN(a) || Infinity === a || -Infinity === a)
							a = 1;
						if (null === e || "undefined" === typeof e)
							e = a;
						var f = this.getCentroid(c),
						l = dojox.gfx.matrix.scaleAt(a, e, f.x, f.y);
						switch (c.type) {
						case "polyline":
							c = this._applyTransform(c, c.paths, l);
							break;
						case "polygon":
							c = this._applyTransform(c, c.rings, l)
						}
						b = b.toScreen(f);
						return {
							geometry : c,
							transform : dojox.gfx.matrix.scaleAt(a, e, b.x, b.y)
						}
					};
					m.getCentroid = function (c) {
						if (!c || !c.type || !d.GeometryUtils.isValidGeometry(c))
							return null;
						var b;
						switch (c.type) {
						case "point":
							return c;
						case "multipoint":
						case "polyline":
						case "polygon":
							if (b = c.getExtent())
								return b.getCenter();
						case "extent":
							return c.getCenter()
						}
						return null
					};
					m._applyOffset = function (c, b, a, e, f) {
						if (c && b) {
							var l = c.getPoint(0, 0);
							e = f.toMap(f.toScreen(l).offset(a,
										e));
							a = e.x - l.x;
							l = e.y - l.y;
							for (e = 0; e < b.length; e++)
								for (f = 0; f < b[e].length; f++) {
									var n = c.getPoint(e, f);
									c.setPoint(e, f, n.offset(a, l))
								}
						}
						return c
					};
					m._applyTransform = function (c, b, a) {
						if (c && b)
							for (var e = 0; e < b.length; e++)
								for (var f = 0; f < b[e].length; f++) {
									var l = c.getPoint(e, f),
									n = dojox.gfx.matrix.multiplyPoint(a, l.x, l.y);
									l.setX(n.x);
									l.setY(n.y);
									c.setPoint(e, f, l)
								}
						return c
					};
					return m
				}
				();
				d.MatrixUtils = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						function c(b, a, e) {
							this.map = this.graphic = this.owner = null;
							this.suspended = !1;
							this.graphic = b;
							this.map = a;
							this.owner = e
						}
						c.prototype.destroy = function () {
							this.suspended = !1;
							this.graphic = this.map = this.owner = null
						};
						c.prototype.refresh = function (b) {};
						c.prototype.suspend = function () {
							this.suspended = !0
						};
						c.prototype.resume = function () {
							this.suspended = !1
						};
						return c
					}
					();
					d.EditCapabilityBase = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
var __extends = this && this.__extends || function (d, k) {
	function q() {
		this.constructor = d
	}
	for (var h in k)
		k.hasOwnProperty(h) && (d[h] = k[h]);
	q.prototype = k.prototype;
	d.prototype = new q
};
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var m = function (c) {
						function b(a, b, f, l) {
							c.call(this, a, b, f);
							this._keyUpHandle = this._keyDownHandle = null;
							this._keyDy = this._keyDx = 0;
							this._transform = null;
							this._isActive = this._isMoving = !1;
							this._vertexHandleGraphic = this._selectedControl = this._allControls = this._midpointControls = this._vertexControls = null;
							this._options = {
								offsetX : 10,
								offsetY : 10,
								preciseOffsetX : 1,
								preciseOffsetY : 1,
								allowAddVertices : !0,
								allowDeleteVertices : !0
							};
							this._snappingInputMovedToken =
								null;
							this._options = dojo.mixin(this._options, l || {});
							this._init();
							this.owner && this.owner.app && (this._snappingInputMovedToken = this.owner.app.event("SnappingFeedbackEvent").subscribe(this, this._handleSnappingInputMovedEvent))
						}
						__extends(b, c);
						b.create = function (a, b, f, l) {
							if (!a || !a.geometry)
								return null;
							switch (a.geometry.type) {
							case "multipoint":
								return new g.MultipointVertexEditor(a, b, f, l);
							case "polyline":
								return new g.PolylineVertexEditor(a, b, f, l);
							case "polygon":
								return new g.PolygonVertexEditor(a, b, f, l)
							}
							return null
						};
						b.prototype._handleSnappingInputMovedEvent = function (a) {
							a && a.snappingPoint && this.graphic && this.getSelectedVertex() && this._vertexHandleGraphic && this._vertexHandleGraphic.visible && (this._updateGraphicVertex(a.snappingPoint, this.getSelectedVertex().segmentIndex, this.getSelectedVertex().pointIndex), this.owner.refresh())
						};
						b.prototype.isActive = function () {
							return this._isActive
						};
						b.prototype.hideVertexHandle = function () {
							this._vertexHandleGraphic && (this._vertexHandleGraphic.hide(), this.owner && this.owner.app &&
								this.owner.app.event("VertexHandleHiddenEvent").publish())
						};
						b.prototype.showVertexHandle = function () {
							if (this._selectedControl) {
								var a = this._selectedControl.point.offset(0, 0);
								this._vertexHandleGraphic ? (this._vertexHandleGraphic.setGeometry(a).setSymbol(this._options.selectedVertexSymbol), this._vertexHandleGraphic.show()) : this._vertexHandleGraphic = this.map.graphics.add(new esri.Graphic(a, this._options.selectedVertexSymbol));
								this.owner && this.owner.app && this.owner.app.event("VertexHandleShownEvent").publish(a);
								(a = this._vertexHandleGraphic.getDojoShape()) && a.moveToFront()
							}
						};
						b.prototype.destroy = function () {
							this._cleanUp();
							c.prototype.destroy.call(this)
						};
						b.prototype.refresh = function (a) {
							void 0 === a && (a = !1);
							this._transform = null;
							a ? (this._removeControllers(), this._addControllers()) : this._refreshControllers()
						};
						b.prototype.getSelectedVertex = function () {
							return this._selectedControl
						};
						b.prototype.onVertexAdd = function (a) {
							if (a && a.segmentIndex === this._selectedControl.segmentIndex) {
								var b = null,
								f = this._selectedControl.segmentIndex,
								l = this._selectedControl.pointIndex;
								this._selectedControl.isGhost ? (b = this._midpointControls, a.pointIndex < l + 1 ? l += 1 : a.pointIndex === l + 1 && (l = a.pointIndex, b = this._vertexControls)) : (b = this._vertexControls, l += a.pointIndex <= l ? 1 : 0);
								this._selectedControl = b[f][l]
							}
						};
						b.prototype.onVertexDelete = function (a) {
							if (a && a.segmentIndex === this._selectedControl.segmentIndex) {
								var b = null,
								f = this._selectedControl.segmentIndex,
								l = this._selectedControl.pointIndex;
								this._selectedControl.isGhost ? (b = this._midpointControls, l -= a.pointIndex <=
									l ? 1 : 0) : (b = this._vertexControls, l -= a.pointIndex <= l && 0 < l ? 1 : 0);
								this._selectedControl = b[f][l]
							}
						};
						b.prototype._init = function () {
							this._keyDownHandle = dojo.on(this.map.root, "keydown", dojo.hitch(this, "_onKeyDownHandler"))
						};
						b.prototype._cleanUp = function () {
							this._isMoving = this._isActive = !1;
							this._selectedControl = this._transform = null;
							this._removeControllers();
							this._vertexHandleGraphic && (this.map.graphics.remove(this._vertexHandleGraphic), this._vertexHandleGraphic = null);
							this._keyDownHandle && (this._keyDownHandle.remove(),
								this._keyDownHandle = null);
							this._keyUpHandle && (this._keyUpHandle.remove(), this._keyUpHandle = null);
							this.owner.app && this.owner.app && this._snappingInputMovedToken && this.owner.app.event("SnappingFeedbackEvent").unsubscribe(this._snappingInputMovedToken)
						};
						b.prototype._getSegments = function (a) {
							throw Error("This method is abstract");
						};
						b.prototype._getMidpointSegments = function (a) {
							throw Error("This method is abstract");
						};
						b.prototype._updatePoints = function (a) {
							throw Error("This method is abstract");
						};
						b.prototype._insertGraphicVertex =
						function (a, b, f) {
							throw Error("This method is abstract");
						};
						b.prototype._updateGraphicVertex = function (a, b, f) {
							throw Error("This method is abstract");
						};
						b.prototype._deleteGraphicVertex = function (a, b) {
							throw Error("This method is abstract");
						};
						b.prototype._findVertex = function (a, b) {
							for (var f = b ? b.length : 0, l = 0; l < f; l++)
								for (var c = b[l], p = 0; p < c.length; p++) {
									var r = c[p];
									if (r && d.GeometryUtils.pointsAreEqual(r.point, a))
										return r
								}
							return null
						};
						b.prototype._addControllers = function () {
							var a = this;
							this._vertexControls = this._add(this._getSegments(this.graphic.geometry));
							this._options.allowAddVertices && (this._midpointControls = this._add(this._getMidpointSegments(this.graphic.geometry), !0));
							this._allControls = [];
							this._vertexControls.forEach(function (b, f) {
								b.forEach(function (b, e) {
									a._allControls.push(b);
									a._midpointControls && a._midpointControls[f] && e < a._midpointControls[f].length && a._allControls.push(a._midpointControls[f][e])
								})
							})
						};
						b.prototype._removeControllers = function () {
							this._remove(this._vertexControls);
							this._remove(this._midpointControls);
							this._vertexControls = this._midpointControls =
								this._allControls = null
						};
						b.prototype._refreshControllers = function () {
							this._refresh(this._vertexControls, this._getSegments(this.graphic.geometry));
							this._options.allowAddVertices && this._refresh(this._midpointControls, this._getMidpointSegments(this.graphic.geometry), !0)
						};
						b.prototype._add = function (a, b) {
							void 0 === b && (b = !1);
							for (var f = [], l = 0; l < a.length; l++) {
								for (var c = a[l], p = [], d = 0; d < c.length; d++)
									p.push({
										isGhost : b,
										segmentIndex : l,
										pointIndex : d,
										point : c[d]
									});
								f.push(p)
							}
							return f
						};
						b.prototype._remove = function (a) {
							a &&
							(a.forEach(function (a) {
									a.length = 0
								}), a.length = 0)
						};
						b.prototype._refresh = function (a, b, f) {
							void 0 === f && (f = !1);
							a && b && a.forEach(function (a, f) {
								a.forEach(function (a, l) {
									a.point = b[f][l]
								})
							})
						};
						b.prototype._previous = function () {
							var a = this._allControls.indexOf(this._selectedControl);
							this._selectedControl = 0 == a ? this._allControls[this._allControls.length - 1] : this._allControls[a - 1];
							this.showVertexHandle();
							this._refreshControllers()
						};
						b.prototype._next = function () {
							var a = this._allControls.indexOf(this._selectedControl);
							this._selectedControl =
								this._allControls[(a + 1) % this._allControls.length];
							this.showVertexHandle();
							this._refreshControllers()
						};
						b.prototype._onKeyDownHandler = function (a) {
							this.suspended || (this._isActive ? this._onKeyDownWhenActive(a) : 86 === (a.keyCode || a.which) && (a.preventDefault(), a.stopImmediatePropagation(), this._isActive = !0, this.owner.suspend(), this.resume(), this._addControllers(), this._selectedControl = this._vertexControls[0][0], this.showVertexHandle()))
						};
						b.prototype._onKeyDownWhenActive = function (a) {
							var b = a.altKey,
							f = b ? this._options.preciseOffsetX :
								this._options.offsetX,
							b = b ? this._options.preciseOffsetY : this._options.offsetY;
							switch (a.keyCode || a.which) {
							case 86:
								a.preventDefault();
								a.stopImmediatePropagation();
								a.shiftKey ? this._previous() : this._next();
								return;
							case dojo.keys.ENTER:
							case dojo.keys.NUMPAD_ENTER:
								a.preventDefault();
								a.stopImmediatePropagation();
								this.owner.resume();
								this._isActive = this._isMoving = !1;
								this._selectedControl = null;
								this._vertexHandleGraphic && (this.hideVertexHandle(), this.map.graphics.remove(this._vertexHandleGraphic), this._vertexHandleGraphic =
										null);
								return;
							case 68:
								this._options.allowDeleteVertices && (this._delete(this.getSelectedVertex()), a.preventDefault(), a.stopImmediatePropagation());
								return;
							case dojo.keys.UP_ARROW:
							case dojo.keys.NUMPAD_8:
								this._keyDy -= b;
								break;
							case dojo.keys.RIGHT_ARROW:
							case dojo.keys.NUMPAD_6:
								this._keyDx += f;
								break;
							case dojo.keys.DOWN_ARROW:
							case dojo.keys.NUMPAD_2:
								this._keyDy += b;
								break;
							case dojo.keys.LEFT_ARROW:
							case dojo.keys.NUMPAD_4:
								this._keyDx -= f;
								break;
							case dojo.keys.PAGE_UP:
							case dojo.keys.NUMPAD_9:
								this._keyDx += f;
								this._keyDy -=
								b;
								break;
							case dojo.keys.PAGE_DOWN:
							case dojo.keys.NUMPAD_3:
								this._keyDx += f;
								this._keyDy += b;
								break;
							case dojo.keys.END:
							case dojo.keys.NUMPAD_1:
								this._keyDx -= f;
								this._keyDy += b;
								break;
							case dojo.keys.HOME:
							case dojo.keys.NUMPAD_7:
								this._keyDx -= f;
								this._keyDy -= b;
								break;
							default:
								return
							}
							a.preventDefault();
							a.stopImmediatePropagation();
							this._move(this.getSelectedVertex(), this._keyDx, this._keyDy);
							this._moveStop(this.getSelectedVertex(), this._keyDx, this._keyDy);
							this._keyDx = this._keyDy = 0
						};
						b.prototype._move = function (a, b, f) {
							var l = {
								isGhost : a.isGhost,
								pointIndex : a.pointIndex,
								segmentIndex : a.segmentIndex
							};
							this._isMoving || (this._isMoving = !0, this.owner.onVertexMoveStart(this.graphic, l), this.owner.onVertexFirstMove(this.graphic, l));
							a = this.map.toScreen(a.point).offset(b, f);
							this._vertexHandleGraphic.setGeometry(this.map.toMap(a));
							this.owner.onVertexMove(this.graphic, l, this._transform);
							l = {
								sender : this,
								mapPoint : this.map.toMap(a),
								screenPoint : a
							};
							this._raiseEditVertexMoved(l)
						};
						b.prototype._raiseEditVertexMoved = function (a) {
							this.owner && this.owner.app &&
							this.owner.app.event("EditVertexMovedEvent").publish(a)
						};
						b.prototype._moveStop = function (a, b, f) {
							this._isMoving = !1;
							if (a && a.point) {
								var l = {
									isGhost : a.isGhost,
									pointIndex : a.pointIndex,
									segmentIndex : a.segmentIndex
								};
								a = d.MatrixUtils.translate(a.point, this.map, b, f);
								this._transform = a.transform;
								l.isGhost ? (l.pointIndex += 1, this._insertGraphicVertex(a.geometry, l.segmentIndex, l.pointIndex)) : this._updateGraphicVertex(a.geometry, l.segmentIndex, l.pointIndex);
								this.owner.refresh();
								this.owner.onVertexMoveStop(this.graphic,
									l, this._transform);
								l.isGhost && (l.isGhost = !1, this.owner.onVertexAdd(this.graphic, l))
							}
						};
						b.prototype._delete = function (a) {
							if (a && !a.isGhost) {
								var b = {
									isGhost : a.isGhost,
									pointIndex : a.pointIndex,
									segmentIndex : a.segmentIndex
								};
								this._deleteGraphicVertex(a.segmentIndex, a.pointIndex);
								this.owner.refresh();
								this.owner.onVertexDelete(this.graphic, b)
							}
						};
						return b
					}
					(g.EditCapabilityBase);
					g.VertexEditor = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype._getSegments = function (a) {
							for (var b = 0, f = []; b < a.points.length; b++)
								f.push(a.getPoint(b));
							return [f]
						};
						b.prototype._getMidpointSegments = function (a) {
							return []
						};
						b.prototype._insertGraphicVertex = function (a, b, f) {};
						b.prototype._updateGraphicVertex = function (a, b, f) {
							b = this.graphic.geometry;
							b.setPoint(f, a.offset(0, 0));
							this.graphic.setGeometry(b)
						};
						b.prototype._deleteGraphicVertex =
						function (a, b) {
							var f = this.graphic.geometry;
							f.removePoint(b);
							this.graphic.setGeometry(f)
						};
						return b
					}
					(d.VertexEditor);
					d.MultipointVertexEditor = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var m = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype._getSegments = function (a) {
							for (var b = [], f = 0; f < a.rings.length; f++) {
								for (var l = a.rings[f].length, c = [], d = 0; d < l - 1; d++)
									c.push(a.getPoint(f, d));
								b.push(c)
							}
							return b
						};
						b.prototype._getMidpointSegments = function (a) {
							for (var b = [], f = 0; f < a.rings.length; f++) {
								for (var l = a.rings[f].length, c = [], p = 0; p < l - 1; p++) {
									var r = a.getPoint(f, p),
									m = a.getPoint(f, p + 1),
									r = d.GeometryUtils.getMidpoint(r,
											m);
									c.push(r)
								}
								b.push(c)
							}
							return b
						};
						b.prototype._insertGraphicVertex = function (a, b, f) {
							var l = this.graphic.geometry;
							l.insertPoint(b, f, a.offset(0, 0));
							this.graphic.setGeometry(l)
						};
						b.prototype._updateGraphicVertex = function (a, b, f) {
							var l = this.graphic.geometry;
							l.setPoint(b, f, a.offset(0, 0));
							0 === f && l.setPoint(b, l.rings[b].length - 1, a.offset(0, 0));
							this.graphic.setGeometry(l)
						};
						b.prototype._deleteGraphicVertex = function (a, b) {
							var f = this.graphic.geometry;
							f.removePoint(a, b);
							if (0 === b) {
								var l = f.rings[a],
								c = f.getPoint(a, 0);
								f.setPoint(a, l.length - 1, c.offset(0, 0))
							}
							this.graphic.setGeometry(f)
						};
						return b
					}
					(g.VertexEditor);
					g.PolygonVertexEditor = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var m = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype._getSegments = function (a) {
							for (var b = [], f = 0; f < a.paths.length; f++) {
								for (var l = a.paths[f].length, c = [], d = 0; d < l; d++)
									c.push(a.getPoint(f, d));
								b.push(c)
							}
							return b
						};
						b.prototype._getMidpointSegments = function (a) {
							for (var b = [], f = 0; f < a.paths.length; f++) {
								for (var l = a.paths[f].length, c = [], p = 0; p < l - 1; p++) {
									var r = a.getPoint(f, p),
									m = a.getPoint(f, p + 1),
									r = d.GeometryUtils.getMidpoint(r,
											m);
									c.push(r)
								}
								b.push(c)
							}
							return b
						};
						b.prototype._insertGraphicVertex = function (a, b, f) {
							var l = this.graphic.geometry;
							l.insertPoint(b, f, a.offset(0, 0));
							this.graphic.setGeometry(l)
						};
						b.prototype._updateGraphicVertex = function (a, b, f) {
							var l = this.graphic.geometry;
							l.setPoint(b, f, a.offset(0, 0));
							this.graphic.setGeometry(l)
						};
						b.prototype._deleteGraphicVertex = function (a, b) {
							var f = this.graphic.geometry;
							f.removePoint(a, b);
							this.graphic.setGeometry(f)
						};
						return b
					}
					(g.VertexEditor);
					g.PolylineVertexEditor = m
				})(d.accessibility ||
					(d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						function c(b) {
							this._registeredComponentTypes = {
								"esri.toolbars.draw" : "esri.toolbars.Draw",
								"esri.toolbars.edit" : "esri.toolbars.Edit",
								"geocortex.accessibility.draw" : "geocortex.essentialsHtmlViewer.mapping.infrastructure.accessibility.Draw",
								"geocortex.accessibility.edit" : "geocortex.essentialsHtmlViewer.mapping.infrastructure.accessibility.Edit"
							};
							this._stack = [];
							this.app = b;
							this.app.event("AccessibleComponentStartedEvent").subscribe(this,
								this._handleAccessibleComponentStarted);
							this.app.event("AccessibleComponentCompletedEvent").subscribe(this, this._handleAccessibleComponentCompleted)
						}
						c.prototype.registerComponent = function (b, a) {
							if (null == b || null == a)
								throw Error("[AccessibilityManager::registerComponent] Null name or typeName passed to registerComponent");
							this._registeredComponentTypes[b] = a
						};
						c.prototype.unregisterComponent = function (b) {
							return b && this._registeredComponentTypes.hasOwnProperty(b) ? (delete this._registeredComponentTypes[b],
								!0) : !1
						};
						c.prototype.createComponent = function (b, a, e) {
							if (b && this._registeredComponentTypes.hasOwnProperty(b)) {
								var f = this._registeredComponentTypes[b],
								l = dojo.getObject(f);
								if (l)
									return new l(a, e, this.app);
								this.app.trace.warning("Could not create component '{0}' from type name '{1}'".format(b, f))
							}
							return null
						};
						c.prototype._handleAccessibleComponentStarted = function (b) {
							if (b && this._stack) {
								var a = this._stack.indexOf(b);
								-1 < a && this._stack.splice(a, 1);
								this._stack.forEach(function (a) {
									return !a.suspended && a.suspend()
								});
								this._stack.push(b);
								b.resume()
							}
						};
						c.prototype._handleAccessibleComponentCompleted = function (b) {
							if (b && this._stack && 0 != this._stack.length) {
								var a = this._stack.indexOf(b);
								-1 < a && (this._stack.splice(a, 1), !b.suspended && b.suspend());
								0 < this._stack.length && this._stack[this._stack.length - 1].resume()
							}
						};
						return c
					}
					();
					d.AccessibilityManager = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex ||
	(geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = function () {
						function c(b, a) {
							this.inputMethod = null;
							this.isKeyboardActive = this.suspended = !1;
							this.id = d.framework.utils.alphaNumericToken();
							this._keyUpHandle = this._keyDownHandle = this._mouseDownHandle = this._mapNavState = this._map = null;
							this.setMap(b);
							this.setApp(a)
						}
						c.prototype.setMap = function (b) {
							this._map = b
						};
						c.prototype.setApp = function (b) {
							this.app = b
						};
						c.prototype.setInputMethod = function (b) {
							if (b !== this.inputMethod) {
								var a = this.inputMethod;
								this.inputMethod = b;
								this.onInputMethodChange({
									previousMethod : a,
									newMethod : this.inputMethod
								})
							}
						};
						c.prototype.setKeyboardActive = function (b) {
							this.isKeyboardActive = b
						};
						c.prototype.suspend = function () {
							this.suspended = !0
						};
						c.prototype.resume = function () {
							this.suspended = !1
						};
						c.prototype.disableMapNavigation = function (b, a, e) {
							void 0 === b && (b = !1);
							void 0 === a && (a = !1);
							void 0 === e && (e = !0);
							var f = this._map;
							this._mapNavState = {
								isDoubleClickZoom : f.isDoubleClickZoom,
								isClickRecenter : f.isClickRecenter,
								isPan : f.isPan,
								isRubberBandZoom : f.isRubberBandZoom,
								isKeyboardNavigation : f.isKeyboardNavigation,
								isScrollWheelZoom : f.isScrollWheelZoom,
								isShiftDoubleClickZoom : f.isShiftDoubleClickZoom,
								isPanArrows : f.isPanArrows,
								isZoomSlider : f.isZoomSlider
							};
							f.disableDoubleClickZoom();
							f.disableClickRecenter();
							f.disablePan();
							f.disableRubberBandZoom();
							f.disableKeyboardNavigation();
							f.disableScrollWheelZoom();
							f.disableShiftDoubleClickZoom();
							b && f.isZoomSlider && f.hideZoomSlider();
							a && f.isPanArrows && f.hidePanArrows();
							e && f.graphics.disableMouseEvents();
							return this._mapNavState
						};
						c.prototype.enableMapNavigation = function (b, a, e, f) {
							void 0 === b && (b = !1);
							void 0 === a && (a = !1);
							void 0 === e && (e = !0);
							var l = this._map;
							if (f = f || this._mapNavState)
								f.isDoubleClickZoom && l.enableDoubleClickZoom(), f.isClickRecenter && l.enableClickRecenter(), f.isPan && l.enablePan(), f.isRubberBandZoom && l.enableRubberBandZoom(), f.isKeyboardNavigation && l.enableKeyboardNavigation(), f.isScrollWheelZoom && l.enableScrollWheelZoom(), f.isShiftDoubleClickZoom && l.enableShiftDoubleClickZoom(), b && f.isZoomSlider && l.showZoomSlider(),
								a && f.isPanArrows && l.showPanArrows(), e && l.graphics.enableMouseEvents()
						};
						c.prototype.getMapState = function () {
							return this._mapNavState
						};
						c.prototype.activateMouseControls = function (b) {
							var a = this;
							void 0 === b && (b = !0);
							this.deactivateMouseControls(b);
							this._mouseDownHandle = this.app.map.on("mouse-down", function () {
									a._mouseDownHandle.remove();
									a._mouseDownHandle = null;
									a.setInputMethod(g.InputMethod.MOUSE)
								})
						};
						c.prototype.deactivateMouseControls = function (b) {
							void 0 === b && (b = !0);
							this._mouseDownHandle && (this._mouseDownHandle.remove(),
								this._mouseDownHandle = null);
							b && this.inputMethod === g.InputMethod.MOUSE && this.setInputMethod(null)
						};
						c.prototype.activateKeyboardControls = function (b) {
							void 0 === b && (b = !0);
							this.isKeyboardActive && this.deactivateKeyboardControls(b);
							this.setKeyboardActive(!0);
							this._keyDownHandle = dojo.on(this._map.root, "keydown", dojo.hitch(this, "_onKeyDown"));
							this._keyUpHandle = dojo.on(this._map.root, "keyup", dojo.hitch(this, "_onKeyUp"));
							this.app.event("AccessibleComponentStartedEvent").publish(this)
						};
						c.prototype.deactivateKeyboardControls =
						function (b) {
							void 0 === b && (b = !0);
							this.setKeyboardActive(!1);
							this._keyDownHandle && (this._keyDownHandle.remove(), this._keyDownHandle = null);
							this._keyUpHandle && (this._keyUpHandle.remove(), this._keyUpHandle = null);
							b && this.inputMethod === g.InputMethod.KEYBOARD && this.setInputMethod(null);
							this.app.event("AccessibleComponentCompletedEvent").publish(this)
						};
						c.prototype.toggleKeyboardMode = function () {
							if (this.inputMethod !== g.InputMethod.KEYBOARD)
								this.onKeyboardStart();
							else
								this.onKeyboardStop()
						};
						c.prototype.onInputMethodChange =
						function (b) {
							this.app.event("InputMethodChangedEvent").publish(b)
						};
						c.prototype.onKeyboardStart = function () {
							this._mouseDownHandle && (this._mouseDownHandle.remove(), this._mouseDownHandle = null);
							this.setInputMethod(g.InputMethod.KEYBOARD)
						};
						c.prototype.onKeyboardStop = function (b) {
							this.setInputMethod(null)
						};
						c.prototype._onKeyDown = function (b) {};
						c.prototype._onKeyUp = function (b) {};
						return c
					}
					();
					g.AccessibleMapComponent = m
				})(h.accessibility || (h.accessibility = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping ||
			(k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = function (c) {
						function b(a, b, f, l, n) {
							c.call(this, a, b, f);
							this._options = {
								rotateEnabled : !1,
								scaleEnabled : !1,
								uniformScaling : !1,
								rotationAngle : 15,
								preciseRotationAngle : 1,
								scaleFactor : 0.2,
								preciseScaleFactor : 0.01
							};
							this._isScaling = this._isRotating = this._modified = this._isTextPoint = this._uniformScaling = this._rotateEnabled = this._scaleEnabled = !1;
							this._keyUpHandle = this._keyDownHandle = this._transform = this._markerSymbol = this._lineSymbol = null;
							this._options =
								dojo.mixin(this._options, n || {});
							a = f.getOptions();
							this._markerSymbol = this._options.boxHandleSymbol ? this._options.boxHandleSymbol : a.boxHandleSymbol;
							this._lineSymbol = this._options.boxLineSymbol ? this._options.boxLineSymbol : a.boxLineSymbol;
							this._scaleEnabled = !!this._options.scaleEnabled;
							this._rotateEnabled = !!this._options.rotateEnabled;
							this._uniformScaling = !!this._options.uniformScaling;
							this._isTextPoint = l;
							this._init()
						}
						__extends(b, c);
						b.prototype.destroy = function () {
							c.prototype.destroy.call(this);
							this._cleanUp()
						};
						b.prototype._init = function () {
							this._keyDownHandle = dojo.on(this.map.root, "keydown", dojo.hitch(this, "_onKeyDownHandler"));
							this._keyUpHandle = dojo.on(this.map.root, "keyup", dojo.hitch(this, "_onKeyUpHandler"))
						};
						b.prototype._cleanUp = function () {
							this._isRotating = this._isScaling = this._modified = this._scaleEnabled = this._rotateEnabled = this._uniformScaling = this._isTextPoint = !1;
							this._lineSymbol = this._markerSymbol = this._transform = null;
							this._keyDownHandle && (this._keyDownHandle.remove(), this._keyDownHandle = null);
							this._keyUpHandle &&
							(this._keyUpHandle.remove(), this._keyUpHandle = null)
						};
						b.prototype._onKeyDownHandler = function (a) {
							if (!this.suspended) {
								var b = a.altKey,
								f = a.shiftKey,
								l = !1,
								c = b ? this._options.preciseScaleFactor : this._options.scaleFactor,
								b = b ? this._options.preciseRotationAngle : this._options.rotationAngle,
								d = a.keyCode || a.which;
								if (this._scaleEnabled)
									switch (d) {
									case 83:
										c = f ? -1 * c : c,
										this._scaleGraphic(1 + c, 1 + c),
										l = !0
									}
								if (this._rotateEnabled)
									switch (d) {
									case 82:
										this._rotateGraphic(f ? -1 * b : b),
										l = !0
									}
								l && (a.preventDefault(), a.stopPropagation())
							}
						};
						b.prototype._onKeyUpHandler = function (a) {
							if (!this.suspended) {
								var b = a.keyCode || a.which,
								f = !1;
								if (this._scaleEnabled)
									switch (b) {
									case 83:
										this._isScaling = !1,
										this.owner.onScaleStop(this.graphic, this._transform),
										f = !0
									}
								if (this._rotateEnabled)
									switch (b) {
									case 82:
										this._isRotating = !1,
										this.owner.onRotateStop(this.graphic, this._transform),
										f = !0
									}
								f && (a.preventDefault(), a.stopPropagation())
							}
						};
						b.prototype._rotateGraphic = function (a, b) {
							this._isRotating || (this.owner.onRotateStart(this.graphic), this.owner.onRotateFirstMove(this.graphic),
								this._isRotating = !0);
							var f = this.graphic.geometry,
							l = b || h.GeometryUtils.getMiddle(f);
							if (h.GeometryUtils.isValidGeometry(f) && !d.framework.utils.isNullOrUndefined(l)) {
								f = h.MatrixUtils.rotate(f, this.map, a, l);
								this._transform = f.transform;
								this._modified = !0;
								if (this._isTextPoint) {
									var c = this.graphic.symbol;
									c.angle += a;
									this.graphic.setSymbol(c)
								} else
									this.graphic.setGeometry(f.geometry);
								l = {
									transform : f.transform,
									angle : a,
									scaleX : 1,
									scaleY : 1,
									around : this.map.toScreen(l)
								};
								this.owner.refresh();
								this.owner.onRotate(this.graphic,
									l)
							}
						};
						b.prototype._scaleGraphic = function (a, b) {
							this._isScaling || (this.owner.onScaleStart(this.graphic), this.owner.onScaleFirstMove(this.graphic), this._isScaling = !0);
							if (null === b || "undefined" === typeof b)
								b = a;
							var f = h.MatrixUtils.scale(this.graphic.geometry, this.map, a, b);
							this._transform = f.transform;
							this._modified = !0;
							if (this._isTextPoint) {
								var l = this.graphic.symbol;
								l.font.setSize(Math.round(100 * l.font.size * a) / 100);
								this.graphic.setSymbol(l)
							} else
								this.graphic.setGeometry(f.geometry);
							f = {
								transform : f.transform,
								angle : 0,
								scaleX : a,
								scaleY : b,
								around : null
							};
							this.owner.refresh();
							this.owner.onScale(this.graphic, f)
						};
						return b
					}
					(g.EditCapabilityBase);
					g.BoxEditor = m
				})(h.accessibility || (h.accessibility = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var m = function (c) {
						function b(a, b, f, l, n) {
							c.call(this, a, b, f);
							this._options = {
								offsetX : 10,
								offsetY : 10,
								preciseOffsetX : 1,
								preciseOffsetY : 1
							};
							this._isMoving = this._modified = !1;
							this._keyUpHandle = this._keyDownHandle = this._textAnchor = this._transform = null;
							this._options = dojo.mixin(this._options, n || {});
							this._textAnchor = l;
							this._init()
						}
						__extends(b, c);
						b.prototype.hasMoved = function () {
							return this._modified
						};
						b.prototype.destroy = function () {
							c.prototype.destroy.call(this);
							this._cleanUp()
						};
						b.prototype.refresh = function (a) {
							void 0 === a && (a = !1);
							c.prototype.refresh.call(this, a);
							this.graphic && (a || this._needsRefresh()) && (this._cleanUp(), this._init())
						};
						b.prototype._needsRefresh = function () {
							return null == this._keyDownHandle
						};
						b.prototype._init = function () {
							this._keyDownHandle = dojo.on(this.map.root, "keydown", dojo.hitch(this, "_onKeyDownHandler"));
							this._keyUpHandle = dojo.on(this.map.root, "keyup", dojo.hitch(this, "_onKeyUpHandler"))
						};
						b.prototype._cleanUp = function () {
							this._isMoving = this._modified =
								!1;
							this._textAnchor = this._transform = null;
							this._keyDownHandle && (this._keyDownHandle.remove(), this._keyDownHandle = null);
							this._keyUpHandle && (this._keyUpHandle.remove(), this._keyUpHandle = null)
						};
						b.prototype._onKeyDownHandler = function (a) {
							if (!this.suspended) {
								var b = a.altKey,
								f = b ? this._options.preciseOffsetX : this._options.offsetX,
								b = b ? this._options.preciseOffsetY : this._options.offsetY,
								l = 0,
								c = 0;
								switch (a.keyCode || a.which) {
								case dojo.keys.UP_ARROW:
								case dojo.keys.NUMPAD_8:
									c = -1;
									break;
								case dojo.keys.RIGHT_ARROW:
								case dojo.keys.NUMPAD_6:
									l =
										1;
									break;
								case dojo.keys.DOWN_ARROW:
								case dojo.keys.NUMPAD_2:
									c = 1;
									break;
								case dojo.keys.LEFT_ARROW:
								case dojo.keys.NUMPAD_4:
									l = -1;
									break;
								case dojo.keys.PAGE_UP:
								case dojo.keys.NUMPAD_9:
									l = 1;
									c = -1;
									break;
								case dojo.keys.PAGE_DOWN:
								case dojo.keys.NUMPAD_3:
									c = l = 1;
									break;
								case dojo.keys.END:
								case dojo.keys.NUMPAD_1:
									l = -1;
									c = 1;
									break;
								case dojo.keys.HOME:
								case dojo.keys.NUMPAD_7:
									c = l = -1;
									break;
								default:
									return
								}
								this._moveGraphic(l * f, c * b);
								a.preventDefault();
								a.stopPropagation()
							}
						};
						b.prototype._onKeyUpHandler = function (a) {
							if (!this.suspended) {
								switch (a.keyCode ||
									a.which) {
								case dojo.keys.UP_ARROW:
								case dojo.keys.NUMPAD_8:
								case dojo.keys.RIGHT_ARROW:
								case dojo.keys.NUMPAD_6:
								case dojo.keys.DOWN_ARROW:
								case dojo.keys.NUMPAD_2:
								case dojo.keys.LEFT_ARROW:
								case dojo.keys.NUMPAD_4:
								case dojo.keys.PAGE_UP:
								case dojo.keys.NUMPAD_9:
								case dojo.keys.PAGE_DOWN:
								case dojo.keys.NUMPAD_3:
								case dojo.keys.END:
								case dojo.keys.NUMPAD_1:
								case dojo.keys.HOME:
								case dojo.keys.NUMPAD_7:
									this._isMoving = !1;
									this.map.enableMapNavigation();
									this.owner.onGraphicMoveStop(this.graphic, this._transform);
									break;
								default:
									return
								}
								a.preventDefault();
								a.stopPropagation()
							}
						};
						b.prototype._moveGraphic = function (a, b) {
							this._isMoving || (this.owner.onGraphicMoveStart(this.graphic), this.owner.onGraphicFirstMove(this.graphic), this._isMoving = !0, this.map.disableMapNavigation());
							var f = d.MatrixUtils.translate(this.graphic.geometry, this.map, a, b);
							this._transform = f.transform;
							this._modified = !0;
							this.graphic.setGeometry(f.geometry);
							this._textAnchor && this._textAnchor.setGeometry(new esri.geometry.Point(this.graphic.geometry.toJson()));
							this.owner.refresh();
							this.owner.onGraphicMove(this.graphic, f.transform);
							this.graphic.geometry instanceof esri.geometry.Point && (f = this.graphic.geometry.offset(0, 0), f = {
									sender : this,
									mapPoint : f,
									screenPoint : this.map.toScreen(f)
								}, this._raiseEditVertexMoved(f))
						};
						b.prototype._raiseEditVertexMoved = function (a) {
							this.owner && this.owner.app && this.owner.app.event("EditVertexMovedEvent").publish(a)
						};
						return b
					}
					(g.EditCapabilityBase);
					g.GraphicMover = m
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = function (c) {
						function b(a, b, f) {
							c.call(this, a, f);
							this._defaultOptions = this._options = this._editObject = null;
							this._tool = 0;
							this._needsRefresh = this._cancelled = this._modified = this._active = this._isGeo = this._isTextPoint = !1;
							this._handles = [];
							this._boxEditor = this._vertexEditor = this._graphicMover = this._lastSnapPoint = this._snappingFeedbackEventToken = null;
							f = Modernizr && !!Modernizr.touch;
							f = {
								vertexSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,
									f ? 20 : 12, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.5]), 1), new esri.Color([128, 128, 128])),
								ghostVertexSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, f ? 18 : 10, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.5]), 1), new esri.Color([255, 255, 255, 0.75])),
								ghostLineSymbol : new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_DOT, new esri.Color([128, 128,
											128]), 2),
								allowDeleteVertices : !0,
								allowAddVertices : !0,
								narrateKeyboardShortcuts : !0,
								rotateHandleOffset : f ? 24 : 16,
								boxLineSymbol : new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_DASH, new esri.Color([64, 64, 64]), 1),
								boxHandleSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE, f ? 16 : 9, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.5]), 1), new esri.Color([255, 255, 255, 0.75])),
								textAnchorSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,
									10, null, new esri.Color([255, 0, 0])),
								selectedVertexSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, f ? 25 : 15, null, new esri.Color([0, 0, 255, 0.75]))
							};
							this._defaultOptions = dojo.mixin(f, b || {});
							this._editObject = new esri.toolbars.Edit(a, b)
						}
						__extends(b, c);
						b.prototype.activate = function (a, e, f) {
							var l = this;
							this.deactivate();
							this.app && (this._snappingFeedbackEventToken = this.app.event("SnappingFeedbackEvent").subscribe(this, function (a) {
										l._lastSnapPoint = a && a.snappingPoint ? a.snappingPoint :
											null
									}));
							this._active = !0;
							this._graphic = e;
							this._tool = a;
							this._options = dojo.mixin(dojo.mixin({}, this._defaultOptions), f || {});
							if (0 < a) {
								f = this._map.spatialReference;
								var c = e && e.geometry ? e.geometry.spatialReference : null;
								this._isGeo = f && c && !f.equals(c) && f.isWebMercator() && 4326 === c.wkid;
								this._isTextPoint = e && e.geometry && "point" === e.geometry.type ? (f = this._getSymbol(e)) && "textsymbol" === f.type : !1;
								e && e.geometry && "multipoint" === e.geometry.type && (this._options.allowAddVertices = !1);
								this._handles.push(dojo.aspect.after(this._editObject,
										"onGraphicClick", dojo.hitch(this, "_onGraphicClickImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onGraphicFirstMove", dojo.hitch(this, "_onGraphicFirstMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onGraphicMove", dojo.hitch(this, "_onGraphicMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onGraphicMoveStart", dojo.hitch(this, "_onGraphicMoveStartImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onGraphicMoveStop", dojo.hitch(this,
											"_onGraphicMoveStopImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onRotate", dojo.hitch(this, "_onRotateImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onRotateFirstMove", dojo.hitch(this, "_onRotateFirstMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onRotateStart", dojo.hitch(this, "_onRotateStartImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onRotateStop", dojo.hitch(this, "_onRotateStopImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject,
										"onScale", dojo.hitch(this, "_onScaleImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onScaleFirstMove", dojo.hitch(this, "_onScaleFirstMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onScaleStart", dojo.hitch(this, "_onScaleStartImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onScaleStop", dojo.hitch(this, "_onScaleStopImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexAdd", dojo.hitch(this, "_onVertexAddImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject,
										"onVertexClick", dojo.hitch(this, "_onVertexClickImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexDelete", dojo.hitch(this, "_onVertexDeleteImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexFirstMove", dojo.hitch(this, "_onVertexFirstMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexMouseOut", dojo.hitch(this, "_onVertexMouseOutImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexMouseOver", dojo.hitch(this,
											"_onVertexMouseOverImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexMove", dojo.hitch(this, "_onVertexMoveImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexMoveStart", dojo.hitch(this, "_onVertexMoveStartImpl"), !0));
								this._handles.push(dojo.aspect.after(this._editObject, "onVertexMoveStop", dojo.hitch(this, "_onVertexMoveStopImpl"), !0));
								this.activateMouseControls();
								this.activateKeyboardControls();
								var d = c = f = !1;
								(a & b.MOVE) === b.MOVE && (f = this._enableMove(e));
								var r = (a & b.SCALE) === b.SCALE,
								m = (a & b.ROTATE) === b.ROTATE;
								if (r || m)
									c = this._enableBoxEditing(e, r, m);
								(a & b.EDIT_VERTICES) === b.EDIT_VERTICES && (d = this._enableVertexEditing(e));
								if (!f && !c && !d)
									throw Error("[esri.toolbars.Edit::activate] Unable to activate the tool. Check if the tool is valid for the given geometry type.");
								this.onKeyboardStart();
								this._updateToolStatusMessage();
								this.onActivate(a, e);
								this.raiseGraphicEditActivated({
									sender : this,
									graphic : e,
									tool : a
								})
							}
						};
						b.prototype.deactivate = function () {
							var a = this._tool;
							this._active = !1;
							this.app && this._snappingFeedbackEventToken && (this.app.event("SnappingFeedbackEvent").unsubscribe(this._snappingFeedbackEventToken), this._snappingFeedbackEventToken = null);
							if (0 < a) {
								var b = this._modified,
								f = this._cancelled,
								l = this._graphic;
								this._graphicMover && this._graphicMover.hasMoved() && this._adjustGraphicMoverPoint(l, this._lastSnapPoint);
								this._clear();
								this._graphic = null;
								this._isGeo = this._isTextPoint = !1;
								this.deactivateMouseControls();
								this.deactivateKeyboardControls();
								if (this.app.toolRegistry &&
									this.app.toolRegistry.getActiveTool) {
									var c = this.app.toolRegistry.getActiveTool();
									c instanceof h.tools.MapTool && c.drawMode === h.tools.DrawMode.EXTENT && l.setGeometry(this._convertPolygonToExtent(l.geometry))
								}
								this.onDeactivate(a, l, {
									isModified : b,
									cancelled : f
								});
								this.raiseGraphicEditDeactivated({
									sender : this,
									graphic : l,
									tool : a,
									isModified : b,
									cancelled : f
								})
							}
						};
						b.prototype._convertPolygonToExtent = function (a) {
							if (a.getExtent)
								return a.getExtent();
							this.app.trace.warning("Tried to convert polygon to extent, but failed. Polygon object lacks getExtent() method.");
							return null
						};
						b.prototype.getOptions = function () {
							return this._options || this._defaultOptions || {}

						};
						b.prototype.getCurrentState = function () {
							return {
								tool : this._tool,
								graphic : this._graphic,
								isModified : this._modified
							}
						};
						b.prototype.getEnabledTools = function () {
							return [this._graphicMover, this._boxEditor, this._vertexEditor].filter(function (a) {
								return !d.framework.utils.isNullOrUndefined(a)
							})
						};
						b.prototype.refresh = function () {
							this._editObject.refresh();
							this._needsRefresh = !1
						};
						b.prototype.setNeedsRefresh = function (a) {
							this._needsRefresh =
								a
						};
						b.prototype.suspend = function () {
							c.prototype.suspend.call(this);
							this.getEnabledTools().forEach(function (a) {
								return a.suspend()
							})
						};
						b.prototype.resume = function () {
							c.prototype.resume.call(this);
							this.getEnabledTools().forEach(function (a) {
								return a.resume()
							})
						};
						b.prototype.isActive = function () {
							return this._active
						};
						b.prototype.activateMouseControls = function (a) {
							void 0 === a && (a = !0);
							c.prototype.activateMouseControls.call(this, a);
							if (0 < this._tool)
								this._editObject.__attached_stopEvent = !0, this._editObject.activate(this._tool,
									this._graphic, this._options);
							else
								throw Error("[esri.toolbars.Edit::activate] Unable to activate the tool. Check if the tool is valid for the given geometry type.");
						};
						b.prototype.deactivateMouseControls = function (a) {
							void 0 === a && (a = !0);
							c.prototype.deactivateMouseControls.call(this, a);
							this._editObject.__attached_stopEvent = !0;
							this._editObject.deactivate()
						};
						b.prototype.on = function (a, b) {
							throw Error("[geocortex.essentialsHtmlViewer.mapping.infrastructure.accessibility.Edit] On style events not implemented yet. Use connect instead.");
						};
						b.prototype.onActivate = function (a, b) {};
						b.prototype.onDeactivate = function (a, b, f) {};
						b.prototype.onGraphicClick = function (a, b) {};
						b.prototype._onGraphicClickImpl = function (a, b) {
							this.onGraphicClick(a, b)
						};
						b.prototype.onGraphicFirstMove = function (a) {
							this._modified = !0
						};
						b.prototype._onGraphicFirstMoveImpl = function (a) {
							this.suspend();
							null !== this._vertexEditor && this._vertexEditor.isActive() && this._vertexEditor.hideVertexHandle();
							this.onGraphicFirstMove(a)
						};
						b.prototype.onGraphicMove = function (a, b) {};
						b.prototype._onGraphicMoveImpl =
						function (a, b) {
							this.onGraphicMove(a, b)
						};
						b.prototype.onGraphicMoveStart = function (a) {};
						b.prototype._onGraphicMoveStartImpl = function (a) {
							this.onGraphicMoveStart(a)
						};
						b.prototype.onGraphicMoveStop = function (a, b) {};
						b.prototype._onGraphicMoveStopImpl = function (a, b) {
							this.resume();
							null !== this._vertexEditor && this._vertexEditor.isActive() && (this.suspend(), this._vertexEditor.resume(), this._vertexEditor.refresh(), this._vertexEditor.showVertexHandle());
							this.onGraphicMoveStop(a, b)
						};
						b.prototype.onRotate = function (a, b) {};
						b.prototype._onRotateImpl = function (a, b) {
							this.onRotate(a, b)
						};
						b.prototype.onRotateFirstMove = function (a) {
							this._modified = !0
						};
						b.prototype._onRotateFirstMoveImpl = function (a) {
							this.suspend();
							null !== this._vertexEditor && this._vertexEditor.isActive() && this._vertexEditor.hideVertexHandle();
							this.onRotateFirstMove(a)
						};
						b.prototype.onRotateStart = function (a) {};
						b.prototype._onRotateStartImpl = function (a) {
							this.onRotateStart(a)
						};
						b.prototype.onRotateStop = function (a, b) {};
						b.prototype._onRotateStopImpl = function (a, b) {
							this.resume();
							null !== this._vertexEditor && this._vertexEditor.isActive() && (this.suspend(), this._vertexEditor.resume(), this._vertexEditor.refresh(), this._vertexEditor.showVertexHandle());
							this.onRotateStop(a, b)
						};
						b.prototype.onScale = function (a, b) {};
						b.prototype._onScaleImpl = function (a, b) {
							this.onScale(a, b)
						};
						b.prototype.onScaleFirstMove = function (a) {
							this._modified = !0
						};
						b.prototype._onScaleFirstMoveImpl = function (a) {
							this.suspend();
							null !== this._vertexEditor && this._vertexEditor.isActive() && this._vertexEditor.hideVertexHandle();
							this.onScaleFirstMove(a)
						};
						b.prototype.onScaleStart = function (a) {};
						b.prototype._onScaleStartImpl = function (a) {
							this.onScaleStart(a)
						};
						b.prototype.onScaleStop = function (a, b) {};
						b.prototype._onScaleStopImpl = function (a, b) {
							this.resume();
							null !== this._vertexEditor && this._vertexEditor.isActive() && (this.suspend(), this._vertexEditor.resume(), this._vertexEditor.refresh(), this._vertexEditor.showVertexHandle());
							this.onScaleStop(a, b)
						};
						b.prototype.onVertexAdd = function (a, b) {
							this._modified = !0;
							null !== this._vertexEditor &&
							this._vertexEditor.isActive() && (this._vertexEditor.refresh(!0), this._vertexEditor.onVertexAdd(b), this._vertexEditor.showVertexHandle())
						};
						b.prototype._onVertexAddImpl = function (a, b) {
							this.onVertexAdd(a, b)
						};
						b.prototype.onVertexClick = function (a, b) {};
						b.prototype._onVertexClickImpl = function (a, b) {
							this.onVertexClick(a, b)
						};
						b.prototype.onVertexDelete = function (a, b) {
							this._modified = !0;
							null !== this._vertexEditor && this._vertexEditor.isActive() && (this._vertexEditor.refresh(!0), this._vertexEditor.onVertexDelete(b),
								this._vertexEditor.showVertexHandle())
						};
						b.prototype._onVertexDeleteImpl = function (a, b) {
							this.onVertexDelete(a, b)
						};
						b.prototype.onVertexFirstMove = function (a, b) {
							this._modified = !0
						};
						b.prototype._onVertexFirstMoveImpl = function (a, b) {
							this.suspend();
							null !== this._vertexEditor && this._vertexEditor.isActive() && this._vertexEditor.hideVertexHandle();
							this.onVertexFirstMove(a, b)
						};
						b.prototype.onVertexMouseOut = function (a, b) {};
						b.prototype._onVertexMouseOutImpl = function (a, b) {
							this.onVertexMouseOut(a, b)
						};
						b.prototype.onVertexMouseOver =
						function (a, b) {};
						b.prototype._onVertexMouseOverImpl = function (a, b) {
							this.onVertexMouseOver(a, b)
						};
						b.prototype.onVertexMove = function (a, b, f) {
							b && b.graphic && this.app.event("EditVertexHandleMovedEvent").publish(b.graphic)
						};
						b.prototype._onVertexMoveImpl = function (a, b, f) {
							this.onVertexMove(a, b, f)
						};
						b.prototype.onVertexMoveStart = function (a, b) {};
						b.prototype._onVertexMoveStartImpl = function (a, b) {
							this.onVertexMoveStart(a, b)
						};
						b.prototype.onVertexMoveStop = function (a, b, f) {
							null !== this._vertexEditor && this._vertexEditor.isActive() &&
							!b.isGhost && (this._vertexEditor.refresh(), this._vertexEditor.showVertexHandle())
						};
						b.prototype._onVertexMoveStopImpl = function (a, b, f) {
							this.resume();
							null !== this._vertexEditor && this._vertexEditor.isActive() && (this.suspend(), this._vertexEditor.resume());
							this.onVertexMoveStop(a, b, f)
						};
						b.prototype.onKeyboardStart = function () {
							c.prototype.onKeyboardStart.call(this)
						};
						b.prototype.onKeyboardStop = function (a) {
							void 0 === a && (a = !1);
							c.prototype.onKeyboardStop.call(this, a);
							this._cancelled = a;
							this.deactivate()
						};
						b.prototype._onKeyDown =
						function (a) {
							c.prototype._onKeyDown.call(this, a);
							if (!this.suspended && this._active && this.inputMethod !== g.InputMethod.MOUSE) {
								var b = !1;
								switch (a.keyCode || a.which) {
								case dojo.keys.ENTER:
								case dojo.keys.NUMPAD_ENTER:
									this.toggleKeyboardMode();
									b = !0;
									break;
								case dojo.keys.ESCAPE:
									this.onKeyboardStop(!0),
									b = !0
								}
								b && (a.preventDefault(), a.stopPropagation())
							}
						};
						b.prototype.raiseGraphicEditActivated = function (a) {
							this.app.event("GraphicEditActivatedEvent").publish(a)
						};
						b.prototype.raiseGraphicEditDeactivated = function (a) {
							this.app.event("GraphicEditDeactivatedEvent").publish(a)
						};
						b.prototype._updateToolStatusMessage = function () {
							if (this._graphic && this._graphic.geometry && "point" !== this._graphic.geometry.type) {
								var a = this.app.getResource("Mapping.Infrastructure", "language-toolbar-markup-edit-desc-shortcuts");
								if (this.app.toolRegistry && this.app.toolRegistry.getActiveTool()) {
									var b = this.app.toolRegistry.getActiveTool(),
									f = this.app.getResource("Mapping.Infrastructure", "language-toolbar-markup-edit-zoomin-tool"),
									l = this.app.getResource("Mapping.Infrastructure", "language-toolbar-markup-edit-zoomout-tool");
									if (b.name === f || b.name === l)
										a = this.app.getResource("Mapping.Infrastructure", "language-toolbar-markup-edit-desc-shortcuts-zoom")
								}
								a && (this.app.command("UpdateStatus").execute(new d.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs(a)), this._options.narrateKeyboardShortcuts && this.app.command("ScreenReaderNarrate").execute(a))
							}
						};
						b.prototype._clear = function () {
							this._disableMove();
							this._disableBoxEditing();
							this._disableVertexEditing();
							this._tool = 0;
							this.suspended = this._cancelled = this._modified =
								!1;
							this.setInputMethod(null)
						};
						b.prototype._getSymbol = function (a) {
							if (a) {
								var b = a.symbol;
								if (b)
									return b;
								if (b = a.getLayer() ? a.getLayer().renderer : null)
									return b.getSymbol(a)
							}
							return null
						};
						b.prototype._enableMove = function (a) {
							switch (a.geometry.type) {
							case "point":
								return this._graphicMover = new g.GraphicMover(a, this._map, this, this._isTextPoint && this._editObject._textAnchor ? this._editObject._textAnchor : null),
								!0;
							case "polyline":
							case "polygon":
								return this._graphicMover = new g.GraphicMover(a, this._map, this, null),
								!0
							}
							return !1
						};
						b.prototype._enableBoxEditing = function (a, b, f) {
							b = {
								scaleEnabled : b,
								rotateEnabled : f,
								uniformScaling : this._options.uniformScaling,
								boxHandleSymbol : this._options.boxHandleSymbol,
								boxLineSymbol : this._options.boxLineSymbol
							};
							return this._isTextPoint || -1 < ["polyline", "polygon"].indexOf(a.geometry.type) ? (this._boxEditor = new g.BoxEditor(a, this._map, this, this._isTextPoint, b), !0) : !1
						};
						b.prototype._enableVertexEditing = function (a) {
							var b = {
								allowAddVertices : this._options.allowAddVertices,
								allowDeleteVertices : this._options.allowDeleteVertices,
								selectedVertexSymbol : this._options.selectedVertexSymbol
							};
							switch (a.geometry.type) {
							case "multipoint":
							case "polyline":
							case "polygon":
								return this._vertexEditor = g.VertexEditor.create(a, this._map, this, b),
								!0
							}
							return !1
						};
						b.prototype._adjustGraphicMoverPoint = function (a, b) {
							b && a && b instanceof esri.geometry.Point && a.geometry instanceof esri.geometry.Point && a.setGeometry(b)
						};
						b.prototype._disableMove = function () {
							this._graphicMover && (this._graphicMover.destroy(), this._graphicMover = null)
						};
						b.prototype._disableBoxEditing =
						function () {
							this._boxEditor && (this._boxEditor.destroy(), this._boxEditor = null)
						};
						b.prototype._disableVertexEditing = function () {
							this._vertexEditor && (this._vertexEditor.destroy(), this._vertexEditor = null)
						};
						b._edit = function () {
							require(["esri/toolbars/edit"], function (a) {
								b.EDIT_TEXT = a.EDIT_TEXT;
								b.EDIT_VERTICES = a.EDIT_VERTICES;
								b.MOVE = a.MOVE;
								b.ROTATE = a.ROTATE;
								b.SCALE = a.SCALE
							})
						}
						();
						return b
					}
					(g.AccessibleMapComponent);
					g.Edit = m
				})(h.accessibility || (h.accessibility = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping ||
			(k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var m = function (c) {
						function b(a, e, f) {
							c.call(this, a, f);
							this.respectDrawingVertexOrder = !1;
							this._arrowShapeTemplate = [[0, 0], [-24, 24], [-24, 12], [-96, 12], [-96, -12], [-24, -12], [-24, -24], [0, 0]];
							this._leftArrowShapeTemplate = [[0, 0], [24, 24], [24, 12], [96, 12], [96, -12], [24, -12], [24, -24], [0, 0]];
							this._rightArrowShapeTemplate = [[0, 0], [-24, 24], [-24, 12], [-96, 12], [-96, -12], [-24, -12], [-24, -24], [0, 0]];
							this._upArrowShapeTemplate = [[0, 0], [-24, 24], [-12, 24], [-12, 96],
								[12, 96], [12, 24], [24, 24], [0, 0]];
							this._downArrowShapeTemplate = [[0, 0], [-24, -24], [-12, -24], [-12, -96], [12, -96], [12, -24], [24, -24], [0, 0]];
							this._triangleShapeTemplate = [[0, -48], [41.56921938165306, 24], [-41.56921938165306, 24], [0, -48]];
							this._rectangleShapeTemplate = [[0, -48], [96, -48], [96, 0], [0, 0], [0, -48]];
							this._defaultOptions = this._options = this._editObject = this._drawObject = null;
							this._active = !1;
							this._createGeometryDeferred = this._graphic = null;
							this._isPlottingPolyGeometry = !1;
							this._ghostLine = this._vertexAnchor = this._lastVertexPosition =
								null;
							this._handles = [];
							this._lastSnappingPoint = this._dblClickHandlerToken = this._editCompletedHandle = this._polyGeometryKeyDownHandle = null;
							var l = Modernizr && !!Modernizr.touch,
							l = {
								enableEditing : !0,
								vertexOffsetX : 10,
								vertexOffsetY : 10,
								preciseVertexOffsetX : 1,
								preciseVertexOffsetY : 1,
								vertexSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, l ? 20 : 12, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.5]), 1), new esri.Color([128, 128, 128])),
								selectedVertexSymbol : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, l ? 25 : 15, null, new esri.Color([0, 0, 255, 0.75]))
							};
							this._defaultOptions = dojo.mixin(l, e || {});
							this._points = [];
							this._drawObject = new esri.toolbars.Draw(a, e);
							this._twoClicksWithin300MsFixup();
							this._editObject = new b.EditInternal(a, null, f);
							this.fillSymbol = this._drawObject.fillSymbol;
							this.lineSymbol = this._drawObject.lineSymbol;
							this.markerSymbol = this._drawObject.markerSymbol;
							this.respectDrawingVertexOrder = this._drawObject.respectDrawingVertexOrder;
							this.setVertexSymbol(this._defaultOptions.vertexSymbol);
							this.setSelectedVertexSymbol(this._defaultOptions.selectedVertexSymbol);
							this.app && this.app.event("SnappingFeedbackEvent").subscribe(this, this._handleSnappingEvent)
						}
						__extends(b, c);
						b.createEllipse = function (a) {
							var b = a.center,
							f = a.longAxis || 48,
							l = a.shortAxis || 24,
							c = a.numberOfPoints || 60,
							d = a.map;
							a = [];
							for (var r = 2 * Math.PI / c, m = 0; m < c; m++) {
								var g = Math.cos(m * r),
								h = Math.sin(m * r),
								g = d.toMap(new esri.geometry.ScreenPoint({
											x : f * g + b.x,
											y : l * h + b.y
										}));
								a.push(g)
							}
							a.push(a[0]);
							b = new esri.geometry.Polygon(d.spatialReference);
							b.addRing(a);
							return b
						};
						b.createCircle = function (a) {
							return b.createEllipse({
								center : a.center,
								longAxis : a.radius,
								shortAxis : a.radius,
								numberOfPoints : a.numberOfPoints,
								map : a.map
							})
						};
						b.prototype.activate = function (a, e) {
							var f = this;
							(this._active || this._geometryType) && this.deactivate();
							this._handles.push(this.app.map.on("click", function (a) {
									return f.app.trace.debug("[DrawTool] map-click")
								}));
							this._handles.push(this.app.map.on("dbl-click", function (a) {
									return f.app.trace.debug("[DrawTool] map-double-click")
								}));
							this._active = !0;
							this._geometryType = a;
							this._options = dojo.mixin(dojo.mixin({}, this._defaultOptions), e || {});
							a === b.MULTI_POINT && (this._options.enableEditing = !1);
							this.setVertexSymbol(this._options.vertexSymbol);
							this.setSelectedVertexSymbol(this._options.selectedVertexSymbol);
							this._handles.push(dojo.aspect.after(this._drawObject, "onDrawEnd", dojo.hitch(this, "onDrawEnd"), !0));
							this._handles.push(dojo.aspect.after(this._drawObject, "onDrawComplete", dojo.hitch(this, "onDrawComplete"), !0));
							this._drawObject && "function" ===
							typeof this._drawObject._onClickHandler && this._handles.push(dojo.aspect.after(this._drawObject, "_onClickHandler", dojo.hitch(this, "_onClickHandler"), !0));
							this._extraPointOnTouchDevicesFixup();
							this.activateMouseControls();
							this._supportsKeyboardInput(this._geometryType) && this.activateKeyboardControls();
							this.onActivate();
							this.raiseGraphicDrawActivated({
								sender : this,
								geometryType : a
							})
						};
						b.prototype.deactivate = function () {
							var a = this._geometryType;
							this._active = !1;
							this._clear();
							this.setInputMethod(null);
							this._dblClickHandlerToken &&
							(this._dblClickHandlerToken.remove(), this._dblClickHandlerToken = null);
							this._handles.forEach(function (a) {
								a.remove()
							});
							this._handles.length = 0;
							this._geometryType = this.vertexSymbol = this.selectedVertexSymbol = null;
							this.onDeactivate();
							this.raiseGraphicDrawDeactivated({
								sender : this,
								geometryType : a
							})
						};
						b.prototype.finishDrawing = function () {
							switch (this.inputMethod) {
							case g.InputMethod.MOUSE:
								this._drawObject.finishDrawing();
								this._syncPointsCollection();
								break;
							case g.InputMethod.KEYBOARD:
								this._finishKeyboardDrawing()
							}
						};
						b.prototype.setFillSymbol = function (a) {
							this.fillSymbol = a;
							this._drawObject.setFillSymbol(a)
						};
						b.prototype.setLineSymbol = function (a) {
							this.lineSymbol = a;
							this._drawObject.setLineSymbol(a)
						};
						b.prototype.setMarkerSymbol = function (a) {
							this.markerSymbol = a;
							this._drawObject.setMarkerSymbol(a)
						};
						b.prototype.setRespectDrawingVertexOrder = function (a) {
							this.respectDrawingVertexOrder = a;
							this._drawObject.setRespectDrawingVertexOrder(a)
						};
						b.prototype.setVertexSymbol = function (a) {
							this.vertexSymbol = a
						};
						b.prototype.setSelectedVertexSymbol =
						function (a) {
							this.selectedVertexSymbol = a
						};
						b.prototype.activateMouseControls = function (a) {
							void 0 === a && (a = !0);
							c.prototype.activateMouseControls.call(this, a);
							this._geometryType && (this._drawObject.__attached_stopEvent = !0, this._drawObject.activate(this._geometryType, this._options))
						};
						b.prototype.deactivateMouseControls = function (a) {
							void 0 === a && (a = !0);
							c.prototype.deactivateMouseControls.call(this, a);
							this._drawObject.__attached_stopEvent = !0;
							this._drawObject.deactivate()
						};
						b.prototype.raiseGraphicDrawActivated =
						function (a) {
							this.app.event("GraphicDrawActivatedEvent").publish(a)
						};
						b.prototype.raiseGraphicDrawDeactivated = function (a) {
							this.app.event("GraphicDrawDeactivatedEvent").publish(a)
						};
						b.prototype.raiseGraphicVertexAdded = function (a) {
							this.app.event("GraphicVertexAddedEvent").publish(a)
						};
						b.prototype.raiseGraphicVertexMoved = function (a) {
							this.app.event("GraphicVertexMovedEvent").publish(a)
						};
						b.prototype.on = function (a, b) {
							throw Error("[geocortex.essentialsHtmlViewer.mapping.infrastructure.accessibilit.Draw::on] On style events not implemented yet. Use connect instead.");
						};
						b.prototype.onActivate = function () {};
						b.prototype.onDeactivate = function () {};
						b.prototype.onDrawComplete = function (a) {
							this.inputMethod == g.InputMethod.MOUSE && this._clear()
						};
						b.prototype.onDrawEnd = function (a) {
							this.app.trace.debug("[DrawTool] Number of vertices drawn " + this._vertexCount(a));
							this.inputMethod == g.InputMethod.MOUSE && this._clear();
							this.app.event("GraphicDrawCompletedEvent").publish(a)
						};
						b.prototype.onKeyboardStart = function () {
							var a = this;
							c.prototype.onKeyboardStart.call(this);
							this.deactivateMouseControls();
							var b = this._map.extent.getCenter();
							this._plotShape(b, this._geometryType).then(function (b) {
								return a._editShape(b)
							})
						};
						b.prototype.onKeyboardStop = function (a) {
							void 0 === a && (a = !1);
							c.prototype.onKeyboardStop.call(this, a);
							this._graphic && !a ? (a = this._graphic.geometry, this._clear(), this._drawEnd(a)) : this._clear()
						};
						b.prototype._onKeyDown = function (a) {
							c.prototype._onKeyDown.call(this, a);
							if (!this.suspended && this._active && this.inputMethod !== g.InputMethod.MOUSE) {
								var b = !1;
								switch (a.keyCode || a.which) {
								case dojo.keys.ENTER:
								case dojo.keys.NUMPAD_ENTER:
									this.toggleKeyboardMode();
									b = !0;
									break;
								case dojo.keys.ESCAPE:
									this.onKeyboardStop(!0),
									b = !0
								}
								b && (a.preventDefault(), a.stopPropagation())
							}
						};
						b.prototype._onClickHandler = function (a) {
							this.inputMethod === g.InputMethod.MOUSE && this._syncPointsCollection()
						};
						b.prototype._supportsKeyboardInput = function (a) {
							switch (a) {
							case b.ARROW:
							case b.CIRCLE:
							case b.DOWN_ARROW:
							case b.ELLIPSE:
							case b.EXTENT:
							case b.LEFT_ARROW:
							case b.MULTI_POINT:
							case b.POINT:
							case b.POLYGON:
							case b.POLYLINE:
							case b.RECTANGLE:
							case b.RIGHT_ARROW:
							case b.TRIANGLE:
							case b.UP_ARROW:
								return !0
							}
							return !1
						};
						b.prototype._finishKeyboardDrawing = function (a) {
							void 0 === a && (a = !0);
							if (this._active) {
								var e,
								f = this._map.spatialReference,
								l = this._points.slice(0, this._points.length);
								switch (this._geometryType) {
								case b.POLYLINE:
									if (!this._graphic || 2 > l.length)
										return;
									e = new esri.geometry.Polyline(f);
									e.addPath(l);
									this._graphic.setGeometry(e);
									break;
								case b.POLYGON:
									if (!this._graphic || 2 > l.length)
										return;
									l.push(l[0].offset(0, 0));
									esri.geometry.Polygon.prototype.isClockwise(l) || this.respectDrawingVertexOrder || (this.app.trace.debug("Polygons drawn in anti-clockwise direction will be reversed to be clockwise."),
										l.reverse());
									e = new esri.geometry.Polygon(f);
									e.addRing(l);
									this._graphic.setGeometry(e);
									break;
								case b.MULTI_POINT:
									e = new esri.geometry.Multipoint(f);
									l.forEach(function (a) {
										e.addPoint(a)
									});
									this._graphic.setGeometry(e);
									break;
								default:
									if (!this._graphic || !this._graphic.geometry)
										return;
									e = this._graphic.geometry
								}
								if (a)
									this.onKeyboardStop()
							}
						};
						b.prototype._clear = function () {
							this._graphic && this._map.graphics.remove(this._graphic);
							this._ghostLine && this._map.graphics.remove(this._ghostLine);
							this._vertexAnchor && this._map.graphics.remove(this._vertexAnchor);
							this._editCompletedHandle && this._editCompletedHandle.remove();
							this._polyGeometryKeyDownHandle && this._polyGeometryKeyDownHandle.remove();
							this._editObject && this._editObject.deactivate();
							this._polyGeometryKeyDownHandle = this._editCompletedHandle = this._createGeometryDeferred = this._graphic = this._vertexAnchor = this._ghostLine = null;
							this._isPlottingPolyGeometry = !1;
							this._lastVertexPosition = null;
							this.suspended = !1;
							this._points.length = 0;
							this.deactivateMouseControls();
							this._supportsKeyboardInput(this._geometryType) &&
							this.deactivateKeyboardControls();
							this.setInputMethod(null);
							this._active && (this.activateMouseControls(), this._supportsKeyboardInput(this._geometryType) && this.activateKeyboardControls())
						};
						b.prototype._drawEnd = function (a) {
							if (a) {
								this.onDrawEnd(a);
								var b,
								f = this._map.spatialReference;
								f && (f.isWebMercator() ? b = esri.geometry.webMercatorToGeographic(a) : 4326 === f.wkid && (b = esri.geometry.fromJson(a.toJson())));
								this.onDrawComplete({
									geometry : a,
									geographicGeometry : b
								})
							}
						};
						b.prototype._moveVertexAnchor = function (a, e) {
							if (this._vertexAnchor &&
								!isNaN(a) && !isNaN(e)) {
								var f = this._vertexAnchor.geometry,
								l = this._map.toMap(this._map.toScreen(f).offset(a, e)),
								f = f.offset(l.x - f.x, l.y - f.y);
								-1 < [b.POLYLINE, b.POLYGON].indexOf(this._geometryType) && this._updateGhostLine(f);
								this._vertexAnchor.setGeometry(f).setSymbol(this.selectedVertexSymbol);
								this._vertexAnchor.getDojoShape().moveToFront();
								f = {
									sender : this,
									mapPoint : f,
									screenPoint : this._map.toScreen(f),
									snappingPoint : this._lastSnappingPoint
								};
								this.raiseGraphicVertexMoved(f)
							}
						};
						b.prototype._handleSnappingEvent =
						function (a) {
							this._active && this._editObject.isActive() || (this._lastSnappingPoint = a.snappingPoint) && this._ghostLine && this._updateGhostLine(this._lastSnappingPoint)
						};
						b.prototype._updateGhostLine = function (a) {
							if (this._points && 0 < this._points.length) {
								var b = this._ghostLine.geometry;
								b.setPoint(0, 0, this._points[this._points.length - 1].offset(0, 0));
								b.setPoint(0, 1, a);
								this._ghostLine.setGeometry(b)
							}
						};
						b.prototype._addVertex = function (a) {
							var e = a;
							this._lastSnappingPoint && (a = this._lastSnappingPoint);
							var f;
							this._points.push(a.offset(0,
									0));
							switch (this._geometryType) {
							case b.POLYLINE:
								1 === this._points.length ? (f = new esri.geometry.Polyline(this._map.spatialReference), f.addPath(this._points), this._graphic = this._map.graphics.add(new esri.Graphic(f, this.lineSymbol)), f = new esri.geometry.Polyline(this._map.spatialReference), f.addPath([a.offset(0, 0), a.offset(0, 0)]), this._ghostLine = this._map.graphics.add(new esri.Graphic(f, this.lineSymbol))) : (f = this._graphic.geometry, f.insertPoint(0, f.paths[0].length, a.offset(0, 0)), this._graphic.setGeometry(f).setSymbol(this.lineSymbol),
									f = this._ghostLine.geometry, f.setPoint(0, 0, a.offset(0, 0)), f.setPoint(0, 1, a.offset(0, 0)), this._ghostLine.setGeometry(f));
								break;
							case b.POLYGON:
								1 === this._points.length ? (f = new esri.geometry.Polygon(this._map.spatialReference), f.addRing(this._points), this._graphic = this._map.graphics.add(new esri.Graphic(f, this.fillSymbol)), f = new esri.geometry.Polyline(this._map.spatialReference), f.addPath([a.offset(0, 0), a.offset(0, 0)]), this._ghostLine = this._map.graphics.add(new esri.Graphic(f, this.fillSymbol))) : (f = this._graphic.geometry,
									f.insertPoint(0, f.rings[0].length, a.offset(0, 0)), this._graphic.setGeometry(f).setSymbol(this.fillSymbol), f = this._ghostLine.geometry, f.setPoint(0, 0, a.offset(0, 0)), f.setPoint(0, 1, a.offset(0, 0)), this._ghostLine.setGeometry(f));
								break;
							case b.MULTI_POINT:
								1 === this._points.length ? (f = new esri.geometry.Multipoint(this._map.spatialReference), f.addPoint(a.offset(0, 0)), this._graphic = this._map.graphics.add(new esri.Graphic(f, this.markerSymbol))) : (f = this._graphic.geometry, f.addPoint(a.offset(0, 0)), this._graphic.setGeometry(f).setSymbol(this.markerSymbol))
							}
							this._lastVertexPosition =
								e.offset(0, 0);
							this._vertexAnchor.setGeometry(e.offset(0, 0)).setSymbol(this.selectedVertexSymbol);
							this._vertexAnchor.getDojoShape().moveToFront()
						};
						b.prototype._drawPolyGeometry = function (a, b) {
							var f = this;
							if (!a || this._isPlottingPolyGeometry)
								return Promise.resolve(null);
							this._lastSnappingPoint && (a = this._lastSnappingPoint);
							this._isPlottingPolyGeometry = !0;
							this.app.map.disableMapNavigation();
							this.suspend();
							this._lastVertexPosition = null;
							this._vertexAnchor = this._map.graphics.add(new esri.Graphic(a.offset(0,
											0), this.selectedVertexSymbol));
							var l = {
								sender : this,
								mapPoint : a,
								screenPoint : this._map.toScreen(a),
								snappingPoint : this._lastSnappingPoint
							};
							this.raiseGraphicVertexMoved(l);
							this._polyGeometryKeyDownHandle && (this._polyGeometryKeyDownHandle.remove(), this._polyGeometryKeyDownHandle = null);
							var c = null;
							return (new Promise(function (a, b) {
									return f._polyGeometryKeyDownHandle = f._drawPolyGeometry_handleKeyDown(a, b)
								})).then(function (a) {
								return c = a
							})["catch"](function () {
								f.onKeyboardStop(!0);
								return c = null
							}).lastly(function () {
								f._isPlottingPolyGeometry =
									!1;
								f.app.map.enableMapNavigation();
								f._polyGeometryKeyDownHandle && (f._polyGeometryKeyDownHandle.remove(), f._polyGeometryKeyDownHandle = null);
								f.resume();
								return c
							})
						};
						b.prototype._drawPolyGeometry_handleKeyDown = function (a, b) {
							var f = this;
							return dojo.on(this._map.root, "keydown", function (l) {
								var c = l.altKey,
								p = c ? f._options.preciseVertexOffsetX : f._options.vertexOffsetX,
								c = c ? f._options.preciseVertexOffsetY : f._options.vertexOffsetY;
								switch (l.keyCode || l.which) {
								case dojo.keys.UP_ARROW:
								case dojo.keys.NUMPAD_8:
									f._moveVertexAnchor(0,
										-c);
									break;
								case dojo.keys.RIGHT_ARROW:
								case dojo.keys.NUMPAD_6:
									f._moveVertexAnchor(p, 0);
									break;
								case dojo.keys.DOWN_ARROW:
								case dojo.keys.NUMPAD_2:
									f._moveVertexAnchor(0, c);
									break;
								case dojo.keys.LEFT_ARROW:
								case dojo.keys.NUMPAD_4:
									f._moveVertexAnchor(-p, 0);
									break;
								case dojo.keys.PAGE_UP:
								case dojo.keys.NUMPAD_9:
									f._moveVertexAnchor(p, -c);
									break;
								case dojo.keys.PAGE_DOWN:
								case dojo.keys.NUMPAD_3:
									f._moveVertexAnchor(p, c);
									break;
								case dojo.keys.END:
								case dojo.keys.NUMPAD_1:
									f._moveVertexAnchor(-p, c);
									break;
								case dojo.keys.HOME:
								case dojo.keys.NUMPAD_7:
									f._moveVertexAnchor(-p,
										-c);
									break;
								case dojo.keys.ENTER:
								case dojo.keys.NUMPAD_ENTER:
									d.GeometryUtils.pointsAreEqual(f._vertexAnchor.geometry, f._lastVertexPosition) ? (f._graphic && f._map.graphics.remove(f._graphic), f._vertexAnchor && f._map.graphics.remove(f._vertexAnchor), f._finishKeyboardDrawing(!1), a(f._graphic ? f._graphic.geometry : null)) : (p = f._vertexAnchor.geometry, f._addVertex(p), p = {
											sender : f,
											mapPoint : p,
											screenPoint : f._map.toScreen(p),
											snappingPoint : f._lastSnappingPoint
										}, f.raiseGraphicVertexAdded(p));
									break;
								case dojo.keys.ESCAPE:
									b(null);
									break;
								default:
									return
								}
								l.preventDefault();
								l.stopPropagation()
							})
						};
						b.prototype._plotShape = function (a, e) {
							var f = this._map.toScreen(a);
							switch (e) {
							case b.POINT:
								return Promise.resolve(a.offset(0, 0));
							case b.POLYLINE:
								return this._drawPolyGeometry(a, e);
							case b.POLYGON:
								return this._drawPolyGeometry(a, e);
							case b.MULTI_POINT:
								return this._drawPolyGeometry(a, e);
							case b.ARROW:
								return Promise.resolve(this._toPolygon(this._arrowShapeTemplate, f.x, f.y));
							case b.LEFT_ARROW:
								return Promise.resolve(this._toPolygon(this._leftArrowShapeTemplate,
										f.x, f.y));
							case b.RIGHT_ARROW:
								return Promise.resolve(this._toPolygon(this._rightArrowShapeTemplate, f.x, f.y));
							case b.UP_ARROW:
								return Promise.resolve(this._toPolygon(this._upArrowShapeTemplate, f.x, f.y));
							case b.DOWN_ARROW:
								return Promise.resolve(this._toPolygon(this._downArrowShapeTemplate, f.x, f.y));
							case b.TRIANGLE:
								return Promise.resolve(this._toPolygon(this._triangleShapeTemplate, f.x, f.y));
							case b.RECTANGLE:
							case b.EXTENT:
								return Promise.resolve(this._toPolygon(this._rectangleShapeTemplate, f.x - 48, f.y + 24));
							case b.CIRCLE:
								return f = b.createCircle({
										center : f,
										radius : 48,
										numberOfPoints : 60,
										map : this._map
									}),
								Promise.resolve(f);
							case b.ELLIPSE:
								return f = b.createEllipse({
										center : f,
										longAxis : 48,
										shortAxis : 24,
										numberOfPoints : 60,
										map : this._map
									}),
								Promise.resolve(f)
							}
							return Promise.resolve(null)
						};
						b.prototype._editShape = function (a) {
							if (a)
								if (!1 === this._options.enableEditing)
									this._clear(), this._drawEnd(a);
								else {
									this.suspend();
									var b;
									switch (a.type) {
									case "point":
									case "multipoint":
										b = this.markerSymbol;
										break;
									case "polyline":
										b = this.lineSymbol;
										break;
									case "polygon":
									case "extent":
										b = this.fillSymbol
									}
									var f = this._getEditMode(this._geometryType);
									this._graphic = this._map.graphics.add(new esri.Graphic(a, b));
									this._editCompletedHandle && (this._editCompletedHandle.remove(), this._editCompletedHandle = null);
									this._editCompletedHandle = dojo.aspect.after(this._editObject, "onDeactivate", dojo.hitch(this, "_onEditShapeCompleted"), !0);
									this._editObject.activate(f.mode, this._graphic, f.options)
								}
						};
						b.prototype._onEditShapeCompleted = function (a, b, f) {
							a = f ? !!f.isModified :
								!1;
							f = f ? !!f.cancelled : !1;
							b && a && (this._graphic = b);
							this.resume();
							this.onKeyboardStop(f)
						};
						b.prototype._toPolygon = function (a, b, f) {
							var l = this._map;
							a = a.map(function (a) {
									return l.toMap(new esri.geometry.ScreenPoint(a[0] + b, a[1] + f))
								});
							var c = new esri.geometry.Polygon(l.spatialReference);
							c.addRing(a);
							return c
						};
						b.prototype._syncPointsCollection = function () {
							this._points = this._drawObject._points
						};
						b.prototype._getEditMode = function (a) {
							var e = {
								mode : 0,
								options : {}

							};
							switch (a) {
							case b.POINT:
								e.mode = g.Edit.MOVE;
								break;
							case b.MULTI_POINT:
								e.mode =
									g.Edit.EDIT_VERTICES;
								e.options.allowAddVertices = !1;
								e.options.allowDeleteVertices = !0;
								break;
							case b.POLYLINE:
							case b.ARROW:
							case b.LEFT_ARROW:
							case b.RIGHT_ARROW:
							case b.UP_ARROW:
							case b.DOWN_ARROW:
							case b.TRIANGLE:
							case b.RECTANGLE:
							case b.POLYGON:
								e.mode = g.Edit.MOVE | g.Edit.ROTATE | g.Edit.SCALE | g.Edit.EDIT_VERTICES;
								e.options.allowAddVertices = !0;
								e.options.allowDeleteVertices = !0;
								e.options.uniformScaling = !1;
								break;
							case b.EXTENT:
								e.mode = g.Edit.MOVE | g.Edit.SCALE;
								e.options.allowAddVertices = !1;
								e.options.allowDeleteVertices =
									!1;
								e.options.uniformScaling = !1;
								break;
							case b.CIRCLE:
								e.mode = g.Edit.MOVE | g.Edit.SCALE;
								e.options.uniformScaling = !0;
								break;
							case b.ELLIPSE:
								e.mode = g.Edit.MOVE | g.Edit.ROTATE | g.Edit.SCALE,
								e.options.uniformScaling = !1
							}
							return e
						};
						b.prototype._vertexCount = function (a) {
							return a && "polyline" === a.type ? a.paths[0].length : a && "polygon" === a.type ? a.rings[0].length - 1 : a && "multipoint" === a.type ? a.points.length : 0
						};
						b.prototype._twoClicksWithin300MsFixup = function () {
							var a = this,
							b = this._drawObject;
							if (b && "function" === typeof b._onClickHandler) {
								var f =
									b._onClickHandler;
								b._onClickHandler = function (b) {
									return a._twoClicksWithin300MsFixup_handleClick(b, f)
								}
							} else
								this.app.trace.warning("The _drawObject _onClickHandler hook is dysfunctional. Markup and Measurement (tool) functionality may be affected on touch devices.")
						};
						b.prototype._twoClicksWithin300MsFixup_handleClick = function (a, e) {
							var f = !1,
							c = 0,
							n = 0,
							d = function (a) {
								c = a[0].mapPoint.x;
								n = a[0].mapPoint.y
							};
							if (this._geometryType === b.POLYLINE || this._geometryType === b.POLYGON || this._geometryType === b.POINT || this._geometryType ===
								b.MULTI_POINT) {
								if (!f && (a.mapPoint.x !== c || a.mapPoint.y !== n)) {
									f = !0;
									setTimeout(function () {
										f = !1
									}, 300);
									var r = {
										sender : this,
										mapPoint : a.mapPoint,
										screenPoint : a.screenPoint,
										snappingPoint : this._lastSnappingPoint
									};
									e.apply(this._drawObject, arguments);
									this.raiseGraphicVertexAdded(r)
								}
								d(arguments)
							} else
								e.apply(this._drawObject, arguments)
						};
						b.prototype._extraPointOnTouchDevicesFixup = function () {
							var a = this,
							b = function (b) {
								var e = a._drawObject,
								c = !!(require && require.has && require.has("esri-touch"));
								a.app.trace.debug("[DrawTool] IsTouch = " +
									c);
								var d = e ? e._points : null;
								if (d)
									if (c) {
										if (2 <= d.length) {
											var r = d.push;
											d.push = function () {
												a.app.trace.debug("[DrawTool] points.length " + d.length);
												d.push = r
											}
										}
									} else if (2 > d.length || d[d.length - 1].x !== b.mapPoint.x && d[d.length - 1].y !== b.mapPoint.y)
										a._lastSnappingPoint ? a.app.trace.debug("[DrawTool] Bailout due to snapping") : (d.push(b.mapPoint), a.raiseGraphicVertexAdded({
												sender : a,
												mapPoint : b.mapPoint,
												screenPoint : b.screenPoint,
												snappingPoint : a._lastSnappingPoint
											}))
							};
							this._dblClickHandlerToken ? this.app.trace.debug("[DrawTool] No double click subscribed") :
							this._dblClickHandlerToken = this.app.map.on("dbl-click", b)
						};
						b._draw = function () {
							require(["esri/toolbars/draw"], function (a) {
								b.ARROW = a.ARROW;
								b.CIRCLE = a.CIRCLE;
								b.DOWN_ARROW = a.DOWN_ARROW;
								b.ELLIPSE = a.ELLIPSE;
								b.EXTENT = a.EXTENT;
								b.FREEHAND_POLYGON = a.FREEHAND_POLYGON;
								b.FREEHAND_POLYLINE = a.FREEHAND_POLYLINE;
								b.LEFT_ARROW = a.LEFT_ARROW;
								b.LINE = a.LINE;
								b.MULTI_POINT = a.MULTI_POINT;
								b.POINT = a.POINT;
								b.POLYGON = a.POLYGON;
								b.POLYLINE = a.POLYLINE;
								b.RECTANGLE = a.RECTANGLE;
								b.RIGHT_ARROW = a.RIGHT_ARROW;
								b.TRIANGLE = a.TRIANGLE;
								b.UP_ARROW =
									a.UP_ARROW
							})
						}
						();
						return b
					}
					(g.AccessibleMapComponent);
					g.Draw = m;
					(function (c) {
						var b = function (a) {
							function b() {
								a.apply(this, arguments)
							}
							__extends(b, a);
							b.prototype.raiseGraphicEditActivated = function (a) {
								this.app.event("GraphicDrawAccessibleEditActivatedEvent").publish(a)
							};
							b.prototype.raiseGraphicEditDeactivated = function (a) {
								this.app.event("GraphicDrawAccessibleEditDeactivatedEvent").publish(a)
							};
							return b
						}
						(d.accessibility.Edit);
						c.EditInternal = b
					})(m = g.Draw || (g.Draw = {}))
				})(d.accessibility || (d.accessibility = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function c() {
						this._tokenImpl = new m
					}
					c.prototype.token = function () {
						return this._tokenImpl
					};
					c.prototype.cancel = function () {
						this._tokenImpl.cancel()
					};
					c.prototype.dispose = function () {
						this._tokenImpl.dispose()
					};
					c.none = function () {
						this._none || (this._none = {
								isCancellationRequested : !1,
								register : function (b) {}

							});
						return this._none
					};
					return c
				}
				();
				d.CancellationTokenSource = g;
				var m = function () {
					function c() {
						this._listeners = [];
						this.isCancellationRequested =
							!1
					}
					c.prototype.register = function (b) {
						this._listeners.push(b)
					};
					c.prototype.cancel = function () {
						this.isCancellationRequested = !0;
						for (var b = 0; b < this._listeners.length; b++)
							this._listeners[b]()
					};
					c.prototype.dispose = function () {
						this._listeners.length = 0
					};
					return c
				}
				()
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (c) {
					c[c.Site = 0] = "Site";
					c[c.User = 1] = "User";
					c[c.Project = 2] = "Project"
				})(d.BookmarkSource || (d.BookmarkSource = {}));
				var g = d.BookmarkSource,
				m = function () {
					function c(b) {
						this._projectBookmarks = [];
						if (!b)
							throw Error('Parameter "app" required.');
						this.app = b
					}
					c.prototype.getAll = function () {
						var b = this;
						return Promise.join(this.getSiteBookmarks(), this.getUserBookmarks()).spread(function (a, e) {
							return (a || []).concat(e).concat(b._projectBookmarks)
						})
					};
					c.prototype.getUserBookmarks =
					function () {
						var b = this;
						return new Promise(function (a, e) {
							b.app.store.get("bookmarks", function (e) {
								var c = [];
								if (e)
									try {
										c = JSON.parse(e)
									} catch (n) {
										b.app.trace.warning("Unable to parse user bookmarks: {0}".format(n))
									}
								e = c.map(function (a) {
										return b._deserialize(a)
									});
								a(e)
							}, e)
						})
					};
					c.prototype.getSiteBookmarks = function () {
						var b = this;
						return this.app.waitUntilSiteInitialized().then(function () {
							return (b.app.site.namedExtents || []).map(function (a) {
								return {
									name : a.displayName,
									extent : a.extent,
									source : g.Site
								}
							})
						})
					};
					c.prototype.getProjectBookmarks =
					function () {
						return Promise.resolve(this._projectBookmarks)
					};
					c.prototype.add = function (b) {
						var a = this;
						if (!b)
							throw Error('Parameter "bookmark" required.');
						b.source = b.source || g.User;
						return b.source === g.Project ? (this._projectBookmarks.push(b), this.app.event("BookmarksModifiedEvent").publish(""), Promise.resolve()) : this.getUserBookmarks().then(function (e) {
							e.push(b);
							return a._save(e)
						})
					};
					c.prototype.remove = function (b) {
						var a = this;
						if (b)
							return "string" === typeof b ? this._projectBookmarks = this._projectBookmarks.filter(function (a) {
									return a.name !==
									b
								}) : "object" === typeof b && (this._projectBookmarks = this._projectBookmarks.filter(function (a) {
											return a !== b
										})), this.getUserBookmarks().then(function (e) {
								"string" === typeof b ? e = e.filter(function (a) {
										return a.name !== b
									}) : "object" === typeof b && (e = e.filter(function (a) {
												return a !== b
											}));
								return a._save(e)
							})
					};
					c.prototype["export"] = function (b) {
						var a = this;
						b = b || [g.Site, g.User, g.Project];
						return this.getAll().then(function (e) {
							return e.filter(function (a) {
								return 0 <= b.indexOf(a.source)
							}).map(function (b) {
								return {
									name : b.name,
									extent : a.app.project.convert.fromEsriGeometry(b.extent)
								}
							})
						})
					};
					c.prototype._save = function (b) {
						var a = this;
						return new Promise(function (e, f) {
							var c = JSON.stringify((b || []).map(function (b) {
										return a._serialize(b)
									}));
							a.app.store.set("bookmarks", c, function (b, f) {
								e();
								a.app.event("BookmarksModifiedEvent").publish(c)
							}, f)
						})
					};
					c.prototype._serialize = function (b) {
						return {
							displayName : b.name,
							extent : this.app.webMap.convert.fromEsriGeometry(b.extent),
							isUserDefined : !0
						}
					};
					c.prototype._deserialize = function (b) {
						return {
							name : b.displayName,
							extent : this.app.webMap.convert.toEsriGeometry(b.extent),
							source : g.User
						}
					};
					return c
				}
				();
				d.BookmarkManager = m
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					return function () {}

				}
				();
				d.AttributeGroup = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function m() {
						this.dataLink = new Observable;
						this.table = new Observable
					}
					m.prototype.toAttributes = function () {
						var c = this.table.get();
						if (!c)
							return null;
						for (var b = {}, a = 0; a < c.columns.length; a++)
							b[c.columns[a]] = 0 < c.rows.length ? c.rows[0].row[a] : null;
						return b
					};
					m.prototype.asAttributeGroup = function () {
						this._attributeGroup || (this._attributeGroup = new d.AttributeGroup, this._attributeGroup.owner = this, this._attributeGroup.attributes = this.toAttributes());
						return this._attributeGroup
					};
					return m
				}
				();
				d.DataLinkingResult = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function m(c, b, a, e, f, l, n) {
						this.value = new Observable("undefined" === typeof c ? "" : c);
						this.name = new Observable("undefined" === typeof b ? "" : b);
						this.alias = new Observable("undefined" === typeof a ? this.name.get() : a);
						this.displayName = new Observable("undefined" === typeof e ? this.alias.get() ? this.alias.get() : this.name.get() : e);
						this.visible = new Observable("undefined" === typeof f ? !0 : f);
						this.type = new Observable("undefined" === typeof n ? "" : n);
						l = l || h.PresentableDelegateFactory.valuePresenterDelegate(null,
								null);
						this.presentableValue = new d.framework.ui.LazyObservable(null, l(c), !0);
						this.displayAsUrl = d.framework.utils.isUrl(c)
					}
					m.ignoreAttribute = function (c) {
						return c && m.ignoreAttributeMatcher.test(c)
					};
					m.ignoreAttributeMatcher = /.*\.Name\(\)$/;
					return m
				}
				();
				h.FeatureAttribute = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function d() {}

					d.DATE_SHORT = "d";
					d.DATE_LONG = "D";
					d.TIME_SHORT = "t";
					d.TIME_LONG = "T";
					d.DATE_TIME_SHORT = "g";
					d.DATE_TIME_LONG = "G";
					d.FULL = "f";
					d.ISO_8601 = "u";
					d.ROUND_TRIP = "u";
					d.DEFAULT = "g";
					d.DEFAULT_PARSING_FORMATS = [d.ISO_8601, d.DATE_TIME_SHORT, d.DATE_TIME_LONG, d.DATE_SHORT, d.DATE_LONG];
					return d
				}
				();
				d.DateFormat = g;
				g = function () {
					function d() {}

					d.NUMBER = "n";
					d.FIXED_POINT = "f";
					d.CURRENCY = "c";
					d.ACCOUNTING = "a";
					d.PERCENT = "p";
					d.ROUND_TRIP = "r";
					d.DEFAULT =
						d.FIXED_POINT;
					return d
				}
				();
				d.NumberFormat = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function m(b, e) {
						void 0 === e && (e = h.DateFormat.DEFAULT);
						if (!b || !b.getTime || isNaN(b.getTime()))
							return "";
						if (!moment)
							throw Error('Error: The "moment.js" library is required for formatting dates.');
						return moment(b).format(a(e))
					}
					function c(a, b, f) {
						void 0 === b && (b = h.NumberFormat.DEFAULT);
						void 0 === f && (f = {});
						if (null === a || void 0 === a || isNaN(a))
							return "";
						b = b || h.NumberFormat.DEFAULT;
						f = f || {};
						if (b === h.NumberFormat.ROUND_TRIP)
							return a.toString();
						if (!_globalize)
							throw Error('Error: The "globalize.js" library is required for formatting numbers.');
						var c = b.toLowerCase();
						if (c === h.NumberFormat.CURRENCY || c === h.NumberFormat.ACCOUNTING)
							b = c + (void 0 !== f.fractionalDigits ? f.fractionalDigits : ""), b += f.currency ? "$" + f.currency.toUpperCase() : "";
						else if (c === h.NumberFormat.NUMBER || c === h.NumberFormat.FIXED_POINT || c === h.NumberFormat.PERCENT)
							b = c + (void 0 !== f.fractionalDigits ? f.fractionalDigits : "");
						f = (_globalize.locale() ? _globalize.locale().locale : "en") + "|" + b;
						c = l[f];
						c || (c = [], b = b.split(";", 3), 1 === b.length ? (c[0] = e(b[0]), c[1] = c[0], c[2] = c[0]) : 2 === b.length ? (c[0] = e(b[0]),
								c[1] = e(b[1]), c[2] = c[0]) : 3 === b.length && (c[0] = e(b[0]), c[1] = e(b[1]), c[2] = e(b[2])), l[f] = c);
						return 0 < a ? c[0](a) : 0 > a ? c[1](a) : c[2](a)
					}
					function b(b, e, c) {
						if (b instanceof Date)
							return b;
						if ("number" === typeof b)
							return new Date(b);
						if (!b || "string" !== typeof b)
							return f;
						if (void 0 === c) {
							var l = parseFloat(b);
							if (!isNaN(l) && isFinite(b))
								return new Date(l)
						}
						if (!moment)
							throw Error('Error: The "moment.js" library is required for parsing dates.');
						c = c || h.DateFormat.DEFAULT_PARSING_FORMATS;
						c = [].concat(c);
						c = c.map(function (b) {
								b = a(b);
								return void 0 === b ? moment.ISO_8601 : b
							});
						b = e ? moment.utc(b, c) : moment(b, c);
						return b.isValid() ? b.toDate() : f
					}
					function a(a) {
						a = a || h.DateFormat.DEFAULT;
						switch (a) {
						case h.DateFormat.DATE_SHORT:
							return "L";
						case h.DateFormat.DATE_LONG:
							return "LL";
						case h.DateFormat.TIME_SHORT:
							return "LT";
						case h.DateFormat.TIME_LONG:
							return "LTS";
						case h.DateFormat.DATE_TIME_SHORT:
							return "lll";
						case h.DateFormat.DATE_TIME_LONG:
							return "LLL";
						case h.DateFormat.FULL:
							return "LLLL";
						case h.DateFormat.ISO_8601:
							break;
						default:
							var b = p[a];
							if (b)
								return b;
							for (var e = a.match(/%?([dfFghHKmMstyz])\1*|\\.|(["'])[^\2]+\2|[^dfFghHKmMstyz\\'"]+/g), b = "", f = 0; f < e.length; f++) {
								var c = e[f];
								c.startsWith("%") && (c = c.slice(1));
								switch (c[0]) {
								case "y":
									b = 2 >= c.length ? b + "YY" : 4 >= c.length ? b + "YYYY" : b + "YYYYY";
									break;
								case "d":
									b = 2 >= c.length ? b + c.slice(0, 2).toUpperCase() : b + c.slice(0, 4);
									break;
								case "f":
								case "F":
									b += c.slice(0, 3).replace(/[Ff]/g, "S");
									break;
								case "t":
									b += "A";
									break;
								case "z":
									b += "Z";
									break;
								case "M":
									b += c.slice(0, 4);
									break;
								case "h":
								case "H":
								case "m":
								case "s":
									b += c.slice(0, 2);
									break;
								case "g":
								case "K":
									console.warn('The "{0}" date format specifier is not supported.'.format(c));
									break;
								default:
									c.startsWith('"') || c.startsWith("'") ? c = c.slice(1, -1) : c.startsWith("\\") && (c = c.slice(1)),
									b += "[" + c + "]"
								}
							}
							return p[a] = b
						}
					}
					function e(a) {
						var b = {},
						e = a.match(/^([acfnp])(\d*)(?:\$([a-zA-Z]{3}))?$/i);
						if (e) {
							a = e[1].toLowerCase();
							var f = Math.min(20, parseInt(e[2])),
							e = e[3];
							a === h.NumberFormat.CURRENCY || a === h.NumberFormat.ACCOUNTING ? e || (e = (e = d.framework.applications[0]) && e.configuration && e.configuration.defaultCurrency ?
								e.configuration.defaultCurrency : "USD") : (e = "", b.minimumFractionDigits = 0, b.maximumFractionDigits = 4);
							a === h.NumberFormat.PERCENT ? b.style = "percent" : a === h.NumberFormat.ACCOUNTING ? b.style = "accounting" : a === h.NumberFormat.FIXED_POINT && (b.useGrouping = !1);
							isNaN(f) || (b.minimumFractionDigits = f, b.maximumFractionDigits = f);
							return e ? _globalize.currencyFormatter(e, b) : _globalize.numberFormatter(b)
						}
						var e = a.match(/[0#]+|\.|,|%|\\.|(["'])[^\1]+\1|[^0#.,\\'"]+/g),
						c = !1,
						l = f = a = "",
						n = "";
						b.minimumFractionDigits = 0;
						b.maximumFractionDigits =
							0;
						b.useGrouping = !1;
						for (var p = 0; p < e.length; p++) {
							var g = e[p];
							switch (g[0]) {
							case ".":
								c = !0;
								break;
							case ",":
								b.useGrouping = !0;
								break;
							case "%":
								b.style = "percent";
								break;
							case "0":
							case "#":
								c ? f += g : a += g;
								break;
							default:
								g.startsWith('"') || g.startsWith("'") ? g = g.slice(1, -1) : g.startsWith("\\") && (g = g.slice(1)),
								a || f ? n += g : l += g
							}
						}
						a && (e = a.indexOf("0"), 0 <= e && (b.minimumIntegerDigits = a.length - e));
						f && (e = f.lastIndexOf("0"), b.minimumFractionDigits = 0 <= e ? e + 1 : 0, b.maximumFractionDigits = Math.min(20, f.length));
						if (a || f) {
							var m = _globalize.numberFormatter(b);
							return function (a) {
								return void 0 !== b.minimumIntegerDigits && 0 > a ? l + "-" + m(-1 * a) + n : l + m(a) + n
							}
						}
						return function (a) {
							return l + n
						}
					}
					var f = new Date(NaN);
					g.format = function (a) {
						return a instanceof Date ? m(a) : "number" === typeof a ? c(a) : null === a || void 0 === a ? "" : a.toString()
					};
					g.formatDate = m;
					g.formatDateFromNow = function (a) {
						if (!a || !a.getTime || isNaN(a.getTime()))
							return "";
						if (!moment)
							throw Error('Error: The "moment.js" library is required for formatting dates.');
						return moment(a).fromNow()
					};
					g.formatNumber = c;
					g.parseDate = function (a,
						e) {
						return b(a, !1, e)
					};
					g.parseUtcDate = function (a, e) {
						return b(a, !0, e)
					};
					g.parseNumber = function (a) {
						if ("number" === typeof a)
							return a;
						if ("boolean" === typeof a)
							return a ? 1 : 0;
						if (null === a || void 0 === a)
							return NaN;
						if (!_globalize)
							throw Error('Error: The "globalize.js" library is required for parsing numbers.');
						a = a.toString().trim();
						a = a.replace(" ", "\u00a0");
						var b = _globalize.locale() ? _globalize.locale().locale : "en",
						e = n[b];
						e || (e = _globalize.numberParser(), n[b] = e);
						b = 1;
						a && "(" === a[0] && ")" === a[a.length - 1] && (b = -1, a = a.slice(1,
									-1));
						e = e(a);
						return isNaN(e) ? parseFloat(a) : e * b
					};
					var l = {},
					n = {},
					p = {}

				})(h.FormatUtils || (h.FormatUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g() {}

					g.typeIdForLayerAndAttributes = function (c, b) {
						return c.typeIdField ? b[c.typeIdField] : null
					};
					g.typeFromLayerAndId = function (c, b) {
						for (var a = 0; a < c.types.length; a++)
							if (c.types[a].id == b)
								return c.types[a];
						return null
					};
					g.makeValueTruthy = function (c) {
						return 0 === c ? "0" : !1 === c ? "false" : c
					};
					g.valuePresenterDelegate = function (c, b) {
						var a,
						e,
						f;
						"string" === typeof c ? (e = c, b && b.layer && (a = b.layer.fields.filter(function (a) {
										return a.name === e
									})[0])) :
						c instanceof d.essentials.Field ? (a = c, e = a.name) : c instanceof h.gis.FieldInfo ? f = c : c && c.name && (e = c.name);
						return function (c) {
							return function () {
								var n = b ? b.featureLayer : null,
								p = b ? b.getType() : null,
								r = n ? n.getField(e) : null;
								if (!r && !a && !f)
									return c instanceof Date ? h.FormatUtils.formatDate(c, b ? b.defaultDateFormat : h.DateFormat.DEFAULT) : "number" === typeof c ? h.FormatUtils.formatNumber(c, b ? b.defaultNumberFormat : h.NumberFormat.DEFAULT) : g.makeValueTruthy(c);
								a && a.hyperlinkLabel && d.framework.utils.isUrl(c) && (c = a.hyperlinkLabel);
								if (b) {
									var E = b.esriFeature.get();
									if (E && E.attributes.hasOwnProperty(e + ".Name()"))
										return g.makeValueTruthy(E.attributes[e + ".Name()"])
								}
								f || (f = r ? h.gis.FieldInfo.fromEsriField(r, n, a) : h.gis.FieldInfo.fromGcxField(a));
								f.isDate() && !f.format && b && b.defaultDateFormat ? f.format = "{0:" + b.defaultDateFormat + "}" : f.isNumeric() && !f.format && b && b.defaultNumberFormat && (f.format = "{0:" + b.defaultNumberFormat + "}");
								return f.formatValue(c, p ? p.id.toString() : null)
							}
						}
					};
					return g
				}
				();
				h.PresentableDelegateFactory = g
			})(k.infrastructure ||
				(k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					return function () {
						this.id = new Observable;
						this.contentType = new Observable;
						this.size = new Observable;
						this.name = new Observable;
						this.url = new Observable
					}
				}
				();
				d.AttachmentInfo = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						return function (c, b, a, e, f) {
							this.geometries = c;
							this.outputSpatialReference = e;
							this.callback = b;
							this.errback = a;
							this.transformation = f
						}
					}
					();
					d.ProjectArgs = m
				})(d.commandArgs || (d.commandArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function m(a, b, e) {
						if (a === b)
							return !0;
						if (null == a || null == b)
							return !1;
						var f = Object.keys(a),
						c = Object.keys(b),
						f = n.difference(f, e),
						c = n.difference(c, e);
						if (f.length !== c.length)
							return !1;
						for (e = 0; e < f.length; e++)
							if (c = f[e], a[c] !== b[c])
								return !1;
						return !0
					}
					function c(a, b) {
						return a === b || a.type === b.type && a.spatialReference && b.spatialReference && a.spatialReference.equals(b.spatialReference)
					}
					function b(a, b) {
						return a === b || a.x == b.x && a.y == b.y && c(a, b)
					}
					function a(a,
						b) {
						var e = c(a, b);
						if (e && a.points.length === b.points.length) {
							for (var f = 0; e && f < a.points.length; f++)
								e = a.points[f][0] === b.points[f][0] && a.points[f][1] === b.points[f][1];
							return e
						}
						return !1
					}
					function e(a, b) {
						var e = c(a, b);
						e && dojo.forEach(a.paths, function (a, f) {
							if (a.length === b.paths[f].length) {
								for (var c = 0; e && c < a.length; c++)
									e = a[c][0] === b.paths[f][c][0] && a[c][1] === b.paths[f][c][1];
								if (!e)
									return e
							} else
								e = !1
						});
						return e
					}
					function f(a, b) {
						var e = c(a, b);
						e && dojo.forEach(a.rings, function (a, f) {
							if (a.length === b.rings[f].length) {
								for (var c =
										0; e && c < a.length; c++)
									e = a[c][0] === b.rings[f][c][0] && a[c][1] === b.rings[f][c][1];
								if (!e)
									return e
							} else
								e = !1
						});
						return e
					}
					function l(a, b) {
						return c(a, b) && a.xmin == b.xmin && a.xmax == b.xmax && a.ymin == b.ymin && a.ymax == b.ymax
					}
					var n = d.framework.utils.ArrayUtils;
					g.stepZoom = function (a, b, e) {
						null == e && (e = a.extent);
						b = d.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(e, 1 / b);
						a.setExtent(b, !!a._fitTiledMapsToExtent);
						return b
					};
					g.stepZoomWithPriority = function (a, b, e, f) {
						null == e && (e = a.getMap().extent);
						var c = a.essentialsMap.getMap();
						e = d.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(e, 1 / b);
						var l = c.getLevel();
						if (void 0 !== l && null !== l && -1 < l)
							return a = l, 1 < b ? a = l + 1 : 1 > b && (a = l - 1), c.setLevel(a), e;
						a.essentialsMap.extentManager.setExtentWithPriority(e, f);
						return e
					};
					g.getExtent = function (a) {
						return a ? "point" == a.type ? new esri.geometry.Extent(a.x, a.y, a.x, a.y, a.spatialReference) : a.getExtent() : null
					};
					g.panToPointWithPriority = function (a, b, e, f) {
						function c(b) {
							a.trace.warning("PanToPoint: " + b.message)
						}
						var l = function (b) {
							var c = null,
							l = null;
							b && 0 < b.length && (c = b[0]);
							a.map && c && ((f || void 0 === f) && a.command("ShowMap").execute(), "point" == c.type ? a.site.essentialsMap.extentManager.centerAtWithPriority(c, e) : "extent" == c.type ? a.site.essentialsMap.extentManager.centerAtWithPriority(c.getCenter(), e) : ("polyline" == c.type || "polygon" == c.type || "multipoint" == c.type) && (l = c.getExtent()) && a.site.essentialsMap.extentManager.centerAtWithPriority(l.getCenter(), e))
						};
						b && b.isInstanceOf(esri.geometry.Geometry) && (b = new d.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs([b],
									l, c), a.command("Project").execute(b))
					};
					g.zoomToExtent = function (a, b, e) {
						this.zoomToExtentWithPriority(a, b, null, null, e)
					};
					g.zoomToExtentWithPriority = function (a, b, e, f) {
						var c = function (b) {
							b && 0 < b.length && ((f || void 0 === f) && a.command("ShowMap").execute(), null == e ? a.map.setExtent(b[0], !!a.map._fitTiledMapsToExtent) : a.site.essentialsMap.extentManager.setExtentWithPriority(b[0], e), a.event("MapStartupExtentChangedEvent").publish(b[0]))
						};
						b && b.isInstanceOf(esri.geometry.Extent) && (!b.spatialReference && a.map.spatialReference ?
							(b.spatialReference = a.map.spatialReference, c([b])) : (b.spatialReference && !b.spatialReference.toJson && (b.spatialReference.wkid || b.spatialReference.wkt) && (b.spatialReference = new esri.SpatialReference(b.spatialReference)), b = new d.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs([b], c, function (b) {
										a.trace.warning("ZoomToExtent: " + b.message)
									}), a.command("Project").execute(b)))
					};
					g.getClosestScale = function (a, b, e) {
						a = a.__tileInfo && a.__tileInfo.lods;
						if (!a || !a.length)
							return e;
						for (var f = 0, c =
								0; c < a.length; c++) {
							if (a[c].scale === e)
								return e;
							if (b === p.LessThan) {
								if (e < a[c].scale)
									continue
							} else if (a[c].scale > e) {
								f = a[c].scale;
								continue
							}
							return b === p.LessThan ? a[c].scale : f
						}
					};
					(function (a) {
						a[a.LessThan = 0] = "LessThan";
						a[a.GreaterThan = 1] = "GreaterThan"
					})(g.ScaleChangeMode || (g.ScaleChangeMode = {}));
					var p = g.ScaleChangeMode;
					g.cloneEsriFeature = function (a) {
						var b = new esri.Graphic(a.toJson());
						b._graphicsLayer = a._graphicsLayer;
						return b
					};
					g.esriFeatureAttributesEqual = m;
					g.esriFeaturesEqual = function (a, b) {
						return a === b ? !0 :
						m(a.attributes, b.attributes, ["timestamp"])
					};
					g.esriGeometriesEqual = function (c, n) {
						switch (c ? c.type : null) {
						case "point":
							return b(c, n);
						case "multipoint":
							return a(c, n);
						case "polyline":
							return e(c, n);
						case "polygon":
							return f(c, n);
						case "extent":
							return l(c, n)
						}
						return !1
					};
					g.compareTypeSR = c;
					g.esriPointsEqual = b;
					g.esriMultipointsEqual = a;
					g.esriPolylinesEqual = e;
					g.esriPolygonsEqual = f;
					g.esriExtentsEqual = l;
					g.findFeatureInLayer = function (a, b) {
						if (!a || !b)
							return null;
						var e = b.objectIdField,
						f = b.graphics;
						if (1 > f.length)
							return null;
						var c = ["timestamp"];
						if (b.editFieldsInfo)
							for (var l in b.editFieldsInfo)
								b.editFieldsInfo.hasOwnProperty(l) && c.push(b.editFieldsInfo[l]);
						l = function (a) {
							var b = 0,
							e;
							for (e in a)
								!d.framework.utils.ArrayUtils.contains(c, e) && a.hasOwnProperty(e) && ++b;
							return b
						};
						var n = f[0].attributes;
						if (l(n) !== l(a.attributes))
							return null;
						var p = 0,
						g = [],
						m = [],
						h;
						for (h in n) {
							var k = d.framework.utils.ArrayUtils.contains(c, h);
							if (!(k || n.hasOwnProperty(h) && a.attributes.hasOwnProperty(h)))
								return null;
							k || (g.push(h), m.push(h), ++p)
						}
						for (h = 0; h <
							p; ++h)
							if (g[h] !== m[h])
								return null;
						for (p = 0; p < f.length; p++)
							if (g = f[p], l(n) === l(a.attributes) && g.attributes[e] === a.attributes[e])
								return g._graphicsLayer = b, g;
						return null
					};
					g.findFeatureInMap = function (a, b, e) {
						var f = null;
						if (e && (f = this.findFeatureInLayer(a, e)))
							return f._graphicsLayer = e, f;
						b = b.getFeatureServices();
						for (var c = 0; c < b.length; c++) {
							var l = b[c].serviceLayer;
							if (!e || l !== e)
								if (f = this.findFeatureInLayer(a, l))
									return f
						}
						!f && a.getLayer && a.getLayer() && (f = a);
						return f
					};
					g.getThumbnailUri = function (a, b, e, f, c) {
						void 0 ===
						e && (e = 150);
						void 0 === f && (f = 150);
						void 0 === c && (c = 20);
						var l = new d.essentials.ReportParameters;
						l.outputFormat = "PNG";
						l.includeData = !0;
						l.imageWidth = e;
						l.imageHeight = f;
						l.resolution = {
							displayName : "custom",
							dpi : c
						};
						l.customExtent = b || a.map.extent;
						l.extentType = d.essentials.ReportParameters.CUSTOM_EXTENT;
						l.populateMapGraphicsLayers(a.map);
						return new Promise(function (b, e) {
							a.site.essentialsMap.exportMap(l, function (a) {
								a.data ? b("data:image/png;base64,{0}".format(a.data)) : a.href ? b(a.href) : b(null)
							}, function (e) {
								a.trace.error("Error exporting map for thumbnail: {0}".format(e.message));
								b(null)
							})
						})
					}
				})(h.MapUtils || (h.MapUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g(c) {
						var b = this;
						this._isAttachmentInfosLoaded = !1;
						this._defaultFieldFormatString = "{0}: {1}";
						this.featureSet = this.featureLayer = this.token = null;
						this.labelFormat = new d.framework.ui.LazyObservable;
						this.minScale = new d.framework.ui.LazyObservable;
						this.maxScale = new d.framework.ui.LazyObservable;
						this.zoomScale = new d.framework.ui.LazyObservable;
						this.zoomFactor = new d.framework.ui.LazyObservable;
						this.zoomExtent = new Observable;
						this.borderColor =
							new d.framework.ui.LazyObservable;
						this.fillColor = new d.framework.ui.LazyObservable;
						this.id = new d.framework.ui.LazyObservable;
						this.attributes = new ObservableCollection;
						this.label = new d.framework.ui.LazyObservable;
						this.plainLabel = new d.framework.ui.LazyObservable;
						this.description = new d.framework.ui.LazyObservable;
						this.descriptionFormat = new d.framework.ui.LazyObservable;
						this.longDescription = new d.framework.ui.LazyObservable;
						this.longDescriptionFormat = new d.framework.ui.LazyObservable;
						this.hyperlinks =
							new ObservableCollection;
						this.extendedProperties = new ObservableCollection;
						this.attachmentInfos = null;
						this.attachmentInfosInitialized = new Observable(!1);
						this.hasAttachments = new Observable(!1);
						this.hasRelationships = new Observable(!1);
						this.hasVisibleRelationships = new Observable(!1);
						this.hasGeometry = new d.framework.ui.LazyObservable;
						this.hasValidGeometry = new d.framework.ui.LazyObservable;
						this.iconUri = new d.framework.ui.LazyObservable;
						this.linkedAttributes = new ObservableCollection;
						this.dataLinkingResults =
							new ObservableCollection;
						this.defaultNumberFormat = h.NumberFormat.DEFAULT;
						this.defaultDateFormat = h.DateFormat.DEFAULT;
						this.isModified = !1;
						this.displayTimeZoneId = this.timeZoneId = null;
						this._resolveLayerFields = this._allowUnsafeContent = !1;
						this._attributeValueBindingTokens = {};
						var a = null;
						c && c.hasOwnProperty("graphic") && (this._graphic = c.graphic);
						c && c.hasOwnProperty("featureLayer") && (this.featureLayer = c.featureLayer);
						c && c.hasOwnProperty("layer") && (a = c.layer) && !this.featureLayer && a.getFeatureLayer().then(function (a) {
							(b.featureLayer =
									a) && b._refreshPresentableValues()
						});
						c && c.hasOwnProperty("resolveLayerFields") ? this._resolveLayerFields = c.resolveLayerFields : a && a.fields && (this._resolveLayerFields = !0);
						c && c.hasOwnProperty("allowUnsafeContent") ? this._allowUnsafeContent = c.allowUnsafeContent : this._allowUnsafeContent = !1;
						c && c.hasOwnProperty("timeZoneId") && (this.timeZoneId = c.timeZoneId);
						c && c.hasOwnProperty("displayTimeZoneId") && (this.displayTimeZoneId = c.displayTimeZoneId);
						this.token = d.framework.utils.alphaNumericToken();
						this.esriFeature =
							new Observable(this._graphic);
						this.esriFeature.bind(this, function () {
							b._graphic = b.esriFeature.get();
							b.loadAttributes(b._resolveLayerFields);
							b._setupLinkedAttributes();
							b.attachmentInfos.clear();
							b._isAttachmentInfosLoaded = !1;
							b.attachmentInfosInitialized.set(!1);
							b._refreshPresentableValues()
						});
						this.connectDelegates();
						if (a) {
							this.layer = a;
							this.hasAttachments.set(this.layer.hasAttachments);
							if (this.layer.relationships && 0 < this.layer.relationships.length)
								for (this.hasRelationships.set(!0), c = 0; c < this.layer.relationships.length; c++)
									if (this.layer.relationships[c].visible) {
										this.hasVisibleRelationships.set(!0);
										break
									}
							null != a.featureHyperlinks && this.hyperlinks.addItems(a.featureHyperlinks)
						}
						this.loadAttributes(this._resolveLayerFields);
						this.isModified = !1;
						this._prepAttachmentInfos();
						this._graphic && this._setupLinkedAttributes()
					}
					g.prototype.getExtendedPropertyByName = function (c) {
						for (var b = 0; b < this.extendedProperties.getLength(); b++) {
							var a = this.extendedProperties.getAt(b);
							if (a && a.name == c)
								return a.value
						}
						return null
					};
					g.prototype.setExtendedProperty = function (c, b) {
						for (var a = 0; a < this.extendedProperties.getLength(); a++) {
							var e =
								this.extendedProperties.getAt(a);
							if (e && e.name == c) {
								e.value = b;
								return
							}
						}
						this.extendedProperties.addItem({
							name : c,
							value : b
						})
					};
					g.prototype.connectDelegates = function () {
						var c = this;
						this.hasGeometry.delegateGetter = function () {
							return !(!c._graphic || !c._graphic.geometry)
						};
						this.hasValidGeometry.delegateGetter = function () {
							return !(!c._graphic || !c._graphic.geometry) && h.GeometryUtils.isValidGeometry(c._graphic.geometry)
						};
						this.id.cacheDelegateResults = !0;
						this.id.delegateGetter = function () {
							var b = "";
							if (c._graphic && c.layer) {
								var a =
									null;
								c.layer && (a = c.layer.getObjectIdFieldName());
								a && c._graphic.attributes && c._graphic.attributes.hasOwnProperty(a) && (b = c._graphic.attributes[a])
							}
							return b
						};
						this.label.delegateGetter = function () {
							var b = null,
							b = c.labelFormat.get(),
							b = c.formatTemplateString(b);
							null != b && void 0 != b && b.toString().trim() || (b = c._getDefaultFieldValue(), void 0 != b && null != b && c.layer && (b = c.layer.displayName && c.layer.displayName.toString().trim() ? c.layer.displayName + (b.toString().trim() ? ", " + b : "") : b.toString().trim() ? b : ""));
							return h.FilterUtils.sanitize(b, {
								allowFrames : !1,
								uriTransformer : function (a, b) {
									return b.type !== h.FilterUtils.UriType.NavigableLink ? a : /^mailto\:/.test(a) ? a : "command:OpenWebPage?" + a
								}
							})
						};
						this.plainLabel.delegateGetter = function () {
							return h.FilterUtils.stripHtml(c.label.get())
						};
						this.labelFormat.delegateGetter = function () {
							return c.layer && c.layer.featureLabel ? c.layer.featureLabel : c.layer && c.layer.displayField ? "{" + c._sanitizeFieldName(c.layer.displayField.name) + "}" : c.featureSet && c.featureSet.esriFeatureSet && c.featureSet.esriFeatureSet.displayFieldName &&
							c.featureSet.layer && c.featureSet.layer.displayName ? c.featureSet.layer.displayName + ", {" + c.featureSet.esriFeatureSet.displayFieldName + "}" : c.featureSet && c.featureSet.esriFeatureSet && c.featureSet.esriFeatureSet.displayFieldName ? "{" + c._sanitizeFieldName(c.featureSet.esriFeatureSet.displayFieldName) + "}" : ""
						};
						this.borderColor.delegateGetter = function () {
							return c.layer && c.layer.featureBorderColor ? c.layer.featureBorderColor : null
						};
						this.fillColor.delegateGetter = function () {
							return c.layer && c.layer.featureFillColor ?
							c.layer.featureFillColor : null
						};
						this.description.delegateGetter = function () {
							var b = c.descriptionFormat.get();
							return c.formatTemplateString(b)
						};
						this.descriptionFormat.delegateGetter = function () {
							return c.layer && c.layer.featureDescription ? c.layer.featureDescription : null
						};
						this.longDescription.delegateGetter = function () {
							var b = c.longDescriptionFormat.get();
							return c.formatTemplateString(b)
						};
						this.longDescriptionFormat.delegateGetter = function () {
							return c.layer && c.layer.featureLongDescription ? c.layer.featureLongDescription :
							c.descriptionFormat.get()
						};
						this.minScale.delegateGetter = function () {
							return c.layer && !isNaN(c.layer.minScale) ? c.layer.minScale : Infinity
						};
						this.maxScale.delegateGetter = function () {
							return c.layer && !isNaN(c.layer.maxScale) ? c.layer.maxScale : null
						};
						this.iconUri.delegateGetter = function () {
							return c.layer && c.layer.iconUri ? c.layer.iconUri : c.featureSet && c.featureSet.iconUri && c.featureSet.iconUri.get() ? c.featureSet.iconUri.get() : null
						};
						this.zoomScale.delegateGetter = function () {
							return c.layer && c.layer.featureZoomScale ?
							c.layer.featureZoomScale : null
						};
						this.zoomFactor.delegateGetter = function () {
							return c.layer && c.layer.featureZoomFactor ? c.layer.featureZoomFactor : null
						}
					};
					g.prototype.withinScaleRange = function (c) {
						return 0 == this.maxScale.get() && Infinity == this.minScale.get() || isNaN(this.maxScale.get()) && isNaN(this.minScale.get()) ? !0 : c ? this.maxScale.get() <= c && c <= this.minScale.get() : !1
					};
					g.prototype.calculateScaleToMakeVisible = function (c) {
						return this.withinScaleRange(c) ? c : c < this.maxScale.get() ? this.maxScale.get() : this.minScale.get()
					};
					g.prototype._sanitizeFieldName = function (c) {
						return c ? c.replace(/\W/g, "") : ""
					};
					g.prototype._getDefaultFieldValue = function () {
						var c = "",
						b = this.esriFeature.get();
						b && this.layer && this.layer.displayField && (c = b.attributes[this.layer.displayField.name], null !== c && void 0 !== c && (c = c.toString().trim()));
						null != c && void 0 != c && c || !b || !b.attributes || (c = b.attributes.OBJECTID, null !== c && void 0 !== c && (c = c.toString().trim()));
						if ((null == c || void 0 == c || !c) && b && b.attributes)
							for (var a in b.attributes)
								if (c = b.attributes[a], null !==
									c && void 0 !== c && (c = c.toString().trim()), c)
									break;
						return String.escapeHtmlEncode(c)
					};
					g.prototype._prepAttachmentInfos = function () {
						var c = this,
						b = new ObservableCollection,
						a = b.get;
						b.get = function () {
							c._isAttachmentInfosLoaded || c._loadAttachmentsInfos();
							return a.call(b)
						};
						var e = b.getItems;
						b.getItems = function () {
							c._isAttachmentInfosLoaded || c._loadAttachmentsInfos();
							return e.call(b)
						};
						var f = b.getAt;
						b.getAt = function (a) {
							c._isAttachmentInfosLoaded || c._loadAttachmentsInfos();
							return f.call(b, a)
						};
						this.attachmentInfos =
							b
					};
					g.prototype.loadAttributes = function (c) {
						var b = this,
						a = {};
						this.attributes.get().forEach(function (e) {
							a[e.name.get()] = e.value.get();
							var c = b._attributeValueBindingTokens[e.name.get()];
							c && e.value.unbind(c)
						});
						this.attributes.clear();
						this._attributeValueBindingTokens = {};
						c = this.getAttributesFromEsriFeature(this._graphic.attributes, c);
						c.forEach(function (e) {
							var c = e.name.get(),
							n = e.value.get();
							b._attributeValueBindingTokens[c] = e.value.bind(b, function () {
									b.isModified = !0
								});
							b.isModified = b.isModified || a.hasOwnProperty(c) &&
								n !== a[c] || !a.hasOwnProperty(c)
						});
						var e = this._graphic.attributes || {};
						this.isModified = this.isModified || Object.keys(a).some(function (a) {
								return !e.hasOwnProperty(a)
							});
						this.attributes.addItems(c)
					};
					g.prototype.getAttributesFromEsriFeature = function (c, b) {
						var a = this,
						e = [];
						if (!1 !== b && this.layer && this.layer.fields) {
							var f = null;
							this.layer.mapService && (f = this.layer.mapService.serviceLayer);
							for (var l = [], n = 0; n < this.layer.fields.length; n++) {
								var p = this.layer.fields[n],
								r;
								c && (p.name || p.alias) && (r = c.hasOwnProperty(p.name) ?
										c[p.name] : c[p.alias]);
								d.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(p.name) ? l.push(p) : "undefined" === typeof r || null == r ? e.push(new h.FeatureAttribute("", p.name, p.alias, p.displayName, p.visible, h.PresentableDelegateFactory.valuePresenterDelegate(p, this), p.dataType)) : e.push(new h.FeatureAttribute(r, p.name, p.alias, p.displayName, p.visible, h.PresentableDelegateFactory.valuePresenterDelegate(p, this), p.dataType))
							}
							for (r = 0; r < l.length; r++) {
								var g = l[r];
								g.visible && (n = e.filter(function (a) {
											return a.name.get() ===
											g.name.substr(0, g.name.length - 7)
										}), n = 1 === n.length ? n[0] : null) && (n.visible.get() || n.visible.set(!0), n.alias.set(g.alias), n.displayName.set(g.displayName))
							}
							if (f instanceof esri.layers.WMSLayer)
								for (var m in c) {
									f = !1;
									l = c[m];
									for (r = 0; r < this.layer.fields.length; r++)
										if (m === this.layer.fields[r].name) {
											f = !0;
											break
										}
									f || e.push(new h.FeatureAttribute(l, m))
								}
						} else if (this.featureLayer)
							this.featureLayer.fields.forEach(function (b) {
								var f = b.alias ? b.alias : b.name;
								if (b.type === d.essentials.EsriFieldTypes.esriFieldTypeDate) {
									var l =
										k.infrastructure.gis.FieldInfo.fromEsriField(b, a.featureLayer);
									l.timeZoneId || (l.timeZoneId = a.timeZoneId);
									l.displayTimeZoneId || (l.displayTimeZoneId = a.displayTimeZoneId);
									!a.layer && a.defaultDateFormat && (l.format = "{0:" + a.defaultDateFormat + "}");
									e.push(new h.FeatureAttribute(c[b.name], b.name, f, f, !0, h.PresentableDelegateFactory.valuePresenterDelegate(l, null)))
								} else
									e.push(new h.FeatureAttribute(c[b.name], b.name, f, f, !0, h.PresentableDelegateFactory.valuePresenterDelegate(b.name, a)))
							});
						else if (this.featureSet &&
							this.featureSet.attributes && 0 < this.featureSet.attributes.length() && c)
							for (r = 0; r < this.featureSet.attributes.length(); r++)
								m = this.featureSet.attributes.getAt(r), f = m.name.get(), d.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(f) || c.hasOwnProperty(f) && e.push(new h.FeatureAttribute(c[f], f, m.alias.get(), m.displayName.get(), m.visible.get(), h.PresentableDelegateFactory.valuePresenterDelegate(f, this)));
						else if (c)
							for (f in c)
								e.push(new h.FeatureAttribute(c[f], f, f, f, !0, h.PresentableDelegateFactory.valuePresenterDelegate(f,
											this)));
						return e
					};
					g.prototype.getAttributes = function (c) {
						c = this.linkedAttributes.get();
						for (var b = [], a = 0; a < c.length; a++) {
							var e = c[a];
							if (0 === a)
								for (var e = this.attributes.get(), f = 0; f < e.length; f++)
									b.push(e[f]);
							else {
								var e = e.attributes,
								l;
								for (l in e)
									e.hasOwnProperty(l) && b.push(new h.FeatureAttribute(e[l], l, l, l, !0, h.PresentableDelegateFactory.valuePresenterDelegate(null, null)))
							}
						}
						return b
					};
					g.prototype.getPrimaryKeyValue = function () {
						var c = null;
						if (this.layer && this.layer.primaryKeyField) {
							var b = this.layer.primaryKeyField;
							b && (c = this._graphic.attributes[b.name])
						}
						return c
					};
					g.prototype.getFeatureUrl = function () {
						var c = null,
						b = this.layer.getLayerUrl ? this.layer.getLayerUrl() : this.layer.url,
						a = null;
						this.layer instanceof d.essentials.Layer ? a = this.getPrimaryKeyValue() : this.layer instanceof esri.layers.Layer && (a = this.layer, a = this.esriFeature.get().attributes[a.objectIdField]);
						b && a && (c = b + "/" + a);
						return c
					};
					g.prototype.getType = function () {
						if (!this.featureLayer)
							return null;
						var c = h.PresentableDelegateFactory.typeIdForLayerAndAttributes(this.featureLayer,
								this._graphic.attributes);
						if (null !== c)
							return h.PresentableDelegateFactory.typeFromLayerAndId(this.featureLayer, c)
					};
					g.prototype.structurallyEquals = function (c) {
						return c && c instanceof d.essentialsHtmlViewer.mapping.infrastructure.Feature ? this === c || this._graphic && c._graphic && this._graphic === c._graphic ? !0 : null != this._graphic && null != c._graphic && this._getLayerUniqueId() == c._getLayerUniqueId() && this.id.get() === c.id.get() ? String.isNullOrEmpty(this.id.get()) ? h.MapUtils.esriFeaturesEqual(this._graphic, c._graphic) :
						!0 : !1 : !1
					};
					g.prototype.equals = function (c) {
						if (!(c && c instanceof d.essentialsHtmlViewer.mapping.infrastructure.Feature && this._graphic && c._graphic))
							return !1;
						if (this === c)
							return !0;
						var b = this._graphic.geometry,
						a = c._graphic.geometry,
						e = this.id.get() === c.id.get() || this.id.get() && c.id.get() && this.id.get() == c.id.get(),
						f = this.layer === c.layer || this.layer && c.layer && this.layer.id == c.layer.id,
						l = this.layer === c.layer || this.layer && c.layer && this.layer.mapService === c.layer.mapService || this.layer && c.layer && this.layer.mapService &&
							c.layer.mapService && this.layer.mapService.id == c.layer.mapService.id,
						n = b === a || b && a && b.declaredClass == a.declaredClass;
						if (!(e && f && l && n && d.essentialsHtmlViewer.mapping.infrastructure.MapUtils.esriFeaturesEqual(this._graphic, c._graphic)))
							return !1;
						if (b === a)
							return !0;
						switch (b.declaredClass) {
						case "esri.geometry.Point":
						case "esri.geometry.ScreenPoint":
							return h.MapUtils.esriPointsEqual(b, a);
						case "esri.geometry.MultiPoint":
							return h.MapUtils.esriMultipointsEqual(b, a);
						case "esri.geometry.Polyline":
							return h.MapUtils.esriPolylinesEqual(b,
								a);
						case "esri.geometry.Polygon":
							return h.MapUtils.esriPolygonsEqual(b, a);
						case "esri.geometry.Extent":
							return h.MapUtils.esriExtentsEqual(b, a);
						default:
							throw Error("Warning: equals() in Feature.ts - declared class does not match known geometry.");
						}
					};
					g.prototype._loadAttachmentsInfos = function () {
						var c = this;
						this._isAttachmentInfosLoaded = !0;
						if (!this.layer)
							throw Error("Error fetching attachment infos: Feature was not associated with any known layer.");
						var b = {
							url : this.getFeatureUrl() + "/attachments/?f=json&ts={0}".format((new Date).getTime()),
							handleAs : "json"
						},
						a = this.layer.mapService && this.layer.mapService.serviceToken ? this.layer.mapService.serviceToken : null,
						e = this.layer;
						!this.layer.mapService && e.credential && e.credential.token && (a = e.credential.token);
						a && (b.url += "&token=" + encodeURIComponent(a));
						e = null;
						try {
							e = this.layer.mapService.serviceLayer.queryAttachmentInfos(parseInt(this.id.get()))
						} catch (f) {
							e = esri.request(b)
						}
						e.then(function (b) {
							if (0 < b.length && !b.attachmentInfos && b instanceof Array) {
								b.attachmentInfos = [];
								for (var e = 0; e < b.length; e++)
									b.attachmentInfos[e] =
										b[e]
							}
							if (b && b.attachmentInfos && 0 < b.attachmentInfos.length)
								for (e = 0; e < b.attachmentInfos.length; e++) {
									var f = b.attachmentInfos[e],
									r = new d.essentialsHtmlViewer.mapping.infrastructure.AttachmentInfo;
									r.id.set(f.id);
									r.contentType.set(f.contentType);
									r.size.set(f.size);
									r.name.set(f.name);
									f = "{0}/attachments/{1}".format(c.getFeatureUrl(), f.id);
									a && (f += "?token=" + a);
									r.url.set(f);
									c.attachmentInfos.addItem(r)
								}
							c.attachmentInfosInitialized.set(!0)
						}, function (a) {
							c.attachmentInfosInitialized.set(!0)
						})
					};
					g.prototype.formatTemplateString =
					function (c) {
						var b = this;
						return c ? c.replace(/{{.+?}}|{.+?}/g, function (a) {
							if (a.match(/{{.+?}}/g))
								return a.substring(1, a.length - 1);
							a = a.substring(1, a.length - 1);
							var e = "",
							f = a.match(/(.*)\.Name\(\)$/);
							f && (a = f[1]);
							for (var f = b.getAttributes(), c = 0; c < f.length; c++)
								if (f[c].name && f[c].name.get() === a || f[c].alias && f[c].alias.get() === a) {
									if (b.layer && b.layer.getFieldByName(a) && d.framework.utils.isUrl(f[c].value.get())) {
										e = f[c].value.get();
										break
									}
									e = f[c].presentableValue.get();
									break
								}
							!e && b.layer && (e = d.essentials.utilities.StringUtilities.replaceLayerTokens(a,
										b.layer));
							!e && b.layer && b.layer.mapService && (e = d.essentials.utilities.StringUtilities.replaceMapServicetokens(a, b.layer.mapService));
							if (!e && (f = {}, b.parseDataLinkId(a, f) && b.dataLinkingResults.get()))
								for (c = 0; c < b.dataLinkingResults.length(); c++) {
									var n = b.dataLinkingResults.getAt(c);
									if (n.dataLink.get() && n.dataLink.get().id === f.dataLinkId) {
										if ("_rowcount" === f.attributeName.toLowerCase())
											e = n.table ? n.table.get().rows.length : 0;
										else if (n.table.get())
											for (c = n.table.get(), n = 0; n < c.columns.length; n++)
												if (c.columns[n].toLowerCase() ===
													f.attributeName.toLowerCase()) {
													0 < c.rows.length && (e = c.rows[0].row[n]);
													break
												}
										break
									}
								}
							e || "RestToken" !== a || (e = d.essentials.RestHelperHTTPService.token);
							b._allowUnsafeContent ? null == e && (e = "") : e = e || 0 === e ? String.escapeHtmlEncode(e.toString()) : "";
							if (null === e || void 0 === e)
								e = "";
							return e
						}) : ""
					};
					g.prototype.parseDataLinkId = function (c, b) {
						var a = c.indexOf(".");
						if (0 > a)
							return !1;
						b.dataLinkId = c.substring(0, a);
						b.attributeName = c.substring(a + 1);
						return !0
					};
					g.prototype._getLayerUniqueId = function () {
						var c = "";
						this.layer && (c = this.layer.id,
							this.layer.mapService && (c = this.layer.mapService.id + "/" + c));
						return c
					};
					g.prototype._setupLinkedAttributes = function () {
						var c = new d.essentialsHtmlViewer.mapping.infrastructure.AttributeGroup;
						c.owner = this._graphic;
						c.attributes = this._graphic.attributes;
						this.linkedAttributes.clear();
						this.linkedAttributes.addItem(c)
					};
					g.prototype._refreshPresentableValues = function () {
						this.attributes.get().forEach(function (c) {
							c.presentableValue.clear();
							c.presentableValue.pulse()
						});
						this.label.clear();
						this.plainLabel.clear();
						this.description.clear();
						this.longDescription.clear();
						this.label.pulse();
						this.plainLabel.pulse();
						this.description.pulse();
						this.longDescription.pulse()
					};
					return g
				}
				();
				h.Feature = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				d.isKmlProperty = "__isKml";
				var g = function (g) {
					function c(b) {
						g.call(this, b);
						var a = (b = this.esriFeature.get()) ? b.attributes || {}

						 : {};
						this.labelFormat.set(a.hasOwnProperty("name") ? "{name}" : "{id}");
						this.descriptionFormat.set("{snippet}");
						this.longDescriptionFormat.set(a.hasOwnProperty("balloonStyleText") ? "{balloonStyleText}" : "{description}");
						b && !b[d.isKmlProperty] && (b[d.isKmlProperty] = !0)
					}
					__extends(c, g);
					return c
				}
				(d.Feature);
				d.KmlFeature = g
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (c) {
					c[c.Unresolved = 0] = "Unresolved";
					c[c.Resolving = 1] = "Resolving";
					c[c.Resolved = 2] = "Resolved"
				})(h.DataLinksState || (h.DataLinksState = {}));
				var g = h.DataLinksState,
				m = function () {
					function c(b) {
						var a = this;
						this.id = "";
						this.featureLayer = null;
						this.displayName = new d.framework.ui.LazyObservable;
						this.features = new ObservableCollection;
						this.attributes = new ObservableCollection;
						this.iconUri = new d.framework.ui.LazyObservable;
						this.extendedProperties = new ObservableCollection;
						this.isSelectedInCollection = new Observable(!1);
						this.dataLinksResolved = new Observable(!1);
						this.defaultNumberFormat = h.NumberFormat.DEFAULT;
						this.defaultDateFormat = h.DateFormat.DEFAULT;
						this._objectIds = new h.Dictionary;
						this._watchHandles = {};
						this._dataLinksState = g.Unresolved;
						var e = null,
						f = null;
						b = b || {};
						b.hasOwnProperty("esriFeatureSet") && (e = b.esriFeatureSet);
						b.hasOwnProperty("featureLayer") && (this.featureLayer = b.featureLayer);
						b.hasOwnProperty("layer") && (f = b.layer);
						b.hasOwnProperty("allowUnsafeContent") ? this._allowUnsafeContent =
							b.allowUnsafeContent : this._allowUnsafeContent = !1;
						b.hasOwnProperty("app") && (this.app = b.app);
						this.defaultDateFormat = b.defaultDateFormat || h.DateFormat.DEFAULT;
						this.defaultNumberFormat = b.defaultNumberFormat || h.NumberFormat.DEFAULT;
						this.uniqueId = "fs_" + d.framework.utils.alphaNumericToken();
						this.esriFeatureSet = e;
						f && (this.layer = f) && this.layer.mapService && (this.id = "{0}/{1}".format(this.layer.mapService.id, this.layer.id));
						this.displayName.delegateGetter = function () {
							return a.layer && a.layer.displayName ? a.layer.displayName :
							""
						};
						this.iconUri.delegateGetter = function () {
							return a.layer && a.layer.iconUri ? a.layer.iconUri : ""
						};
						this.loadFeatures();
						this.loadAttributes()
					}
					Object.defineProperty(c.prototype, "dataLinksState", {
						get : function () {
							return this._dataLinksState
						},
						enumerable : !0,
						configurable : !0
					});
					c.prototype.setDataLinksState = function (b) {
						this._dataLinksState = b;
						this.dataLinksResolved.set(b === g.Resolved)
					};
					c.prototype.getExtendedPropertyByName = function (b) {
						for (var a = 0; a < this.extendedProperties.getLength(); a++) {
							var e = this.extendedProperties.getAt(a);
							if (e && e.name == b)
								return e.value
						}
						return null
					};
					c.prototype.setExtendedProperty = function (b, a) {
						for (var e = 0; e < this.extendedProperties.getLength(); e++) {
							var f = this.extendedProperties.getAt(e);
							if (f && f.name == b) {
								f.value = a;
								return
							}
						}
						this.extendedProperties.addItem({
							name : b,
							value : a
						})
					};
					c.prototype.addFeature = function (b, a) {
						var e = new d.framework.events.CollectionChangedArgs,
						f = this.features.length();
						e.type = "append";
						e.rangeStart = f;
						e.rangeEnd = f;
						e.sender = this.features;
						return this._addFeatureWithoutNotification(b, a) ? (this.features.bindingEvent.publish(e),
							!0) : !1
					};
					c.prototype._addFeatureWithoutNotification = function (b, a) {
						if (!b)
							throw Error("Feature cannot be null.");
						var e = this.features.getItems();
						return a || !this.containsFeature(b) ? (b.featureSet = this, e.push(b), this.esriFeatureSet && this.esriFeatureSet.features && this.esriFeatureSet.features.push(b.esriFeature.get()), !0) : !1
					};
					c.prototype.removeFeature = function (b) {
						if (!b)
							throw Error("Feature cannot be null.");
						var a = b.id.get();
						if (!String.isNullOrEmpty(a) && !this._objectIds.containsKey(a))
							return !1;
						a = new d.framework.events.CollectionChangedArgs;
						a.type = "remove";
						for (var e = this.features.length(); e--; ) {
							var f = this.features.getAt(e);
							if (f && f.structurallyEquals(b))
								return a.rangeStart = e, a.rangeEnd = e, a.sender = this.features, this.features.bindingEvent.publish(a), this._removeWithoutNotificationAt(e), !0
						}
						return !1
					};
					c.prototype._removeWithoutNotificationAt = function (b) {
						var a = this.features.getItems();
						if (0 <= b && b < a.length) {
							var e = a[b],
							f = e.esriFeature.get();
							f && this.esriFeatureSet && this.esriFeatureSet.features && d.framework.utils.ArrayUtils.removeItem(this.esriFeatureSet.features,
								f);
							e.featureSet = null;
							d.framework.utils.ArrayUtils.remove(a, b, b);
							return !0
						}
						return !1
					};
					c.prototype.containsFeature = function (b) {
						if (!b)
							throw Error("Feature cannot be null.");
						var a = b.id.get();
						if (a && this._objectIds.containsKey(a))
							return !0;
						for (a = 0; a < this.features.length(); a++)
							if (this.features.getAt(a).structurallyEquals(b))
								return !0;
						return !1
					};
					c.prototype.clearFeatures = function () {
						if (0 != this.features.length()) {
							var b = new d.framework.events.CollectionChangedArgs;
							b.type = "clear";
							b.rangeStart = 0;
							b.rangeEnd = this.features.length() -
								1;
							b.sender = this.features;
							for (this.features.bindingEvent.publish(b); 0 < this.features.length(); )
								this._removeWithoutNotificationAt(0)
						}
					};
					c.prototype.loadGeometries = function (b, a, e) {
						var f = this,
						c = new dojo.Deferred;
						if (!this.layer) {
							var n = Error("loadGeometries: Layer must be present.");
							d.deferredReject(c, n);
							"function" == typeof e && e(n);
							return c
						}
						if (!this.layer.primaryKeyField)
							return n = Error("loadGeometries: Layer must have a PrimaryKeyField to load geometries."), d.deferredReject(c, n), "function" == typeof e && e(n),
							c;
						var p = this.layer.primaryKeyField.name;
						b || (b = this.features.getItems());
						var r = [];
						if (b)
							for (n = 0; n < b.length; n++) {
								var g = b[n];
								if (!g.hasGeometry.get()) {
									var m = g.esriFeature.get();
									m && m.attributes[p] && r.push(g)
								}
							}
						if (0 < r.length) {
							b = [];
							for (n = 0; n < r.length; n++)
								b.push(r[n].esriFeature.get().attributes[p]);
							n = h.taskUtils.getQueryTask(this.layer);
							g = new esri.tasks.Query;
							g.objectIds = b;
							g.returnGeometry = !0;
							g.outFields = [p];
							this.layer && this.layer.mapService && this.layer.mapService.essentialsMap && this.layer.mapService.essentialsMap.site &&
							this.layer.mapService.essentialsMap.site.getMap() && (g.outSpatialReference = this.layer.mapService.essentialsMap.site.getMap().spatialReference);
							n.execute(g).then(function (b) {
								if (b && b.features && 0 < b.features.length)
									for (var e = 0; e < b.features.length; e++) {
										var n = b.features[e],
										g = f._findFeature(n.attributes[p], p, r);
										g && (g.esriFeature.get().geometry = n.geometry)
									}
								d.deferredResolve(c, void 0);
								"function" == typeof a && a()
							}, function (a) {
								a = Error("loadGeometries: Query error: " + a.message);
								d.deferredReject(c, a);
								"function" ==
								typeof e && e(a)
							})
						} else
							d.deferredResolve(c, void 0), "function" == typeof a && a();
						return c
					};
					c.prototype.findFeatureById = function (b) {
						return this._objectIds.get(b)
					};
					c.prototype.findFeatureByEsriFeature = function (b) {
						var a = null,
						e = b.getLayer();
						if (e && this.layer && this.layer.mapService && this.layer.mapService.serviceLayer !== e)
							return null;
						for (e = 0; e < this.features.length(); e++) {
							var f = this.features.getAt(e);
							if (f.esriFeature && (f.esriFeature.get() === b || h.MapUtils.esriFeaturesEqual(f.esriFeature.get(), b))) {
								a = f;
								break
							}
						}
						return a
					};
					c.prototype._findFeature = function (b, a, e) {
						var f = null,
						c,
						n;
						if (e && 0 < e.length)
							for (c = 0; c < e.length; c++)
								if ((n = e[c].esriFeature.get()) && n.attributes && n.attributes[a] == b) {
									f = e[c];
									break
								}
						return f
					};
					c.prototype.loadFeatures = function () {
						this._watchFeatureSetChanges();
						this.features.clear();
						var b = [],
						a;
						if (this.esriFeatureSet && this.esriFeatureSet.features)
							for (var e = 0; e < this.esriFeatureSet.features.length; ++e) {
								a = this.esriFeatureSet.features[e];
								var f = {
									graphic : a,
									layer : this.layer,
									featureLayer : this.featureLayer,
									resolveLayerFields : !0,
									allowUnsafeContent : this._allowUnsafeContent
								};
								a = a && a[h.isKmlProperty] ? new h.KmlFeature(f) : new h.Feature(f);
								a.featureSet = this;
								a.defaultDateFormat = this.defaultDateFormat;
								a.defaultNumberFormat = this.defaultNumberFormat;
								b.push(a)
							}
						this.features.useThrottling = !1;
						this.features.addItems(b)
					};
					c.prototype.loadAttributes = function () {
						this.attributes.clear();
						var b = [],
						a = [];
						if (this.layer && this.layer.fields) {
							for (var e = 0; e < this.layer.fields.length; e++) {
								var f = this.layer.fields[e];
								d.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(f.name) ?
								a.push(f) : b.push(new h.FeatureAttribute("", f.name, f.alias, f.displayName, f.visible, h.PresentableDelegateFactory.valuePresenterDelegate(f, null)))
							}
							for (e = 0; e < a.length; e++) {
								var c = a[e];
								c.visible && (f = b.filter(function (a) {
											return a.name.get() === c.name.substr(0, c.name.length - 7)
										}), f = 1 === f.length ? f[0] : null) && (f.visible.get() || f.visible.set(!0), f.alias.set(c.alias), f.displayName.set(c.displayName))
							}
						} else if (this.esriFeatureSet && this.esriFeatureSet.features && 0 < this.esriFeatureSet.features.length)
							for (e in a = this.esriFeatureSet.features[0],
								a.attributes)
								a.attributes.hasOwnProperty(e) && b.push(new h.FeatureAttribute("", e, e, e));
						this.attributes.addItems(b)
					};
					c.prototype.featureSetChanged = function (b) {
						if ("append" == b.type || "insert" == b.type)
							for (var a = b.rangeStart; a <= b.rangeEnd; a++) {
								var e = this.features.getAt(a);
								e.featureSet = this;
								var f = e.id.get();
								f && this._objectIds.set(f, e)
							}
						if ("remove" == b.type || "clear" == b.type)
							for (a = b.rangeStart; a <= b.rangeEnd; a++)
								this.features.getAt(a).featureSet = null, (f = this.features.getAt(a).id.get()) && this._objectIds.remove(f)
					};
					c.prototype._applyDataLinks = function (b, a, e, f, c) {
						for (var n = 0; n < b.features.length(); n++) {
							var p = b.features.getAt(n);
							if (0 < p.linkedAttributes.length()) {
								var r = p.linkedAttributes.getAt(0);
								p.linkedAttributes.clear();
								p.linkedAttributes.addItem(r);
								p.dataLinkingResults.clear()
							}
						}
						for (b = 0; b < e.length; b++)
							for (var n = f[b], r = e[b], g = 0; g < n.length; g++) {
								var p = n[g],
								m = new d.essentialsHtmlViewer.mapping.infrastructure.DataLinkingResult;
								m.table.set(p.linkedData);
								m.dataLink.set(r);
								p = a[p.index];
								p.dataLinkingResults.addItem(m);
								c && c(p);
								r.isOneToOne && p.linkedAttributes.addItem(m.asAttributeGroup())
							}
					};
					c.prototype.resolveDataLinks = function (b, a, e, f, c) {
						var n = this,
						d = this;
						if (this.dataLinksState === g.Resolving)
							c && c(this, Error("Currently performing data linking"), e);
						else if ("undefined" === typeof a && (a = !0), d.layer && d.layer.hasDataLinks && 0 < d.features.length()) {
							d.setDataLinksState(g.Resolving);
							var r = this.features.get().slice(),
							m = [],
							m = a ? dojo.filter(d.layer.dataLinks, function (a) {
									return a.visible
								}) : d.layer.dataLinks,
							m = dojo.filter(m, function (a) {
									return !!(a &&
										a.parameters && a.parameters.length)
								}),
							k = [],
							q = 0,
							t = 0,
							y = !1;
							for (a = 0; a < m.length && !y; a++) {
								var u = function (a) {
									return function (c) {
										if (!y && (k[a] = c, q++, q >= m.length)) {
											n._applyDataLinks(d, r, m, k, b);
											d.setDataLinksState(g.Resolved);
											if ("undefined" !== typeof n.app)
												for (c = 0; c < m.length; c++)
													n.app.event("DatalinkResolutionCompletedEvent").publish(m[c].id, d);
											f && f(d, e)
										}
									}
								},
								x = u(a),
								B = function (a) {
									return function (b) {
										t++;
										t >= m.length ? (console.error("There was an error in resolving {0} datalink. Message : {1}".format(m[a].displayName,
													b.message)), y = !0, d.setDataLinksState(g.Unresolved), c && c(d, b, e)) : (console.error("There was an error in resolving {0} datalink. Message : {1}".format(m[a].displayName, b.message)), u(a)(new h.DataLinkingResult))
									}
								}
								(a);
								"undefined" !== typeof this.app && this.app.event("DatalinkResolutionStartedEvent").publish(m[a].id, d);
								m[a].performDataLinking(d.esriFeatureSet, x, B)
							}
						} else
							d.setDataLinksState(g.Resolved), f && f(d, e)
					};
					c.prototype.doWhenDataLinkingCompleted = function (b) {
						var a = this;
						if ("function" === typeof b)
							if (this.dataLinksResolved.get())
								b(this);
							else
								var e = this.dataLinksResolved.bind(this, function (f) {
										f && (a.dataLinksResolved.unbind(e), b(a))
									})
					};
					c.prototype.append = function (b) {
						for (var a = {}, e = 0; e < this.features.length(); e++) {
							var f = this.features.getAt(e),
							c;
							this.layer && this.layer.primaryKeyField && (c = this.layer.primaryKeyField.name);
							if (c) {
								var n = f.esriFeature.get().attributes[c];
								a[n] = f
							}
						}
						for (e = 0; e < b.features.length(); e++)
							f = b.features.getAt(e), b.layer && b.layer.primaryKeyField && (c = b.layer.primaryKeyField.name), c ? (n = f.esriFeature.get().attributes[c], a[n] ||
								this.features.addItem(f)) : this.features.addItem(f)
					};
					c.prototype.union = function (b) {
						for (var a = this.clone(), e = b && b.features ? b.features.length() : 0, f = 0; f < e; f++)
							a.containsFeature(b.features.getAt(f)) || a.addFeature(b.features.getAt(f), !0);
						return a
					};
					c.prototype.unionInPlace = function (b) {
						if (!b || !b.features || 0 === b.features.length())
							return !1;
						var a = new d.framework.events.CollectionChangedArgs;
						a.type = "append";
						a.rangeStart = this.features.length();
						for (var e = !1, f = 0, c = 0; c < b.features.length(); c++) {
							var n = b.features.getAt(c);
							!this.containsFeature(n) && this._addFeatureWithoutNotification(n, !0) && (e = !0, f++)
						}
						e && (a.rangeEnd = a.rangeStart + f - 1, a.sender = this.features, this.features.bindingEvent.publish(a));
						return e
					};
					c.prototype.subtract = function (b) {
						for (var a = this.cloneStructure(), e = 0; null != b && e < this.features.length(); e++)
							b.containsFeature(this.features.getAt(e)) || a.addFeature(this.features.getAt(e));
						return a
					};
					c.prototype.subtractInPlace = function (b) {
						if (!b || !b.features || 0 === b.features.length())
							return !1;
						for (var a = !1, e = this.features.length(); e--; ) {
							var f =
								this.features.getAt(e);
							b.containsFeature(f) && (this._removeWithoutNotificationAt(e), a = !0)
						}
						a && this.features.pulse();
						return a
					};
					c.prototype.intersect = function (b) {
						for (var a = this.cloneStructure(), e = 0; null != b && e < this.features.length(); e++)
							b.containsFeature(this.features.getAt(e)) && a.addFeature(this.features.getAt(e));
						return a
					};
					c.prototype.intersectInPlace = function (b) {
						if (!b || !b.features)
							return !1;
						for (var a = !1, e = this.features.length(); e--; ) {
							var f = this.features.getAt(e);
							b.containsFeature(f) || (this._removeWithoutNotificationAt(e),
								a = !0)
						}
						a && this.features.pulse();
						return a
					};
					c.prototype.clone = function () {
						for (var b = this.cloneStructure(), a = 0; a < this.features.length(); a++)
							b.addFeature(this.features.getAt(a), !0);
						return b
					};
					c.prototype.cloneStructure = function () {
						var b = new c({
								app : this.app,
								layer : this.layer,
								featureLayer : this.featureLayer,
								allowUnsafeContent : this._allowUnsafeContent,
								defaultDateFormat : this.defaultDateFormat,
								defaultNumberFormat : this.defaultNumberFormat
							});
						b.id = this.id;
						b.isSelectedInCollection.set(this.isSelectedInCollection.get());
						b.setDataLinksState(this.dataLinksState);
						b.displayName.set(this.displayName.get());
						b.iconUri.set(this.iconUri.get());
						b.attributes.set(this.attributes.get());
						b.extendedProperties.set(this.extendedProperties.get());
						b.esriFeatureSet = this._cloneEsriStructure(this.esriFeatureSet);
						return b
					};
					c.prototype._cloneEsriStructure = function (b) {
						if (!b)
							return null;
						var a = new esri.tasks.FeatureSet;
						a.displayFieldName = b.displayFieldName;
						a.exceededTransferLimit = b.exceededTransferLimit;
						a.fieldAliases = b.fieldAliases;
						a.geometryType =
							b.geometryType;
						a.spatialReference = b.spatialReference;
						b.fields && (a.fields = b.fields);
						return a
					};
					c.prototype._watchFeatureSetChanges = function () {
						var b = this;
						this._unwatchFeatureSetChanges();
						var a = this.features.bind(this, this.featureSetChanged),
						e = {
							remove : function () {
								return b.features.unbind(a)
							}
						};
						return this._watchHandles.features = e
					};
					c.prototype._unwatchFeatureSetChanges = function () {
						var b = this._watchHandles.features;
						b && b.remove();
						this._watchHandles.features = null
					};
					return c
				}
				();
				h.FeatureSet = m
			})(k.infrastructure ||
				(k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g() {
						this.displayName = new Observable("");
						this.isModified = new Observable(!1);
						this.featureSets = new ObservableCollection;
						this.extendedProperties = new ObservableCollection;
						this.id = "FSC-{0}".format(d.framework.utils.alphaNumericToken());
						this.featureSets.useThrottling = !1
					}
					g.prototype.getExtendedPropertyByName = function (c) {
						for (var b = 0; b < this.extendedProperties.getLength(); b++) {
							var a = this.extendedProperties.getAt(b);
							if (a && a.name == c)
								return a.value
						}
						return null
					};
					g.prototype.setExtendedProperty = function (c, b) {
						for (var a = 0; a < this.extendedProperties.getLength(); a++) {
							var e = this.extendedProperties.getAt(a);
							if (e && e.name == c) {
								e.value = b;
								return
							}
						}
						this.extendedProperties.addItem({
							name : c,
							value : b
						})
					};
					g.prototype.getFeatureSetById = function (c) {
						for (var b = 0; b < this.featureSets.getLength(); ++b) {
							var a = this.featureSets.getAt(b);
							if (a.id == c)
								return a
						}
						return null
					};
					g.prototype.getFeatureSetByLayer = function (c) {
						if (!c)
							return null;
						for (var b = 0; b < this.featureSets.getLength(); ++b) {
							var a = this.featureSets.getAt(b),
							e = a.layer,
							f = c === e || c && e && c.mapService === e.mapService || c && e && c.mapService && e.mapService && c.mapService.id == e.mapService.id;
							if ((c === e || c && e && c.id == e.id) && f)
								return a
						}
						return null
					};
					g.prototype.findFeatureByEsriFeature = function (c) {
						for (var b = 0; b < this.featureSets.getLength(); b++) {
							var a = this.featureSets.getAt(b).findFeatureByEsriFeature(c);
							if (a)
								return a
						}
						return null
					};
					g.prototype.firstFeature = function () {
						for (var c = 0; c < this.featureSets.getLength(); c++) {
							var b = this.featureSets.getAt(c);
							if (0 < b.features.getLength())
								return b.features.getAt(0)
						}
						return null
					};
					g.prototype.countFeatures = function () {
						for (var c = 0, b = 0; b < this.featureSets.length(); b++)
							c += this.featureSets.getAt(b).features.length();
						return c
					};
					g.prototype.clear = function () {
						for (var c = 0; c < this.featureSets.getLength(); c++)
							this.featureSets.getAt(c).features.clear();
						this.featureSets.clear()
					};
					g.prototype.clone = function (c) {
						void 0 === c && (c = !1);
						for (var b = this.cloneStructure(), a = 0; a < this.featureSets.length(); a++) {
							var e = c ? this.featureSets.getAt(a).clone() : this.featureSets.getAt(a);
							b.featureSets.addItem(e)
						}
						return b
					};
					g.prototype.cloneStructure = function () {
						var c = new h.FeatureSetCollection;
						c.sourceName = this.sourceName;
						c.displayName.set(this.displayName.get());
						c.isModified.set(this.isModified.get());
						c.tag = this.tag;
						this.extendedProperties.getItems().forEach(function (b) {
							return c.setExtendedProperty(b.name, b.value)
						});
						return c
					};
					g.prototype.unionInPlace = function (c) {
						if (!c || 0 === c.featureSets.length())
							return !1;
						for (var b = this._buildFeatureSetLookup(), a = this._buildLayerLookup(), e = !1, f = 0; f < c.featureSets.length(); f++) {
							var l =
								c.featureSets.getAt(f),
							n = l.id,
							d = l.layer,
							r = null;
							n && b.containsKey(n) && (r = b.get(n));
							!r && d && d.mapService && (n = this._generateLayerKey(d.mapService.id, d.id), r = a.get(n));
							r ? r.unionInPlace(l) && (e = !0) : (this.featureSets.addItem(l), e = !0)
						}
						return e
					};
					g.prototype.unionManyInPlace = function (c) {
						if (!c || 0 == c.length)
							return !1;
						for (var b = !1, a = 0; a < c.length; a++)
							this.unionInPlace(c[a]) && (b = !0);
						return b
					};
					g.prototype.subtractInPlace = function (c) {
						if (!c || 0 === c.featureSets.length())
							return !1;
						var b = c._buildFeatureSetLookup();
						c = c._buildLayerLookup();
						for (var a = !1, e = this.featureSets.length(); e--; ) {
							var f = this.featureSets.getAt(e),
							l = f.id,
							n = f.layer,
							d = null;
							l && b.containsKey(l) && (d = b.get(l));
							!d && n && n.mapService && (l = this._generateLayerKey(n.mapService.id, n.id), d = c.get(l));
							d && (f.subtractInPlace(d) && (a = !0), 0 == f.features.length() && (this.featureSets.removeAt(e), a = !0))
						}
						return a
					};
					g.prototype.subtractManyInPlace = function (c) {
						if (!c || 0 == c.length)
							return !1;
						for (var b = !1, a = 0; a < c.length; a++)
							this.subtractInPlace(c[a]) && (b = !0);
						return b
					};
					g.prototype.intersectInPlace = function (c) {
						if (!c)
							return !1;
						var b = c._buildFeatureSetLookup();
						c = c._buildLayerLookup();
						for (var a = !1, e = this.featureSets.length(); e--; ) {
							var f = this.featureSets.getAt(e),
							l = f.id,
							n = f.layer,
							d = null;
							l && b.containsKey(l) && (d = b.get(l));
							!d && n && n.mapService && (l = this._generateLayerKey(n.mapService.id, n.id), d = c.get(l));
							d ? (f.intersectInPlace(d) && (a = !0), 0 == f.features.length() && (this.featureSets.removeAt(e), a = !0)) : (this.featureSets.removeAt(e), a = !0)
						}
						return a
					};
					g.prototype.intersectManyInPlace = function (c) {
						if (!c || 0 == c.length)
							return !1;
						for (var b = !1,
							a = 0; a < c.length; a++)
							this.intersectInPlace(c[a]) && (b = !0);
						return b
					};
					g.prototype._generateLayerKey = function (c, b) {
						return "{0}/{1}".format(c, b)
					};
					g.prototype._buildLayerLookup = function () {
						for (var c = new h.Dictionary, b = 0; b < this.featureSets.length(); b++) {
							var a = this.featureSets.getAt(b);
							if (a && a.layer && a.layer.mapService) {
								var e = this._generateLayerKey(a.layer.mapService.id, a.layer.id);
								c.containsKey(e) || c.set(e, a)
							}
						}
						return c
					};
					g.prototype._buildFeatureSetLookup = function () {
						for (var c = new h.Dictionary, b = 0; b < this.featureSets.length(); b++) {
							var a =
								this.featureSets.getAt(b);
							a && a.id && !c.containsKey(a.id) && c.set(a.id, a)
						}
						return c
					};
					return g
				}
				();
				h.FeatureSetCollection = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var m = function () {
						return function (c) {
							dojo.safeMixin(this, c)
						}
					}
					();
					d.FeatureSetManagerEventArgs = m
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs = geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs;
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g(c) {
						this.featureSetCollections = new ObservableCollection;
						this._featureSetCollectionsMap = {};
						this._collectionChangedEventMap = {};
						this._collectionOpenCount = {};
						this._searchSuggestions = {};
						this.app = c;
						this._registerCommands()
					}
					g.prototype._registerCommands = function () {
						this.app.command("OpenFeatureSetCollection").register(this, this.openCollection);
						this.app.command("CloseFeatureSetCollection").register(this, this.closeCollection);
						this.app.command("RemoveCollection").register(this,
							this.removeCollection);
						this.app.command("RemoveFeatureSetCollection").register(this, this.removeCollection);
						this.app.command("RemoveCollectionById").register(this, this.removeCollectionById);
						this.app.command("RemoveFeatureSetCollectionById").register(this, this.removeCollectionById)
					};
					g.prototype.openCollection = function (c) {
						if (!this._featureSetCollectionsMap.hasOwnProperty(c))
							return this.app.trace.warning("Cannot open feature set collection '{0}': No feature set collection with matching ID found.".format(c)),
							null;
						this._collectionOpenCount.hasOwnProperty(c) || (this._collectionOpenCount[c] = 0);
						++this._collectionOpenCount[c];
						if (1 == this._collectionOpenCount[c]) {
							var b = new d.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs({
									sender : this,
									featureSetCollection : this._featureSetCollectionsMap[c],
									featureSetCollectionId : c
								});
							this.app.event("FSMCollectionOpenedEvent").publish(b)
						}
						return this._featureSetCollectionsMap[c]
					};
					g.prototype.closeCollection = function (c) {
						if (!this._featureSetCollectionsMap.hasOwnProperty(c))
							return this.app.trace.warning("Cannot close feature set collection '{0}': No feature set collection with matching ID found.".format(c)),
							!1;
						if (!this._collectionOpenCount.hasOwnProperty(c) || 0 == this._collectionOpenCount[c])
							return this.app.trace.warning("Attempted to close an already-closed FeatureSetCollection."), !1;
						--this._collectionOpenCount[c];
						0 == this._collectionOpenCount[c] && (c = new d.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs({
									sender : this,
									featureSetCollection : this._featureSetCollectionsMap[c],
									featureSetCollectionId : c
								}), this.app.event("FSMCollectionClosedEvent").publish(c));
						return !0
					};
					g.prototype.tryCloseCollection =
					function (c) {
						return this._featureSetCollectionsMap.hasOwnProperty(c) ? this.isCollectionOpen(c) ? this.closeCollection(c) : !0 : !1
					};
					g.prototype.isCollectionOpen = function (c) {
						return this._featureSetCollectionsMap.hasOwnProperty(c) ? this._collectionOpenCount.hasOwnProperty(c) && 0 < this._collectionOpenCount[c] : (this.app.trace.warning("Cannot check open state of feature set collection '{0}': No feature set collection with matching ID found.".format(c)), !1)
					};
					g.prototype.addCollection = function (c) {
						return this._addCollectionImpl(c)
					};
					g.prototype._addCollectionImpl = function (c) {
						if (!c)
							throw Error("FeatureSetManager.addCollection: Parameter 'fsc' required.");
						var b = this._featureSetCollectionsMap[c.id];
						if (c === b)
							return !0;
						if (b)
							return this.app.trace.warning("Cannot add feature set collection '{0}': A feature set collection with that ID already exists.".format(c.id)), !1;
						this._featureSetCollectionsMap[c.id] = c;
						this.featureSetCollections.addItem(c);
						b = c.featureSets.bind(this, dojo.hitch(this, function (a) {
									this.handleCollectionChanged(c, a)
								}));
						this._collectionChangedEventMap[c.id] = b;
						b = new d.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs({
								sender : this,
								featureSetCollection : this._featureSetCollectionsMap[c.id],
								featureSetCollectionId : c.id
							});
						this.app.event("FSMCollectionAddedEvent").publish(b);
						return !0
					};
					g.prototype.handleCollectionChanged = function (c, b) {
						var a = new d.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs({
								sender : this,
								featureSetCollection : c,
								featureSetCollectionId : c.id,
								collectionChangedEventArgs : b
							});
						this.app.event("FSMCollectionChangedEvent").publish(a)
					};
					g.prototype.removeCollection = function (c) {
						return this.canRemoveCollection(c) ? this.removeCollectionById(c.id) : !1
					};
					g.prototype.removeCollectionById = function (c) {
						if (!this._featureSetCollectionsMap.hasOwnProperty(c))
							return this.app.trace.warning("Cannot remove feature set collection '{0}': Collection not found.".format(c)), !1;
						this.isCollectionOpen(c) && this.closeCollection(c);
						this._featureSetCollectionsMap[c].featureSets.unbind(this._collectionChangedEventMap[c]);
						this.featureSetCollections.removeItem(this._featureSetCollectionsMap[c]);
						delete this._collectionOpenCount[c];
						var b = new d.essentialsHtmlViewer.mapping.infrastructure.eventArgs.FeatureSetManagerEventArgs({
								sender : this,
								featureSetCollection : this._featureSetCollectionsMap[c],
								featureSetCollectionId : c
							});
						this.app.event("FSMCollectionRemovedEvent").publish(b);
						delete this._featureSetCollectionsMap[c];
						return !0
					};
					g.prototype.canRemoveCollection = function (c) {
						return null != c && null != this.getCollectionById(c.id)
					};
					g.prototype.getCollectionById =
					function (c) {
						return this._featureSetCollectionsMap[c]
					};
					g.prototype.getCollectionIds = function () {
						var c = [],
						b;
						for (b in this._featureSetCollectionsMap)
							this._featureSetCollectionsMap.hasOwnProperty(b) && c.push(b);
						return c
					};
					g.prototype.findFeaturesByEsriFeature = function (c) {
						var b = [];
						this.featureSetCollections.get().forEach(function (a) {
							(a = a.findFeatureByEsriFeature(c)) && b.push(a)
						});
						return b
					};
					g.prototype.addSearchSuggestions = function (c) {
						for (var b in c)
							c.hasOwnProperty(b) && (this._searchSuggestions.hasOwnProperty(b) ?
								this.app.trace.warning("Cannot add search suggestion '{0}': A search suggestion for that feature set type already exists.".format(c[b])) : c[b] && (this._searchSuggestions[b] = c[b]))
					};
					g.prototype.getSearchSuggestion = function (c) {
						return this._searchSuggestions[c]
					};
					return g
				}
				();
				h.FeatureSetManager = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					d.getColorFromList = function (d) {
						d && 4 === d.length && 1 < d[3] && (d[3] /= 255);
						return new dojo.Color(d)
					};
					d.getColorFromString = function (d) {
						if ("string" === typeof d && d.startsWith("#") && 9 === d.length) {
							var c = parseInt(d.slice(1, 3), 16),
							b = parseInt(d.slice(3, 5), 16),
							a = parseInt(d.slice(5, 7), 16);
							d = parseInt(d.slice(7, 9), 16);
							return new esri.Color([b, a, d, c / 255])
						}
						return new esri.Color(d)
					};
					d.getStringFromList = function (d) {
						if (d) {
							if (4 === d.length)
								return 1 < d[3] && (d[3] /=
									255), "rgba({0}, {1}, {2}, {3})".format(d[0], d[1], d[2], d[3]);
							if (3 === d.length)
								return "rgb({0}, {1}, {2})".format(d[0], d[1], d[2])
						}
					};
					d.getStringFromHex = function (d) {
						if ("string" === typeof d && d.startsWith("#")) {
							if (9 === d.length) {
								var c = parseInt(d.slice(1, 3), 16),
								b = parseInt(d.slice(3, 5), 16),
								a = parseInt(d.slice(5, 7), 16);
								d = parseInt(d.slice(7, 9), 16);
								return "rgba({0}, {1}, {2}, {3})".format(b, a, d, c / 255)
							}
							if (7 === d.length)
								return b = parseInt(d.slice(1, 3), 16), a = parseInt(d.slice(3, 5), 16), d = parseInt(d.slice(5, 7), 16), "rgb({0}, {1}, {2})".format(b,
									a, d)
						}
					}
				})(d.ColorUtils || (d.ColorUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g() {
						this.fillColor = new esri.Color([236, 236, 0, 0.22745]);
						this.borderColor = new esri.Color([204, 204, 51, 1]);
						this.defaultSymbol = null;
						this._pictureMarkerSymbolCache = {}

					}
					g.prototype.clone = function () {
						var c = new d.essentialsHtmlViewer.mapping.infrastructure.SimpleRenderer;
						c.fillColor = this.fillColor;
						c.borderColor = this.borderColor;
						return c
					};
					g.prototype.getSymbol = function (c) {
						return c && c.geometry ? c.geometry instanceof esri.geometry.Point ||
						c.geometry instanceof esri.geometry.Multipoint ? new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, 10, null, this.borderColor) : c.geometry instanceof esri.geometry.Polygon ? new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, this.borderColor, 2), this.fillColor) : c.geometry instanceof esri.geometry.Polyline ? new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, this.borderColor,
							5) : null : null
					};
					g.prototype.getSymbolWithHacks = function (c, b) {
						if (b && b.renderer && c && c.geometry && (c.geometry instanceof esri.geometry.Point || c.geometry instanceof esri.geometry.Multipoint)) {
							var a = b.renderer.getSymbol(c);
							if (a instanceof esri.symbol.SimpleMarkerSymbol)
								return new esri.symbol.SimpleMarkerSymbol(a.style, a.size + 2, null, this.fillColor);
							if (a instanceof esri.symbol.PictureMarkerSymbol)
								return this._getPictureMarkerSymbolHighlight(a);
							if (a instanceof esri.symbol.MarkerSymbol)
								return new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,
									a.size, null, this.fillColor)
						}
						return this.getSymbol(c)
					};
					g.prototype._getPictureMarkerSymbolHighlight = function (c) {
						if (this._pictureMarkerSymbolCache.hasOwnProperty(c.url))
							return this._pictureMarkerSymbolCache[c.url];
						if (Modernizr && Modernizr.canvas)
							try {
								var b = document.createElement("canvas");
								b.width = c.width;
								b.height = c.height;
								var a = b.getContext("2d");
								a.fillStyle = this.fillColor.toCss(Modernizr.rgba);
								a.fillRect(0, 0, b.width, b.height);
								a.globalCompositeOperation = "destination-atop";
								var e = new Image;
								e.src = c.url;
								a.drawImage(e, 0, 0);
								return this._pictureMarkerSymbolCache[c.url] = new esri.symbol.PictureMarkerSymbol(b.toDataURL("image/png"), b.width, b.height)
							} catch (f) {}

						return this._pictureMarkerSymbolCache[c.url] = new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, Math.min(c.width, c.height), null, this.fillColor)
					};
					g.prototype.toJson = function () {
						return {
							fillColor : this.fillColor,
							borderColor : this.borderColor
						}
					};
					return g
				}
				();
				h.SimpleRenderer = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping ||
			(k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function g(c) {
						this._activeHighlightLayerName = null;
						this._highlightLayers = {};
						this._managedGraphics = {};
						this._clonedGraphics = {};
						this._nextHighlightId = 0;
						this._defaultRenderer = new d.SimpleRenderer;
						this._defaultHighlightLayerName = null;
						this.app = c
					}
					g.prototype.createHighlightLayer = function (c, b, a) {
						if (!c)
							throw Error("Unable to create new highlight layer with null or empty name");
						if (this._highlightLayers.hasOwnProperty(c))
							return this.app.trace.warning("Cannot create highlight layer because layer with name '{0}' already exists.".format(c)),
							null;
						var e = new esri.layers.GraphicsLayer;
						if (null !== b && void 0 !== b || null !== a && void 0 !== a)
							e.renderer = this._defaultRenderer.clone(), null !== b && void 0 !== b && (e.renderer.fillColor = "string" == typeof b ? d.ColorUtils.getColorFromString(b) : d.ColorUtils.getColorFromList(b)), null !== a && void 0 !== a && (e.renderer.borderColor = "string" == typeof a ? d.ColorUtils.getColorFromString(a) : d.ColorUtils.getColorFromList(a));
						this._highlightLayers[c] = e;
						this._addLayerToMap(e);
						this._activeHighlightLayerName && "" !== this._activeHighlightLayerName ||
						(this._activeHighlightLayerName = c);
						this.app.event("HighlightLayerCreated").publish(c);
						return e
					};
					g.prototype.setActiveHighlightLayer = function (c) {
						if (!c)
							throw Error("Unable to set the active highlight layer because no layer name was given.");
						if (!this._highlightLayers.hasOwnProperty(c))
							throw Error("Unable to set {0} as the active highlight layer, because a highlight layer with that name does not exist".format(c));
						this._activeHighlightLayerName = c
					};
					g.prototype.highlightEsriFeatureSet = function (c, b) {
						if (c)
							if (c.features &&
								0 != c.features.length) {
								var a = this.getHighlightLayerOrActive(b);
								a && a.graphics || this.app.trace.warning("Unable to highlight feature because the required layer was not found, or could not accept graphics");
								for (var e = 0; e < c.features.length; e++)
									this._drawGraphic(c.features[e], a)
							} else
								this.app.trace.warning("No features detected in FeatureSet; as such, no features were highlighted");
						else
							this.app.trace.warning("No FeatureSet was provided; as such, no features were highlighted")
					};
					g.prototype.highlightFeatures =
					function (c, b) {
						if (c) {
							var a = this.getHighlightLayerOrActive(b);
							a || this.app.trace.warning("Unable to highlight feature because the required layer was not found, or could not accept graphics");
							for (var e = this._defaultRenderer.borderColor, f = this._defaultRenderer.fillColor, l = 0; l < c.length; l++) {
								var n = c[l];
								try {
									var p;
									n.borderColor && n.borderColor.get() && (p = d.ColorUtils.getColorFromList(n.borderColor.get())) && this._setBorderColor(p);
									n.fillColor && n.fillColor.get() && (p = d.ColorUtils.getColorFromList(n.fillColor.get())) &&
									this._setFillColor(p);
									this._drawGraphic(n.esriFeature.get(), a)
								}
								finally {
									this._setBorderColor(e),
									this._setFillColor(f)
								}
							}
						} else
							this.app.trace.warning("No Features were provided, as such, no features were highlighted")
					};
					g.prototype.highlightGraphics = function (c, b) {
						if (c) {
							var a = this.getHighlightLayerOrActive(b);
							a || this.app.trace.warning("Unable to highlight feature because the required layer was not found, or could not accept graphics");
							for (var e = 0; e < c.length; e++)
								this._drawGraphic(c[e], a)
						} else
							this.app.trace.warning("No Graphics were provided, as such, no graphics were highlighted")
					};
					g.prototype.removeHighlightLayer = function (c) {
						if (!c)
							throw Error("Unable to remove a highlight layer with null or empty name");
						if (!this._highlightLayers.hasOwnProperty(c))
							throw Error("Cannot remove highlight layer because layer with name {0} does not exist.".format(c));
						var b = this._highlightLayers[c];
						this.clearHighlights(b);
						this.app.map.removeLayer(b);
						delete this._highlightLayers[c];
						this._activeHighlightLayerName === c && (this._activeHighlightLayerName = null)
					};
					g.prototype.clearHighlights = function (c) {
						var b =
							null;
						!c && this._activeHighlightLayerName && (b = this._activeHighlightLayerName);
						var a = null;
						if (b || "string" == typeof c)
							b || (b = c), a = this.getHighlightLayer(b);
						if (a || "object" == typeof c && c instanceof esri.layers.GraphicsLayer)
							if (a || (a = c), a && a.graphics)
								for (c = a.graphics.length - 1; 0 <= c; c--)
									this._removeClonedGraphic(a.graphics[c]);
							else
								this.app.trace.warning("An attempt was made to clear a highlight layer which contained no graphics")
					};
					g.prototype.getHighlightFillColor = function () {
						return this._toARGBHex(this._getFillColor())
					};
					g.prototype.getHighlightBorderColor = function () {
						return this._toARGBHex(this._getBorderColor())
					};
					g.prototype.setHighlightFillColor = function (c) {
						this._setFillColor(d.ColorUtils.getColorFromString(c))
					};
					g.prototype.setHighlightBorderColor = function (c) {
						this._setBorderColor(d.ColorUtils.getColorFromString(c))
					};
					g.prototype.getHighlightLayer = function (c) {
						return c ? this._highlightLayers[c] : (this.app.trace.warning("Unable to get a highlight layer with null or empty name"), null)
					};
					g.prototype.getHighlightLayers = function () {
						return this._highlightLayers
					};
					g.prototype.getHighlightLayerOrActive = function (c) {
						return c ? this.getHighlightLayer(c) : this._activeHighlightLayer()
					};
					g.prototype.activeHighlightLayerGraphics = function () {
						var c = this._activeHighlightLayer();
						return c && c.graphics ? c.graphics.slice(0) : null
					};
					g.prototype.defaultHighlightLayerGraphics = function () {
						var c = this.getHighlightLayer(this._defaultHighlightLayerName);
						return c ? c.graphics.slice(0) : null
					};
					g.prototype.exportState = function () {
						var c = this;
						return Promise["try"](function () {
							var b = c.app.project.convert,
							a = {
								highlightLayers : {},
								activeHighlightLayerName : c._activeHighlightLayerName,
								highlights : []
							},
							e;
							for (e in c._highlightLayers)
								a.highlightLayers[e] = b.fromEsriLayer(c._highlightLayers[e]), a.highlightLayers[e].featureCollection.layers.length && (a.highlightLayers[e].featureCollection.layers[0].featureSet.features = []);
							for (var f in c._managedGraphics)
								c._managedGraphics[f].forEach(function (e) {
									a.highlights.push({
										feature : b.fromEsriGraphic(e.managedGraphic),
										highlightLayer : b.fromEsriLayer(e.layer)
									})
								});
							return a
						})
					};
					g.prototype.applyState = function (c) {
						var b = this,
						a = this.app.project.convert,
						e = {},
						f;
						for (f in c.highlightLayers)
							e[f] = a.toEsriLayer(c.highlightLayers[f]);
						e = {
							highlightLayers : d.PromiseUtils.propsSkipRejected(e),
							highlights : d.PromiseUtils.mapSkipRejected(c.highlights, function (b) {
								return Promise.props({
									graphic : a.toEsriGraphic(b.feature),
									highlightLayer : a.toEsriLayer(b.highlightLayer)
								})
							})
						};
						return Promise.props(e).then(function (a) {
							for (var e in b._highlightLayers)
								b.clearHighlights(e);
							b._highlightLayers = {};
							b._managedGraphics = {};
							b._clonedGraphics = {};
							b._nextHighlightId = 0;
							a.highlights.forEach(function (a) {
								a = parseInt(b._getHighlightId(a.graphic));
								b._nextHighlightId = Math.max(b._nextHighlightId, a + 1)
							});
							for (var f in a.highlightLayers)
								b._highlightLayers[f] = a.highlightLayers[f];
							b._activeHighlightLayerName = c.activeHighlightLayerName;
							a.highlights.forEach(function (a) {
								b._drawGraphic(a.graphic, a.highlightLayer)
							})
						})
					};
					g.prototype._drawGraphic = function (c, b) {
						if (c && b) {
							this._showHighlightLayer(b);
							this._getHighlightId(c) || this._setHighlightId(c,
								this._nextId());
							var a,
							e = this._getHighlightId(c);
							this._managedGraphics.hasOwnProperty(e) ? a = this._managedGraphics[e] : (a = [], this._managedGraphics[e] = a);
							for (e = 0; e < a.length; e++)
								if (a[e].layer === b)
									return;
							e = {
								layer : b,
								managedGraphic : c,
								clonedGraphic : null
							};
							a.push(e);
							a = new esri.Graphic;
							a.attributes = {};
							for (var f in c.attributes)
								c.attributes.hasOwnProperty(f) && (a.attributes[f] = c.attributes[f]);
							a.geometry = c.geometry;
							f = this._nextId();
							this._setHighlightId(a, f);
							e.clonedGraphic = a;
							this._clonedGraphics[f] = e;
							a.geometry &&
							(b.renderer || (a.symbol = this._defaultRenderer.getSymbolWithHacks(a, c._graphicsLayer)), b.add(a))
						} else
							this.app.trace.error("HighlightManager given null graphic or layer. Skipping...")
					};
					g.prototype._getFillColor = function () {
						return this._defaultRenderer.fillColor
					};
					g.prototype._setFillColor = function (c) {
						this._defaultRenderer.fillColor = c
					};
					g.prototype._getBorderColor = function () {
						return this._defaultRenderer.borderColor
					};
					g.prototype._setBorderColor = function (c) {
						this._defaultRenderer.borderColor = c
					};
					g.prototype._toARGBHex =
					function (c) {
						var b = ("00" + Math.floor(255 * c.a).toString(16)).slice(-2),
						a = ("00" + c.r.toString(16)).slice(-2),
						e = ("00" + c.g.toString(16)).slice(-2);
						c = ("00" + c.b.toString(16)).slice(-2);
						return "#" + b + a + e + c
					};
					g.prototype._nextId = function () {
						return (this._nextHighlightId++).toString()
					};
					g.prototype._getHighlightId = function (c) {
						return c && c.attributes ? c.__gcxHlId : void 0
					};
					g.prototype._setHighlightId = function (c, b) {
						c.__gcxHlId = b
					};
					g.prototype._showHighlightLayer = function (c) {
						this.app.map.reorderLayer(c, this.app.map.graphicsLayerIds.length -
							1);
						c != this._highlightLayers[this._defaultHighlightLayerName] && this.app.map.reorderLayer(this._highlightLayers[this._defaultHighlightLayerName], this.app.map.graphicsLayerIds.length - 1)
					};
					g.prototype._addLayerToMap = function (c) {
						this.app.map.addLayer(c)
					};
					g.prototype._activeHighlightLayer = function () {
						return this._activeHighlightLayerName ? this.getHighlightLayer(this._activeHighlightLayerName) : null
					};
					g.prototype._removeClonedGraphic = function (c) {
						c = this._getHighlightId(c);
						this._clonedGraphics.hasOwnProperty(c) &&
						(c = this._clonedGraphics[c], this._removeManagedGraphic(c.managedGraphic, c.layer))
					};
					g.prototype._removeManagedGraphic = function (c, b) {
						var a = this._getHighlightId(c);
						if (this._managedGraphics.hasOwnProperty(a)) {
							for (var e = this._managedGraphics[a], f = null, l = 0; l < e.length; l++)
								if (e[l].layer === b) {
									f = e[l];
									break
								}
							f && (b.remove(f.clonedGraphic), delete this._clonedGraphics[this._getHighlightId(f.clonedGraphic)], f = e.indexOf(f), e.splice(f, 1), 0 === e.length && delete this._managedGraphics[a])
						}
					};
					return g
				}
				();
				d.HighlightManager =
					g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a) {
							this.app = b;
							this.libraryId = a;
							this.id = "SearchProvider-" + d.framework.utils.alphaNumericToken();
							this.supportsHints = this.supportsOffline = !1;
							this.status = d.essentialsHtmlViewer.mapping.infrastructure.search.Status.IDLE
						}
						c.prototype.initialize = function (b) {};
						c.prototype.search = function (b, a) {};
						c.prototype.cancelSearch = function () {};
						c.prototype.getResource = function (b, a) {
							return this.app.getResource(this.libraryId,
								b, a)
						};
						return c
					}
					();
					g.SearchProviderBase = h
				})(h.search || (h.search = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {
							this.query = this.results = this.message = this.error = this.endpointUrl = this.searchType = this.status = null
						}
					}
					();
					d.SearchProgressEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProgressEventArgs = geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.SearchProgressEventArgs;
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (c) {
						c.IDLE = "Idle";
						c.SEARCHING = "Searching";
						c.ERROR = "Error"
					})(g.Status || (g.Status = {}));
					var m = function () {
						function c(b) {
							this._searchProviders = [];
							this._fscRootID = "SearchResultsCollection";
							this._count = 0;
							this._fscSourceName = "Search";
							this.app = b;
							this._registerCommands();
							this.app.event("SearchProgressEvent").subscribe(this, this._searchProgress)
						}
						c.prototype._resetFeatureSetCollection = function () {
							this._fsc || (this._fsc = this.app.featureSetManager.getCollectionById(this._fscRootID));
							this._fsc ? (this.app.featureSetManager.getCollectionById(this._fsc.id) || this.app.featureSetManager.addCollection(this._fsc), this._fsc.clear(), this.app.featureSetManager.tryCloseCollection(this._fsc.id)) : (this._fsc = new h.FeatureSetCollection, this._fsc.id = this._fscRootID, this._fsc.sourceName = this._fscSourceName, this.app.featureSetManager.addCollection(this._fsc))
						};
						c.prototype.getSearchHints = function (b, a) {
							var e = this._enabledProviders();
							if (0 == e.length)
								this.app.trace.warning("No search providers enabled.");
							else
								for (var f = 0; f < e.length; f++)
									e[f].supportsHints && e[f].getSearchHints(b, a)
						};
						c.prototype._registerCommands = function () {
							this.app.command("RegisterSearchProvider").register(this, this._registerProvider);
							this.app.command("Search").register(this, this._search);
							this.app.command("GlobalSearch").register(this, this._search);
							this.app.command("CancelSearch").register(this, this._cancelSearch);
							this.app.command("ClearSearch").register(this, this._clearSearch)
						};
						c.prototype._registerProvider = function (b) {
							if (!b)
								throw Error("Search Provider cannot be null.");
							for (var a = 0; a < this._searchProviders.length; a++)
								if (this._searchProviders[a].id == b.id)
									throw Error("Search Provider '{0}' already registered.".format(b.name));
							this._searchProviders.push(b)
						};
						c.prototype._enabledProviders = function () {
							for (var b = [], a = 0; a < this._searchProviders.length; a++) {
								var e = this._searchProviders[a];
								e.isEnabled && (!0 === this.app.isOffline.get() ? e.supportsOffline && b.push(e) : b.push(e))
							}
							return b
						};
						c.prototype._isSearching = function () {
							for (var b = 0; b < this._searchProviders.length; b++)
								if (this._searchProviders[b].status ==
									d.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING)
									return !0;
							return !1
						};
						c.prototype._cancelSearch = function () {
							if (this._isSearching())
								for (var b = 0; b < this._searchProviders.length; b++) {
									var a = this._searchProviders[b];
									a.status == d.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING && a.cancelSearch()
								}
						};
						c.prototype._clearSearch = function () {
							this._isSearching() && this._cancelSearch();
							this._resetFeatureSetCollection()
						};
						c.prototype._search = function (b) {
							this._isSearching() && this._cancelSearch();
							this._resetFeatureSetCollection();
							if (b && "" != b.replace(/ /g, "")) {
								var a = this._enabledProviders();
								if (0 == a.length)
									this.app.trace.warning("No search providers enabled.");
								else {
									var e = this.app.getResource("Mapping", "language-search-fsc-display-name");
									this._fsc.displayName.set(e.format(b));
									this.app.featureSetManager.isCollectionOpen(this._fsc.id) || this.app.featureSetManager.openCollection(this._fsc.id);
									for (e = 0; e < a.length; e++)
										a[e].search(this._fsc, b)
								}
							} else
								this.app.trace.warning("Cannot perform search without search text.")
						};
						c.prototype._searchProgress = function (b) {
							var a = !0;
							if (b.status != d.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING) {
								for (var e = 0; e < this._searchProviders.length; e++)
									this._searchProviders[e].status == d.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING && (a = !1);
								a && this.app.featureSetManager.tryCloseCollection(b.results.id)
							}
						};
						return c
					}
					();
					g.SearchManager = m
				})(h.search || (h.search = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function (c, b) {
							b && b.command ? (this.app = c, this.command = c.command(b.command), this.commandParameter = b.commandParameter || null, this.abortBatchOnFailure = !!b.abortBatchOnFailure) : c && c.trace.warning("BatchItemModel: Could not create batch item. Configuration or command not specified.")
						}
					}
					();
					d.BatchItemModel = h
				})(d.menus || (d.menus = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a) {
							var e = this;
							if (!b || !a)
								throw Error("MenuItemModel: Required input parameters cannot be undefined");
							this.menuModel = b;
							this.app = b.app;
							this.text = a.text || "";
							this.description = a.description || "";
							this.iconUri = a.iconUri || this.app.menuRegistry.getDefaultIconUri(this.menuModel.id);
							this.hideOnDisable = void 0 != a.hideOnDisable ? a.hideOnDisable : !1;
							a.batch ? (this.batchItems = [], this._setBatchItems(a.batch)) : a.command && (this.command =
									this.app.command(a.command), this.commandParameter = a.commandParameter || null);
							a.libraryId && (d.framework.ui.stringLocalizer.localizeString(this.app, a.libraryId, this.text, function (a) {
									return e.text = a
								}), d.framework.ui.stringLocalizer.localizeString(this.app, a.libraryId, this.description, function (a) {
									return e.description = a
								}))
						}
						c.prototype._setBatchItems = function (b) {
							var a = this;
							b && b.length && b.forEach(function (b) {
								b && b.command && a.batchItems.push(new g.BatchItemModel(a.app, b))
							})
						};
						return c
					}
					();
					g.MenuItemModel = h
				})(h.menus ||
					(h.menus = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a) {
							if (!b || !a || !a.id)
								throw Error("MenuModel: Required input parameters cannot be undefined");
							this.app = b;
							this.id = a.id;
							this.title = a.title || "";
							this.description = a.description || "";
							this.items = this._createMenuItems(a.items);
							this.defaultIconUri = a.defaultIconUri || ""
						}
						c.prototype._createMenuItems = function (b) {
							var a = this,
							e = [];
							b && b.length && b.forEach(function (b) {
								try {
									var c = new d.essentialsHtmlViewer.mapping.infrastructure.menus.MenuItemModel(a,
											b);
									c && (c.command || c.batchItems) ? e.push(c) : a.app.trace.warning("MenuModel: Could not create menu item for menu with id: {0}. Invalid configuration.".format(a.id))
								} catch (n) {
									a.app.trace.warning("Unexpected configuration error: {0}".format(n.message))
								}
							});
							return e
						};
						return c
					}
					();
					g.MenuModel = h
				})(h.menus || (h.menus = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b) {
							this.menuList = [];
							this._viewMenuEntries = {};
							this._menuConfig = [];
							this.app = b
						}
						c.prototype.loadMenus = function (b) {
							var a = this;
							b && b.menus && b.menus.length && (b.menus.forEach(function (b) {
									return a.register(b)
								}), this._menuConfig = this._menuConfig.concat(b.menus))
						};
						c.prototype.register = function (b) {
							var a = b && b.id;
							this._validMenuId(a) ? (b = b instanceof g.MenuModel ? b : new g.MenuModel(this.app, b), this._validateMenuModel(b) ? this.menuList.push(b) :
								this.app.trace.warning("Could not register menu with id: {0}. Invalid menu configuration.")) : this.app.trace.warning("Could not register menu with id: {0}. Menu id should be defined and unique.".format(a))
						};
						c.prototype.unregister = function (b) {
							for (var a = this.menuList.length - 1; 0 <= a; a--)
								this.menuList[a].id === b && this.menuList.splice(a, 1)
						};
						c.prototype.getMenu = function (b) {
							for (var a = this.menuList, e = 0; e < a.length; e++)
								if (a[e].id === b)
									return a[e];
							return null
						};
						c.prototype.getDefaultIconUri = function (b) {
							return (b =
									this.getMenu(b)) && b.defaultIconUri ? b.defaultIconUri : ""
						};
						c.prototype.getMenuWidgetsForView = function (b) {
							return this._viewMenuEntries[b.id] || []
						};
						c.prototype.createMenuWidget = function (b, a, e, f) {
							var c = this,
							n = e.domElement,
							p = e.viewModel,
							g = n.getAttribute("data-menu-id");
							if (!g || !this.getMenu(g))
								return console.log("Warning: Could not create menu view from DOM element attributes. Menu Id: {0} not registered with the MenuRegistry.".format(g)), null;
							var h = n.getAttribute("data-menu-template") || "Mapping/infrastructure/menus/MenuView.html",
							m = n.getAttribute("data-menu-type") || "geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuView",
							k = n.getAttribute("data-menu-library-id") || f || "Mapping";
							f = !n.hasAttribute("data-menu-hoist-disabled");
							h = this.app.viewManager.createView({
									type : m,
									markup : h,
									visible : !0
								});
							if (!h)
								return console.log("Warning: Could not create menu '{0}' for view '{1}': Could not construct the menu widget view.".format(g, b.id)), null;
							h.app = this.app;
							h.configuration.menuId = g;
							k && (h.libraryId = k);
							m = new d.essentialsHtmlViewer.mapping.infrastructure.menus.MenuViewModel(this.app,
									k);
							m.id = "MenuViewModel-{0}".format(h.id);
							m.menuSourceView = b;
							h.attach(m);
							(k = a) && a.isObservable ? m.menuContext.sync(k) : p && e && p[e.target] && p[e.target].isObservable ? (k = p[e.target], m.menuContext.sync(k)) : m.menuContext.set(k);
							a = {
								view : b,
								widgetView : h,
								widgetViewModel : m,
								context : k,
								menuId : g,
								hoistMenu : f,
								domElement : n
							};
							this._viewMenuEntries[b.id] || (this._viewMenuEntries[b.id] = []);
							this._viewMenuEntries[b.id].push(a);
							dojo.aspect.after(b, "onDestroy", function () {
								return c._viewMenuEntries[b.id] = null
							});
							this.app.event("MenuWidgetCreatedForView").publish(a);
							return h
						};
						c.prototype.destroyMenuWidget = function (b) {
							var a = this;
							b.viewModel && (b.viewModel.menuContext.removeSync(), b.viewModel.destroy());
							for (var e in this._viewMenuEntries)
								this._viewMenuEntries.hasOwnProperty(e) && null != this._viewMenuEntries[e] && this._viewMenuEntries[e].filter(function (a) {
									return a.widgetView === b
								}).forEach(function (b, c) {
									a._viewMenuEntries[e].splice(c, 1)
								})
						};
						c.prototype._validMenuId = function (b) {
							var a = b ? this.menuList.filter(function (a) {
									return a.id === b
								}) : null;
							return null !== a && 0 === a.length
						};
						c.prototype._validateMenuModel = function (b) {
							return !!(b && b.id && b.items && b.items.length)
						};
						return c
					}
					();
					g.MenuRegistry = h
				})(h.menus || (h.menus = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this.name = "";
							this.isActive = !1;
							dojo.mixin(this, a);
							this.app = b
						}
						c.prototype.setActive = function (b) {
							b ? (this.isActive = !0, this.onActivated()) : (this.isActive = !1, this.onDeactivated())
						};
						c.prototype.onActivated = function () {};
						c.prototype.onDeactivated = function () {};
						return c
					}
					();
					d.ToolBase = h
				})(d.tools || (d.tools = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b) {
							this.tools = {};
							this._subscriptions = {};
							this._toolTypes = {};
							this.app = b;
							this._registerCommands()
						}
						c.prototype._registerCommands = function () {
							var b = this;
							this.app.command("SetActiveTool").register(this, function (a) {
								return b.setActiveTool(a)
							}, function (a) {
								return b._setActiveToolCanExecute(a)
							});
							this.app.command("ClearActiveTool").register(this, function () {
								return b.clearActiveTool()
							})
						};
						c.prototype._setActiveToolCanExecute =
						function (b) {
							return this.tool(b) ? !0 : !1
						};
						c.prototype.clearActiveTool = function () {
							for (var b in this.tools)
								if (this.tools.hasOwnProperty(b)) {
									var a = this.tools[b];
									a && a.isActive && a.setActive(!1)
								}
						};
						c.prototype.getActiveTool = function () {
							for (var b in this.tools)
								if (this.tools.hasOwnProperty(b)) {
									var a = this.tools[b];
									if (a && a.isActive)
										return a
								}
							return null
						};
						c.prototype.setActiveTool = function (b) {
							this.clearActiveTool();
							if (b) {
								var a = this.tool(b);
								a ? a.setActive(!0) : this.app.trace.warning("Could not activate tool '{0}'. The tool does not exist in the registry.".format(b))
							}
						};
						c.prototype.tool = function (b) {
							return this.tools[b]
						};
						c.prototype.register = function (b) {
							var a = this;
							this.unregister(b);
							b && b.name && (this.tools[b.name] = b, this._subscriptions[b.name] = dojo.connect(b, "setActive", function (e) {
										if (!0 === e) {
											for (var f in a.tools)
												a.hasOwnProperty(f) && (e = a.tools[f]) && e != b && e.isActive && e.setActive(!1);
											a.app.event("ActiveToolChanged").publish({
												tool : b,
												previousTool : null
											});
											a.app.event("ActiveToolChanged").publish({
												tool : b,
												previousTool : null
											});
											a.app.event("ActiveToolChangedEvent").publish({
												tool : b,
												previousTool : null
											});
											b instanceof d.MapTool && a.app.event("ToolCommandActivatedEvent").publish(b.command)
										} else
											a.getActiveTool() || (a.app.event("ActiveToolChanged").publish({
													tool : null,
													previousTool : b
												}), a.app.event("ActiveToolChangedEvent").publish({
													tool : null,
													previousTool : b
												}), b instanceof d.MapTool && a.app.event("ToolCommandDeactivatedEvent").publish(b.command))
									}))
						};
						c.prototype.unregister = function (b) {
							if (b && b.name && this.tools[b.name] == b) {
								this.tools[b.name] = null;
								var a = this._subscriptions[b.name];
								a && (dojo.disconnect(a),
									this._subscriptions[b.name] = null)
							}
						};
						c.prototype.clear = function () {
							for (var b in this.tools) {
								var a = this.tools[b];
								a && this.unregister(a)
							}
						};
						c.prototype.createTools = function (b, a) {
							var e = this,
							f = [];
							b && b.forEach(function (b) {
								var c = b.typeName ? b.typeName : "geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.MapTool";
								e._toolTypes.hasOwnProperty(b.command) && (c = e._toolTypes[b.command]);
								var d = dojo.getObject(c);
								d ? (b = new d(e.app, b), f.push(b), a && e.register(b)) : e.app.trace.warning("Could not create tool '{0}' from type name '{1}'.".format(b.name,
										c))
							});
							return f
						};
						c.prototype.registerToolTypeForCommand = function (b, a) {
							this._toolTypes[b] = a
						};
						return c
					}
					();
					d.ToolRegistry = h
				})(d.tools || (d.tools = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function (d) {
					function c(b, a, e, f) {
						d.call(this, b, a);
						this.commandName = "";
						this.commandParameter = null;
						this.canExecute = new Observable(!0);
						this.notExecuteHidden = new Observable(!1);
						e && this._bindToCommand(e, f)
					}
					__extends(c, d);
					c.prototype.applyContext = function (b) {
						this._command && b && this.canExecute.set(this._command.canExecute(b))
					};
					c.prototype._bindToCommand = function (b, a) {
						this._canExecuteChangedBindingToken && this._command && this._command.canExecuteChanged.unsubscribe(this._canExecuteChangedBindingToken);
						this.commandName = b;
						this.commandParameter = a || null;
						this._command = this.app.command(b);
						this._canExecuteChangedBindingToken = this._command.canExecuteChanged.subscribe(this, this._handleCanExecuteChanged);
						this.canExecute.set(this._command.canExecute(a))
					};
					c.prototype._handleCanExecuteChanged = function () {
						this.canExecute.set(this._command.canExecute(this.commandParameter))
					};
					return c
				}
				(d.framework.ui.ViewModelBase);
				h.CommandViewModel = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	var k = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}),
	k = k.mapping || (k.mapping = {}),
	k = k.modules || (k.modules = {});
	(k.command || (k.command = {})).CommandViewModel = d.essentialsHtmlViewer.mapping.infrastructure.CommandViewModel
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a, e) {
							this.libraryId = "";
							this.isActive = new Observable(!0);
							this.activeTransient = new Observable(!1);
							this.disabled = new Observable(!1);
							this.hidden = new Observable(!1);
							this.cssClass = new Observable;
							this.hasSmallLayout = new Observable(!1);
							this.selectedTool = new Observable(null);
							this.toolChangeActive = new Observable(!1);
							e && (this.id = e.id, this.app = b, this.libraryId = a, this.type = e.type, this.name = new Observable(e.name), this.tooltip =
									new Observable(e.tooltip || null), this.hideOnDisable = new Observable(!!e.hideOnDisable), e.libraryId && d.framework.ui.stringLocalizer.localizeObservables(b, e.libraryId, [this.name, this.tooltip]))
						}
						c.prototype.areAllHidden = function (b) {
							for (var a = 0; a < b.length(); a++)
								if (!1 === b.getAt(a).disabled.get() || !1 === b.getAt(a).hideOnDisable.get())
									return !1;
							return !0
						};
						c.prototype.setHidden = function () {
							!0 === this.disabled.get() && !0 === this.hideOnDisable.get() ? this.hidden.set(!0) : this.hidden.set(!1)
						};
						c.prototype.execute = function () {};
						c.prototype.activate = function () {
							this.isActive.set(!0)
						};
						c.prototype.deactivate = function () {
							this.isActive.set(!1);
							this.activeTransient.set(!1)
						};
						c.prototype.onDestroy = function () {};
						return c
					}
					();
					g.ToolbarGroupItemBase = h
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a, e) {
							this.libraryId = "";
							this.isActive = new Observable(!1);
							this.disabled = new Observable(!1);
							this.cssClass = new Observable;
							this.app = b;
							this.libraryId = a;
							e && (this.name = new Observable(e.name), this.id = e.id || e.name || d.framework.utils.alphaNumericToken(), this.tooltip = new Observable(e.tooltip || null), this.type = e.type || "toolbarGroup", this.isDefault = !!e.isDefault, this.items = e.items ? this.getToolbarGroupItems(e.items) : new ObservableCollection,
								e.libraryId && d.framework.ui.stringLocalizer.localizeObservables(b, e.libraryId, [this.name, this.tooltip]))
						}
						c.prototype.getToolbarGroupItems = function (b) {
							for (var a = new ObservableCollection, e = 0; e < b.length; e++) {
								var f = null;
								"button" == b[e].type ? f = new g.ToolbarButton(this.app, this.libraryId, b[e]) : "toggleButton" == b[e].type ? f = new g.ToolbarToggleButton(this.app, this.libraryId, b[e]) : "region" == b[e].type ? f = new g.ToolbarRegion(this.app, this.libraryId, b[e]) : "tool" == b[e].type ? f = new g.ToolbarTool(this.app, this.libraryId,
										b[e]) : "toolbarGroup" == b[e].type ? f = new g.ToolbarGroup(this.app, this.libraryId, b[e]) : "flyout" == b[e].type && (f = new g.ToolbarFlyout(this.app, this.libraryId, b[e]));
								a.addItem(f)
							}
							return a
						};
						return c
					}
					();
					g.ToolbarGroupBase = h
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b) {
							this.toolbarGroupList = new ObservableCollection;
							this._toolbarGroupsConfig = [];
							this.app = b
						}
						c.prototype.getToolbarGroupById = function (b) {
							if (0 === this.toolbarGroupList.get().length || null === b)
								return null;
							for (var a = 0; a < this.toolbarGroupList.get().length; a++)
								if (this.toolbarGroupList.getAt(a).id == b)
									return this.toolbarGroupList.getAt(a);
							return null
						};
						c.prototype.registerToolbarGroups = function (b, a) {
							if (b)
								for (var e = 0; e <
									b.length; e++) {
									var f = b[e],
									c = new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupBase(this.app, a, f);
									this._toolbarGroupsConfig.push(f);
									this.unregisterToolbarGroup(f.id);
									this.toolbarGroupList.addItem(c)
								}
						};
						c.prototype.unregisterToolbarGroup = function (b) {
							b = this.getPosition(b);
							null != b && this.toolbarGroupList.get().splice(b, 1)
						};
						c.prototype.getPosition = function (b) {
							for (var a = 0; a < this.toolbarGroupList.getLength(); a++)
								if (this.toolbarGroupList.getAt(a).id === b)
									return a;
							return null
						};
						return c
					}
					();
					g.ToolbarGroupRegistry = h
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					(function (c) {
						c.IDLE = "Idle";
						c.UNDOING = "Undoing";
						c.REDOING = "Redoing";
						c.COMMITTING = "Committing";
						c.ROLLINGBACK = "RollingBack"
					})(g.Status || (g.Status = {}));
					var m = function () {
						function c(b, a) {
							this.maxOperations = 0;
							this.canUndo = this.canRedo = this.isRedoing = this.isUndoing = this.isSuspended = !1;
							this.position = this.length = 0;
							this.rootTransaction = null;
							this._status = d.undo.Status.IDLE;
							this._historyStack = [];
							this.app = b;
							a = a || {};
							"number" == typeof a.maxOperations &&
							this.setMaxOperations(a.maxOperations);
							this.registerCommands()
						}
						c.prototype.registerCommands = function () {
							var b = this;
							this.app.command("Undo").register(this, this.undo, function (a) {
								return b.canUndo
							});
							this.app.command("Redo").register(this, this.redo, function (a) {
								return b.canRedo
							})
						};
						c.prototype.suspend = function () {
							this.isSuspended = !0
						};
						c.prototype.resume = function () {
							this.isSuspended = !1
						};
						c.prototype.setMaxOperations = function (b) {
							this.maxOperations = b
						};
						c.prototype.getCurrentState = function () {
							return {
								historyStack : (this._historyStack ||
									[]).slice(),
								position : this.position,
								rootTransaction : this.rootTransaction,
								status : this._status
							}
						};
						c.prototype.add = function (b) {
							if (!b)
								throw Error("Undo operation cannot be null");
							for (; 0 < this.maxOperations && this._historyStack.length >= this.maxOperations; ) {
								var a = this._historyStack.shift();
								this.app.event("UndoOperationDiscardedEvent").publish({
									sender : this,
									operation : a
								})
							}
							this._historyStack.splice(this.position, 0, b);
							this.position++;
							this.clearRedo();
							this.app.event("UndoOperationAddedEvent").publish({
								sender : this,
								operation : b
							});
							this._checkAvailability()
						};
						c.prototype.undo = function () {
							var b = this;
							if (0 === this.position)
								return Promise.resolve();
							var a = this.peekUndo();
							this.position--;
							if (!a || "function" !== typeof a.performUndo)
								return Promise.resolve();
							this._updateStatus(d.undo.Status.UNDOING);
							this.app.event("UndoStartedEvent").publish({
								sender : this,
								operation : a
							});
							return a.performUndo(a.state).lastly(function () {
								b._updateStatus(d.undo.Status.IDLE);
								b.app.event("UndoCompletedEvent").publish({
									sender : b,
									operation : a
								});
								b._checkAvailability()
							})
						};
						c.prototype.redo = function () {
							var b = this;
							if (this.position === this._historyStack.length)
								return Promise.resolve();
							var a = this.peekRedo();
							this.position++;
							if (!a || "function" !== typeof a.performRedo)
								return Promise.resolve();
							this._updateStatus(d.undo.Status.REDOING);
							this.app.event("RedoStartedEvent").publish({
								sender : this,
								operation : a
							});
							return a.performRedo(a.state).lastly(function () {
								b._updateStatus(d.undo.Status.IDLE);
								b.app.event("RedoCompletedEvent").publish({
									sender : b,
									operation : a
								});
								b._checkAvailability()
							})
						};
						c.prototype.peekUndo = function () {
							return 0 < this._historyStack.length && 0 < this.position ? this.getAt(this.position - 1) : null
						};
						c.prototype.peekRedo = function () {
							return 0 < this._historyStack.length && this.position < this._historyStack.length ? this.getAt(this.position) : null
						};
						c.prototype.clearUndo = function () {
							this._historyStack.splice(0, this.position);
							this.position = 0;
							this._checkAvailability()
						};
						c.prototype.clearRedo = function () {
							this._historyStack.splice(this.position, this._historyStack.length - this.position);
							this.position =
								this._historyStack.length;
							this._checkAvailability()
						};
						c.prototype.getAt = function (b) {
							return this._historyStack[b]
						};
						c.prototype.removeAt = function (b) {
							0 <= b && b < this._historyStack.length && (this._historyStack.splice(b, 1), 0 < this.position && this.position > b && this.position--, this._checkAvailability())
						};
						c.prototype.beginTransaction = function (b, a) {
							var e = new g.UndoTransaction(this, b);
							this.rootTransaction ? e.parentTransaction = a || this.rootTransaction : this.rootTransaction = e;
							return e
						};
						c.prototype.commitTransaction = function (b) {
							var a =
								this;
							b = b || this.rootTransaction;
							if (!b)
								return Promise.reject(Error("Cannot find the transaction to commit"));
							if (b.isComplete())
								return Promise.reject(Error("Transaction has been closed already"));
							b.transactionStatus = g.TransactionStatus.COMMITTING;
							if (!b.hasChanges())
								return b.transactionStatus = g.TransactionStatus.COMMITTED, this._onTransactionCommitted(b), Promise.resolve();
							var e = function (a) {
								if (a instanceof g.UndoTransaction)
									return a.isComplete() ? Promise.resolve() : a.commit();
								if (a && "function" == typeof a.performRedo)
									return a.performRedo(a.state,
										b)
							},
							f = function (a, b) {
								return b ? e(b) : null
							};
							return e(b.changes[0]).then(function () {
								return Promise.reduce(b.changes.slice(1), f, null)
							}).then(function () {
								b.transactionStatus == g.TransactionStatus.COMMITTING && (b.transactionStatus = g.TransactionStatus.COMMITTED, a._onTransactionCommitted(b))
							})
						};
						c.prototype.rollbackTransaction = function (b) {
							var a = this;
							b = b || this.rootTransaction;
							if (!b)
								return Promise.reject(Error("Cannot find the transaction to rollback"));
							if (b.isComplete())
								return Promise.reject(Error("Transaction has been closed already"));
							b.transactionStatus = g.TransactionStatus.ABORTING;
							return b.hasChanges() ? Promise.reduce(b.changes.slice().reverse(), function (a, f) {
								if (f instanceof g.UndoTransaction)
									return f.isAborted() ? Promise.resolve() : f.rollback();
								if (f && "function" == typeof f.performUndo)
									return f.performUndo(f.state, b)
							}, null).then(function () {
								b.isAborted() || (b.transactionStatus = g.TransactionStatus.ABORTED, a._onTransactionAborted(b));
								if (!b.isTopLevel() && !b.parentTransaction.isAborted())
									return a.rollbackTransaction(b.parentTransaction)
							}) :
							(b.transactionStatus = g.TransactionStatus.ABORTED, this._onTransactionAborted(b), Promise.resolve())
						};
						c.prototype.destroy = function () {
							this._historyStack = null
						};
						c.prototype._onTransactionCommitted = function (b) {
							b && b.isTopLevel() && b == this.rootTransaction && (this.rootTransaction = null, this.add(b))
						};
						c.prototype._onTransactionAborted = function (b) {
							if (b) {
								var a = b.parentTransaction;
								if (a) {
									var e = a.changes.indexOf(b);
									-1 < e && a.changes.splice(e, 1)
								}
								b.isTopLevel() && b == this.rootTransaction && (this.rootTransaction = null)
							}
						};
						c.prototype._checkAvailability =
						function () {
							this.length = this._historyStack.length;
							this.isUndoing = this._status == d.undo.Status.UNDOING;
							this.isRedoing = this._status == d.undo.Status.REDOING;
							0 === this.length ? this.canUndo = this.canRedo = !1 : 0 === this.position ? (this.canUndo = !1, this.canRedo = !0) : this.position === this.length ? (this.canUndo = !0, this.canRedo = !1) : this.canUndo = this.canRedo = !0;
							this.app.command("Undo").raiseCanExecuteChanged();
							this.app.command("Redo").raiseCanExecuteChanged();
							this.app.event("UndoStackChangedEvent").publish({
								sender : this
							})
						};
						c.prototype._updateStatus = function (b) {
							this._status = b || d.undo.Status.IDLE;
							this.isUndoing = this._status == d.undo.Status.UNDOING;
							this.isRedoing = this._status == d.undo.Status.REDOING
						};
						return c
					}
					();
					g.UndoManager = m
				})(d.undo || (d.undo = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						d.SIMPLE_MARKER = "esriSMS";
						d.SIMPLE_LINE = "esriSLS";
						d.SIMPLE_FILL = "esriSFS";
						d.PICTURE_MARKER = "esriPMS";
						d.PICTURE_FILL = "esriPFS";
						d.TEXT = "esriTS"
					})(d.SymbolType || (d.SymbolType = {}));
					(function (d) {
						d.CIRCLE = "esriSMSCircle";
						d.CROSS = "esriSMSCross";
						d.DIAMOND = "esriSMSDiamond";
						d.SQUARE = "esriSMSSquare";
						d.X = "esriSMSX";
						d.TRIANGLE = "esriSMSTriangle";
						d.PATH = "esriSMSPath"
					})(d.SimpleMarkerStyle || (d.SimpleMarkerStyle = {}));
					(function (d) {
						d.DASH =
							"esriSLSDash";
						d.DASH_DOT = "esriSLSDashDot";
						d.DASH_DOT_DOT = "esriSLSDashDotDot";
						d.DOT = "esriSLSDot";
						d.NONE = "esriSLSNull";
						d.SOLID = "esriSLSSolid"
					})(d.SimpleLineStyle || (d.SimpleLineStyle = {}));
					(function (d) {
						d.BACKWARD_DIAGONAL = "esriSFSBackwardDiagonal";
						d.CROSS = "esriSFSCross";
						d.DIAGONAL_CROSS = "esriSFSDiagonalCross";
						d.FORWARD_DIAGONAL = "esriSFSForwardDiagonal";
						d.HORIZONTAL = "esriSFSHorizontal";
						d.NONE = "esriSFSNull";
						d.SOLID = "esriSFSSolid";
						d.VERTICAL = "esriSFSVertical"
					})(d.SimpleFillStyle || (d.SimpleFillStyle = {}));
					(function (d) {
						d.BASELINE = "baseline";
						d.TOP = "top";
						d.MIDDLE = "middle";
						d.BOTTOM = "bottom"
					})(d.VerticalAlignment || (d.VerticalAlignment = {}));
					(function (d) {
						d.LEFT = "left";
						d.RIGHT = "right";
						d.CENTER = "center";
						d.JUSTIFY = "justify"
					})(d.HorizontalAlignment || (d.HorizontalAlignment = {}));
					(function (d) {
						d.ITALIC = "italic";
						d.NORMAL = "normal";
						d.OBLIQUE = "oblique"
					})(d.FontStyle || (d.FontStyle = {}));
					(function (d) {
						d.BOLD = "bold";
						d.BOLDER = "bolder";
						d.LIGHTER = "lighter";
						d.NORMAL = "normal"
					})(d.FontWeight || (d.FontWeight = {}));
					(function (d) {
						d.LINE_THROUGH =
							"line-through";
						d.UNDERLINE = "underline";
						d.NONE = "none"
					})(d.TextDecoration || (d.TextDecoration = {}))
				})(d.webMap || (d.webMap = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = d.framework.utils.ArrayUtils,
					c = function () {
						return function () {}

					}
					();
					g.CONVERSION_TYPE_PROPERTY = "__conversionType";
					var b = {
						type : g.SymbolType.SIMPLE_MARKER,
						style : g.SimpleMarkerStyle.CIRCLE,
						size : 0,
						color : [0, 0, 0, 0]
					},
					a;
					(function (a) {
						a.FeatureLayer = "ArcGISFeatureLayer";
						a.MapService = "ArcGISMapServiceLayer";
						a.TiledMapService = "ArcGISTiledMapServiceLayer";
						a.ImageService = "ArcGISImageServiceLayer";
						a.BingAerial = "BingMapsAerial";
						a.BingHybrid = "BingMapsHybrid";
						a.BingRoad = "BingMapsRoad";
						a.OpenStreetMap = "OpenStreetMap";
						a.WebTiled = "WebTiledLayer";
						a.KML = "KML";
						a.WMS = "WMS"
					})(a || (a = {}));
					var e;
					(function (a) {
						a.WEB_MAP_SERVICE_LAYER = "webMapServiceLayer";
						a.WEB_MAP_LAYER = "webMapLayer";
						a.WEB_MAP_FEATURE_SET = "webMapFeatureSet";
						a.WEB_MAP_FEATURE = "webMapFeature";
						a.WEB_MAP_GEOMETRY = "webMapGeometry";
						a.WEB_MAP_SYMBOL = "webMapSymbol";
						a.WEB_MAP_RENDERER = "webMapRenderer";
						a.WEB_MAP_SPATIAL_REFERENCE = "webMapSpatialReference";
						a.WEB_MAP_COLOR = "webMapColor";
						a.WEB_MAP_DATA = "webMapData";
						a.GCX_MAP_SERVICE = "gcxMapService";
						a.GCX_LAYER = "gcxLayer";
						a.GCX_FEATURE_SET = "gcxFeatureSet";
						a.GCX_FEATURE = "gcxFeature";
						a.ESRI_LAYER = "esriLayer";
						a.ESRI_FEATURE_SET = "esriFeatureSet";
						a.ESRI_GRAPHIC = "esriGraphic";
						a.ESRI_GEOMETRY = "esriGeometry";
						a.ESRI_SYMBOL = "esriSymbol";
						a.ESRI_RENDERER = "esriRenderer";
						a.ESRI_SPATIAL_REFERENCE = "esriSpatialReference";
						a.ESRI_COLOR = "esriColor";
						a.OBJECT = "object"
					})(e = g.ConversionType || (g.ConversionType = {}));
					var f = function () {
						function f(a) {
							this._resultCache = {};
							this._nextSymbolId =
								1;
							this._nestingLevel = 0;
							this._hasReferences = !1;
							this._converting = {};
							this.app = a
						}
						f.prototype.fromGcxMapService = function (a) {
							return this._convert(a, e.WEB_MAP_SERVICE_LAYER, this._fromGcxMapService)
						};
						f.prototype.fromGcxLayer = function (a) {
							return this._convert(a, e.WEB_MAP_LAYER, this._fromGcxlayer)
						};
						f.prototype.fromGcxFeatureSet = function (a) {
							return this._convert(a, e.WEB_MAP_FEATURE_SET, this._fromGcxFeatureSet)
						};
						f.prototype.fromGcxFeature = function (a) {
							return this._convert(a, e.WEB_MAP_FEATURE, this._fromGcxFeature)
						};
						f.prototype.fromEsriLayer = function (a) {
							return this._convert(a, e.WEB_MAP_SERVICE_LAYER, this._fromEsriLayer)
						};
						f.prototype.fromEsriFeatureSet = function (a) {
							return this._convert(a, e.WEB_MAP_FEATURE_SET, this._fromEsriFeatureSet)
						};
						f.prototype.fromEsriGraphic = function (a) {
							return this._convert(a, e.WEB_MAP_FEATURE, this._fromEsriGraphic)
						};
						f.prototype.fromEsriGeometry = function (a) {
							return this._convert(a, e.WEB_MAP_GEOMETRY, this._fromEsriGeometry)
						};
						f.prototype.fromEsriSymbol = function (a) {
							return this._convert(a, e.WEB_MAP_SYMBOL,
								this._fromEsriSymbol)
						};
						f.prototype.fromEsriRenderer = function (a) {
							return this._convert(a, e.WEB_MAP_RENDERER, this._fromEsriRenderer)
						};
						f.prototype.fromEsriSpatialReference = function (a) {
							return this._convert(a, e.WEB_MAP_SPATIAL_REFERENCE, this._fromEsriSpatialReference)
						};
						f.prototype.fromEsriColor = function (a) {
							return this._convert(a, e.WEB_MAP_COLOR, this._fromEsriColor)
						};
						f.prototype.fromObject = function (a) {
							return this._convert(a, e.WEB_MAP_DATA, this._fromObject)
						};
						f.prototype.toGcxMapService = function (a) {
							return Promise.resolve(this._convert(a,
									e.GCX_MAP_SERVICE, this._toGcxMapService))
						};
						f.prototype.toGcxLayer = function (a, b) {
							return Promise.resolve(this._convert(a, e.GCX_LAYER, this._toGcxLayer, [b]))
						};
						f.prototype.toGcxFeatureSet = function (a) {
							return Promise.resolve(this._convert(a, e.GCX_FEATURE_SET, this._toGcxFeatureSet))
						};
						f.prototype.toGcxFeature = function (a) {
							return Promise.resolve(this._convert(a, e.GCX_FEATURE, this._toGcxFeature))
						};
						f.prototype.toEsriLayer = function (a) {
							return Promise.resolve(this._convert(a, e.ESRI_LAYER, this._toEsriLayer))
						};
						f.prototype.toEsriFeatureSet =
						function (a) {
							return Promise.resolve(this._convert(a, e.ESRI_FEATURE_SET, this._toEsriFeatureSet))
						};
						f.prototype.toEsriGraphic = function (a) {
							return Promise.resolve(this._convert(a, e.ESRI_GRAPHIC, this._toEsriGraphic))
						};
						f.prototype.toEsriGeometry = function (a) {
							return this._convert(a, e.ESRI_GEOMETRY, this._toEsriGeometry)
						};
						f.prototype.toEsriSymbol = function (a) {
							return this._convert(a, e.ESRI_SYMBOL, this._toEsriSymbol)
						};
						f.prototype.toEsriRenderer = function (a) {
							return this._convert(a, e.ESRI_RENDERER, this._toEsriRenderer)
						};
						f.prototype.toEsriSpatialReference = function (a) {
							return this._convert(a, e.ESRI_SPATIAL_REFERENCE, this._toEsriSpatialReference)
						};
						f.prototype.toEsriColor = function (a) {
							return this._convert(a, e.ESRI_COLOR, this._toEsriColor)
						};
						f.prototype.toObject = function (a) {
							return Promise.resolve(this._convert(a, e.OBJECT, this._toObject))
						};
						f.prototype.clearCache = function () {
							this._resultCache = {}

						};
						f.prototype._convert = function (a, b, e, f) {
							void 0 === f && (f = []);
							if (null === a || void 0 === a || "string" === typeof a || "number" === typeof a || "boolean" ===
								typeof a || a instanceof Date)
								return a;
							var l = this._resultCache[b];
							l || (l = this._resultCache[b] = new WeakMap);
							var d = this._converting[b];
							d || (d = this._converting[b] = new WeakMap);
							if (l.has(a))
								return l.get(a);
							if (d.has(a)) {
								var g = new c;
								l.set(a, g);
								this._hasReferences = !0;
								return g
							}
							b = void 0;
							0 === this._nestingLevel && (this._hasReferences = !1);
							this._nestingLevel++;
							d.set(a, !0);
							try {
								b = e.apply(this, [a].concat(f));
								if (g = l.get(a))
									g.result = b;
								l.set(a, b)
							} catch (h) {
								throw l["delete"](a),
								h;
							}
							finally {
								this._nestingLevel--,
								d["delete"](a)
							}
							0 ===
							this._nestingLevel && this._hasReferences && this._resolveReferences(b);
							return b
						};
						f.prototype._resolveReferences = function (a) {
							if (a) {
								var b = new WeakMap,
								e = function (a) {
									if (!(a instanceof d.essentials.MapService || a instanceof d.essentials.Layer)) {
										b.set(a, !0);
										for (var f in a) {
											var l = a[f];
											"object" === typeof l && (l instanceof c ? a[f] = l.result : l && !b.has(l) && e(l))
										}
									}
								};
								e(a)
							}
						};
						f.prototype._getWebMapLayerDefinitionFromDynamicLayer = function (a, b) {
							var e = {},
							f = !1;
							a.layerDefinitions && a.layerDefinitions[b] && (f = !0, e.definitionExpression =
									a.layerDefinitions[b]);
							if (a.dynamicLayerInfos) {
								var c = m.firstOrDefault(a.dynamicLayerInfos, function (a) {
										return a.id === b
									});
								c && (f = !0, e.minScale = c.minScale, e.maxScale = c.maxScale, e.source = c.source.toJson())
							}
							a.layerDrawingOptions && a.layerDrawingOptions[b] && (f = !0, e.drawingInfo = {
									renderer : this.fromEsriRenderer(a.layerDrawingOptions[b].renderer),
									fixedSymbols : !a.layerDrawingOptions[b].scaleSymbols
								});
							return f ? e : null
						};
						f.prototype._applyWebMapServiceLayerToMapService = function (a, b) {
							var e = this;
							return Promise["try"](function () {
								b.setOpacity(a.opacity);
								b.setVisibility(a.visibility);
								var f = b.serviceLayer;
								f instanceof esri.layers.FeatureLayer && (b.layers[0].setVisibility(a.visibility), a.layerDefinition && a.layerDefinition.definitionExpression && f.setDefinitionExpression(a.layerDefinition.definitionExpression));
								if (e._isFeatureCollection(a) && a.featureCollection.layers[0].layerDefinition)
									return e._applyDrawingInfo(a.featureCollection.layers[0].layerDefinition.drawingInfo, b);
								if (a.layerDefinition)
									return e._applyDrawingInfo(a.layerDefinition.drawingInfo, b)
							})
						};
						f.prototype._applyWebMapLayersToGcxLayers = function (a, b) {
							var e = this,
							f = [];
							(a.layers || []).forEach(function (a, c) {
								var l = e._findOrCreateMatchingGcxLayer(a, b).then(function (b) {
										return b ? e._applyWebMapLayerToGcxLayer(a, c, b) : !1
									});
								f.push(l)
							});
							return Promise.all(f).then(function (a) {
								return a.some(function (a) {
									return a
								})
							})
						};
						f.prototype._applyWebMapLayerToGcxLayer = function (a, b, e) {
							var f = this,
							c = e.mapService.serviceLayer;
							return a.layerDefinition && c instanceof esri.layers.ArcGISDynamicMapServiceLayer ? this.app.waitUntilServiceLayerLoaded(c).then(function () {
								var b =
									parseInt(e.id),
								l = !1;
								a.layerDefinition.definitionExpression && (l = (c.layerDefinitions || []).slice(), l[b] = a.layerDefinition.definitionExpression, c.setLayerDefinitions(l, !0), l = !0);
								a.layerDefinition.drawingInfo && (e.mapService.convertToDynamicLayers(), l = (c.layerDrawingOptions || []).slice(), l[b] = new esri.layers.LayerDrawingOptions, l[b].renderer = f.toEsriRenderer(a.layerDefinition.drawingInfo.renderer), l[b].scaleSymbols = !a.layerDefinition.drawingInfo.fixedSymbols, a.layerDefinition.drawingInfo.hasOwnProperty("showLabels") &&
									(l[b].showLabels = a.layerDefinition.drawingInfo.showLabels), c.setLayerDrawingOptions(l, !0), l = !0);
								if (c.dynamicLayerInfos) {
									var d = m.firstOrDefault(c.dynamicLayerInfos, function (a) {
											return a.id === b
										});
									d && (d.minScale = a.layerDefinition.minScale, d.maxScale = a.layerDefinition.maxScale, c.setDynamicLayerInfos(c.dynamicLayerInfos, !0), l = !0)
								}
								return l
							}) : Promise.resolve(!1)
						};
						f.prototype._applyDrawingInfo = function (a, b) {
							var e = this;
							if (!a)
								return Promise.resolve();
							var f = b.serviceLayer;
							return this.app.waitUntilServiceLayerLoaded(f).then(function () {
								b.heatMap &&
								b.heatMap.userCanToggle && e.app.command("RemoveHeatMap").execute({
									gcxLayer : b.layers[0]
								});
								if (a.renderer)
									if (b.heatMap && b.heatMap.userCanToggle && a.renderer.type === g.RendererType.HEATMAP) {
										var c = e.toEsriRenderer(a.renderer);
										if (c) {
											var l = b.heatMap;
											l.intensity = c.blurRadius;
											l.field = c.field;
											l.gradient = [];
											l.offset = [];
											(c.colorStops || []).forEach(function (a, b) {
												l.gradient[b] = a.color;
												l.offset[b] = a.ratio
											});
											e.app.command("AddHeatMap").execute({
												gcxLayer : b.layers[0]
											})
										}
									} else
										f instanceof esri.layers.GraphicsLayer && f.setRenderer(e.toEsriRenderer(a.renderer))
							})
						};
						f.prototype._findMatchingGcxMapService = function (a) {
							var b = this.app.site.essentialsMap.findMapServiceById(a.id);
							return b = b || m.firstOrDefault(this.app.site.essentialsMap.mapServices, function (b) {
									return b.serviceUrl === a.url
								})
						};
						f.prototype._findMatchingGcxLayer = function (a, b) {
							var e = "object" === typeof a ? a : null,
							f = null;
							e && (f = b.findLayerByName(e.name));
							var c = e ? e.id.toString() : a.toString(),
							f = (f = f || b.findLayerById(c)) || m.firstOrDefault(b.layers, function (a) {
								return a.wmsLayerName === c
							}),
							l = void 0;
							!f && e && e.layerDefinition &&
							e.layerDefinition.source && "mapLayer" === e.layerDefinition.source.type && (l = e.layerDefinition.source.mapLayerId);
							f || null === l || void 0 === l || (f = b.findLayerById(l.toString()));
							f || b.layers.forEach(function (a) {
								if (a.dynamicDefinition) {
									var b = JSON.parse(a.dynamicDefinition);
									!b || !b.source || "mapLayerId" !== b.source.type || !b.source.mapLayerId && 0 !== b.source.mapLayerId || b.source.mapLayerId.toString() !== c && b.source.mapLayerId.toString() !== l || (f = a)
								}
							});
							return f
						};
						f.prototype._findOrCreateMatchingGcxLayer = function (a, b) {
							var e =
								this._findMatchingGcxLayer(a, b);
							return !e && this._canCreateGcxLayer(a, b) ? this._createGcxLayer(a, b) : Promise.resolve(e)
						};
						f.prototype._findOrCreateMatchingGcxMapService = function (a) {
							var b = this._findMatchingGcxMapService(a);
							return !b && this._canCreateGcxMapService(a) ? this._createGcxMapService(a) : Promise.resolve(b)
						};
						f.prototype._canCreateGcxLayer = function (a, b) {
							return b.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer
						};
						f.prototype._createGcxLayer = function (a, b) {
							if (!this._canCreateGcxLayer(a, b))
								return Promise.reject(Error("WebMapConverter._createGcxLayer: Unsupported layer type."));
							var e = {
								source : {
									type : "mapLayerId",
									mapLayerId : a.id
								}
							};
							a.layerDefinition && a.layerDefinition.drawingInfo && (e.drawingInfo = a.layerDefinition.drawingInfo);
							var e = {
								id : a.id.toString(),
								name : a.name,
								displayName : a.title || a.name,
								isDynamic : !0,
								dynamicDefinition : JSON.stringify(e)
							},
							f = new d.essentials.Layer(b.url + "/layers/" + a.id.toString());
							f.createFromDefinition(e);
							b.add(f);
							return Promise.resolve(f)
						};
						f.prototype._canCreateGcxMapService = function (a) {
							return this._isFeatureCollection(a) || this._isKmlLayer(a)
						};
						f.prototype._createGcxMapService =
						function (a) {
							var b = this,
							e = this._getMapServiceDefinition(a);
							if (this._isFeatureCollection(a)) {
								var f = a.featureCollection.layers[0];
								a = f.featureSet || {};
								var c = a.features || [];
								a.features = [];
								e = {
									mapService : h.LayerIntegrationUtils.buildLocalFeatureLayerService(f, e),
									graphics : Promise.map(c, function (a) {
										return b.toEsriGraphic(a)
									})
								};
								return Promise.props(e).then(function (a) {
									var e = a.mapService;
									f.layerDefinition && f.layerDefinition.drawingInfo && f.layerDefinition.drawingInfo.renderer && e.serviceLayer.setRenderer(b._toEsriRenderer(f.layerDefinition.drawingInfo.renderer));
									a.graphics.forEach(function (a) {
										e.serviceLayer.add(a)
									});
									a.graphics.length && (e.serviceLayer.fullExtent = esri.graphicsExtent(a.graphics));
									b.app.site.essentialsMap.addMapService(e);
									return e
								})
							}
							return this._isKmlLayer(a) ? h.LayerIntegrationUtils.buildKmlService(a.url, e).then(function (a) {
								b.app.site.essentialsMap.addMapService(a);
								return a
							}) : Promise.reject(Error("WebMapConverter._createGcxMapService: Unsupported service layer type."))
						};
						f.prototype._getMapServiceDefinition = function (a) {
							return {
								id : a.id,
								displayName : a.title
							}
						};
						f.prototype._isFeatureCollection = function (a) {
							return a.featureCollection && a.featureCollection.layers && 1 === a.featureCollection.layers.length && !!a.featureCollection.layers[0].featureSet
						};
						f.prototype._isKmlLayer = function (a) {
							return a.type === g.OperationalLayerType.KML
						};
						f.prototype._isGraphicsLayer = function (a) {
							return a.id && a.id.startsWith("graphics-layer-")
						};
						f.prototype._addSourceType = function (a, b) {
							b[g.CONVERSION_TYPE_PROPERTY] = a;
							return b
						};
						f.prototype._getWebMapLayerType = function (b) {
							if (b instanceof esri.layers.FeatureLayer)
								return a.FeatureLayer;
							if (b instanceof esri.layers.ArcGISDynamicMapServiceLayer)
								return a.MapService;
							if (b instanceof esri.layers.ArcGISTiledMapServiceLayer)
								return a.TiledMapService;
							if (b instanceof esri.layers.ArcGISImageServiceLayer)
								return a.ImageService;
							if (b instanceof esri.virtualearth.VETiledLayer)
								switch (b.mapStyle.toLowerCase()) {
								case esri.virtualearth.VETiledLayer.MAP_STYLE_AERIAL.toLowerCase():
									return a.BingAerial;
								case esri.virtualearth.VETiledLayer.MAP_STYLE_AERIAL_WITH_LABELS.toLowerCase():
									return a.BingHybrid;
								case esri.virtualearth.VETiledLayer.MAP_STYLE_ROAD.toLowerCase():
									return a.BingRoad
								}
							else {
								if (b instanceof
									esri.layers.WebTiledLayer)
									return b.url && 0 <= b.url.indexOf("tile.openstreetmap.org") ? a.OpenStreetMap : a.WebTiled;
								if (b instanceof esri.layers.KMLLayer)
									return a.KML;
								if (b instanceof esri.layers.WMSLayer)
									return a.WMS;
								if (b instanceof esri.layers.WMTSLayer)
									return a.WebTiled
							}
						};
						f.prototype._inferAttributeType = function (a, b) {
							var e = m.firstOrDefault(a, function (a) {
									return a.attributes && !d.framework.utils.isNullOrUndefined(a.attributes[b])
								});
							if (!e)
								return d.essentials.EsriFieldTypes.esriFieldTypeString;
							e = e.attributes[b];
							return "number" === typeof e ? d.essentials.EsriFieldTypes.esriFieldTypeDouble : e instanceof Date ? d.essentials.EsriFieldTypes.esriFieldTypeDate : d.essentials.EsriFieldTypes.esriFieldTypeString
						};
						f.prototype._setVisibleLayers = function (a, b) {
							var e = this;
							if (!b.supportsLayerVisibility())
								return !1;
							var f = !1,
							c = [],
							l = a.layers || [];
							(a.visibleLayers || []).forEach(function (a) {
								var f = void 0;
								if (l) {
									var d = m.firstOrDefault(l, function (b) {
											return b.id === a
										});
									(d = d || m.firstOrDefault(l, function (b) {
												return b.name === a
											})) && (f = e._findMatchingGcxLayer(d,
												b))
								}
								f || (f = e._findMatchingGcxLayer(a, b));
								f && c.push(f)
							});
							b.layers.forEach(function (a) {
								if (a.type !== d.essentials.LayerType.GROUP_LAYER) {
									var b = 0 <= c.indexOf(a);
									f = f || b !== a.isVisible();
									a.setVisibility(b, !0)
								}
							});
							return f
						};
						f.prototype._toGcxMapService = function (a) {
							var b = this,
							e = void 0;
							return Promise.all([this.app.waitUntilSiteInitialized(), this.app.waitUntilMapLoaded()]).then(function () {
								return b._findOrCreateMatchingGcxMapService(a)
							}).then(function (f) {
								e = f;
								if (!e)
									throw Error('No matching Essentials map service was found for service "{0}".'.format(a.id));
								return b._applyWebMapServiceLayerToMapService(a, e)
							}).then(function () {
								return b._applyWebMapLayersToGcxLayers(a, e)
							}).then(function (f) {
								(f = f || b._setVisibleLayers(a, e)) && e.refresh();
								return e
							})
						};
						f.prototype._toGcxLayer = function (a, b) {
							var e = this;
							if (!b)
								throw Error('WebMapConverter.toGcxLayer: Parameter "serviceLayer" is required.');
							return this.toGcxMapService(b).then(function (f) {
								f = e._findMatchingGcxLayer(a, f);
								if (!f)
									throw Error('No matching Essentials layer was found for layer "{0}" for service "{1}".'.format(a.id,
											b.id));
								return f
							})
						};
						f.prototype._toGcxFeatureSet = function (a) {
							var b = this;
							return this.toEsriFeatureSet(a).then(function (a) {
								return new h.FeatureSet({
									app : b.app,
									esriFeatureSet : a
								})
							})
						};
						f.prototype._toEsriLayer = function (b) {
							if (this._isGraphicsLayer(b))
								return this._toEsriGraphicsLayer(b);
							if (b.layerType === a.FeatureLayer)
								return this._toEsriFeatureLayer(b);
							throw Error("WebMapConverter.toEsriLayer: Unsupported layer type.");
						};
						f.prototype._toEsriGraphicsLayer = function (a) {
							var e = this,
							f = a.id.slice(15),
							c = this.app.map.getLayer(f);
							return !c || c instanceof esri.layers.GraphicsLayer ? Promise.all([this.app.waitUntilSiteInitialized(), this.app.waitUntilMapLoaded()]).then(function () {
								var l = c;
								l || (l = new esri.layers.GraphicsLayer({
											id : f
										}), e.app.map.addLayer(l));
								l.setVisibility(a.visibility);
								l.setOpacity(a.opacity);
								l.clear();
								var d = [];
								((a.featureCollection || {}).layers || []).forEach(function (a) {
									((a.featureSet || {}).features || []).forEach(function (a) {
										a.attributes && (d[a.attributes.__id] = e.toEsriGraphic(a))
									});
									!l.renderer && a.layerDefinition && a.layerDefinition.drawingInfo &&
									a.layerDefinition.drawingInfo.renderer && (a = a.layerDefinition.drawingInfo.renderer, a.uniqueValueInfos && a.uniqueValueInfos[0] && JSON.stringify(a.uniqueValueInfos[0].symbol) === JSON.stringify(b) || l.setRenderer(e.toEsriRenderer(a)))
								});
								return Promise.all(d).then(function (a) {
									a.forEach(function (a) {
										a && l.add(a)
									});
									return l
								})
							}) : Promise.resolve(c)
						};
						f.prototype._toEsriFeatureLayer = function (a) {
							var b = this;
							if (a.url) {
								var e = new esri.layers.FeatureLayer(a.url);
								e.setVisibility(a.visibility);
								e.setOpacity(a.opacity);
								return this.app.waitUntilServiceLayerLoaded(e)["return"](e)
							}
							if (this._isFeatureCollection(a))
								return e =
									new esri.layers.FeatureLayer(a.featureCollection.layers[0]), e.setVisibility(a.visibility), e.setOpacity(a.opacity), e.clear(), Promise.map((a.featureCollection.layers[0].featureSet || {}).features || [], function (a) {
									return b.toEsriGraphic(a).then(function (a) {
										return e.add(a)
									})
								})["return"](e);
							throw Error("WebMapConverter.toEsriLayer: Unsupported layer type.");
						};
						f.prototype._toEsriFeatureSet = function (a) {
							var b = this;
							return h.PromiseUtils.mapSkipRejected(a.features || [], function (a) {
								return b.toEsriGraphic(a)
							}).then(function (a) {
								var b =
									new esri.tasks.FeatureSet;
								b.features = a;
								return b
							})
						};
						f.prototype._toGcxFeature = function (a) {
							return this.toEsriGraphic(a).then(function (a) {
								return new h.Feature({
									graphic : a
								})
							})
						};
						f.prototype._toEsriGraphic = function (a) {
							var b = this;
							return this.toObject(a.attributes).then(function (e) {
								var f = b.toEsriGeometry(a.geometry),
								c,
								l = !0;
								e && (c = e.__symbol, delete e.__symbol, e.hasOwnProperty("__visible") && (l = e.__visible, delete e.__visible), delete e.__id);
								e = new esri.Graphic(f, c, e, null);
								e.visible = l;
								return e
							})
						};
						f.prototype._toEsriGeometry =
						function (a) {
							if (a.hasOwnProperty("x") && a.hasOwnProperty("y"))
								return new esri.geometry.Point(a);
							if (a.hasOwnProperty("points"))
								return new esri.geometry.Multipoint(a);
							if (a.hasOwnProperty("paths"))
								return new esri.geometry.Polyline(a);
							if (a.hasOwnProperty("rings"))
								return new esri.geometry.Polygon(a);
							if (a.hasOwnProperty("xmin") && a.hasOwnProperty("xmax") && a.hasOwnProperty("ymin") && a.hasOwnProperty("ymax"))
								return new esri.geometry.Extent(a);
							throw Error("WebMapConverter.toEsriGeometry: Unrecognized type of geometry object.");
						};
						f.prototype._toEsriSymbol = function (a) {
							switch (a.type) {
							case g.SymbolType.SIMPLE_MARKER:
								var b = new esri.symbol.SimpleMarkerSymbol(a);
								a.size !== b.size && (b.size = a.size);
								return b;
							case g.SymbolType.SIMPLE_LINE:
								return new esri.symbol.SimpleLineSymbol(a);
							case g.SymbolType.SIMPLE_FILL:
								return new esri.symbol.SimpleFillSymbol(a);
							case g.SymbolType.PICTURE_MARKER:
								return new esri.symbol.PictureMarkerSymbol(a);
							case g.SymbolType.PICTURE_FILL:
								return new esri.symbol.PictureFillSymbol(a);
							case g.SymbolType.TEXT:
								return new esri.symbol.TextSymbol(a);
							default:
								throw Error('WebMapConverter.toEsriSymbol: Unsupported symbol type "{0}".'.format(a.type));
							}
						};
						f.prototype._toEsriRenderer = function (a) {
							var b = this;
							switch (a.type) {
							case g.RendererType.SIMPLE:
								var e = new esri.renderer.SimpleRenderer(dojo.clone(a));
								e.symbol = this.toEsriSymbol(a.symbol);
								return e;
							case g.RendererType.UNIQUE_VALUE:
								return e = new esri.renderer.UniqueValueRenderer(dojo.clone(a)),
								e.defaultSymbol = this.toEsriSymbol(a.defaultSymbol),
								e.infos.forEach(function (e, f) {
									e.symbol = b.toEsriSymbol(a.uniqueValueInfos[f].symbol)
								}),
								e;
							case g.RendererType.CLASS_BREAKS:
								return e = new esri.renderer.ClassBreaksRenderer(dojo.clone(a)),
								e.defaultSymbol = this.toEsriSymbol(a.defaultSymbol),
								e.infos.forEach(function (e, f) {
									e.symbol = b.toEsriSymbol(a.classBreakInfos[f].symbol)
								}),
								e;
							case g.RendererType.HEATMAP:
								return new esri.renderer.HeatmapRenderer(dojo.clone(a));
							default:
								throw Error('WebMapConverter.toEsriRenderer: Unsupported renderer type "{0}".'.format(a.type));
							}
						};
						f.prototype._toEsriSpatialReference = function (a) {
							return new esri.SpatialReference(a)
						};
						f.prototype._toEsriColor = function (a) {
							return new esri.Color(a)
						};
						f.prototype._toObject = function (a) {
							var b = this;
							if ("string" === typeof a || "number" === typeof a || "boolean" === typeof a || a instanceof Date || null === a || void 0 === a)
								return Promise.resolve(a);
							if (a.hasOwnProperty(g.CONVERSION_TYPE_PROPERTY))
								switch (a[g.CONVERSION_TYPE_PROPERTY]) {
								case e.GCX_MAP_SERVICE:
									return this.toGcxMapService(a);
								case e.GCX_LAYER:
									return this.toGcxLayer(a, null);
								case e.GCX_FEATURE_SET:
									return this.toGcxFeatureSet(a);
								case e.GCX_FEATURE:
									return this.toGcxFeature(a);
								case e.ESRI_LAYER:
									return this.toEsriLayer(a);
								case e.ESRI_FEATURE_SET:
									return this.toEsriFeatureSet(a);
								case e.ESRI_GRAPHIC:
									return this.toEsriGraphic(a);
								case e.ESRI_GEOMETRY:
									return Promise.resolve(this.toEsriGeometry(a));
								case e.ESRI_SYMBOL:
									return Promise.resolve(this.toEsriSymbol(a));
								case e.ESRI_RENDERER:
									return Promise.resolve(this.toEsriRenderer(a));
								case e.ESRI_SPATIAL_REFERENCE:
									return Promise.resolve(this.toEsriSpatialReference(a))
								}
							var f = {},
							c = [];
							Object.keys(a).forEach(function (e) {
								c.push(b.toObject(a[e]).then(function (a) {
										f[e] =
											a
									}))
							});
							return Promise.all(c)["return"](f)
						};
						f.prototype._fromGcxMapService = function (a) {
							var b = this,
							e = a.serviceLayer,
							f = {
								id : a.id,
								url : a.serviceUrl,
								opacity : a.opacity,
								visibility : a.isVisible(),
								layerType : this._getWebMapLayerType(e)
							};
							if (a.mapServiceFunction === d.essentials.MapServiceFunction.OPERATIONAL) {
								f.title = a.displayName;
								f.minScale = Infinity === a.minScale ? 0 : a.minScale;
								f.maxScale = a.maxScale;
								if (e instanceof esri.layers.ArcGISDynamicMapServiceLayer) {
									f.capabilities = e.capabilities;
									f.visibleLayers = e.visibleLayers.map(function (a) {
											return parseInt(a)
										});
									var c = a.layers;
									e.dynamicLayerInfos && (c = [], e.dynamicLayerInfos.forEach(function (b, e) {
											var f = a.findLayerById(b.id.toString());
											f && c.push(f)
										}));
									f.layers = c.map(function (a) {
											return b.fromGcxLayer(a)
										})
								} else
									e instanceof esri.layers.WMSLayer ? (f.visibleLayers = e.visibleLayers, f.type = g.OperationalLayerType.WMS) : e instanceof esri.layers.KMLLayer ? f.type = g.OperationalLayerType.KML : e instanceof esri.layers.FeatureLayer && (f.capabilities = e.capabilities, f.layerDefinition = {
												definitionExpression : e.getDefinitionExpression()
											},
											a.isUserCreated && e.graphics && e.graphics.length && (f.featureCollection = this._esriFeatureLayerToFeatureCollection(e), f.featureCollection.showLegend = a.layers[0].includeInLegend));
								e instanceof esri.layers.GraphicsLayer && e.renderer instanceof esri.renderer.HeatmapRenderer && !f.featureCollection && (f.layerDefinition = f.layerDefinition || {}, f.layerDefinition.drawingInfo = {
										renderer : this.fromEsriRenderer(e.renderer)
									})
							} else if (e instanceof esri.virtualearth.VETiledLayer)
								f.type = f.layerType, delete f.url;
							else if (e instanceof
								esri.layers.WebTiledLayer)
								f.type = f.layerType, f.templateUrl = e.url, delete f.url;
							else if (e instanceof esri.layers.WMTSLayer) {
								f.type = g.BaseMapType.WEB_TILED;
								if (!a.tileRestUrl)
									throw Error('WebMapConverter.fromGcxMapService: WMTS layers are only supported if the "tileRestUrl" property is set.');
								a.tileRestUrl && !e.resourceUrls && (e.resourceUrls = [{
											template : a.tileRestUrl
										}
									]);
								f.templateUrl = e._getTileUrlTemplate();
								delete f.url
							}
							return f
						};
						f.prototype._esriFeatureLayerToFeatureCollection = function (a) {
							var b = a.toJson().layerDefinition || {};
							return {
								layers : [{
										featureSet : {
											geometryType : a.geometryType,
											features : a.graphics.map(this.fromEsriGraphic, this)
										},
										layerDefinition : {
											displayField : b.displayField,
											fields : b.fields,
											geometryType : b.geometryType,
											hasAttachments : b.hasAttachments,
											minScale : b.minScale,
											maxScale : b.maxScale,
											name : b.name,
											objectIdField : b.objectIdField,
											templates : b.templates,
											type : b.type,
											typeIdField : b.typeIdField,
											types : b.types,
											drawingInfo : {
												renderer : this.fromEsriRenderer(a.renderer)
											}
										}
									}
								],
								showLegend : !0
							}
						};
						f.prototype._fromGcxlayer = function (a) {
							var b = {
								name : a.wmsLayerName,
								title : a.displayName,
								layerUrl : a.getLayerUrl(),
								legendUrl : a.legendUrl
							},
							e = parseInt(a.id);
							isNaN(e) || void 0 === e || (b.id = e);
							a = a.mapService.serviceLayer;
							a instanceof esri.layers.ArcGISDynamicMapServiceLayer && (e = this._getWebMapLayerDefinitionFromDynamicLayer(a, e)) && (b.layerDefinition = e);
							return b
						};
						f.prototype._fromGcxFeatureSet = function (a) {
							var b,
							e = a.esriFeatureSet;
							e ? (b = g.GeometryType.fromEsriGeometryType(e.geometryType), !b && e.features && 0 < e.features.length && e.features[0].geometry && (b = g.GeometryType.fromEsriGeometryType(e.features[0].geometry.type))) :
							a.features.length && (e = a.features.getAt(0), e.hasGeometry.get() && (b = g.GeometryType.fromEsriGeometryType(e.esriFeature.get().geometry.type)));
							return {
								features : a.features.get().map(this.fromGcxFeature, this),
								geometryType : b || g.GeometryType.POINT
							}
						};
						f.prototype._fromEsriLayer = function (a) {
							if (a instanceof esri.layers.FeatureLayer)
								return this._fromEsriFeatureLayer(a);
							if (a instanceof esri.layers.GraphicsLayer)
								return this._fromEsriGraphicsLayer(a);
							throw Error("WebMapConverter.fromEsriLayer: Unsupported layer type.");
						};
						f.prototype._fromEsriGraphicsLayer = function (a) {
							var e = this,
							f = {
								id : "graphics-layer-" + a.id,
								title : a.id,
								visibility : a.visible,
								opacity : a.opacity,
								minScale : a.minScale,
								maxScale : a.maxScale
							},
							c = {};
							a.graphics.forEach(function (f, l) {
								var r = f.geometry.type,
								h = c[r];
								h || (h = {
										featureSet : {
											features : [],
											geometryType : g.GeometryType.fromEsriGeometryType(r)
										},
										layerDefinition : {
											geometryType : g.GeometryType.fromEsriGeometryType(r),
											objectIdField : "__id",
											name : e.app.getResource("Mapping.Infrastructure", "language-webmap-layer-name-" + r),
											fields : [{
													name : "__id",
													alias : "OBJECTID",
													type : d.essentials.EsriFieldTypes.esriFieldTypeOID,
													editable : !1,
													nullable : !1
												}, {
													name : "__visible",
													alias : e.app.getResource("Mapping.Infrastructure", "language-webmap-field-name-visible"),
													type : d.essentials.EsriFieldTypes.esriFieldTypeInteger,
													editable : !0,
													nullable : !1
												}
											],
											drawingInfo : {
												renderer : a.renderer ? e.fromEsriRenderer(a.renderer) : {
													type : g.RendererType.UNIQUE_VALUE,
													field1 : "__symbolId",
													uniqueValueInfos : [{
															value : 0,
															symbol : b
														}
													]
												}
											}
										}
									}, c[f.geometry.type] = h);
								r = e.fromEsriGraphic(f);
								r.attributes = r.attributes || {};
								r.attributes.__id = l;
								Object.keys(r.attributes).forEach(function (b) {
									if ("__symbolId" !== b && "__symbol" !== b) {
										var f = function (a) {
											return m.firstOrDefault(h.layerDefinition.fields, function (b) {
												return b.name === a
											})
										}
										(b);
										f || (f = e._inferAttributeType(a.graphics, b), f = {
												name : b,
												alias : b,
												type : f,
												nullable : !0,
												editable : !0
											}, h.layerDefinition.fields.push(f))
									}
								});
								if (!a.renderer) {
									var k = h.layerDefinition.drawingInfo.renderer,
									q = r.attributes.__symbolId;
									q && !m.firstOrDefault(k.uniqueValueInfos, function (a) {
										return a.value ===
										q
									}) && k.uniqueValueInfos.push({
										value : q,
										symbol : r.attributes.__symbol
									})
								}
								h.featureSet.features.push(r)
							});
							f.featureCollection = {
								layers : [],
								showLegend : !1
							};
							for (var l = 0, h = Object.keys(c); l < h.length; l++)
								f.featureCollection.layers.push(c[h[l]]);
							return f
						};
						f.prototype._fromEsriFeatureLayer = function (b) {
							var e = {
								id : b.id,
								title : b.id,
								visibility : b.visible,
								opacity : b.opacity,
								minScale : b.minScale,
								maxScale : b.maxScale,
								layerType : a.FeatureLayer
							};
							b.url ? e.url = b.url : e.featureCollection = this._esriFeatureLayerToFeatureCollection(b);
							return e
						};
						f.prototype._fromEsriFeatureSet = function (a) {
							return {
								features : a.features.map(this.fromEsriGraphic, this),
								geometryType : g.GeometryType.fromEsriGeometryType(a.geometryType)
							}
						};
						f.prototype._fromGcxFeature = function (a) {
							var b = this,
							e = {};
							a.attributes.get().forEach(function (a) {
								e[a.name.get()] = b.fromObject(a.value.get())
							});
							return {
								attributes : e,
								geometry : this.fromEsriGeometry(a.esriFeature.get().geometry)
							}
						};
						f.prototype._fromEsriGraphic = function (a) {
							var b = {
								attributes : this.fromObject(a.attributes) || {},
								geometry : this.fromEsriGeometry(a.geometry)
							};
							b.attributes.__visible = a.visible ? 1 : 0;
							a.symbol && (b.attributes.__symbol = this._addSourceType(e.ESRI_SYMBOL, this.fromEsriSymbol(a.symbol)), a.symbol.__symbolId || (a.symbol.__symbolId = this._nextSymbolId++), b.attributes.__symbolId = a.visible ? a.symbol.__symbolId : 0);
							return b
						};
						f.prototype._fromEsriGeometry = function (a) {
							var b = {
								spatialReference : this.fromEsriSpatialReference(a.spatialReference)
							};
							switch (a.type) {
							case "point":
								b.x = a.x;
								b.y = a.y;
								break;
							case "multipoint":
								b.points = a.points;
							case "polyline":
								b.paths = a.paths;
								break;
							case "polygon":
								b.rings = a.rings;
								break;
							case "extent":
								b.xmin = a.xmin,
								b.xmax = a.xmax,
								b.ymin = a.ymin,
								b.ymax = a.ymax
							}
							return b
						};
						f.prototype._fromEsriSymbol = function (a) {
							var b = a.toJson();
							a.size !== b.size && (b.size = a.size);
							return b
						};
						f.prototype._fromEsriRenderer = function (a) {
							var b = this,
							e = a.toJson();
							a instanceof esri.renderer.SimpleRenderer ? e.symbol = this.fromEsriSymbol(a.symbol) : a instanceof esri.renderer.UniqueValueRenderer ? (e.defaultSymbol = this.fromEsriSymbol(a.defaultSymbol), e.uniqueValueInfos.forEach(function (e,
											f) {
										e.symbol = b.fromEsriSymbol(a.infos[f].symbol)
									})) : a instanceof esri.renderer.ClassBreaksRenderer && (e.defaultSymbol = this.fromEsriSymbol(a.defaultSymbol), e.classBreakInfos.forEach(function (e, f) {
										e.symbol = b.fromEsriSymbol(a.infos[f].symbol)
									}));
							return e
						};
						f.prototype._fromEsriSpatialReference = function (a) {
							return a.toJson()
						};
						f.prototype._fromEsriColor = function (a) {
							return a.toRgba()
						};
						f.prototype._fromObject = function (a) {
							if (a instanceof d.essentials.MapService)
								return this._addSourceType(e.GCX_MAP_SERVICE, this.fromGcxMapService(a));
							if (a instanceof d.essentials.Layer)
								return this._addSourceType(e.GCX_LAYER, this.fromGcxLayer(a));
							if (a instanceof h.FeatureSet)
								return this._addSourceType(e.GCX_FEATURE_SET, this.fromGcxFeatureSet(a));
							if (a instanceof h.Feature)
								return this._addSourceType(e.GCX_FEATURE, this.fromGcxFeature(a));
							if (a instanceof esri.layers.Layer)
								return this._addSourceType(e.ESRI_LAYER, this.fromEsriLayer(a));
							if (a instanceof esri.tasks.FeatureSet)
								return this._addSourceType(e.ESRI_FEATURE_SET, this.fromEsriFeatureSet(a));
							if (a instanceof
								esri.Graphic)
								return this._addSourceType(e.ESRI_GRAPHIC, this.fromEsriGraphic(a));
							if (a instanceof esri.geometry.Geometry)
								return this._addSourceType(e.ESRI_GEOMETRY, this.fromEsriGeometry(a));
							if (a instanceof esri.symbol.Symbol)
								return this._addSourceType(e.ESRI_SYMBOL, this.fromEsriSymbol(a));
							if (a instanceof esri.renderer.Renderer)
								return this._addSourceType(e.ESRI_RENDERER, this.fromEsriRenderer(a));
							if (a instanceof esri.SpatialReference)
								return this._addSourceType(e.ESRI_SPATIAL_REFERENCE, this.fromEsriSpatialReference(a));
							var b = {},
							f;
							for (f in a)
								a.hasOwnProperty(f) && "function" !== typeof a[f] && "__symbolId" !== f && (b[f] = this.fromObject(a[f]));
							return b
						};
						return f
					}
					();
					g.WebMapConverter = f
				})(h.webMap || (h.webMap = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = d.framework.utils.ArrayUtils;
					g.PROPERTY_MEASUREMENT_ID = "measurementId";
					g.PROPERTY_HIGHLIGHT_ID = "__gcxHlId";
					var c = function (b) {
						function a() {
							b.apply(this, arguments)
						}
						__extends(a, b);
						a.prototype.fromGcxMapService = function (a) {
							return b.prototype.fromGcxMapService.call(this, a)
						};
						a.prototype.fromGcxLayer = function (a) {
							return b.prototype.fromGcxLayer.call(this, a)
						};
						a.prototype.fromGcxFeatureSetCollection = function (a) {
							return this._convert(a, "projectFeatureSetCollection",
								this._fromGcxFeatureSetCollection)
						};
						a.prototype.fromGcxFeatureSet = function (a) {
							return b.prototype.fromGcxFeatureSet.call(this, a)
						};
						a.prototype.fromEsriFeatureSet = function (a) {
							return b.prototype.fromEsriFeatureSet.call(this, a)
						};
						a.prototype.fromEsriLayer = function (a) {
							return b.prototype.fromEsriLayer.call(this, a)
						};
						a.prototype.fromGcxFeature = function (a) {
							return b.prototype.fromGcxFeature.call(this, a)
						};
						a.prototype.fromEsriGraphic = function (a) {
							return b.prototype.fromEsriGraphic.call(this, a)
						};
						a.prototype.toGcxFeatureSetCollection =
						function (a) {
							return Promise.resolve(this._convert(a, "gcxFeatureSetCollection", this._toGcxFeatureSetCollection))
						};
						a.prototype._canCreateGcxLayer = function (a, b) {
							return !!a.gcxLayerDefinition
						};
						a.prototype._canCreateGcxMapService = function (a) {
							return !!a.gcxMapServiceDefinition
						};
						a.prototype._createGcxMapService = function (a) {
							return b.prototype._createGcxMapService.call(this, a).then(function (b) {
								b instanceof h.LayerIntegrationUtils.LocalFeatureLayerService && a.layers && a.layers[0] && a.layers[0].gcxLayerDefinition &&
								b.layers[0].createFromDefinition(a.layers[0].gcxLayerDefinition);
								return b
							})
						};
						a.prototype._createGcxLayer = function (a, b) {
							var c = a.gcxLayerDefinition,
							n = new d.essentials.Layer(c.url);
							n.createFromDefinition(c);
							b.add(n);
							n.isUserCreated = !0;
							return Promise.resolve(n)
						};
						a.prototype._getMapServiceDefinition = function (a) {
							return a.gcxMapServiceDefinition
						};
						a.prototype._getWebMapLayerDefinitionFromDynamicLayer = function (a, f) {
							var c = b.prototype._getWebMapLayerDefinitionFromDynamicLayer.call(this, a, f);
							a.layerDrawingOptions &&
							a.layerDrawingOptions[f] && (c.drawingInfo.showLabels = a.layerDrawingOptions[f].showLabels);
							return c
						};
						a.prototype._applyDynamicLayerInfo = function (a, b, c) {
							var d = c.mapService.serviceLayer,
							p = parseInt(c.id);
							c.mapService.convertToDynamicLayers();
							c = d.dynamicLayerInfos || [];
							var g = c.filter(function (a) {
									return a.id === p
								})[0];
							g ? (a = c.indexOf(g), a != b && c.splice(b, 0, c.splice(a, 1)[0])) : (g = new esri.layers.DynamicLayerInfo, g.id = p, g.name = a.name, a.layerDefinition && (g.minScale = a.layerDefinition.minScale, g.maxScale = a.layerDefinition.maxScale),
								c.splice(b, 0, g));
							d.setDynamicLayerInfos(c)
						};
						a.prototype._applyDrawingInfo = function (a, f) {
							var c = this;
							return a ? b.prototype._applyDrawingInfo.call(this, a, f).then(function () {
								f.featureClustering && f.featureClustering.userCanToggle && (c.app.command("RemoveClusterLayer").execute({
										gcxLayer : f.layers[0]
									}), a.clustering && (f.featureClustering.radius = a.clustering.radius, f.featureClustering.backgroundColor = a.clustering.backgroundColor, f.featureClustering.labelColor = a.clustering.labelColor, f.featureClustering.maximumFeatures =
											a.clustering.maximumFeatures, c.app.command("AddClusterLayer").execute({
											gcxLayer : f.layers[0]
										})))
							}) : Promise.resolve()
						};
						a.prototype._applyWebMapLayerToGcxLayer = function (a, f, c) {
							var d = this;
							return b.prototype._applyWebMapLayerToGcxLayer.call(this, a, f, c).then(function (b) {
								var g = c.mapService.serviceLayer;
								return a.isDynamic && g instanceof esri.layers.ArcGISDynamicMapServiceLayer ? d.app.waitUntilServiceLayerLoaded(g).then(function () {
									d._applyDynamicLayerInfo(a, f, c);
									return b
								}) : b
							})
						};
						a.prototype._toGcxLayer = function (a,
							f) {
							f || (f = a.serviceLayer);
							return b.prototype._toGcxLayer.call(this, a, f)
						};
						a.prototype._toGcxFeatureSetCollection = function (a) {
							var b = this,
							c = this.app.featureSetManager.featureSetCollections.get().filter(function (b) {
									return b.id === a.id
								})[0];
							c || (c = new h.FeatureSetCollection, c.id = a.id, this.app.featureSetManager.addCollection(c));
							c.displayName.set(a.displayName);
							c.sourceName = a.sourceName;
							var d = 'feature set collection "{0}"'.format(a.id);
							return h.PromiseUtils.mapSkipRejected(a.featureSets, function (a) {
								return h.PromiseUtils.warnOnReject(b.toGcxFeatureSet(a),
									b.app, 'Unable to restore feature set "{0}" for {1}: {{0}}'.format(a.id, d))
							}).then(function (a) {
								c.clear();
								c.featureSets.addItems(a)
							}).then(function () {
								return h.PromiseUtils.warnOnReject(b.toObject(a.tag), b.app, "Unable to restore tag for {0}: {{0}}".format(d))
							}).then(function (a) {
								c.tag = a
							}).then(function () {
								return b._toGcxExtendedProperties(a.extendedProperties, d)
							}).then(function (a) {
								c.extendedProperties.addItems(a)
							}).then(function () {
								return c
							})
						};
						a.prototype._toGcxFeatureSet = function (a) {
							var b = this,
							c,
							d = a.layer,
							g = a.features || [],
							r = {
								gcxLayer : this.toGcxLayer(d, d ? d.serviceLayer : null),
								esriFeatureSet : this.toEsriFeatureSet(a),
								extendedProperties : this._toGcxExtendedProperties(a.extendedProperties, "feature set")
							};
							return Promise.props(r).then(function (g) {
								c = new h.FeatureSet({
										app : b.app,
										layer : g.gcxLayer,
										esriFeatureSet : g.esriFeatureSet,
										allowUnsafeContent : b.app.configuration && b.app.configuration.allowUnsafeContent && a.allowUnsafeContent
									});
								d || (c.loadAttributes(), c.displayName.set(a.displayName), c.iconUri.set(a.iconUri));
								c.id = a.id;
								c.extendedProperties.addItems(g.extendedProperties)
							}).then(function () {
								return h.PromiseUtils.mapSkipRejected(g, function (a) {
									return b._findMatchingGcxFeature(a, c).then(function (e) {
										return b._applyFeatureToGcxFeature(a, e)
									})
								})
							}).then(function () {
								b.app.waitUntilAllLibrariesLoaded().then(function () {
									c.dataLinksState === h.DataLinksState.Unresolved && c.resolveDataLinks(function (a) {
										b.app.event("FeatureChangedEvent").publish(a)
									})
								})
							}).then(function () {
								return c
							})
						};
						a.prototype._toGcxFeature = function (a) {
							var b =
								this;
							return a.featureSet ? this.toGcxFeatureSet(a.featureSet).then(function (c) {
								return b._findMatchingGcxFeature(a, c)
							}).then(function (b) {
								if (!b)
									throw Error('Unable to restore feature with ID "{0}": feature no longer exists.'.format(a.id));
								return b
							}) : this._createGcxFeature(a)
						};
						a.prototype._createGcxFeature = function (a) {
							var b = this,
							c = a.layer,
							c = {
								gcxLayer : this.toGcxLayer(c, c ? c.serviceLayer : null),
								featureLayer : c ? null : this.toEsriLayer(a.featureLayer),
								graphic : this.toEsriGraphic(a),
								extendedProperties : this._toGcxExtendedProperties(a.extendedProperties,
									"feature")
							};
							return Promise.props(c).then(function (c) {
								var l = {
									layer : c.gcxLayer,
									featureLayer : c.featureLayer,
									graphic : c.graphic,
									allowUnsafeContent : b.app.configuration && b.app.configuration.allowUnsafeContent && a.allowUnsafeContent
								},
								l = a[h.isKmlProperty] ? new h.KmlFeature(l) : new h.Feature(l);
								l.defaultDateFormat = a.defaultDateFormat || h.DateFormat.DEFAULT;
								l.defaultNumberFormat = a.defaultNumberFormat || h.NumberFormat.DEFAULT;
								l.timeZoneId = a.timeZoneId;
								l.displayTimeZoneId = a.displayTimeZoneId;
								l.extendedProperties.addItems(c.extendedProperties);
								return l
							})
						};
						a.prototype._applyFeatureToGcxFeature = function (a, b) {
							if (!a || !b)
								return Promise.resolve();
							b.defaultDateFormat = a.defaultDateFormat || h.DateFormat.DEFAULT;
							b.defaultNumberFormat = a.defaultNumberFormat || h.NumberFormat.DEFAULT;
							b.timeZoneId = a.timeZoneId;
							return this._toGcxExtendedProperties(a.extendedProperties, "feature").then(function (a) {
								return b.extendedProperties.addItems(a)
							})
						};
						a.prototype._findMatchingGcxFeature = function (a, b) {
							return a.id ? Promise.resolve(b.findFeatureById(a.id)) : this.toEsriGraphic(a).then(function (a) {
								return m.firstOrDefault(b.features.get(),
									function (b) {
									return b.esriFeature.get() === a
								})
							})
						};
						a.prototype._queryFeatures = function (a, b) {
							var c = this;
							return a && a.length && b && b.layer ? Promise["try"](function () {
								for (var d = a.map(function (a) {
											return a.id
										}), g = []; 1E3 < d.length; )
									g.push(d.splice(0, 1E3));
								g.push(d);
								d = b.layer;
								return c.toGcxLayer(d, d ? d.serviceLayer : null).then(function (a) {
									if (!a || !a.getObjectIdFieldName())
										throw Error('Cannot restore features for layer "{0}": no primary key field defined.'.format(a ? a.name : ""));
									a.getObjectIdFieldName();
									var b = h.taskUtils.getQueryTask(a);
									return h.PromiseUtils.mapSkipRejected(g, function (a) {
										var e = new esri.tasks.Query;
										e.objectIds = a.map(function (a) {
												return h.FormatUtils.parseNumber(a)
											});
										e.returnGeometry = !0;
										e.outFields = ["*"];
										return b.execute(e).then(function (a) {
											return a.features
										})
									}, {
										concurrency : 2
									}).then(function (a) {
										return m.flatten(a)
									})
								})
							}) : Promise.resolve([])
						};
						a.prototype._toEsriGraphic = function (a) {
							return b.prototype._toEsriGraphic.call(this, a).then(function (b) {
								a.hasOwnProperty(g.PROPERTY_MEASUREMENT_ID) && (b[g.PROPERTY_MEASUREMENT_ID] =
										a[g.PROPERTY_MEASUREMENT_ID]);
								a.hasOwnProperty(h.coordinates.coordinateIdentifierProperty) && (b[h.coordinates.coordinateIdentifierProperty] = a[h.coordinates.coordinateIdentifierProperty]);
								a.hasOwnProperty(h.isKmlProperty) && (b[h.isKmlProperty] = a[h.isKmlProperty]);
								a.hasOwnProperty(g.PROPERTY_HIGHLIGHT_ID) && (b[g.PROPERTY_HIGHLIGHT_ID] = a[g.PROPERTY_HIGHLIGHT_ID]);
								return b
							})
						};
						a.prototype._toEsriFeatureSet = function (a) {
							var b = this,
							c = a.layer,
							n = c ? c.serviceLayer : null,
							g = a.features || [],
							r = g.filter(function (a) {
									return !d.framework.utils.isNullOrUndefined(a.id)
								}),
							g = g.filter(function (a) {
									return d.framework.utils.isNullOrUndefined(a.id)
								});
							a = {
								gcxLayer : this.toGcxLayer(c, n),
								queryResults : this._queryFeatures(r, a),
								rehydratedGraphics : h.PromiseUtils.mapSkipRejected(g, function (a) {
									return b.toEsriGraphic(a)
								})
							};
							return Promise.props(a).then(function (a) {
								a = a.queryResults.concat(a.rehydratedGraphics);
								var b = new esri.tasks.FeatureSet;
								b.features = a;
								return b
							})
						};
						a.prototype._fromGcxMapService = function (a) {
							var f = this,
							c;
							c = a && a.serviceLayer instanceof esri.layers.WMTSLayer && !a.tileRestUrl ? {
								id : a.id,
								url : a.serviceUrl,
								type : h.webMap.BaseMapType.WEB_TILED,
								opacity : a.opacity,
								visibility : a.isVisible(),
								layers : []
							}
							 : b.prototype._fromGcxMapService.call(this, a);
							a.isUserCreated && (c.gcxMapServiceDefinition = a.toJson());
							c.layers || (c.layers = h.ArrayUtils.mapWithErrorCallback(a.layers, function (a) {
										return f.fromGcxLayer(a)
									}, function (a, b) {
										console.warn('Unable to convert layer "{0}": {1}'.format(a.id, b))
									}));
							if (a.featureClustering && a.featureClustering.enabled) {
								var d;
								this._isFeatureCollection(c) ? (c.featureCollection.layers[0].layerDefinition =
										c.featureCollection.layers[0].layerDefinition || {
										drawingInfo : {}

									}, d = c.featureCollection.layers[0].layerDefinition) : (c.layerDefinition = c.layerDefinition || {
										drawingInfo : {}

									}, d = c.layerDefinition);
								d.drawingInfo = d.drawingInfo || {};
								d.drawingInfo.clustering = {
									radius : a.featureClustering.radius,
									backgroundColor : a.featureClustering.backgroundColor,
									labelColor : a.featureClustering.labelColor,
									maximumFeatures : a.featureClustering.maximumFeatures
								};
								if (a = this.app.map.getLayer(a.id + "-cluster"))
									d.drawingInfo.renderer = this.fromEsriRenderer(a.featureLayerRenderer)
							}
							return c
						};
						a.prototype._fromGcxlayer = function (a) {
							var f = b.prototype._fromGcxlayer.call(this, a);
							f.serviceLayer = this.fromGcxMapService(a.mapService);
							var c = a.mapService.serviceLayer;
							f.isDynamic = a.isDynamic;
							c instanceof esri.layers.ArcGISDynamicMapServiceLayer && c.supportsDynamicLayers && (f.isDynamic = f.isDynamic || c.dynamicLayerInfos && !!c.dynamicLayerInfos[parseInt(a.id)]);
							a.isUserCreated && (f.gcxLayerDefinition = a.toJson());
							return f
						};
						a.prototype._fromGcxFeatureSetCollection = function (a) {
							var b = {
								id : a.id,
								displayName : a.displayName.get(),
								featureSets : a.featureSets.get().map(this.fromGcxFeatureSet, this),
								sourceName : a.sourceName,
								tag : this.fromObject(a.tag)
							};
							a.extendedProperties.getLength() && (b.extendedProperties = this._fromGcxExtendedProperties(a.extendedProperties));
							return b
						};
						a.prototype._fromGcxFeatureSet = function (a) {
							var f = b.prototype._fromGcxFeatureSet.call(this, a);
							f.id = a.id;
							f.layer = this.fromGcxLayer(a.layer);
							f.allowUnsafeContent = a._allowUnsafeContent;
							a.layer || (f.displayName = a.displayName.get(), f.iconUri = a.iconUri.get());
							return f
						};
						a.prototype._fromGcxFeature =
						function (a) {
							var f = {};
							this._canRequeryFeatureData(a) ? f = {
								id : a.id.get(),
								featureSet : this.fromGcxFeatureSet(a.featureSet)
							}
							 : (f = b.prototype._fromGcxFeature.call(this, a), f.featureSet = this.fromGcxFeatureSet(a.featureSet));
							f.featureSet || (f.layer = this.fromGcxLayer(a.layer));
							a.featureLayer && !a.layer && (f.featureLayer = this.fromEsriLayer(a.featureLayer));
							f.allowUnsafeContent = a._allowUnsafeContent;
							a.extendedProperties.getLength() && (f.extendedProperties = this._fromGcxExtendedProperties(a.extendedProperties));
							a.defaultDateFormat !==
							h.DateFormat.DEFAULT && (f.defaultDateFormat = a.defaultDateFormat);
							a.defaultNumberFormat !== h.NumberFormat.DEFAULT && (f.defaultNumberFormat = a.defaultNumberFormat);
							var c = a.esriFeature.get();
							c && c.hasOwnProperty(h.isKmlProperty) && (f[h.isKmlProperty] = c[h.isKmlProperty]);
							a.timeZoneId && (f.timeZoneId = a.timeZoneId);
							a.displayTimeZoneId && f.displayTimeZoneId;
							return f
						};
						a.prototype._fromEsriGraphic = function (a) {
							var f = b.prototype._fromEsriGraphic.call(this, a);
							a.hasOwnProperty(g.PROPERTY_MEASUREMENT_ID) && (f[g.PROPERTY_MEASUREMENT_ID] =
									a[g.PROPERTY_MEASUREMENT_ID]);
							a.hasOwnProperty(h.coordinates.coordinateIdentifierProperty) && (f[h.coordinates.coordinateIdentifierProperty] = a[h.coordinates.coordinateIdentifierProperty]);
							a.hasOwnProperty(h.isKmlProperty) && (f[h.isKmlProperty] = a[h.isKmlProperty]);
							a.hasOwnProperty(g.PROPERTY_HIGHLIGHT_ID) && (f[g.PROPERTY_HIGHLIGHT_ID] = a[g.PROPERTY_HIGHLIGHT_ID]);
							return f
						};
						a.prototype._toGcxExtendedProperties = function (a, b) {
							var c = this;
							a = a || {};
							return h.PromiseUtils.mapSkipRejected(Object.keys(a), function (d) {
								var g =
									c.toObject(a[d]).then(function (a) {
										return {
											name : d,
											value : a
										}
									});
								return h.PromiseUtils.warnOnReject(g, c.app, "Unable to restore extended property '{0}' for {1}: {{0}}".format(d, b))
							})
						};
						a.prototype._fromGcxExtendedProperties = function (a) {
							var b = this,
							c = {};
							a.get().forEach(function (a) {
								c[a.name] = b.fromObject(a.value)
							});
							return c
						};
						a.prototype._canRequeryFeatureData = function (a) {
							return a && !a.isModified && !d.framework.utils.isNullOrUndefined(a.id.get()) && "" !== a.id.get() && a.featureSet && a.featureSet.layer && a.featureSet.layer.getLayerUrl() &&
							a.featureSet.layer.supportsQuery
						};
						return a
					}
					(h.webMap.WebMapConverter);
					g.ProjectConverter = c
				})(h.project || (h.project = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		var q = k.mapping.infrastructure.FormatUtils,
		h = function (g) {
			function h(c, b, a, e) {
				g.call(this, c, b, a, e);
				this.version = d.essentialsHtmlViewer.version;
				this.markupLayer = new Observable;
				this.isArcGisWebApp = !1;
				this._workflowActivityDispatcher = null;
				this._activityTypeHandlerQueue = [];
				this._activityIdHandlerQueue = [];
				this._localeResourcesLoaded = !1;
				this._initialProjectPromise = null;
				this._momentLocales = "af ar ar-MA ar-SA ar-TN az be bg bn bo br bs ca cs cv cy da de de-AT el en-AU en-CA en-GB eo es et eu fa fi fo fr fr-CA fy gl he hi hr hu hy-AM id is it ja jv ka km ko lb lt lv me mk ml mr ms ms-MY my nb ne nl nn pl pt pt-BR ro ru si sk sl sq sr sr-Cyrl sv ta th tl-PH tr tzl tzm tzm-Latn uk uz vi zh-CN zh-TW".split(" ");
				this._globalizeLocales = "af ar ar-MA ar-SA ar-TN az be bg bn bo br bs ca cs cy da de de-AT el en en-AU en-CA en-GB eo es et eu fa fi fo fr fr-CA fy gl he hi hr hu hy id is it ja ka km ko lb lt lv mk ml mr ms my nb ne nl nn pl pt ro ru si sk sl sq sr sr-Cyrl sv ta th tr tzm tzm-Latn uk uz vi zh".split(" ");
				this.___uaIsiPad = !!navigator.userAgent.match(/iPad/i);
				this.accessibilityManager = new d.essentialsHtmlViewer.mapping.infrastructure.accessibility.AccessibilityManager(this);
				this.coordinatesManager =
					new d.essentialsHtmlViewer.mapping.infrastructure.coordinates.CoordinatesManager(this);
				this.featureSetManager = new d.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager(this);
				this.searchManager = new d.essentialsHtmlViewer.mapping.infrastructure.search.SearchManager(this);
				this.highlightManager = new d.essentialsHtmlViewer.mapping.infrastructure.HighlightManager(this);
				this.nativeManager = new k.mapping.infrastructure.nativeIntegration.NativeManager(this);
				this.offlineManager = new k.mapping.infrastructure.offline.OfflineManager(this,
						"Mapping.Infrastructure");
				this.toolRegistry = new d.essentialsHtmlViewer.mapping.infrastructure.tools.ToolRegistry(this);
				this.menuRegistry = new d.essentialsHtmlViewer.mapping.infrastructure.menus.MenuRegistry(this);
				this.toolbarGroupRegistry = new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupRegistry(this);
				this.stateManager = new d.essentialsHtmlViewer.mapping.infrastructure.applicationState.StateManager(this, "Mapping.Infrastructure");
				this.undoManager = new d.essentialsHtmlViewer.mapping.infrastructure.undo.UndoManager(this);
				this.project = new k.mapping.infrastructure.project.ProjectManager(this);
				this.webMap = new k.mapping.infrastructure.webMap.WebMapManager(this);
				this.bookmarks = new k.mapping.infrastructure.BookmarkManager(this);
				this._applicationContentPolicy = new k.mapping.infrastructure.ContentPolicy(this);
				this._registerApplicationLevelCommands()
			}
			__extends(h, g);
			Object.defineProperty(h.prototype, "defaultContentPolicy", {
				get : function () {
					return this._applicationContentPolicy
				},
				enumerable : !0,
				configurable : !0
			});
			h.prototype.followNavigationLink =
			function (c) {
				var b = c.element;
				if (this._applicationContentPolicy.tryScreenNavLinkSynchronously({
						uri : c.url,
						attribute : "href",
						tag : "a",
						type : k.mapping.infrastructure.FilterUtils.UriType.NavigableLink,
						linkChallengeCallback : function (a, e) {
							if (a) {
								var f = "_blank";
								b && b.hasAttribute("target") && (f = b.getAttribute("target"));
								window.open(e.uri, f)
							}
							return !1
						}
					}))
					return !0;
				this._executeOpenWebPage(c);
				return !1
			};
			h.prototype._registerApplicationLevelCommands = function () {
				this.command("OpenWebPage").register(this, this._executeOpenWebPage)
			};
			h.prototype._executeOpenWebPage = function (c) {
				var b = "string" === typeof c ? c : c.url,
				a = "string" === typeof c ? null : c.element,
				b = decodeURIComponent(b);
				c = new dojo._Url(b);
				if (0 > "http https ftp ftps gopher mailto".split(" ").indexOf(c.scheme))
					this.trace.warning("Could not open '" + b + "': Invalid URI scheme.");
				else {
					var e = function (a, b) {
						var e = "_blank";
						b && b.hasAttribute("target") && (e = b.getAttribute("target"));
						window.open(a, e)
					},
					b = {
						uri : b,
						attribute : "href",
						tag : "a",
						type : k.mapping.infrastructure.FilterUtils.UriType.NavigableLink,
						linkChallengeCallback : function (b, c) {
							b && e(c.uri, a);
							return !1
						}
					};
					if (this._applicationContentPolicy.hasFlag(1) || this._applicationContentPolicy.tryScreenNavLinkSynchronously(b))
						return e(b.uri, a), !1;
					b.forcePrompt = !0;
					this._applicationContentPolicy.screenUris([b])
				}
			};
			h.prototype.initialize = function () {
				var c = this;
				document.all && !document.querySelector && (this.debugMode = !0);
				var b = this.configUri ? this.configUri.split("/") : window.location.href.split("/"),
				b = b.slice(0, b.length - 1).join("/") + "/";
				this.configTokens.ViewerConfigUri =
					b;
				this.getUrlParameter("gcxLocalServer") && (this.localServerAddress = this.getUrlParameter("gcxLocalServer"));
				this.getUrlParameter("gcxLocalServerNamespace") && (this.localServerNamespace = this.getUrlParameter("gcxLocalServerNamespace"));
				this.getUrlParameter("gcxLocalServerToken") && (this.localServerToken = this.getUrlParameter("gcxLocalServerToken"));
				this.offlineManager.load();
				g.prototype.initialize.call(this);
				var a = this.getUrlParameter(k.mapping.infrastructure.project.PROJECT_QUERY_STRING_KEY);
				if (a) {
					var e =
						this.getUrlParameter(d.essentials.documents.LINK_QUERY_STRING_KEY);
					e && this.waitUntilSiteInitialized().then(function () {
						return c.site.documentStore.setGuestLink(e)
					});
					this.waitUntilAllLibrariesLoaded().then(function () {
						return c.event("ProjectLoadingEvent").publish(a)
					});
					this._initialProjectPromise = this.project.read(a).then(function (a) {
							return c.project._beginLoad(a)
						})["catch"](function (a) {
							c.trace.error("Error loading project: {0}".format(a.message), a)
						});
					var f = this.initialStateAppliedCallback;
					this.initialStateAppliedCallback =
					function (a) {
						c.project.isLoading && c.project._finishLoad();
						f && f(a)
					}
				}
			};
			h.prototype.waitUntilSiteInitialized = function () {
				var c = this;
				return new Promise(function (b, a) {
					c.site && c.site.isInitialized ? b() : (c.event("SiteInitializedEvent").once(c, function (a) {
							b()
						}), c.event("SiteInitializationFailedEvent").once(c, function (b) {
							a(b)
						}), c.event("SiteAuthorizationFailedEvent").once(c, function (b) {
							a(b)
						}))
				})
			};
			h.prototype.waitUntilDocumentStoreInitialized = function () {
				var c = this;
				return this.waitUntilSiteInitialized().then(function () {
					return c.site.documentStore.onInitialized()
				})
			};
			h.prototype.waitUntilMapLoaded = function () {
				var c = this;
				return new Promise(function (b, a) {
					if (c.map && c.map.loaded)
						b();
					else if (c.map)
						var e = c.map.on("load", function (a) {
								e.remove();
								b()
							});
					else
						c.event("SiteInitializingEvent").once(c, function () {
							var a = c.map.on("load", function (e) {
									a.remove();
									b()
								})
						})
				})
			};
			h.prototype.waitUntilServiceLayerLoaded = function (c) {
				return new Promise(function (b, a) {
					if (c.loadError)
						a(c.loadError);
					else if (c.loaded)
						b();
					else
						var e = c.on("load", function (a) {
								e.remove();
								f.remove();
								b()
							}), f = c.on("error",
								function (b) {
								e.remove();
								f.remove();
								a(b.error)
							})
				})
			};
			h.prototype.waitUntilSiteServiceLayersLoaded = function () {
				var c = this;
				return new Promise(function (b, a) {
					c.site && c.site.serviceLayersLoaded ? b() : (c.event("SiteServiceLayersLoadedEvent").once(c, function (a) {
							b()
						}), c.event("SiteInitializationFailedEvent").once(c, function (b) {
							a(b)
						}), c.event("SiteAuthorizationFailedEvent").once(c, function (b) {
							a(b)
						}))
				})
			};
			h.prototype.waitUntilAllLibrariesLoaded = function () {
				var c = this;
				return new Promise(function (b, a) {
					if (c.allLibrariesLoaded)
						b();
					else
						c.event("ViewerLibrariesDownloadedEvent").once(c, function (a) {
							b()
						})
				})
			};
			h.prototype.waitUntilViewInitialized = function (c) {
				var b = this;
				return new Promise(function (a, e) {
					var f = b.viewManager.getViewById(c);
					if (f && f.initiallyBound)
						a(f);
					else
						var d = b.event("ViewInitializedEvent").subscribe(b, function (e) {
								e.id === c && (a(e), b.event("ViewInitializedEvent").unsubscribe(d))
							})
				})
			};
			h.prototype.registerActivityTypeHandler = function (c, b) {
				this._workflowActivityDispatcher ? this._workflowActivityDispatcher.registerActivityHandler(c,
					b) : this._activityTypeHandlerQueue.push({
					typeName : c,
					handler : b
				})
			};
			h.prototype.registerActivityIdHandler = function (c, b) {
				this._workflowActivityDispatcher ? this._workflowActivityDispatcher.registerExternalIdHandler(c, b) : this._activityIdHandlerQueue.push({
					id : c,
					handler : b
				})
			};
			h.prototype.getWorkflowActivityDispatcher = function () {
				return this._workflowActivityDispatcher
			};
			h.prototype.setWorkflowActivityDispatcher = function (c) {
				this._workflowActivityDispatcher = c;
				for (c = 0; c < this._activityTypeHandlerQueue.length; ++c) {
					var b =
						this._activityTypeHandlerQueue[c];
					this._workflowActivityDispatcher.registerActivityHandler(b.typeName, b.handler)
				}
				for (c = this._activityTypeHandlerQueue.length = 0; c < this._activityIdHandlerQueue.length; ++c)
					b = this._activityIdHandlerQueue[c], this._workflowActivityDispatcher.registerExternalIdHandler(b.id, b.handler);
				this._activityIdHandlerQueue.length = 0
			};
			h.prototype.shutdown = function (c) {
				this.toolRegistry.clear();
				this.undoManager.destroy();
				g.prototype.shutdown.call(this, c)
			};
			h.prototype.onConfigurationLoaded =
			function (c) {
				var b = this,
				a = c.configuration,
				e = !0;
				if (a.hasOwnProperty("application") && a.application.hasOwnProperty("contentPolicy")) {
					var f = a.application.contentPolicy;
					f.disableSecurityPrompt && this._applicationContentPolicy.setFlag(1);
					!1 === f.disablePromptOnImages && (e = !1)
				}
				e && this._applicationContentPolicy.setFlag(2);
				this._applicationContentPolicy.screenUris([]);
				a && a.hasOwnProperty("application") && a.application.locale && (this.locale = a.application.locale);
				this.urlParameters && this.getUrlParameter("locale") &&
				(this.locale = this.getUrlParameter("locale"));
				document.documentElement.setAttribute("lang", this.locale || "en-US");
				this._loadThirdPartyLocaleResources().then(function () {
					if ($ && $.timepicker) {
						var e = Object.getPrototypeOf($.timepicker);
						e._onTimeChange && (e._base_onTimeChange = e._onTimeChange, e._onTimeChange = function () {
							this._base_onTimeChange();
							if (this._defaults && this._defaults.gcxTimeFormat && this.$timeObj) {
								var a = q.formatDate($(this.$input).datepicker("getDate"), this._defaults.gcxTimeFormat);
								this.$timeObj.text(a)
							}
						})
					}
					$ &&
					$.datepicker && $.datepicker._showDatepicker && ($.datepicker.__base_showDatepicker = $.datepicker._showDatepicker, $.datepicker._showDatepicker = function (a) {
						this.__base_showDatepicker(a);
						a = $(a).siblings(".gcxDatepicker");
						a.length && a.focus()
					});
					a.hasOwnProperty("application") && a.application.hasOwnProperty("geometryServiceUrl") && (esri.config.defaults.geometryService = new esri.tasks.GeometryService(a.application.geometryServiceUrl));
					a.hasOwnProperty("application") && a.application.hasOwnProperty("datumTransforms") ?
					k.mapping.infrastructure.GeometryUtils.registerDatumTransforms(a.application.datumTransforms) : k.mapping.infrastructure.GeometryUtils.registerDefaultDatumTransforms();
					c.configuration.application && c.configuration.application.oAuth2ClientId && !d.essentials.OAuth2Client.applicationHasImplicitGrant() && !d.essentials.OAuth2Client.applicationHasImplicitGrantError() ? (d.essentials.OAuth2Client.redirectToLogOnPage(c.configuration.application.oAuth2AuthorizeUri || "http://www.arcgisonline.com/sharing/oauth2/authorize",
							c.configuration.application.oAuth2ClientId), b.abortInitialization = !0) : g.prototype.onConfigurationLoaded.call(b, c)
				})
			};
			h.prototype.getInitialState = function (c, b) {
				var a = this;
				return !this._initialProjectPromise || this._initialProjectPromise.isRejected() ? Promise.resolve(null) : this._initialProjectPromise.then(function () {
					var b = a.project.current;
					return b && b.content && b.content.moduleState ? b.content.moduleState[c] : null
				})
			};
			Object.defineProperty(h.prototype, "locale", {
				get : function () {
					return this._locale
				},
				set : function (c) {
					this._locale =
						this._canonicalizeLocale(c);
					this._localeResourcesLoaded && (moment.locale(this._getMomentLocaleForLocale(this._locale)), _globalize.locale(this._getGlobalizeLocaleForLocale(this._locale)))
				},
				enumerable : !0,
				configurable : !0
			});
			h.prototype.doWhenMapInitialized = function (c) {
				var b = this;
				if (this.isArcGisWebApp)
					c();
				else if (this.site && this.site.isInitialized)
					c();
				else
					var a = this.eventRegistry.event("SiteServiceLayersLoadedEvent").subscribe(this, function () {
							b.eventRegistry.event("SiteServiceLayersLoadedEvent").unsubscribe(a);
							c()
						})
			};
			h.prototype._loadThirdPartyLocaleResources = function () {
				var c = this,
				b;
				"function" === typeof define && (b = define.amd, delete define.amd);
				return Promise.all([this._loadMomentLocaleData(), this._loadGlobalizeLocaleData()]).then(function () {
					"function" === typeof define && (define.amd = b);
					c._localeResourcesLoaded = !0
				}, function (a) {
					"function" === typeof define && (define.amd = b)
				})
			};
			h.prototype._loadMomentLocaleData = function () {
				var c = this,
				b = this._getMomentLocaleForLocale(this.locale);
				return moment.localeData(b) ? Promise.resolve() :
				new Promise(function (a, e) {
					"en" === b ? a() : c.includeScript("./Resources/Scripts/moment/locale/" + b + ".js", function (e) {
						moment.locale(b);
						a()
					}, e)
				})
			};
			h.prototype._loadGlobalizeLocaleData = function () {
				var c = this._getGlobalizeLocaleForLocale(this.locale);
				return this.fetchConfigResource({
					url : "./Resources/Scripts/globalize/locale/" + c + ".json"
				}).then(function (b) {
					b = JSON.parse(b);
					_globalize.load(b);
					_globalize.locale(c)
				})
			};
			h.prototype._getMomentLocaleForLocale = function (c) {
				return this._getBestMatchLocale(c, this._momentLocales)
			};
			h.prototype._getGlobalizeLocaleForLocale = function (c) {
				return this._getBestMatchLocale(c, this._globalizeLocales)
			};
			h.prototype._getBestMatchLocale = function (c, b) {
				c = this._canonicalizeLocale(c);
				var a = this._parseLocale(c);
				if (0 <= b.indexOf(c))
					return c;
				if (a.script) {
					c = a.language + "-" + a.script;
					if (0 <= b.indexOf(c))
						return c;
					c = a.language + "-" + a.territory;
					if (0 <= b.indexOf(c))
						return c
				} else if (a.territory && (c = a.language, 0 <= b.indexOf(c)))
					return c;
				return "en"
			};
			h.prototype._parseLocale = function (c) {
				if (!c)
					throw Error("Invalid locale: {0}".format(c));
				var b = c.split("-");
				if (1 > b.length || 3 < b.length || b.some(function (a) {
						return 0 === a.length
					}))
					throw Error("Invalid locale: {0}".format(c));
				c = {
					language : b[0].toLowerCase()
				};
				2 == b.length ? 2 == b[1].length ? c.territory = b[1].toUpperCase() : c.script = b[1][0].toUpperCase() + b[1].slice(1).toLowerCase() : 3 === b.length && (c.script = b[1][0].toUpperCase() + b[1].slice(1).toLowerCase(), c.territory = b[2].toUpperCase());
				return c
			};
			h.prototype._canonicalizeLocale = function (c) {
				c = this._parseLocale(c);
				var b = c.language;
				c.script && (b += "-" + c.script);
				c.territory && (b += "-" + c.territory);
				return b
			};
			return h
		}
		(d.framework.application.Application);
		k.ViewerApplication = h
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function h(a) {
						var b = d.framework.utils.isNullOrUndefined;
						if (b(a))
							return !1;
						switch (a.type) {
						case "point":
							return !b(a.x) && !b(a.y);
						case "multipoint":
							return (a = a.points) && 0 < a.length;
						case "polyline":
							return (a = a.paths) && 0 < a.length;
						case "polygon":
							return (a = a.rings) && 0 < a.length;
						case "extent":
							return !b(a.xmin) && !b(a.xmax) && !b(a.ymin) && !b(a.ymax);
						default:
							return !1
						}
					}
					function c(a, b) {
						var e = b.x - a.x,
						f = b.y - a.y;
						return Math.sqrt(e * e + f * f)
					}
					function b(a) {
						if (!a ||
							!a.configuration)
							return null;
						if (l && l.url && l.url.startsWith(a.configuration.geometryServiceUrl))
							return l;
						var b = a.configuration.geometryServiceUrl,
						e = a.configuration.geometryServiceToken;
						if (e)
							var b = b + ((-1 < b.indexOf("?") ? "&token=" : "?token=") + encodeURIComponent(e)), f = dojo.subscribe("ServiceTokenRefreshed", function (b) {
									b.serviceUrl === a.configuration.geometryServiceUrl && (a.configuration.geometryServiceToken = b.token, l = null, dojo.unsubscribe(f))
								});
						"https:" != window.location.protocol || /^(https|\/\/)/.test(b) ||
						a.trace.warning("Mixed Content Warning: This Viewer was loaded over HTTPS but the geometry service was loaded over HTTP. This may limit functionality. Please configure the geometry service to be served securely.");
						return l = new esri.tasks.GeometryService(b)
					}
					function a(a) {
						a.forEach(function (a) {
							var b = null;
							a.fromWkid && 0 < a.fromWkid ? b = new esri.SpatialReference(a.fromWkid) : a.fromWkt && (b = new esri.SpatialReference(a.fromWkt));
							var e = null;
							a.toWkid && 0 < a.toWkid ? e = new esri.SpatialReference(a.toWkid) : a.toWkt && (e =
										new esri.SpatialReference(a.toWkt));
							var c = null;
							a.transformWkid && 0 < a.transformWkid ? c = new esri.SpatialReference(a.transformWkid) : a.transformWkt && (c = new esri.SpatialReference(a.transformWkt));
							if (!b || !e || !c)
								throw Error("Invalid or missing spatial reference. Cannot register datum transform.");
							f.push({
								fromSR : b,
								toSR : e,
								transformation : c
							})
						})
					}
					function e(a, b) {
						if (!a || !b || 0 == f.length)
							return null;
						for (var e = d.essentials.GeometryUtilities.spatialRefsAreEqual, c = 0; c < f.length; c++) {
							var l = f[c];
							if (e(a, l.fromSR) && e(b, l.toSR))
								return {
									transformation : l.transformation,
									transformForward : !0
								};
							if (e(a, l.toSR) && e(b, l.fromSR))
								return {
									transformation : l.transformation,
									transformForward : !1
								}
						}
						return null
					}
					g.DEFAULT_GEOMETRY_SERVICE_URI = "http://sampleserver6.arcgisonline.com/arcgis/rest/services/Utilities/Geometry/GeometryServer";
					var f = [],
					l = null;
					g.isValidGeometry = h;
					g.getMiddle = function (a) {
						if (!a || !a.type || !h(a))
							return null;
						if ("point" == a.type)
							return a;
						if ("multipoint" == a.type)
							return (a = a.getExtent()) ? a.getCenter() : null;
						if ("polyline" == a.type) {
							for (var b = 0, e = 0; e < a.paths.length; e++)
								for (var f =
										0; f < a.paths[e].length - 1; f++)
									var d = new esri.geometry.Point(a.paths[e][f]), l = new esri.geometry.Point(a.paths[e][f + 1]), b = b + c(d, l);
							for (var g = 0, e = 0; e < a.paths.length; e++)
								for (f = 0; f < a.paths[e].length - 1; f++) {
									var d = new esri.geometry.Point(a.paths[e][f]),
									l = new esri.geometry.Point(a.paths[e][f + 1]),
									k = c(d, l);
									if (g + k > b / 2)
										return b = k / (b / 2 - g), new esri.geometry.Point(d.x + (l.x - d.x) / b, d.y + (l.y - d.y) / b, a.spatialReference);
									g += k
								}
						} else {
							if ("polygon" == a.type)
								return (a = a.getExtent()) ? a.getCenter() : null;
							if ("extent" == a.type)
								return a.getCenter()
						}
						return null
					};
					g.getMidpoint = function (a, b) {
						if (!a || !b)
							throw Error("The beginning and ending points are required.");
						return new esri.geometry.Point({
							x : (a.x + b.x) / 2,
							y : (a.y + b.y) / 2,
							spatialReference : a.spatialReference.toJson()
						})
					};
					g.getEsriGeometryType = function (a, b) {
						if (!a)
							return null;
						var e = null;
						switch (a.toLowerCase()) {
						case "rectangle":
							e = esri.toolbars.Draw.EXTENT;
							break;
						case "freehandpolygon":
							e = esri.toolbars.Draw.FREEHAND_POLYGON;
							break;
						case "freehandpolyline":
							e = esri.toolbars.Draw.FREEHAND_POLYLINE;
							break;
						case "mappoint":
							e =
								esri.toolbars.Draw.POINT;
							break;
						case "multipoint":
							e = esri.toolbars.Draw.MULTI_POINT;
							break;
						case "polygon":
							e = esri.toolbars.Draw.POLYGON;
							break;
						case "polyline":
							e = esri.toolbars.Draw.POLYLINE;
							break;
						default:
							e = b || esri.toolbars.Draw.EXTENT
						}
						return e
					};
					g._getGeometryService = function (a) {
						return b(a)
					};
					g.getGeometryService = b;
					g.needsProjection = function (a, b) {
						return d.essentials.GeometryUtilities.spatialRefsAreEqual(a.spatialReference, b.map.spatialReference, !1) ? !1 : !0
					};
					g.projectGeometry = function (a, b, e, f, c) {
						if (a && a.spatialReference)
							if (a.spatialReference.equals(b))
								e &&
								e(a);
							else {
								var d = new esri.tasks.ProjectParameters;
								d.outSR = b;
								d.geometries = [a];
								this.project(d, function (a) {
									a && 0 < a.length && e && e(a[0])
								}, f, c)
							}
						else
							f && f(Error("Invalid geometry or spatial reference."))
					};
					g.projectGeometryWithTransform = function (a, b, e, f, c, d) {
						if (e)
							if (a && a.spatialReference)
								if (a.spatialReference.equals(b))
									f && f(a);
								else {
									var l = new esri.tasks.ProjectParameters;
									l.outSR = b;
									l.geometries = [a];
									l.transformation = {
										wkid : e
									};
									this.project(l, function (a) {
										a && 0 < a.length && f && f(a[0])
									}, c, d)
								}
							else
								c && c(Error("Invalid geometry or spatial reference."));
						else
							this.projectGeometry(a, b, f, c)
					};
					g.project = function (a, b, f, c) {
						if (a && (!esri.tasks.hasOwnProperty("ProjectParameters") || a instanceof esri.tasks.ProjectParameters) && a.hasOwnProperty("outSR") && a.hasOwnProperty("geometries"))
							if (b && dojo.isFunction(b))
								if (a.outSR) {
									var l = a.geometries,
									g = !1;
									l && 0 < l.length && (d.essentials.GeometryUtilities.spatialRefsAreEqual(l[0].spatialReference, a.outSR, !1) || (g = !0));
									g ? (c = this._getGeometryService(c), a.outSR.isWebMercator() && 4326 === l[0].spatialReference.wkid || 4326 === a.outSR.wkid &&
										l[0].spatialReference.isWebMercator() ? this._projectLocally(a.geometries, a.outSR, b, f) : c ? ((l = e(l[0].spatialReference, a.outSR)) && !a.transformation && (a.transformation = l.transformation, a.transformForward = l.transformForward), esri.tasks.hasOwnProperty("ProjectParameters") ? c.project(a, b, f) : c.project(a.geometries, a.outSR, b, f)) : f && dojo.isFunction(f) && f(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application."))) : b(l)
								} else
									f && dojo.isFunction(f) && f(Error("output spatial reference is required."));
							else
								f && dojo.isFunction(f) && f(Error("callback required."));
						else
							f && dojo.isFunction(f) && f(Error("projectParameters required."))
					};
					g.simplifyPolygons = function (a, b, e, f) {
						this._getGeometryService(f).simplify(a, b, e)
					};
					g.simplifyPolygon = function (a, b, e, f) {
						this.simplifyPolygons([a], function (a) {
							a && 0 < a.length ? b(a[0]) : e()
						}, e, f)
					};
					g._projectLocally = function (a, b, e, f) {
						for (var c = [], d = 0; d < a.length; d++)
							a[d].spatialReference.isWebMercator() && 4326 === b.wkid ? c[d] = esri.geometry.webMercatorToGeographic(a[d]) : 4326 === a[d].spatialReference.wkid &&
								b.isWebMercator() ? c[d] = esri.geometry.geographicToWebMercator(a[d]) : (f && dojo.isFunction(f) && f(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application.")), this.app.trace.error("An operation requiring projection attempted to project while offline, but was not between WebMercator and WGS84"));
						e(c)
					};
					g.createCircle = function (a, b, e, f) {
						var c = [],
						d = null;
						f = f || 40;
						a = new esri.geometry.Polygon(a);
						for (var d = 360 / f, l = 1; l <= f; l++) {
							var g = l * d * Math.PI / 180;
							c.push([b.x +
									e * Math.cos(g), b.y + e * Math.sin(g)])
						}
						c.push(c[0]);
						a.addRing(c);
						return a
					};
					g.fixAspectRatio = function (a, b) {
						var e = b.getWidth() / b.getHeight(),
						f = a.getWidth() / a.getHeight(),
						c = a.getWidth(),
						d = a.getHeight();
						f < e ? c = e * d : d = 1 / e * c;
						e = a.getCenter();
						return new esri.geometry.Extent(e.x - c / 2, e.y - d / 2, e.x + c / 2, e.y + d / 2, a.spatialReference)
					};
					g.extentToPolygon = function (a) {
						var b = new esri.geometry.Polygon(a.spatialReference),
						e = [];
						e.push(new esri.geometry.Point(a.getCenter().x - a.getWidth() / 2, a.getCenter().y - a.getHeight() / 2));
						e.push(new esri.geometry.Point(a.getCenter().x -
								a.getWidth() / 2, a.getCenter().y + a.getHeight() / 2));
						e.push(new esri.geometry.Point(a.getCenter().x + a.getWidth() / 2, a.getCenter().y + a.getHeight() / 2));
						e.push(new esri.geometry.Point(a.getCenter().x + a.getWidth() / 2, a.getCenter().y - a.getHeight() / 2));
						e.push(new esri.geometry.Point(a.getCenter().x - a.getWidth() / 2, a.getCenter().y - a.getHeight() / 2));
						b.addRing(e);
						return b
					};
					g.pointsAreEqual = function (a, b) {
						return a && !b || !a && b ? !1 : a ? a.x !== b.x || a.y !== b.y || !a.spatialReference && b.spatialReference || a.spatialReference && !b.spatialReference ||
						!a.spatialReference.equals(b.spatialReference) ? !1 : !0 : !0
					};
					g.registerDefaultDatumTransforms = function () {
						var b = [];
						b.push({
							transformWkid : 108457,
							fromWkid : 28992,
							toWkid : 4326
						});
						b.push({
							transformWkid : 1195,
							fromWkid : 27700,
							toWkid : 4326
						});
						b.push({
							transformWkid : 1623,
							fromWkid : 102067,
							toWkid : 4326
						});
						a(b)
					};
					g.registerDatumTransforms = a;
					g.getDatumTransformParameters = e;
					g.intersects = function (a, b) {
						return new Promise(function (e, f) {
							try {
								require(["esri/geometry/geometryEngine"], function (f) {
									e(f.intersects(a, b))
								})
							} catch (c) {
								f(c)
							}
						})
					};
					g.unionGeometries = function (a) {
						return new Promise(function (b, e) {
							try {
								require(["esri/geometry/geometryEngine"], function (e) {
									b(e.union(a))
								})
							} catch (f) {
								e(f)
							}
						})
					};
					g.explodeGeometry = function (a) {
						switch (a.type) {
						case "polygon":
							return a.rings.map(function (b) {
								return (new esri.geometry.Polygon(b)).setSpatialReference(a.spatialReference)
							});
						case "polyline":
							return a.paths.map(function (b) {
								return (new esri.geometry.Polyline(b)).setSpatialReference(a.spatialReference)
							});
						case "multipoint":
							return a.points.map(function (b) {
								return new esri.geometry.Point(b,
									a.spatialReference)
							})
						}
						return [a]
					};
					g.cutGeometries = function (a, b, e) {
						var f = this;
						return new Promise(function (c, d) {
							var l = f.getGeometryService(e);
							if (!l)
								return Promise.reject(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application."));
							try {
								l.cut(a, b).then(function (a) {
									for (var b = [], e = 0; e < a.geometries.length; e++) {
										var f = a.cutIndexes[e];
										b[f] || (b[f] = []);
										b[f].push(a.geometries[e])
									}
									c(b)
								})
							} catch (g) {
								d(g)
							}
						})
					};
					g.toRing = function (a) {
						return [[a.xmin, a.ymin], [a.xmin, a.ymax],
							[a.xmax, a.ymax], [a.xmax, a.ymin], [a.xmin, a.ymin]]
					}
				})(h.GeometryUtils || (h.GeometryUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						function c(c, d) {
							var l = function (f) {
								var l = null;
								require(["esri/tasks/BufferParameters"], function (b) {
									l = new esri.tasks.BufferParameters;
									l.geometries = f;
									l.unit = a(d.bufferUnit);
									l.bufferSpatialReference = d.bufferSpatialReference || d.outSpatialReference || d.geometries[0].spatialReference || c.map.spatialReference;
									l.outSpatialReference = d.outSpatialReference || c.map.spatialReference || d.geometries[0].spatialReference || d.bufferSpatialReference;
									l.distances = [d.bufferDistance];
									l.unionResults = void 0 != d.unionResults ? !!d.unionResults : !0;
									l.geodesic = !!d.geodesic;
									l.unit == g.GCX_UNIT_YARDS && (l.unit = esri.tasks.GeometryService.UNIT_FOOT, l.distances = [e(d.bufferDistance, g.GCX_UNIT_YARDS, esri.tasks.GeometryService.UNIT_FOOT)])
								});
								return new Promise(function (a, e) {
									b(c, l).then(a, e)
								})
							};
							return new Promise(function (a, b) {
								var e = [];
								f(d.geometries).forEach(function (a) {
									e.push(l(a))
								});
								Promise.all(e).then(function (e) {
									var f = e[0];
									f.bufferId = d.bufferId;
									f.sourceCommand =
										d.sourceCommand;
									if (1 === e.length)
										a(f);
									else {
										for (var c = 1; c < e.length; c++) {
											var l = e[c].geometries;
											l.length && (f.geometries = f.geometries.concat(l))
										}
										d.unionResults ? h.GeometryUtils.unionGeometries(f.geometries).then(function (b) {
											h.GeometryUtils.isValidGeometry(b) && (f.geometries = [b], f.geometry = b, a(f))
										}, function (a) {
											var e = {};
											e.error = a;
											e.bufferId = d.bufferId;
											e.sourceCommand = d.sourceCommand;
											b(e)
										}) : a(f)
									}
								}, function (a) {
									a.bufferId = d.bufferId;
									a.sourceCommand = d.sourceCommand;
									b(a)
								})
							})
						}
						function b(a, b) {
							var e = function (a, b) {
								var e = {};
								a && (e.geometries = a);
								b && (e.error = b);
								return e
							};
							return new Promise(function (f, c) {
								var d = h.GeometryUtils.getGeometryService(a);
								if (d) {
									var l = function () {
										d.buffer(b, function (a) {
											return f(e(a, null))
										}, function (a) {
											return c(e(null, a))
										})
									};
									esri.geometry.normalizeCentralMeridian(b.geometries).then(function (a) {
										"polygon" === a[0].type ? d.simplify(b.geometries, function (a) {
											b.geometries = a;
											l()
										}, function (a) {
											c(e(null, a))
										}) : (b.geometries = a, l())
									})
								} else
									a.trace.error("BufferUtils: Buffer operation failed. Could not retrieve geometry service."),
									c(e(null, Error("BufferUtils: Buffer operation failed. Could not retrieve geometry service.")))
							})
						}
						function a(a, b) {
							if (!a)
								return null;
							var e = null;
							switch (a) {
							case "feet":
							case d.essentials.DistanceUnitType.FEET:
							case esri.tasks.GeometryService.UNIT_FOOT.toString():
							case esri.Units.FEET:
								e = esri.tasks.GeometryService.UNIT_FOOT;
								break;
							case "kilometer":
							case d.essentials.DistanceUnitType.KILOMETERS:
							case esri.tasks.GeometryService.UNIT_KILOMETER.toString():
							case esri.Units.KILOMETERS:
								e = esri.tasks.GeometryService.UNIT_KILOMETER;
								break;
							case "meter":
							case d.essentials.DistanceUnitType.METERS:
							case esri.tasks.GeometryService.UNIT_METER.toString():
							case esri.Units.METERS:
								e = esri.tasks.GeometryService.UNIT_METER;
								break;
							case "mile":
							case d.essentials.DistanceUnitType.MILES:
							case esri.tasks.GeometryService.UNIT_STATUTE_MILE.toString():
							case esri.Units.MILES:
								e = esri.tasks.GeometryService.UNIT_STATUTE_MILE;
								break;
							case "nauticalmile":
							case d.essentials.DistanceUnitType.NAUTICAL_MILES:
							case esri.tasks.GeometryService.UNIT_NAUTICAL_MILE.toString():
							case esri.Units.NAUTICAL_MILES:
								e =
									esri.tasks.GeometryService.UNIT_NAUTICAL_MILE;
								break;
							case "yard":
							case d.essentials.DistanceUnitType.YARDS:
							case esri.Units.YARDS:
								e = g.GCX_UNIT_YARDS;
								break;
							default:
								e = b || a
							}
							return e
						}
						function e(a, b, e) {
							var f = 0;
							switch (b) {
							case esri.tasks.GeometryService.UNIT_METER:
								f = 3.280839895013 * a;
								break;
							case esri.tasks.GeometryService.UNIT_KILOMETER:
								f = 3280.839895013123 * a;
								break;
							case esri.tasks.GeometryService.UNIT_STATUTE_MILE:
								f = 5280 * a;
								break;
							case esri.tasks.GeometryService.UNIT_NAUTICAL_MILE:
								f = 6076.12 * a;
								break;
							case g.GCX_UNIT_YARDS:
								f =
									3 * a;
								break;
							default:
								f = a
							}
							switch (e) {
							case esri.tasks.GeometryService.UNIT_METER:
								return f / 3.280839895013;
							case esri.tasks.GeometryService.UNIT_KILOMETER:
								return f / 3280.839895013123;
							case esri.tasks.GeometryService.UNIT_STATUTE_MILE:
								return f / 5280;
							case esri.tasks.GeometryService.UNIT_NAUTICAL_MILE:
								return f / 6076.12;
							case g.GCX_UNIT_YARDS:
								return f / 3;
							default:
								return f
							}
						}
						function f(a) {
							var b = [];
							a.forEach(function (a) {
								for (var e = !1, f = 0; f < b.length; f++)
									if (b[f].length && b[f][0].type === a.type) {
										b[f].push(a);
										e = !0;
										break
									}
								e || (e =
										b.length, b[e] = [], b[e].push(a))
							});
							return b
						}
						g.SUPPORTED_BUFFER_UNITS = {
							feet : null,
							yard : null,
							meter : null,
							kilometer : null,
							mile : null,
							nauticalmile : null
						};
						var l = [3819, 3821, 3824, 3889, 3906, 5013, 5233, 5246, 5252, 5264, 5324, 5340, 5354, 5360, 5365, 5371, 5373, 5381, 5393, 5451, 5464, 5467, 5489, 5524, 5527, 5546, 5561, 37257, 104E3, 104020, 104023, 104199, 104223, 104896],
						n = [[4001, 4999], [5228, 5229], [2044, 2045], [2081, 2083], [2085, 2086], [2093, 2093], [2096, 2098], [2105, 2132], [2169, 2170], [2176, 2180], [2193, 2193], [2200, 2200], [2206, 2212], [2319, 2319],
							[2320, 2462], [2523, 2549], [2551, 2735], [2738, 2758], [2935, 2941], [2953, 2953], [3006, 3030], [3034, 3035], [3058, 3059], [3068, 3068], [3114, 3118], [3126, 3138], [3300, 3301], [3328, 3335], [3346, 3346], [3350, 3352], [3366, 3366], [3416, 3416], [20004, 20032], [20064, 20092], [21413, 21423], [21473, 21483], [21896, 21899], [22171, 22177], [22181, 22187], [22191, 22197], [25884, 25884], [27205, 27232], [27391, 27398], [27492, 27492], [28402, 28432], [28462, 28492], [30161, 30179], [30800, 30800], [31251, 31259], [31275, 31279], [31281, 31290], [31466, 31700], [37001,
								37008], [37201, 37208], [37211, 37235], [37237, 37243], [37245, 37247], [37249, 37255], [37259, 37260], [104100, 104145], [104256, 104259], [104260, 104261], [104286, 104287], [104304, 104305], [104700, 104786], [104800, 104871], [104900, 104970], [104990, 104992]];
						g.GCX_UNIT_YARDS = 12345;
						g.bufferGeometry = function (a, b) {
							var e = {
								bufferId : b.bufferId,
								geometries : [b.geometry],
								callback : b.callback,
								geodesic : b.geodesic,
								bufferSpatialReference : b.bufferSpatialReference,
								outSpatialReference : b.outSpatialReference,
								bufferDistance : b.bufferDistance,
								bufferUnit : b.bufferUnit,
								unionResults : b.unionResults,
								sourceCommand : b.sourceCommand
							};
							return new Promise(function (b, f) {
								c(a, e).then(function (a) {
									a.geometry = a.geometries[0] || null;
									b(a)
								}, function (a) {
									f(a)
								})
							})
						};
						g.bufferGeometries = c;
						g.buffer = b;
						g.isGeographicWkid = function (a) {
							a = parseInt(a, 10);
							if (isNaN(a))
								return !1;
							if (-1 < l.indexOf(a))
								return !0;
							for (var b = 0; b < n.length; b++)
								if (a >= n[b][0] && a <= n[b][1])
									return !0;
							return !1
						};
						g.getUnitDescFromConfig = function (a) {
							for (var b in h.buffer.BufferUtils.SUPPORTED_BUFFER_UNITS)
								if (h.buffer.BufferUtils.SUPPORTED_BUFFER_UNITS.hasOwnProperty(b) &&
									g.SUPPORTED_BUFFER_UNITS[b] && g.SUPPORTED_BUFFER_UNITS[b].config === a)
									return h.buffer.BufferUtils.SUPPORTED_BUFFER_UNITS[b];
							return null
						};
						g.getGeometryServiceUnitConstant = a;
						g.convertLength = e
					})(g.BufferUtils || (g.BufferUtils = {}))
				})(h.buffer || (h.buffer = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function (g) {
					function c(b, a) {
						var e = this;
						g.call(this);
						this.singleFeatureLayer = this.featureLayer = this.gcxLayer = null;
						this.clusterRadius = new Observable(null);
						this.maxFeaturesInCluster = new Observable(null);
						this.renderer = null;
						this.rendererInformation = [];
						this.featureLayerRenderer = null;
						this._featureLayerGraphics = [];
						this._clusters = [];
						this._hiddenClusters = [];
						this._featureSetName = this._clusterBackgroundColor = this._clusterLabelColor = null;
						this._esriEventHandlers =
							[];
						this._gcxEventHandlers = [];
						this._fontSize = "10pt";
						this._fontFamily = "Segoe UI, sans-serif";
						this._mapClickHandler = null;
						if (!(b.mapService.serviceLayer instanceof esri.layers.FeatureLayer))
							throw Error("ClusterLayers require an Esri FeatureLayer to be passed in as a parameter.");
						this.app = a;
						this.id = b.mapService.id + "-cluster";
						this._featureSetName = this.id + "FeatureSet";
						this.gcxLayer = b;
						this.featureLayer = b.mapService.serviceLayer;
						this.singleFeatureLayer = new esri.layers.GraphicsLayer;
						this.url = this.featureLayer.url;
						this.setVisibility(this.featureLayer.visible && this.featureLayer.visibleAtMapScale);
						this.setOpacity(this.featureLayer.opacity);
						this.featureLayerRenderer = this.featureLayer.renderer;
						this.featureLayer.setRenderer(null);
						this.featureLayer.redraw();
						this.singleFeatureLayer.id = b.mapService.id + "-explodedClusterLayer";
						this.singleFeatureLayer.setRenderer(this.featureLayerRenderer);
						this.singleFeatureLayer.setOpacity(this.featureLayer.opacity);
						this.singleFeatureLayer.url = this.url;
						this.clusterRadius.set(b.mapService.featureClustering.radius ||
							50);
						this.maxFeaturesInCluster.set(b.mapService.featureClustering.maximumFeatures || 0);
						this._clusterLabelColor = new esri.Color(b.mapService.featureClustering.labelColor);
						this._clusterBackgroundColor = new esri.Color(b.mapService.featureClustering.backgroundColor);
						for (var f = 0; 4 > f; f++)
							this.rendererInformation.push({
								isVisible : new Observable(!1),
								rangeString : new Observable("")
							});
						this.maxFeaturesInCluster.bind(this, function (a) {
							e.gcxLayer.mapService.featureClustering.maximumFeatures = a;
							e._loadRenderer()
						});
						this.clusterRadius.bind(this,
							function (a) {
							e.gcxLayer.mapService.featureClustering.radius = a
						});
						0 < this.maxFeaturesInCluster.get() && this._loadRenderer();
						if (this.app.map && this.app.map.loaded)
							this._setupEventListeners(this.app.map);
						else
							this.app.event("MapLoadedEvent").once(this, function (a) {
								e._setupEventListeners(a)
							});
						this.recluster()
					}
					__extends(c, g);
					c.prototype.recluster = function () {
						0 < this.singleFeatureLayer.graphics.length || (this._featureLayerGraphics = this.featureLayer.graphics.slice(0, this.featureLayer.graphics.length), this._generateClusters(),
							this.redraw())
					};
					c.prototype.destroy = function () {
						this.app.map.getLayer(this.singleFeatureLayer.id) === this.singleFeatureLayer && this.app.map.removeLayer(this.singleFeatureLayer);
						this.app.featureSetManager.getCollectionById(this._featureSetName) && (this.app.featureSetManager.closeCollection(this._featureSetName), this.app.featureSetManager.removeCollectionById(this._featureSetName));
						this.app.map.removeLayer(this);
						this.featureLayer.setRenderer(this.featureLayerRenderer);
						this.featureLayer.redraw();
						for (var b =
								0; b < this._esriEventHandlers.length; b++)
							this._esriEventHandlers[b].remove();
						for (b = 0; b < this._gcxEventHandlers.length; b++)
							this.app.event(this._gcxEventHandlers[b].eventName).unsubscribe(this._gcxEventHandlers[b].token)
					};
					c.prototype.onFeatureClicked = function (b) {
						var a = this;
						if (b.graphic instanceof esri.Graphic && !this.app.toolRegistry.getActiveTool()) {
							var e = b.graphic;
							this.singleFeatureLayer.clear();
							this._hiddenClusters = [];
							b = [];
							for (var f = [], c = 0; c < this._featureLayerGraphics.length; c++)
								this._featureLayerGraphics[c].attributes.clusterId ===
								e.attributes.clusterId && (b.push(new d.Feature({
											graphic : this._featureLayerGraphics[c],
											layer : this.gcxLayer,
											symbol : this._getRenderedSymbol(this._featureLayerGraphics[c]),
											resolveLayerFields : !0
										})), f.push(this._featureLayerGraphics[c]), this.singleFeatureLayer.add(this._featureLayerGraphics[c]));
							this._hiddenClusters = this.graphics.slice(0, this.graphics.length);
							this.clear();
							this.redraw();
							this.app.map.getLayer(this.singleFeatureLayer.id) || this.app.map.addLayer(this.singleFeatureLayer);
							this.singleFeatureLayer.redraw();
							e = new d.FeatureSet;
							e.features.set(b);
							e.layer = this.gcxLayer;
							e.esriFeatureSet = new esri.tasks.FeatureSet;
							e.esriFeatureSet.features = f;
							e.resolveDataLinks(function (b) {
								a.app.event("FeatureChangedEvent").publish(b)
							});
							b = new d.FeatureSetCollection;
							b.featureSets.addItem(e);
							b.id = this._featureSetName;
							b.sourceName = "ClusterFeatures";
							this.app.featureSetManager.getCollectionById(this._featureSetName) && this.app.featureSetManager.removeCollectionById(this._featureSetName);
							this.app.featureSetManager.addCollection(b);
							this.app.featureSetManager.openCollection(this._featureSetName);
							this.app.featureSetManager.closeCollection(this._featureSetName);
							this.app.command("DisableMapClick").execute();
							this._mapClickHandler = this.app.map.on("click", function (b) {
									if (0 < a.app.stateManager.getActiveStates().filter(function (a) {
											return "EditorActiveState" === a.stateDefinition.name
										}).length)
										a.singleFeatureLayer.redraw();
									else
										return a._mapClickHandler.remove(), a._mapClickHandler = null, a.app.command("EnableMapClick").execute(), a.singleFeatureLayer.clear(),
										a.recluster(), !1
								})
						}
					};
					c.prototype._setupEventListeners = function (b) {
						var a = this;
						this._gcxEventHandlers.push({
							eventName : "MapClickedEvent",
							token : this.app.event("MapClickedEvent").subscribe(this, function (b) {
								return a._mapClickedEvent(b)
							})
						});
						this._gcxEventHandlers.push({
							eventName : "MapExtentChangedEvent",
							token : this.app.event("MapExtentChangedEvent").subscribe(this, function (b, f) {
								return a._mapExtentChangedEvent(b, f)
							})
						});
						this._gcxEventHandlers.push({
							eventName : "MapTipClosedEvent",
							token : this.app.event("MapTipClosedEvent").subscribe(this,
								function () {
								return a._mapTipClosedEvent()
							})
						});
						this._gcxEventHandlers.push({
							eventName : "ClusterLayerRemovedEvent",
							token : this.app.event("ClusterLayerRemovedEvent").subscribe(this, function (b) {
								return a._clusterLayerRemovedEvent(b)
							})
						});
						this._gcxEventHandlers.push({
							eventName : "LayerVisibilityChangedEvent",
							token : this.app.event("LayerVisibilityChangedEvent").subscribe(this, function (b) {
								return a._layerVisibilityChangedEvent(b)
							})
						});
						this._gcxEventHandlers.push({
							eventName : "GeometryEditInvokedEvent",
							token : this.app.event("GeometryEditInvokedEvent").subscribe(this,
								function (b) {
								return a.recluster()
							})
						});
						this._gcxEventHandlers.push({
							eventName : "GeometryEditCompletedEvent",
							token : this.app.event("GeometryEditCompletedEvent").subscribe(this, function (b) {
								return a._handleGeometryChange()
							})
						});
						this._gcxEventHandlers.push({
							eventName : "EditorClosedEvent",
							token : this.app.event("EditorClosedEvent").subscribe(this, function () {
								return a._handleEditorClosedEvent()
							})
						});
						this._esriEventHandlers.push(this.featureLayer.on("update-end", function (b) {
								a.recluster()
							}))
					};
					c.prototype._handleGeometryChange =
					function () {
						this.recluster();
						0 < this.singleFeatureLayer.graphics.length && this.singleFeatureLayer.redraw()
					};
					c.prototype._handleEditorClosedEvent = function () {
						this.recluster();
						0 < this.singleFeatureLayer.graphics.length && this.singleFeatureLayer.redraw()
					};
					c.prototype._mapClickedEvent = function (b) {
						if (this.visible) {
							var a = b && b.graphic ? b.graphic : null;
							if (null === this.app.toolRegistry.getActiveTool())
								if (a && a.getLayer() === this && a.attributes && a.geometry instanceof esri.geometry.Point)
									if (a.attributes.clusterId && a.attributes.clusterCount)
										this.onFeatureClicked(b);
									else
										this.app.command("ShowMapTip").execute(new d.Feature({
												graphic : a,
												layer : this.gcxLayer
											}));
								else
									0 < this.singleFeatureLayer.graphics.length && (this.singleFeatureLayer.clear(), this.app.command("RemovePushpins").execute()), this.recluster()
						}
					};
					c.prototype._mapExtentChangedEvent = function (b, a) {
						this.featureLayer.visibleAtMapScale && this.featureLayer.visible ? this.setVisibility(!0) : this.setVisibility(!1);
						0 === this.singleFeatureLayer.graphics.length && this.visible && this.featureLayer.visibleAtMapScale && this.recluster();
						this._loadRenderer()
					};
					c.prototype._mapTipClosedEvent = function () {
						this._mapClickHandler && (this._mapClickHandler.remove(), this._mapClickHandler = null);
						this.app.command("EnableMapClick").execute();
						this.singleFeatureLayer.clear();
						this.recluster()
					};
					c.prototype._clusterLayerRemovedEvent = function (b) {
						b === this && this.destroy()
					};
					c.prototype._layerVisibilityChangedEvent = function (b) {
						var a = this;
						b.forEach(function (b) {
							b.layer === a.gcxLayer && (a.setVisibility(b.visibility && a.featureLayer.visibleAtMapScale), a._loadRenderer())
						})
					};
					c.prototype._loadRenderer = function () {
						var b = new esri.renderer.ClassBreaksRenderer(null, "clusterCount"),
						a = null;
						if (0 < this.maxFeaturesInCluster.get())
							a = this.maxFeaturesInCluster.get();
						else
							for (var e = a = 0; e < this._clusters.length; e++)
								this._clusters[e].attributes.clusterCount > a && (a = this._clusters[e].attributes.clusterCount);
						e = Math.ceil(0.309999999999 * a);
						1 === e && e++;
						var f = Math.ceil(0.31 * a);
						f <= e && (f = e + 1);
						var c = Math.ceil(0.609999999999 * a);
						c < f && (c = f);
						var d = Math.ceil(0.61 * a);
						d <= c && (d = c + 1);
						var g = Math.ceil(0.909999999999 *
								a);
						g < d && (g = d);
						var h = Math.ceil(0.91 * a);
						h <= g && (h = g + 1);
						this._addBreak(b, 21, 2, e, a, 0);
						this._addBreak(b, 28, f, c, a, 1);
						this._addBreak(b, 35, d, g, a, 2);
						this._addBreak(b, 42, h, Infinity, a, 3);
						this.setRenderer(b)
					};
					c.prototype._addBreak = function (b, a, e, f, c, d) {
						c >= e && this.visible && this.featureLayer.visibleAtMapScale ? (e !== f ? Infinity !== f ? this.rendererInformation[d].rangeString.set(e + " - " + f) : this.rendererInformation[d].rangeString.set(e + "+") : this.rendererInformation[d].rangeString.set(e.toString()), this.rendererInformation[d].isVisible.set(!0)) :
						this.rendererInformation[d].isVisible.set(!1);
						c = null;
						c = 8 === dojo.isIE ? new esri.symbol.SimpleMarkerSymbol({
								color : this._clusterBackgroundColor.toRgba(),
								size : a,
								type : "esriSMS",
								style : "esriSMSCircle",
								outline : {
									color : this._makeTransparent(this._clusterBackgroundColor.toRgba()),
									width : 8,
									type : "esriSLS",
									style : "esriSLSSolid"
								}
							}) : new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, a, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color(this._makeTransparent(this._clusterBackgroundColor.toRgba())),
									8), this._clusterBackgroundColor);
						b.addBreak(e, f, c)
					};
					c.prototype._makeTransparent = function (b) {
						4 === b.length && (b[3] = 0.25);
						return b
					};
					c.prototype._isValidCluster = function (b, a, e) {
						return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2)) / e <= this.clusterRadius.get() && this._isClusterFull(a)
					};
					c.prototype._isClusterFull = function (b) {
						return b.attributes.clusterCount < this.maxFeaturesInCluster.get() || 0 == this.maxFeaturesInCluster.get() || "" == this.maxFeaturesInCluster.get().toString()
					};
					c.prototype._generateClusters =
					function () {
						this.clear();
						this._clusters = [];
						this._addGraphicsToClusters(!1);
						for (var b = [], a = 0; a < this._clusters.length; a++)
							b[a] = {
								x : this._clusters[a].x,
								y : this._clusters[a].y,
								attributes : {
									clusterCount : 0,
									clusterId : this._clusters[a].attributes.clusterId,
									extent : this._clusters[a].attributes.extent
								}
							};
						this._clusters = b;
						this._addGraphicsToClusters(!0);
						this._showAllClusters()
					};
					c.prototype._addGraphicsToClusters = function (b) {
						for (var a = this._featureLayerGraphics.length, e = this.app.map.extent.getWidth() / this.app.map.width,
							f = 0; f < a; f++) {
							var c = null;
							if (this._featureLayerGraphics[f].geometry instanceof esri.geometry.Point && this._featureLayerGraphics[f].visible)
								if (c = this._featureLayerGraphics[f].geometry, this.app.map.extent.contains(c)) {
									for (var d = this._featureLayerGraphics[f], g = [], h = 0; h < this._clusters.length; h++) {
										var m = this._clusters[h];
										this._isValidCluster(c, m, e) && g.push(m)
									}
									if (1 === g.length)
										this._clusterAddPoint(d, c, g[0], b);
									else if (1 < g.length) {
										m = [];
										for (h = 0; h < g.length; h++)
											m[h] = Math.sqrt(Math.pow(g[h].x - c.x, 2) + Math.pow(g[h].y -
														c.y, 2));
										for (var k = null, q = null, h = 0; h < m.length; h++)
											if (null === q || q > m[h])
												q = m[h], k = g[h];
										this._clusterAddPoint(d, c, k, b)
									} else
										this._createCluster(d, c)
								} else
									this._featureLayerGraphics[f].attributes.clusterId = -1
						}
					};
					c.prototype._showAllClusters = function () {
						0 != this.maxFeaturesInCluster.get() && "" != this.maxFeaturesInCluster.get().toString() || this._loadRenderer();
						for (var b = 0, a = this._clusters.length; b < a; b++)
							this._showCluster(this._clusters[b])
					};
					c.prototype._showCluster = function (b) {
						var a = new esri.geometry.Point(b.x,
								b.y, this.app.map.spatialReference),
						e = new esri.Graphic(a, null, b.attributes);
						e.setSymbol(this._getRenderedSymbol(e));
						this.add(e);
						2 > b.attributes.clusterCount || (e = null, 8 === dojo.isIE ? (e = new esri.symbol.TextSymbol({
										type : "esriTS",
										color : this._clusterLabelColor.toRgba(),
										xoffset : 0,
										yoffset : -5,
										font : {
											family : this._fontFamily,
											size : this._fontSize,
											weight : "bold"
										}
									}), e.setText(b.attributes.clusterCount.toString())) : (e = new esri.symbol.TextSymbol(b.attributes.clusterCount), e.setColor(this._clusterLabelColor), e.setOffset(0,
									-5), e.setFont((new esri.symbol.Font(this._fontSize)).setFamily(this._fontFamily).setWeight(esri.symbol.Font.WEIGHT_BOLD))), b = new esri.Graphic(a, e, b.attributes), this.add(b))
					};
					c.prototype._getRenderedSymbol = function (b) {
						if (1 !== b.attributes.clusterCount)
							return null;
						var a = this.featureLayerRenderer;
						if (!a)
							return null;
						if (a instanceof esri.renderer.SimpleRenderer)
							return a.getSymbol(b);
						for (var e = 0; e < this._featureLayerGraphics.length; e++) {
							var f = this._featureLayerGraphics[e];
							if (f.attributes.clusterId === b.attributes.clusterId)
								return a.getSymbol(f)
						}
					};
					c.prototype._clusterAddPoint = function (b, a, e, f) {
						var c;
						f || (c = e.attributes.clusterCount, f = (a.x + e.x * c) / (c + 1), c = (a.y + e.y * c) / (c + 1), e.x = f, e.y = c);
						a.x < e.attributes.extent[0] ? e.attributes.extent[0] = a.x : a.x > e.attributes.extent[2] && (e.attributes.extent[2] = a.x);
						a.y < e.attributes.extent[1] ? e.attributes.extent[1] = a.y : a.y > e.attributes.extent[3] && (e.attributes.extent[3] = a.y);
						e.attributes.clusterCount++;
						a.hasOwnProperty("attributes") || (a.attributes = {});
						b.attributes.clusterId = a.attributes.clusterId = e.attributes.clusterId
					};
					c.prototype._createCluster = function (b, a) {
						var e = this._clusters.length + 1;
						b.attributes.clusterId = e;
						this._clusters.push({
							x : a.x,
							y : a.y,
							attributes : {
								clusterCount : 1,
								clusterId : e,
								extent : [a.x, a.y, a.x, a.y]
							}
						})
					};
					return c
				}
				(esri.layers.GraphicsLayer);
				d.ClusterLayer = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = d.essentials.documents.GrantKind,
					c = function () {
						function b(a) {
							this.grants = [];
							this.isPublic = this.isGlobal = !1;
							this.isRevoked = new Observable(!1);
							this.canWrite = this.canRead = !1;
							this.enabled = new Observable(!0);
							if (!a.id && !a.grant)
								throw Error('MonikerModel: parameter "id" or "grant" is required.');
							a.id && (this.id = a.id);
							a.name && (this.name = a.name);
							a.iconUri && (this.iconUri = a.iconUri);
							a.isGlobal && (this.isGlobal = a.isGlobal);
							a.isPublic && (this.isPublic =
									a.isPublic);
							a.grant && (this.id = a.grant.globalId, a.grant.subject && (this.name = a.grant.subject.title), this.addGrant(a.grant))
						}
						b.prototype.addGrant = function (a) {
							this.grants.push(a);
							switch (a.kind) {
							case h.READER:
								this.canRead = !0;
								break;
							case h.WRITER:
								this.canWrite = !0
							}
						};
						return b
					}
					();
					g.MonikerModel = c
				})(h.documents || (h.documents = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.coordinates || (d.coordinates = {});
	d = d.AngleDirectionSystem || (d.AngleDirectionSystem = {});
	d.POLAR = "polar";
	d.NORTH_AZIMUTH = "north_azimuth";
	d.SOUTH_AZIMUTH = "south_azimuth"
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.coordinates || (d.coordinates = {});
	d = d.AngleFormat || (d.AngleFormat = {});
	d.DD = "dd";
	d.DDM = "ddm";
	d.DMS = "dms"
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					g.featureSetExtendedProperty = "containsCoordinates";
					g.coordinateIdentifierProperty = "coordinateId";
					var m = function () {
						function c(b) {
							this._registeredCoordinateModels = [];
							this.app = b
						}
						c.prototype.registerModel = function (b, a) {
							void 0 === a && (a = !1);
							if (!this._validateModelRegistration(b))
								return !1;
							this._processCoordinatesModel(b);
							if (0 === this._registeredCoordinateModels.length || a)
								this._defaultCoordinatesModel = b;
							this._registeredCoordinateModels.push(b.id);
							return !0
						};
						c.prototype.getCoordinate = function (b, a, e) {
							var f = this,
							c = b instanceof esri.geometry.Point ? b : new esri.geometry.Point(b.x, b.y, b.spatialReference);
							b = this._defaultCoordinatesModel;
							if (e && b.id !== e)
								this.getCoordinatesModel(e).then(function (b) {
									return g.CoordinateUtils.getCoordinate(f.app, c, a || b.currentCoordinateSystem.get(), b.fractionalDigits, b.defaultGcsWkid)
								}, function (a) {
									return Promise.reject(a)
								});
							else
								return g.CoordinateUtils.getCoordinate(this.app, c, a || b.currentCoordinateSystem.get(), b.fractionalDigits,
									b.defaultGcsWkid)
						};
						c.prototype.getCoordinatesModel = function (b) {
							var a = this;
							return new Promise(function (e, f) {
								a.app.getFrameworkObjectByIdAsync(b, function (a) {
									a instanceof d.essentialsHtmlViewer.mapping.infrastructure.coordinates.CoordinatesModel ? e(a) : f(Error("CoordinatesManager: getCoordinatesModel - {0} is not an instance of a Coordinates Model.".format(b)))
								}, function (a) {
									return f(a)
								})
							})
						};
						c.prototype._validateModelRegistration = function (b) {
							if (!(b && b.id && b.coordinateSystems.length() && b.currentCoordinateSystem.get()) ||
								this._registeredCoordinateModels.filter(function (a) {
									return b.id === a
								}).length)
								return !1;
							for (var a = 0; a < b.coordinateSystems.length(); a++) {
								var e = b.coordinateSystems.getAt(a);
								if (!this._validateCoordinateSystem(e))
									return !1
							}
							return !0
						};
						c.prototype._validateCoordinateSystem = function (b) {
							return null != b.displayName && null != b.output && (null != b.wkid || null != b.wkt)
						};
						c.prototype._processCoordinatesModel = function (b) {
							var a = this;
							this._addModelSubscriptionHooks(b);
							var e = !1;
							b.inputStream.bind(this, function (f) {
								e || !b.isActive.get() ||
								a._prevCoord && a._prevCoord.x == f.x && a._prevCoord.y == f.y && a._prevCoord.spatialReference && f.spatialReference && (a._prevCoord.spatialReference.wkid === f.spatialReference.wkid || a._prevCoord.spatialReference.wkt == f.spatialReference.wkt) ? a._prevCoord = f : (a._prevCoord = f, f = f instanceof esri.geometry.Point ? f : new esri.geometry.Point(f.x, f.y, f.spatialReference), e = !0, h.coordinates.CoordinateUtils.getCoordinate(a.app, f, b.currentCoordinateSystem.get(), b.fractionalDigits, b.defaultGcsWkid).then(function (a) {
											b.outputStream.set(a);
											e = !1
										}, function (f) {
											a.app.trace.error("CoordinatesManager: An error occurred while attempting to map from input to output coordinate streams for model: {0}".format(b.id));
											e = !1
										}))
							});
							b.isRegistered = !0
						};
						c.prototype._addModelSubscriptionHooks = function (b) {
							var a = this,
							e = b.outputStream.bindingEvent;
							dojo.aspect.after(e, "subscribe", function (f) {
								a._handleModelSubscriptionsChanged(b, e.subscriptions);
								return f
							});
							dojo.aspect.after(e, "unsubscribe", function (f) {
								a._handleModelSubscriptionsChanged(b, e.subscriptions);
								return f
							});
							dojo.aspect.after(e, "clear", function () {
								return a._handleModelSubscriptionsChanged(b, e.subscriptions)
							});
							this._handleModelSubscriptionsChanged(b, e.subscriptions)
						};
						c.prototype._handleModelSubscriptionsChanged = function (b, a) {
							var e = !1,
							f;
							for (f in a)
								if (a.hasOwnProperty(f)) {
									e = !0;
									break
								}
							e !== b.isActive.get() && b.isActive.set(e)
						};
						return c
					}
					();
					g.CoordinatesManager = m
				})(h.coordinates || (h.coordinates = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b() {
							c.apply(this, arguments);
							this.isActive = new Observable(!1);
							this.coordinateSystems = new ObservableCollection([]);
							this.currentCoordinateSystem = new Observable(null);
							this.fractionalDigits = 5;
							this.defaultGcsWkid = 4326;
							this.inputStream = new Observable(null);
							this.outputStream = new Observable(null);
							this.isRegistered = !1
						}
						__extends(b, c);
						b.prototype.initialize = function (a) {
							this.configuration = a
						};
						return b
					}
					(d.framework.ui.ViewModelBase);
					g.CoordinatesModel = h
				})(h.coordinates || (h.coordinates = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					(function (m) {
						function c(a, b) {
							b = b.startsWith("language-coordinates-") ? b : "language-coordinates-" + b;
							return a.getResource("Mapping.Infrastructure", b)
						}
						function b(a) {
							return "number" !== typeof a ? NaN : 0 < a ? 1 : 0 > a ? -1 : a
						}
						m.getCoordinate = function (a, b, f, c, g) {
							void 0 === c && (c = 5);
							void 0 === g && (g = 4326);
							return new Promise(function (p, m) {
								var k = esri.geometry,
								q = b.spatialReference,
								w = (a.map.spatialReference.wkt ? f.wkt !== a.map.spatialReference.wkt : f.wkid !== a.map.spatialReference.wkid) ||
								"xy" === f.output ? new esri.SpatialReference(f.wkid || f.wkt) : new esri.SpatialReference(g),
								t = function (b) {
									var e = c;
									void 0 === e && (e = 5);
									var g = {};
									g.targetCoordinateSystem = f;
									g.x = b.x;
									g.y = b.y;
									g.spatialReference = b.spatialReference;
									"xy" == f.output ? (g.formattedLatitudeOrX = d.FormatUtils.formatNumber(b.x, d.NumberFormat.DEFAULT, {
												fractionalDigits : e
											}), g.formattedLongitudeOrY = d.FormatUtils.formatNumber(b.y, d.NumberFormat.DEFAULT, {
												fractionalDigits : e
											})) : (b = d.coordinates.CoordinateUtils.formatLatLon(b.y, b.x, f.output, a, e), g.formattedLatitudeOrX =
											b.latitude, g.formattedLongitudeOrY = b.longitude);
									p(g)
								},
								y = function () {
									d.GeometryUtils.projectGeometry(b, w, function (a) {
										t(a)
									}, function (a) {
										m(Error("Unable to project geometry for coordinate tracking: {0}".format(a.message)))
									}, a)
								},
								u = function () {
									a.command("NativeHasCapability").execute("project", function (a) {
										a ? y() : m(Error("Offline Mode. Unable to project geometry for coordinate tracking."))
									})
								};
								k.canProject(q, w) ? (k = k.project(b, w), t(k)) : a.isOffline.get() ? u() : y()
							})
						};
						m.convertDmsToDecimalDegrees = function (a, b, f,
							d, g) {
							var h = c(a, "west-abbrev").toUpperCase(),
							m = c(a, "east-abbrev").toUpperCase(),
							k = c(a, "north-abbrev").toUpperCase();
							a = c(a, "south-abbrev").toUpperCase();
							g = g.toUpperCase();
							b = parseFloat(b);
							f = parseFloat(f);
							d = parseFloat(d);
							if (isNaN(b) || isNaN(f) || isNaN(d) || 0 > b || 180 < b || 0 > f || 60 < f || 0 > d || 60 < d || g != h && g != m && g != k && g != a)
								return null;
							m = b + f / 60 + d / 3600;
							if (g === a || g === h)
								m = -m;
							return m
						};
						m.formatAngle = function (a, e, f, c) {
							if (null == c || "undefined" === typeof c)
								c = 4;
							e || (e = g.AngleFormat.DD);
							e = e.toLowerCase();
							switch (e) {
							case g.AngleFormat.DDM:
								e =
									c;
								c = Math.floor(Math.abs(a));
								var n = 60 * (Math.abs(a) - c);
								return "{0}{1} {2}{3}".format(c * b(a), m.getResource(f, "degrees"), d.FormatUtils.formatNumber(n, d.NumberFormat.NUMBER, {
										fractionalDigits : e
									}), m.getResource(f, "minutes"));
							case g.AngleFormat.DMS:
								e = c;
								c = Math.floor(Math.abs(a));
								var n = Math.floor(60 * (Math.abs(a) - c)),
								p = 3600 * (Math.abs(a) - c - n / 60);
								return "{0}{1} {2}{3} {4}{5}".format(c * b(a), m.getResource(f, "degrees"), n, m.getResource(f, "minutes"), d.FormatUtils.formatNumber(p, d.NumberFormat.NUMBER, {
										fractionalDigits : e
									}),
									m.getResource(f, "seconds"));
							default:
								return "{0}{1}".format(d.FormatUtils.formatNumber(a, d.NumberFormat.NUMBER, {
										fractionalDigits : c
									}), m.getResource(f, "degrees"))
							}
						};
						m.formatLatLon = function (a, b, f, c, d) {
							var g = null,
							h = null,
							g = 0 < a ? m.getResource(c, "north-abbrev") : m.getResource(c, "south-abbrev"),
							h = 0 < b ? m.getResource(c, "east-abbrev") : m.getResource(c, "west-abbrev");
							return {
								latitude : "{0} {1}".format(m.formatAngle(Math.abs(a), f, c, d), g),
								longitude : "{0} {1}".format(m.formatAngle(Math.abs(b), f, c, d), h)
							}
						};
						m.formatXYCoordinate =
						function (a, b, f) {
							if (null == f || "undefined" === typeof f)
								f = 4;
							return d.FormatUtils.formatNumber(a, d.NumberFormat.NUMBER, {
								fractionalDigits : f
							})
						};
						m.formatBearing = function (a, b, f, c) {
							if (0 === a)
								return m.getResource(f, "north-abbrev");
							if (90 === a)
								return m.getResource(f, "east-abbrev");
							if (180 === a)
								return m.getResource(f, "south-abbrev");
							if (270 === a)
								return m.getResource(f, "west-abbrev");
							var d = m.getResource(f, "north-abbrev"),
							g = m.getResource(f, "east-abbrev");
							90 <= a && 180 > a ? (d = m.getResource(f, "south-abbrev"), a = 180 - a) : 180 <= a &&
							270 > a ? (d = m.getResource(f, "south-abbrev"), g = m.getResource(f, "west-abbrev"), a -= 180) : 270 <= a && 360 > a && (g = m.getResource(f, "west-abbrev"), a = 360 - a);
							return "{0} {1} {2}".format(d, m.formatAngle(a, b, f, c), g)
						};
						m.getResource = c
					})(g.CoordinateUtils || (g.CoordinateUtils = {}))
				})(d.coordinates || (d.coordinates = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = d.essentials.documents.DocumentField,
					c = d.essentials.documents.FilterMethod,
					b = d.essentials.documents.FilterType,
					a = function (a) {
						function f(b, f, c) {
							a.call(this, b, f);
							this._pageSize = 10;
							this._queryParams = {};
							this.stopFetching = this.isInitialized = !1;
							this.items = new ObservableCollection;
							this.numberOfItems = new Observable(0);
							this.currIndexStart = new Observable(0);
							this.currIndexStartFromOne = new Observable(1);
							this.currIndexEnd = new Observable(0);
							this.currPageNumber = new Observable(1);
							this.firstPageNumber = new Observable(1);
							this.lastPageNumber = new Observable(1);
							this.statusFetching = new Observable(!1);
							this.statusOffline = new Observable(!1);
							this._mapCallback = c
						}
						__extends(f, a);
						f.prototype.initialize = function (a) {
							var b = this;
							void 0 === a && (a = {});
							a.pageSize && (this._pageSize = a.pageSize);
							a.queryParams && (this._queryParams = dojo.mixin(this._queryParams, a.queryParams));
							a.fileType && this.addFilter({
								field : h.FILE_TYPE,
								method : c.VALUES,
								range : [{
										string : a.fileType
									}
								]
							});
							this.isInitialized = !0;
							this.currIndexStartFromOne.syncTransform(this.currIndexStart, function (a) {
								return a + 1
							});
							this.currPageNumber.bind(this, function () {
								return b._handlePageChanged()
							});
							this._populateFromDocStore()
						};
						f.prototype.getLength = function () {
							return this.numberOfItems.get()
						};
						f.prototype.nextPage = function () {
							this.currPageNumber.set(this.currPageNumber.get() + 1)
						};
						f.prototype.prevPage = function () {
							this.currPageNumber.set(this.currPageNumber.get() - 1)
						};
						f.prototype.refresh = function () {
							this._populateFromDocStore()
						};
						f.prototype.destroy = function () {
							a.prototype.destroy.call(this);
							this.items && this.items.clear()
						};
						f.prototype.setQueryParameters = function (a) {
							this._queryParams = a;
							this.currPageNumber.set(1)
						};
						f.prototype.getQueryParameters = function () {
							return this._queryParams
						};
						f.prototype.addFilter = function (a, e) {
							void 0 === e && (e = b.REQUIRE);
							this._queryParams.filters || (this._queryParams.filters = {});
							this._queryParams.filters[e] || (this._queryParams.filters[e] = []);
							this._queryParams.filters[e] = this._queryParams.filters[e].filter(function (b) {
									return b.field !==
									a.field
								});
							this._queryParams.filters[e].push(a);
							this.currPageNumber.set(1)
						};
						f.prototype.removeFilter = function (a, e) {
							void 0 === e && (e = b.REQUIRE);
							this._queryParams.filters && this._queryParams.filters[e] && (this._queryParams.filters[e] = this._queryParams.filters[e].filter(function (b) {
										return b.field !== a
									}), 0 === this._queryParams.filters[e].length && delete this._queryParams.filters[e], this.currPageNumber.set(1))
						};
						f.prototype.sortBy = function (a) {
							a.fields && 0 !== a.fields.length && (a.descending ? (delete this._queryParams.sort,
									this._queryParams.sortDescending = a.fields) : (delete this._queryParams.sortDescending, this._queryParams.sort = a.fields), this.currPageNumber.set(1))
						};
						f.prototype._handlePageChanged = function () {
							this.currPageNumber.value = Math.max(1, Number(this.currPageNumber.get()));
							this.currPageNumber.get() > this.lastPageNumber.get() && 0 < this.lastPageNumber.get() ? this.currPageNumber.set(this.lastPageNumber.get()) : (this.currIndexStart.set((this.currPageNumber.get() - 1) * this._pageSize), this.currIndexEnd.set(Math.min(this.numberOfItems.get(),
										this.currIndexStart.get() + this._pageSize)), this._populateFromDocStore())
						};
						f.prototype._populateFromDocStore = function () {
							var a = this;
							if (this.app.site.documentStore.supported && this.isInitialized && !this.stopFetching) {
								this.statusFetching.set(!0);
								var b = this._buildQueryParams();
								this.app.waitUntilSiteInitialized().then(function () {
									return a.statusOffline.set(!1)
								}).then(function () {
									return a.app.site.documentStore.query(b)
								}).then(function (b) {
									return a._handleQueryResult(b)
								})["catch"](function (b) {
									a.items.clear();
									a.numberOfItems.set(0);
									a.statusOffline.set(!0);
									a.app.trace.error("Error fetching documents: {0}".format(b), b)
								})["finally"](function () {
									return a.statusFetching.set(!1)
								})
							}
						};
						f.prototype._buildQueryParams = function () {
							var a = dojo.mixin({}, this._queryParams);
							a.start = this.currIndexStart.get();
							a.limit = this._pageSize;
							return a
						};
						f.prototype._handleQueryResult = function (a) {
							this.items.set(a.results.map(this._mapCallback));
							a = a.total ? a.total : 0;
							this.numberOfItems.set(a);
							a = Math.ceil(a / this._pageSize);
							this.lastPageNumber.set(a);
							this.firstPageNumber.set(1);
							this.currIndexStart.set((this.currPageNumber.get() - 1) * this._pageSize);
							this.currIndexEnd.set(Math.min(this.numberOfItems.get(), this.currIndexStart.get() + this._pageSize))
						};
						return f
					}
					(d.framework.FrameworkObject);
					g.DocumentCollection = a
				})(h.documents || (h.documents = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b() {
							c.apply(this, arguments);
							this.autoCompleteMinLength = 0;
							this.autoCompleteMaxEntries = 10
						}
						__extends(b, c);
						b.prototype.added = function (a) {
							c.prototype.added.call(this, a);
							this._setupJQueryAutocomplete()
						};
						b.prototype.handleInputChanged = function (a, b, f) {
							this.viewModel.validateSearchInput()
						};
						b.prototype.handleAddMonikerButtonClick = function (a, b, f) {
							this.viewModel.addMoniker();
							this.viewModel.resetOptions()
						};
						b.prototype.handleUpdateMoniker =
						function (a, b, f) {
							this.viewModel.updateMoniker(f, b.value);
							return !0
						};
						b.prototype.handleAutoCompleteBlur = function (a, b, f) {
							$(b).autocomplete("widget").hide()
						};
						b.prototype.getSuggestions = function (a, b) {
							var f = this;
							this.viewModel.searchMonikers(a.term).then(function (a) {
								return f._processMonikers(a)
							}).then(function (a) {
								return b(a)
							})["catch"](function (a) {
								return b([])
							})
						};
						b.prototype._processMonikers = function (a) {
							var b = [];
							0 < a.length && (b = a.slice(0, this.autoCompleteMaxEntries).map(function (a) {
										return {
											label : a.title,
											moniker : a
										}
									}));
							return Promise.resolve(b)
						};
						b.prototype._setupJQueryAutocomplete = function () {
							var a = this,
							b = {
								minLength : this.autoCompleteMinLength,
								source : function (b, e) {
									a.getSuggestions(b, e)
								},
								select : function (b, e) {
									a._handleAutoCompleteSelect(b, e);
									return !1
								}
							};
							$(this.autoCompleteInput).autocomplete(b)
						};
						b.prototype._handleAutoCompleteSelect = function (a, b) {
							this.viewModel.searchText.set(b.item.label);
							this.viewModel.selectedMoniker.set(b.item.moniker)
						};
						return b
					}
					(d.framework.ui.ViewBase);
					g.GrantEditorView = h
				})(h.documents || (h.documents = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = d.framework.utils.ArrayUtils,
					c = d.essentials.documents.BatchRequestBuilder,
					b = d.essentials.documents.GrantID,
					a = d.essentials.documents.GrantKind,
					e = d.essentials.documents.MonikerKind,
					f = function (f) {
						function d(e, c) {
							var g = this;
							f.call(this, e, c);
							this._supportedGrantKinds = [a.READER, a.WRITER];
							this._globalGrantIds = [b.PUBLIC, b.USER];
							this._allowPublicAccess = !1;
							this._lastSearchResults = [];
							this.defaultGrantKind = a.READER;
							this.userIconUri = "Resources/Images/Icons/user-24.png";
							this.roleIconUri = "Resources/Images/Icons/team-24.png";
							this.document = null;
							this.grants = [];
							this.monikers = new ObservableCollection;
							this.isValidMoniker = new Observable(!1);
							this.monikerKinds = new ObservableCollection;
							this.selectedMonikerKind = new Observable;
							this.selectedMoniker = new Observable;
							this.searchText = new Observable;
							this.enabled = new Observable(!0);
							this.searchText.syncTransform(this.selectedMonikerKind, function () {
								return ""
							});
							this.isValidMoniker.syncTransform(this.selectedMoniker, function (a) {
								return !!a
							});
							this.enabled.bind(this, function () {
								return g._setMonikerEnableds()
							});
							this._setMonikerKinds();
							if (this.app.site && this.app.site.isInitialized)
								this.onSiteInitialized();
							else
								this.app.event("SiteInitializedEvent").once(this, this.onSiteInitialized)
						}
						__extends(d, f);
						d.prototype.onSiteInitialized = function () {
							var e = this;
							this.app.site.documentStore.onInitialized().then(function () {
								e._allowPublicAccess = e.app.site.documentStore.hasPolicyGrant(function (e) {
										return e.globalId === b.PUBLIC && e.kind === a.GLOBAL_READER
									})
							})
						};
						d.prototype.loadById =
						function (a) {
							var b = this;
							return this.app.waitUntilSiteInitialized().then(function () {
								return b.app.site.documentStore.getById(a)
							}).then(function (a) {
								return b._updateModel(a)
							})["catch"](function (a) {
								b.app.trace.error("Error loading document: {0}".format(a), a);
								b.reset()
							})
						};
						d.prototype.addMoniker = function () {
							var a = this._getSelectedMoniker();
							if (a)
								if (this._monikerExists(a))
									this.app.trace.warning("GrantEditorViewModel: Could not add the grant as it already exists.");
								else {
									var b = this.addGrant(a.globalId, this.defaultGrantKind);
									this.monikers.addItem(new g.MonikerModel({
											grant : b,
											name : a.title,
											iconUri : this._isUserKind(this.selectedMonikerKind.get()) ? this.userIconUri : this.roleIconUri
										}));
									this._setMonikerEnableds()
								}
							else
								this.app.trace.error("GrantEditorViewModel: Could not find moniker with title {0}.".format(this.searchText.get()))
						};
						d.prototype.addGrant = function (a, b) {
							var e = {
								globalId : a,
								kind : b,
								assert : !0
							};
							this.grants.push(e);
							return e
						};
						d.prototype.updateMoniker = function (b, e) {
							b.grants.forEach(function (a) {
								a.assert = !1;
								a.revoke = !0
							});
							switch (e) {
							case a.READER:
							case a.WRITER:
								var f = h.firstOrDefault(b.grants, function (a) {
										return a.kind === e
									});
								f || (f = this.addGrant(b.id, e), b.addGrant(f));
								f.assert = !0;
								f.revoke = !1;
								this._globalGrantIds.some(function (a) {
									return a === b.id
								}) || b.isRevoked.set(!1);
								break;
							default:
								this._globalGrantIds.some(function (a) {
									return a === b.id
								}) || b.isRevoked.set(!0)
							}
						};
						d.prototype.searchMonikers = function (a) {
							var b = this,
							e;
							e = this._isUserKind(this.selectedMonikerKind.get()) ? c.searchUsers(a) : c.searchRoles(a);
							return this.app.waitUntilSiteInitialized().then(function () {
								return b.app.site.documentStore.perform(e)
							}).then(function (a) {
								return b._lastSearchResults =
									a.monikers
							})
						};
						d.prototype.validateSearchInput = function () {
							var a = this;
							this.selectedMoniker.get() && this.searchText.get() && this.isValidMoniker.set(this._lastSearchResults.some(function (b) {
									return b.title === a.searchText.get()
								}))
						};
						d.prototype.resetOptions = function () {
							this.searchText.set(null);
							this.selectedMoniker.set(null)
						};
						d.prototype.reset = function () {
							this._updateModel(null)
						};
						d.prototype._getSelectedMoniker = function () {
							var a = this;
							return this.selectedMoniker.get().title === this.searchText.get() ? this.selectedMoniker.get() :
							this._lastSearchResults.filter(function (b) {
								return b.title === a.searchText.get()
							})[0]
						};
						d.prototype._isUserKind = function (a) {
							return a === e.USER
						};
						d.prototype._updateModel = function (a) {
							this.grants = (this.document = a) && a.grants ? a.grants : [];
							this.resetOptions();
							this._updateMonikers(this.grants)
						};
						d.prototype._updateMonikers = function (a) {
							this.monikers.clear();
							for (var e = [], f = 0; f < this._globalGrantIds.length; f++) {
								var c = this._globalGrantIds[f];
								e.push(new g.MonikerModel({
										id : c,
										name : this.app.getResource(this.libraryId,
											"language-grant-editor-global-grant-name-{0}".format(c)),
										iconUri : this.roleIconUri,
										isGlobal : !0,
										isPublic : c === b.PUBLIC
									}))
							}
							for (f = 0; f < this._supportedGrantKinds.length; f++)
								for (c = 0; c < a.length; c++) {
									var d = a[c];
									if (d.kind === this._supportedGrantKinds[f]) {
										var l = h.firstOrDefault(e, function (a) {
												return a.id === d.globalId
											});
										l ? l.addGrant(d) : e.push(new g.MonikerModel({
												grant : d,
												iconUri : this._isUserKind(d.subject.kind) ? this.userIconUri : this.roleIconUri
											}))
									}
								}
							this._allowPublicAccess || (e = e.filter(function (a) {
										return !a.isPublic
									}));
							this.monikers.addItems(e);
							this._setMonikerEnableds()
						};
						d.prototype._monikerExists = function (a) {
							if (!a)
								return !1;
							var b = this.monikers.getItems();
							if (b.some(function (b) {
									return b.id === a.globalId
								}))
								return !0;
							if (a.aliases)
								for (var e = 0; e < a.aliases.length; e++) {
									var f = a.aliases[e];
									if (b.some(function (a) {
											return a.id === f
										}))
										return !0
								}
							return !1
						};
						d.prototype._setMonikerKinds = function () {
							this.monikerKinds.addItems([{
										kind : e.USER,
										displayName : this.app.getResource(this.libraryId, "language-grant-editor-moniker-type-user")
									}, {
										kind : e.ROLE,
										displayName : this.app.getResource(this.libraryId, "language-grant-editor-moniker-type-role")
									}
								]);
							this.selectedMonikerKind.set(this.monikerKinds.getAt(0).kind)
						};
						d.prototype._setMonikerEnableds = function () {
							for (var a = this.enabled.get(), b = 0, e = this.monikers.length(); b < e; b++)
								this.monikers.getAt(b).enabled.set(a)
						};
						return d
					}
					(d.framework.ui.ViewModelBase);
					g.GrantEditorViewModel = f
				})(h.documents || (h.documents = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b) {
							this.name = new Observable;
							this.linkUrl = new Observable;
							b.kind && (this.kind = b.kind);
							b.name && this.name.set(b.name)
						}
						c.prototype.reset = function () {
							this.link = this.grant = null;
							this.linkUrl.set(null)
						};
						return c
					}
					();
					d.GuestLinkModel = h
				})(d.documents || (d.documents = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					function h(a, b, c) {
						var d = a + "/" + b;
						e.hasOwnProperty(a) && (d += "/submitjob");
						return esri.request({
							callbackParamName : "callback",
							content : dojo.mixin({
								f : "json"
							}, c),
							handleAs : "json",
							url : d
						}).then(function (d) {
							return !d.jobStatus && d.executionType && d.parameters ? (e[a] = !0, h(a, b, c)) : d
						})
					}
					function c(b, e, d, g) {
						void 0 === g && (g = 1E3);
						switch (d.jobStatus) {
						case esri.tasks.JobInfo.STATUS_CANCELLED:
						case esri.tasks.JobInfo.STATUS_DELETED:
						case esri.tasks.JobInfo.STATUS_FAILED:
						case esri.tasks.JobInfo.STATUS_TIMED_OUT:
							return Promise.reject(a(d));
						case esri.tasks.JobInfo.STATUS_SUCCEEDED:
							return Promise.resolve(d);
						default:
							return Promise.delay(g).then(function () {
								return esri.request({
									callbackParamName : "callback",
									content : {
										f : "json"
									},
									handleAs : "json",
									url : b + "/" + e + "/jobs/" + d.jobId
								})
							}).then(function (a) {
								return c(b, e, a, Math.min(2 * g, 6E4))
							})
						}
					}
					function b(a, b, e, c) {
						return esri.request({
							callbackParamName : "callback",
							content : {
								f : "json"
							},
							handleAs : "json",
							url : a + "/" + b + "/jobs/" + e + "/" + c
						})
					}
					function a(a) {
						if (!a || !a.messages)
							return "";
						a = a.messages.filter(function (a) {
								return a.type ===
								esri.tasks.GPMessage.TYPE_ERROR
							});
						var b = a.filter(function (a) {
								return /^ERROR \d+:/.test(a.description)
							});
						0 < b.length && (a = b);
						return a.reduce(function (a, b) {
							return b.description.length > a.length ? b.description : a
						}, "")
					}
					var e = {};
					d.exportTiles = function (a, e) {
						for (var d = "string" === typeof a ? a : a.url; "/" === d[d.length - 1]; )
							d = d.substring(0, d.length - 1);
						return h(d, "exportTiles", e).then(function (a) {
							return c(d, "exportTiles", a)
						}).then(function (a) {
							return b(d, "exportTiles", a.jobId, a.results.out_service_url.paramUrl)
						}).then(function (a) {
							return esri.request({
								callbackParamName : "callback",
								content : {
									f : "json"
								},
								handleAs : "json",
								url : a.value
							})
						}).then(function (a) {
							return a.files
						})
					};
					d.estimateExportTilesSize = function (a, e) {
						for (var d = "string" === typeof a ? a : a.url; "/" === d[d.length - 1]; )
							d = d.substring(0, d.length - 1);
						return h(d, "estimateExportTilesSize", e).then(function (a) {
							return c(d, "estimateExportTilesSize", a)
						}).then(function (a) {
							return b(d, "estimateExportTilesSize", a.jobId, a.results.out_service_url.paramUrl)
						}).then(function (a) {
							return "string" === typeof a.value ? {
								totalSize : +a.value,
								totalTilesToExport : null
							}
							 :
							a.value
						})
					}
				})(d.ExportTilesUtils || (d.ExportTilesUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					function h(a, b) {
						void 0 === b && (b = {});
						html4.ATTRIBS["a::target"] = 0;
						b.allowFrames && (html4.ATTRIBS["iframe::src"] = 1);
						return html.sanitize(a, function (a, d, g, h) {
							if (b.uriTransformer) {
								a = a.toString();
								if ("MARKUP" === h.TYPE)
									d = {
										uri : a,
										type : "a" === h.XML_TAG && "href" === h.XML_ATTR ? c.NavigableLink : c.Markup,
										tag : h.XML_TAG,
										attribute : h.XML_ATTR
									};
								else if ("CSS" === h.TYPE)
									d = {
										uri : a,
										type : c.Css,
										property : h.CSS_PROP
									};
								else
									throw Error("Unknown URI hint type: '" + h.TYPE +
										"'");
								return b.uriTransformer(a, d)
							}
							return ""
						})
					}
					d.sanitize = h;
					d.stripHtml = function (a) {
						a = String.unescapeHtml(a);
						a = h(a);
						var b = document.createElement("div");
						b.innerHTML = a;
						return b.innerText || b.textContent
					};
					(function (a) {
						a[a.Markup = 0] = "Markup";
						a[a.Css = 1] = "Css";
						a[a.NavigableLink = 2] = "NavigableLink"
					})(d.UriType || (d.UriType = {}));
					var c = d.UriType,
					b = function () {
						function a(a, b) {
							void 0 === b && (b = {});
							this.sanitize(a, b)
						}
						a.prototype.sanitize = function (a, b) {
							void 0 === b && (b = {});
							this._unsafeHtml = a;
							this._safeHtml = h(this._unsafeHtml,
									b)
						};
						Object.defineProperty(a.prototype, "unsafeHtml", {
							get : function () {
								return this._unsafeHtml
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(a.prototype, "safeHtml", {
							get : function () {
								return this._safeHtml
							},
							enumerable : !0,
							configurable : !0
						});
						return a
					}
					();
					d.UnsafeHtml = b;
					(function (a) {
						function b(a) {
							var e = a.match(/^\s*data:(.*?),.+/i);
							if (!e)
								return null;
							for (var e = e[1], c = e.split(";"), d, g, h, m = 0; m < c.length; m++) {
								var k = c[m];
								if (/^charset=(.+)$/i.test(k)) {
									if (g)
										return null;
									g = k
								} else if (/^base64$/i.test(k)) {
									if (h)
										return null;
									h = k
								} else if (/^.+$/i.test(k)) {
									if (d)
										return null;
									d = k
								}
							}
							c = a.indexOf(",") + 1;
							return {
								uri : a,
								meta : e,
								mediaType : d,
								charset : g,
								extension : h,
								payloadIndex : c
							}
						}
						a.dataUriMediaTypeWhitelist = ["image/jpeg", "image/png", "image/gif", "image/svg+xml"];
						a.parseDataUri = b;
						a.isDataUriSafe = function (f) {
							f = b(f);
							if (!f)
								return !1;
							var c = f.mediaType;
							c || (c = "text/plain");
							return a.dataUriMediaTypeWhitelist.some(function (a) {
								return c.toLowerCase() === a.toLowerCase()
							}) ? !0 : !1
						}
					})(d.DataUri || (d.DataUri = {}))
				})(d.FilterUtils || (d.FilterUtils = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					(function (b) {
						b[b.BOTTOM_LEFT = 0] = "BOTTOM_LEFT";
						b[b.MIDDLE = 1] = "MIDDLE";
						b[b.CALLOUT = 2] = "CALLOUT"
					})(g.HighlightedLabelAnchor || (g.HighlightedLabelAnchor = {}));
					var m = g.HighlightedLabelAnchor,
					c = function () {
						function b(a, b) {
							this.textGraphics = [];
							this.textSymbols = [];
							this._padding = this._width = this._height = 0;
							this._calloutSizeWidthFraction = 5;
							this._tagHeightPercentage = 0.6;
							if (!b || !this._processConfig(a))
								throw Error("HighlightedLabelGraphic: Initialization failed.");
							this.app = b;
							this.graphicsLayer = d.GraphicUtils.getGraphicsLayer(this._config.layerId, !0, this.app);
							a._isRestoringState || this._executeSetupRoutine()
						}
						b.prototype.getTextFontFamily = function () {
							return this.textSymbols && 0 < this.textSymbols.length ? this.textSymbols[0].font.family : this._config.fontFamily
						};
						b.prototype.getTextFontSize = function () {
							return this.textSymbols && 0 < this.textSymbols.length ? this.textSymbols[0].font.size + "px" : this._config.fontSize
						};
						b.prototype.getWidth = function () {
							return this._width
						};
						b.prototype.getTotalWidth =
						function () {
							return this._width + this._padding
						};
						b.prototype.getHeight = function () {
							return this._height
						};
						b.prototype.getTotalHeight = function () {
							return this._height + this._padding
						};
						b.prototype.getMapPoint = function () {
							return this._config.mapPoint
						};
						b.prototype.getConfig = function () {
							return this._config
						};
						b.prototype.addToLayer = function (a) {
							var b = this;
							void 0 === a && (a = !0);
							d.GraphicUtils.addGraphicToLayer(this.highlightGraphic, this._config.layerId, this.app);
							d.GraphicUtils.addGraphicToLayer(this.highlightIdTagGraphic,
								this._config.layerId, this.app);
							this.textGraphics.forEach(function (a) {
								d.GraphicUtils.addGraphicToLayer(a, b._config.layerId, b.app)
							});
							a ? this.show() : this.hide()
						};
						b.prototype.removeFromLayer = function (a) {
							this.hide();
							var b = function (a) {
								var b = a.getLayer();
								b && b.remove(a)
							};
							this.textGraphics && 0 < this.textGraphics.length && (this.textGraphics.forEach(function (a) {
									return b(a)
								}), a && (this.textGraphics.length = 0, this.textSymbols.length = 0));
							this.highlightIdTagGraphic && (b(this.highlightIdTagGraphic), a && (this.highlightIdTagSymbol =
										this.highlightIdTagGraphic = null));
							this.highlightGraphic && (b(this.highlightGraphic), a && (this.highlightIdTagSymbol = this.highlightGraphic = null))
						};
						b.prototype.isVisible = function () {
							return this.highlightGraphic ? this.highlightGraphic.visible && (!this._config.calloutWithIdTag || this.highlightIdTagGraphic.visible) && 0 < this.textGraphics.filter(function (a) {
								return a.visible
							}).length : !1
						};
						b.prototype.show = function () {
							this.highlightGraphic && this.highlightGraphic.show();
							this.highlightIdTagGraphic && this.highlightIdTagGraphic.show();
							this.textGraphics && 0 < this.textGraphics.length && this.textGraphics.forEach(function (a) {
								a.show()
							});
							return this
						};
						b.prototype.hide = function () {
							this.textGraphics && 0 < this.textGraphics.length && this.textGraphics.forEach(function (a) {
								a.hide()
							});
							this.highlightIdTagGraphic && this.highlightIdTagGraphic.hide();
							this.highlightGraphic && this.highlightGraphic.hide();
							return this
						};
						b.prototype.update = function (a, b) {
							if (this.highlightGraphic && this.textGraphics.length) {
								var f = this.isVisible(),
								c = this._key ? this.highlightGraphic[this._key] :
									null;
								this._config.text = b || "";
								this._config.mapPoint = a && a instanceof esri.geometry.Point ? a : this._config.mapPoint;
								this.removeFromLayer(!0);
								this._executeSetupRoutine();
								this.addToLayer(f);
								c && this.assignGraphicIdentifierKey(this._key, c)
							}
						};
						b.prototype.refresh = function (a) {
							if (this.highlightGraphic && this.textGraphics.length) {
								var b = this.isVisible(),
								f = this._key ? this.highlightGraphic[this._key] : null;
								this._config.text = a || "";
								this.removeFromLayer(!0);
								this._executeSetupRoutine();
								this.addToLayer(b);
								f && this.assignGraphicIdentifierKey(this._key,
									f)
							}
						};
						b.prototype.moveToTop = function () {
							var a = this.highlightGraphic.getDojoShape();
							a && a.moveToFront();
							this.highlightIdTagGraphic && (a = this.highlightIdTagGraphic.getDojoShape()) && a.moveToFront();
							for (var b = 0; b < this.textGraphics.length; b++)
								(a = this.textGraphics[b].getDojoShape()) && a.moveToFront()
						};
						b.prototype.assignGraphicIdentifierKey = function (a, b) {
							this._key = a;
							this.highlightGraphic[a] = b;
							this.highlightIdTagGraphic && (this.highlightIdTagGraphic[a] = b);
							this.textGraphics.forEach(function (f) {
								f[a] = b
							})
						};
						b.prototype.updateIdTagText =
						function (a) {
							if (a && this._config.calloutWithIdTag) {
								this._config.idTagText = a;
								var b = this.textGraphics[this.textGraphics.length - 1];
								b && b.symbol && (b.symbol.setText(a), b.setSymbol(b.symbol))
							}
						};
						b.prototype.setHighlightColor = function (a) {
							a && a instanceof esri.Color && this.highlightSymbol && (this._config.highlightColor = a, this.highlightSymbol && this.highlightGraphic && (this.highlightSymbol.setColor(a), this.highlightGraphic.setSymbol(this.highlightSymbol)));
							if (this._config.calloutWithIdTag) {
								var b = this.textGraphics[this.textGraphics.length -
										1];
								this.highlightIdTagSymbol && this.highlightIdTagGraphic && (this.highlightIdTagSymbol.outline.setColor(a), this.highlightIdTagGraphic.setSymbol(this.highlightIdTagSymbol));
								b && (b.symbol.setColor(a), b.setSymbol(b.symbol))
							}
						};
						b.prototype.setTextColor = function (a) {
							if (a && a instanceof esri.Color) {
								this._config.textColor = a;
								var b = this.textGraphics.length;
								this._config.calloutWithIdTag && (this.highlightIdTagSymbol && this.highlightIdTagGraphic && (this.highlightIdTagSymbol.setColor(a), this.highlightIdTagGraphic.setSymbol(this.highlightIdTagSymbol)),
									b--);
								for (var f = 0; f < b; f++) {
									var c = this.textGraphics[f];
									c && (c.symbol.setColor(a), c.setSymbol(c.symbol))
								}
							}
						};
						b.prototype.exportState = function (a) {
							var b = a.project.convert;
							a = this.getConfig();
							return {
								highlightGraphic : b.fromEsriGraphic(this.highlightGraphic),
								highlightSymbol : b.fromEsriSymbol(this.highlightSymbol),
								textGraphics : this.textGraphics.map(function (a) {
									return b.fromEsriGraphic(a)
								}),
								textSymbols : this.textSymbols.map(function (a) {
									return b.fromEsriSymbol(a)
								}),
								layerId : a.layerId,
								mapPoint : b.fromEsriGeometry(this.getMapPoint()),
								labelXoffset : a.labelXoffset,
								labelYoffset : a.labelYoffset,
								text : a.text,
								fontFamily : a.fontFamily,
								fontSize : a.fontSize,
								cornerRadius : a.cornerRadius,
								angle : a.angle,
								anchor : a.anchor,
								textColor : b.fromEsriColor(a.textColor),
								highlightColor : b.fromEsriColor(a.highlightColor),
								highlightOutlineSymbol : b.fromEsriSymbol(a.highlightOutlineSymbol)
							}
						};
						b.fromExportedState = function (a, e, f) {
							return Promise["try"](function () {
								if (!a || !a.highlightGraphic)
									throw Error("HighlightedLabelGraphic.fromExportedState: Invalid state.");
								if (!e)
									throw Error('HighlightedLabelGraphic.fromExportedState: Parameter "app" is required.');
								var c = e.project.convert,
								d = {
									highlightGraphic : c.toEsriGraphic(a.highlightGraphic),
									textGraphics : Promise.map(a.textGraphics, function (a) {
										return c.toEsriGraphic(a)
									})
								};
								return Promise.props(d).then(function (d) {
									var g = {
										layerId : a.layerId,
										mapPoint : c.toEsriGeometry(a.mapPoint),
										text : a.text,
										labelXoffset : a.labelXoffset,
										labelYoffset : a.labelYoffset,
										fontFamily : a.fontFamily,
										fontSize : a.fontSize,
										cornerRadius : a.cornerRadius,
										angle : a.angle,
										anchor : a.anchor,
										textColor : c.toEsriColor(a.textColor),
										highlightColor : c.toEsriColor(a.highlightColor),
										highlightOutlineSymbol : c.toEsriSymbol(a.highlightOutlineSymbol),
										_isRestoringState : !0
									};
									f = f || b.prototype;
									var n = Object.create(f);
									n.constructor.call(n, g, e);
									n.initializeHighlightDimensions();
									n.highlightGraphic = d.highlightGraphic;
									n.highlightSymbol = c.toEsriSymbol(a.highlightSymbol);
									n.textGraphics = d.textGraphics;
									n.textSymbols = a.textSymbols.map(function (a) {
											return c.toEsriSymbol(a)
										});
									return n
								})
							})
						};
						b.prototype._executeSetupRoutine = function () {
							this.initializeHighlightDimensions();
							this.initializeHighlightGraphic();
							this.initializeHighlighteIdTagGraphic();
							this.initializeTextGraphicsAndSymbols()
						};
						b.prototype.setHighlightAnchor = function () {
							switch (this._config.anchor) {
							case m.BOTTOM_LEFT:
								this.highlightSymbol.setOffset(this.getTotalWidth() / 2, this.getTotalHeight() / 2);
								break;
							case m.CALLOUT:
								this.highlightSymbol.setOffset(0, this.getTotalHeight() / 2 + this._config.calloutPixelSize / 4);
								break;
							default:
								this.highlightSymbol.setOffset(0, 0)
							}
							this.highlightSymbol.setOffset(this.highlightSymbol.xoffset + this._config.labelXoffset, this.highlightSymbol.yoffset +
								this._config.labelYoffset)
						};
						b.prototype.setTextAnchor = function (a, b) {
							switch (this._config.anchor) {
							case m.MIDDLE:
								this.textSymbols[a].setOffset(0, b);
								break;
							case m.BOTTOM_LEFT:
								this.textSymbols[a].setOffset(this.getTotalWidth() / 2, b + this.getTotalHeight() / 2);
								break;
							case m.CALLOUT:
								this.textSymbols[a].setOffset(0, b + this.getTotalHeight() / 2 + this._config.calloutPixelSize / 2)
							}
						};
						b.prototype.initializeHighlightDimensions = function () {
							var a = d.highlightedLabel.HighlightedLabelUtils.getLabelSize(this._config.text, this._config.fontFamily,
									this._config.fontSize, this._config.layerId),
							b = 0.5 * a.height,
							f = this._config.calloutWithIdTag ? a.height + b : 0;
							this._height = a.height;
							this._width = a.width + f;
							this._padding = b;
							this._config.calloutPixelSize = this._config.calloutPixelSize || Math.floor(this._width / this._calloutSizeWidthFraction)
						};
						b.prototype.initializeHighlightGraphic = function () {
							this.highlightGraphic = new esri.Graphic;
							this.highlightGraphic.highlightedTextLabel = !0;
							this.highlightSymbol = new esri.symbol.SimpleMarkerSymbol;
							this.highlightGraphic.setGeometry(this._config.mapPoint);
							this.configureHighlightSymbol(this._config.highlightColor, this._config.highlightOutlineSymbol, this._config.fontSize)
						};
						b.prototype.initializeHighlighteIdTagGraphic = function () {
							this._config.calloutWithIdTag && (this.highlightIdTagGraphic = new esri.Graphic, this.highlightIdTagSymbol = new esri.symbol.SimpleMarkerSymbol, this.highlightIdTagGraphic.setGeometry(this._config.mapPoint), this.configureHighlightIdTagSymbol(this._config.textColor, this._config.fontSize))
						};
						b.prototype.configureHighlightSymbol = function (a,
							b, f) {
							this.setHighlightAnchor();
							this.highlightSymbol.setStyle("STYLE_PATH");
							var c = d.highlightedLabel.HighlightedLabelUtils.generateSvgHighlightLabelPath(this.getTotalWidth(), this.getTotalHeight(), this._config.cornerRadius, this._config.calloutWithIdTag, this._config.calloutPixelSize);
							this.highlightSymbol.setPath(c);
							this.highlightSymbol.setColor(a);
							this.highlightSymbol.setOutline(b);
							this.highlightSymbol.setAngle(this._config.angle);
							this.highlightSymbol.setSize(f);
							this.highlightGraphic.setSymbol(this.highlightSymbol)
						};
						b.prototype.configureHighlightIdTagSymbol = function (a, b) {
							var f =  - (this.getTotalWidth() / 2 - this.getTotalHeight() / 2),
							c = this.getTotalHeight() / 2 + this._config.calloutPixelSize / 2;
							this.highlightIdTagSymbol.setStyle("STYLE_PATH");
							this.highlightIdTagSymbol.setPath(g.HighlightedLabelUtils.generateSvgCirclePath(this.getTotalHeight() * this._tagHeightPercentage / 2));
							this.highlightIdTagSymbol.setColor(a);
							this.highlightIdTagSymbol.outline && this.highlightIdTagSymbol.outline.setColor(a);
							this.highlightIdTagSymbol.setOffset(f +
								this._config.labelXoffset, c + this._config.labelYoffset);
							this.highlightIdTagSymbol.setSize(this.getTotalHeight() * this._tagHeightPercentage);
							this.highlightIdTagGraphic.setSymbol(this.highlightIdTagSymbol)
						};
						b.prototype.initializeTextGraphicsAndSymbols = function () {
							if (this._config.text) {
								var a = d.highlightedLabel.HighlightedLabelUtils.getTextLines(this._config.text);
								if (a && a.length && 0 !== a.length) {
									var b = a.length,
									f = new esri.symbol.Font;
									f.setSize(this._config.fontSize);
									f.setFamily(this._config.fontFamily);
									var c =
										this.getHeight() / b,
									g = Math.abs(f.size - c),
									p = this.getHeight() / 2 / c;
									this.textGraphics = [];
									this.textSymbols = [];
									for (var m = 0; a && 0 < a.length && m < a.length; m++) {
										this.textGraphics[m] || (this.textGraphics[m] = new esri.Graphic);
										this.textSymbols[m] || (this.textSymbols[m] = new esri.symbol.TextSymbol(""));
										this.textGraphics[m].geometry !== this._config.mapPoint && this.textGraphics[m].setGeometry(this._config.mapPoint);
										this.configureTextSymbol(m, a[m], this._config.textColor, f, this._config.angle, (p - (m + 1)) * c + g);
										if (1 === b) {
											this.textSymbols[m].setHorizontalAlignment(esri.symbol.TextSymbol.ALIGN_MIDDLE);
											var k = Math.PI / 180 * this._config.angle;
											this.textSymbols[m].setOffset( - (c / 2 / 2 * Math.sin(k)), -Math.abs(c / 2 / 2 * Math.cos(k)));
											k = {
												customVerticalAlignment : "middle",
												numberOfLines : 1
											}
										} else
											this.textSymbols[m].setHorizontalAlignment(esri.symbol.TextSymbol.ALIGN_START), this.textSymbols[m].setVerticalAlignment(esri.symbol.TextSymbol.ALIGN_START), k = {
												customVerticalAlignment : "middle",
												numberOfLines : b
											};
										this.textGraphics[m].setAttributes(k);
										k = this._config.calloutWithIdTag ? this.getTotalHeight() / 2 : 0;
										this.textSymbols[m].setOffset(this.textSymbols[m].xoffset +
											this._config.labelXoffset + k, this.textSymbols[m].yoffset + this._config.labelYoffset);
										this.textGraphics[m].setSymbol(this.textSymbols[m])
									}
									this._config.calloutWithIdTag && (a = new esri.symbol.Font, a.setSize(this._config.fontSize), a.setSize(Math.floor(1.25 * a.size)), a.setFamily(this._config.fontFamily), a.setWeight(esri.symbol.Font.WEIGHT_BOLD), f = new esri.Graphic, f.setGeometry(this._config.mapPoint), this.textGraphics.push(f), c = new esri.symbol.TextSymbol(this._config.idTagText), this.textSymbols.push(c), this.configureTextSymbol(b,
											this._config.idTagText, this._config.highlightColor, a, 0, 0), b =  - (this.getTotalWidth() / 2 - this.getTotalHeight() / 2), c.setOffset(c.xoffset + b, c.yoffset +  - (a.size / 3)), f.setSymbol(c))
								}
							}
						};
						b.prototype.configureTextSymbol = function (a, b, f, c, d, g) {
							this.textSymbols && a < this.textSymbols.length && (this.textSymbols[a].setText(b), this.textSymbols[a].setFont(c), this.textSymbols[a].setColor(f), this.textSymbols[a].setAngle(d), this.setTextAnchor(a, g))
						};
						b.prototype._processConfig = function (a) {
							if (!a || !a.layerId || !a.mapPoint)
								return !1;
							a.calloutWithIdTag = void 0 == a.calloutWithIdTag ? !1 : !!a.calloutWithIdTag;
							a.idTagText = a.idTagText || "";
							a.calloutPixelSize = a.calloutPixelSize || 0;
							a.labelXoffset = a.calloutWithIdTag ? 0 : a.labelXoffset || 0;
							a.labelYoffset = a.calloutWithIdTag ? 0 : a.labelYoffset || 0;
							a.layerId = a.layerId;
							a.mapPoint = a.mapPoint;
							a.text = a.text || "";
							a.fontFamily = a.fontFamily || "Arial";
							a.fontSize = a.fontSize || "12px";
							a.cornerRadius = void 0 == a.cornerRadius ? 5 : a.cornerRadius;
							a.angle = a.calloutWithIdTag ? 0 : a.angle || 0;
							a.anchor = a.calloutWithIdTag ? m.CALLOUT :
								void 0 != a.anchor ? a.anchor : m.MIDDLE;
							a.textColor = a.textColor && a.textColor instanceof esri.Color ? a.textColor : new esri.Color("white");
							a.highlightColor = a.highlightColor && a.highlightColor instanceof esri.Color ? a.highlightColor : new esri.Color("black");
							a.highlightOutlineSymbol = a.highlightOutlineSymbol && a.highlightOutlineSymbol instanceof esri.symbol.SimpleLineSymbol ? a.highlightOutlineSymbol : new esri.symbol.SimpleLineSymbol;
							this._config = a;
							return !0
						};
						return b
					}
					();
					g.HighlightedLabelGraphic = c
				})(d.highlightedLabel ||
					(d.highlightedLabel = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					g.discoverFeatureServices = function (a) {
						return new Promise(function (b, f) {
							esri.request({
								url : a,
								content : {
									f : "json"
								},
								handleAs : "json"
							}).then(function (c) {
								if ("layers" in c) {
									var d = [],
									g = 0;
									for (c = c.layers; g < c.length; g++) {
										var h = c[g];
										h.subLayerIds || d.push(a + "/" + h.id)
									}
									b(d)
								} else
									"fields" in c ? b([a]) : f(Error("Unknown response type from url (" + a + ")."))
							}, f)
						})
					};
					g.buildFeatureLayerService = function (a) {
						var b = new d.essentials.FeatureLayerService;
						b._createFrom({
							id : d.framework.utils.alphaNumericToken(),
							displayName : d.framework.utils.alphaNumericToken(),
							serviceType : d.essentials.MapServiceType.FEATURE,
							serviceFunction : d.essentials.MapServiceFunction.OPERATIONAL,
							connectionString : a
						});
						b.serviceUrl = a;
						b.outFields = "*";
						b._createServiceLayer();
						return new Promise(function (a, c) {
							b.serviceLayer.on("load", function (c) {
								b.displayName = b.serviceLayer.name;
								c = new d.essentials.Layer;
								c._createFrom(b.serviceLayer);
								c.id = b.serviceLayer.layerId.toString();
								c.type = d.essentials.LayerType.FEATURE_LAYER;
								c.mapService = b;
								b.layers.push(c);
								a(b)
							})
						})
					};
					g.buildKmlService = function (a, b) {
						void 0 === b && (b = {});
						var f = new d.essentials.KmlService;
						b = $.extend({
								id : d.framework.utils.alphaNumericToken(),
								serviceType : d.essentials.MapServiceType.KML,
								serviceFunction : d.essentials.MapServiceFunction.OPERATIONAL,
								serviceUrl : a,
								drawingBehavior : d.essentials.DrawingBehavior.KML_SERVICE,
								connectionString : a
							}, b);
						f._createFrom(b);
						f._createServiceLayer();
						return new Promise(function (a, b) {
							f.serviceLayer.on("load", function (b) {
								a(f)
							})
						})
					};
					g.buildLocalFeatureLayerService = function (a,
						e) {
						void 0 === e && (e = {});
						var f = new c;
						e = $.extend({
								id : d.framework.utils.alphaNumericToken() + ":Local",
								displayName : a.layerDefinition.name,
								serviceType : d.essentials.MapServiceType.FEATURE,
								serviceFunction : d.essentials.MapServiceFunction.OPERATIONAL,
								connectionString : f.url
							}, e);
						f._createFrom(e);
						var l = f.serviceLayer = new m(a);
						l.id = f.id;
						l.layerId = 0;
						l.name = a.layerDefinition.name;
						l.graphics.length && (l.fullExtent = esri.graphicsExtent(l.graphics));
						l.setEditable(!1);
						var g = new b;
						g._createFrom(l);
						g.id = l.layerId.toString();
						g.primaryKeyField = g.getFieldByName(l.objectIdField);
						g.mapService = f;
						g.searchable = !0;
						g.type = d.essentials.LayerType.FEATURE_LAYER;
						f.layers.push(g);
						return Promise.resolve(f)
					};
					var m = function (a) {
						function b(e) {
							a.call(this, e, {
								mode : esri.layers.FeatureLayer.MODE_SNAPSHOT
							})
						}
						__extends(b, a);
						b.prototype.queryFeatures = function (b, e, c) {
							var d = new esri.tasks.Query;
							b.hasOwnProperty("geometry") && (d.geometry = "extent" !== b.geometry.type ? b.geometry.getExtent() : b.geometry);
							for (var g = ["num", "objectIds", "returnGeometry", "spatialRelationship"],
								m = 0; m < g.length; m++) {
								var k = g[m];
								d[k] = b[k]
							}
							return a.prototype.queryFeatures.call(this, d, e, c).then(function (a) {
								return Promise.all(a.features.map(function (a) {
										return h.GeometryUtils.intersects(b.geometry, a.geometry)
									})).then(function (b) {
									return a.features.filter(function (a, e) {
										return !!b[e]
									})
								}).then(function (b) {
									a.features = b;
									return a
								})
							})
						};
						return b
					}
					(esri.layers.FeatureLayer);
					g.LocalFeatureLayer = m;
					var c = function (a) {
						function b() {
							a.apply(this, arguments)
						}
						__extends(b, a);
						return b
					}
					(d.essentials.FeatureLayerService);
					g.LocalFeatureLayerService = c;
					var b = function (a) {
						function b() {
							a.apply(this, arguments)
						}
						__extends(b, a);
						return b
					}
					(d.essentials.Layer);
					g.LocalLayer = b
				})(h.LayerIntegrationUtils || (h.LayerIntegrationUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype.selectAllLayers = function (a, b, f) {
							this.viewModel.layerSelector.enableAllLayers()
						};
						b.prototype.clearAllLayers = function (a, b, f) {
							this.viewModel.layerSelector.disableAllLayers()
						};
						b.prototype.handleExpanderClick = function (a, b, f) {
							f.isExpanded.set(!f.isExpanded.get())
						};
						return b
					}
					(d.framework.ui.ViewBase);
					g.LayerSelectorViewBase = h
				})(h.layerSelector || (h.layerSelector = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g;
				(function (m) {
					var c = function (b) {
						function a(a, f) {
							b.call(this, a, f);
							this.selectAllButtonText = new Observable(this.app.getResource(f, "language-layer-selector-default-select-all-text"));
							this.clearAllButtonText = new Observable(this.app.getResource(f, "language-layer-selector-default-clear-all-text"));
							this.selectAllButtonTitle = new Observable(this.app.getResource(f, "language-layer-selector-default-select-all-tooltip"));
							this.clearAllButtonTitle = new Observable(this.app.getResource(f,
										"language-layer-selector-default-clear-all-tooltip"));
							this.items = new ObservableCollection([])
						}
						__extends(a, b);
						a.prototype.initialize = function (a) {
							b.prototype.initialize.call(this, a);
							if (this.app.map && this.app.site.isInitialized)
								this._setupLayerSelector();
							else
								this.app.event("SiteInitializedEvent").once(this, this._setupLayerSelector)
						};
						a.prototype.onInitialized = function (a) {};
						a.prototype.onLayerSelectorFolderItemCreated = function (a) {};
						a.prototype.onLayerSelectorLayerItemCreated = function (a) {};
						a.prototype.onLayerSelectorServiceLayerItemCreated =
						function (a) {};
						a.prototype.filter = function (a) {
							return !0
						};
						a.prototype.handleLayerStateChange = function (a) {};
						a.prototype.handleAllLayersEnabled = function () {};
						a.prototype.handleAllLayersDisabled = function () {};
						a.prototype.getAllItems = function () {
							return a._expandItems(this.items.get())
						};
						a._expandItems = function (b) {
							return b.concat.apply(b, b.map(function (b) {
									return a._expandItems(b.items.get())
								}))
						};
						a.prototype._setupLayerSelector = function () {
							var a = this;
							this.appInfo = h.gis.AppInfo.fromGeocortexApp(this.app);
							this.layerSelector =
								new g.LayerSelector(this.appInfo, {
									onInitializedHandler : function (b) {
										return a.onInitialized(b)
									},
									layerFilter : function (b) {
										return a.filter(b)
									},
									layerStateChangeHandler : function (b) {
										return a.handleLayerStateChange(b)
									},
									enableAllLayersHandler : function () {
										return a.handleAllLayersEnabled()
									},
									disableAllLayersHandler : function () {
										return a.handleAllLayersDisabled()
									},
									onLayerSelectorFolderItemCreated : function (b) {
										return a.onLayerSelectorFolderItemCreated(b)
									},
									onLayerSelectorLayerItemCreated : function (b) {
										return a.onLayerSelectorLayerItemCreated(b)
									},
									onLayerSelectorServiceLayerItemCreated : function (b) {
										return a.onLayerSelectorServiceLayerItemCreated(b)
									}
								});
							this._subscribeEvents();
							this.items.sync(this.layerSelector.items);
							this.items.pulse()
						};
						a.prototype._subscribeEvents = function () {
							this.app.event("MapServiceAddedEvent").subscribe(this, this._handleMapServicesAdded);
							this.app.event("MapServiceRemovedEvent").subscribe(this, this._handleMapServiceRemoved);
							this.app.event("MapServiceLayersChangedWithResultEvent").subscribe(this, this._handleMapServiceLayersChanged)
						};
						a.prototype._handleMapServicesAdded = function (a) {
							this.layerSelector.addUserAddedServiceLayer(a)
						};
						a.prototype._handleMapServiceRemoved = function (a) {
							this.layerSelector.removeServiceLayer(a)
						};
						a.prototype._handleMapServiceLayersChanged = function (a) {
							a && this.layerSelector.updateServiceLayer(a.mapService, a.newItems, a.oldItems)
						};
						return a
					}
					(d.framework.ui.ViewModelBase);
					m.LayerSelectorViewModelBase = c
				})(g = h.layerSelector || (h.layerSelector = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (h) {
				(function (g) {
					var m = function () {
						function c(b) {
							var a = this;
							this._numberValidator = new h.validation.NumberValidator;
							this._xssHtmlValidator = new h.validation.XssHtmlValidator;
							this.object = function (b) {
								if (!b || "object" !== typeof b)
									return !0;
								switch (b[h.webMap.CONVERSION_TYPE_PROPERTY]) {
								case h.webMap.ConversionType.GCX_MAP_SERVICE:
								case h.webMap.ConversionType.ESRI_LAYER:
									return function () {
										return a.serviceLayer
									};
								case h.webMap.ConversionType.GCX_LAYER:
									return function () {
										return a.layer
									};
								case h.webMap.ConversionType.GCX_FEATURE_SET:
								case h.webMap.ConversionType.ESRI_FEATURE_SET:
									return function () {
										return a.featureSet
									};
								case h.webMap.ConversionType.GCX_FEATURE:
								case h.webMap.ConversionType.ESRI_GRAPHIC:
									return function () {
										return a.feature
									};
								case h.webMap.ConversionType.ESRI_GEOMETRY:
									return a.geometry;
								case h.webMap.ConversionType.ESRI_SYMBOL:
									return a.symbol;
								case h.webMap.ConversionType.ESRI_RENDERER:
									return a.renderer;
								case h.webMap.ConversionType.ESRI_SPATIAL_REFERENCE:
									return a.spatialReference
								}
								var f = {},
								c = 0;
								for (b = Object.keys(b); c < b.length; c++)
									f[b[c]] = a.object;
								return f
							};
							this.app = b;
							this._urlValidator = new h.validation.SiteUrlValidator(b);
							this._webMapFilter = new h.webMap.WebMapFilter(b)
						}
						Object.defineProperty(c.prototype, "baseMap", {
							get : function () {
								return this._webMapFilter.baseMap
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "baseMapLayer", {
							get : function () {
								this._baseMapLayer || (this._baseMapLayer = $.extend({}, this._webMapFilter.baseMapLayer, this._serviceLayerCommon));
								return this._baseMapLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "bookmark", {
							get : function () {
								return this._webMapFilter.bookmark
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "color", {
							get : function () {
								return this._webMapFilter.color
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "coordinateSystem", {
							get : function () {
								this._coordinateSystem || (this._coordinateSystem = {
										wkid : this._numberValidator,
										wkt : !0,
										output : !0
									});
								return this._coordinateSystem
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "domain", {
							get : function () {
								return this._webMapFilter.domain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "inheritedDomain", {
							get : function () {
								return this._webMapFilter.inheritedDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "rangeDomain", {
							get : function () {
								return this._webMapFilter.rangeDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "codedValueDomain", {
							get : function () {
								return this._webMapFilter.codedValueDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "drawingInfo", {
							get : function () {
								this._drawingInfo || (this._drawingInfo = $.extend({}, this._webMapFilter.drawingInfo, {
											showLabels : !0,
											clustering : {
												radius : this._numberValidator,
												backgroundColor : this.color,
												labelColor : this.color,
												maximumFeatures : this._numberValidator
											}
										}));
								return this._drawingInfo
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "feature", {
							get : function () {
								var b = this;
								this._feature || (this._feature = $.extend({}, this._webMapFilter.feature, {
											id : !0,
											layer : function () {
												return b.layer
											},
											featureLayer : function () {
												return b.serviceLayer
											},
											featureSet : function () {
												return b.featureSet
											},
											allowUnsafeContent : !0,
											extendedProperties : this.object,
											defaultNumberFormat : this._xssHtmlValidator,
											defaultDateFormat : this._xssHtmlValidator,
											timeZoneId : !0,
											displayTimeZoneId : !0,
											attributes : this.object
										}), this._feature[g.PROPERTY_MEASUREMENT_ID] = !0, this._feature[g.PROPERTY_HIGHLIGHT_ID] = !0, this._feature[d.infrastructure.isKmlProperty] = !0);
								return this._feature
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "featureCollection", {
							get : function () {
								this._featureCollection || (this._featureCollection = $.extend({}, this._webMapFilter.featureCollection, {
											layers : {
												item : this.layer
											}
										}));
								return this._featureCollection
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "featureSet", {
							get : function () {
								var b = this;
								this._featureSet || (this._featureSet = $.extend({}, this._webMapFilter.featureSet, {
											id : !0,
											features : {
												item : function () {
													return b.feature
												}
											},
											allowUnsafeContent : !0,
											extendedProperties : this.object,
											layer : function () {
												return b.layer
											},
											displayName : this._xssHtmlValidator,
											iconUri : this._urlValidator
										}));
								return this._featureSet
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "featureSetCollection", {
							get : function () {
								var b = this;
								this._featureSetCollection || (this._featureSetCollection = {
										id : !0,
										displayName : this._xssHtmlValidator,
										featureSets : {
											item : function () {
												return b.featureSet
											}
										},
										sourceName : !0,
										tag : this.object,
										extendedProperties : this.object
									});
								return this._featureSetCollection
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "field", {
							get : function () {
								return this._webMapFilter.field
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "geometry", {
							get : function () {
								return this._webMapFilter.geometry
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "graphic", {
							get : function () {
								this._graphic || (this._graphic = $.extend({}, this._webMapFilter.feature), this._graphic[g.PROPERTY_MEASUREMENT_ID] = !0, this._graphic[g.PROPERTY_HIGHLIGHT_ID] = !0, this._graphic[d.infrastructure.isKmlProperty] =
										!0);
								return this._graphic
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "point", {
							get : function () {
								return this._webMapFilter.point
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "multiPoint", {
							get : function () {
								return this._webMapFilter.multiPoint
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "polyline", {
							get : function () {
								return this._webMapFilter.polyline
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "polygon", {
							get : function () {
								return this._webMapFilter.polygon
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "extent", {
							get : function () {
								return this._webMapFilter.extent
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "layer", {
							get : function () {
								var b = this;
								this._layer || (this._layer = $.extend({}, this._webMapFilter.layer, {
											serviceLayer : function () {
												return b.serviceLayer
											},
											layerDefinition : this.layerDefinition,
											featureSet : function () {
												return b.featureSet
											},
											isDynamic : !0,
											gcxLayerDefinition : {
												id : !0,
												name : this._xssHtmlValidator,
												url : this._urlValidator,
												defaultVisibility : !0,
												visible : !0,
												displayName : this._xssHtmlValidator,
												description : !0,
												featureType : !0,
												featureZoomScale : !0,
												featureZoomFactor : !0,
												hasAttachments : !0,
												nativeID : !0,
												parentLayerId : !0,
												subLayerIds : !0,
												styleName : !0,
												legendUrl : this._urlValidator,
												isDynamic : !0,
												dynamicDefinition : !0,
												defaultDateFormat : !0,
												defaultNumberFormat : !0,
												fullExtent : !0,
												drawIndex : !0,
												identifiable : !0,
												includeInLayerList : !0,
												includeInLegend : !0,
												featureBorderColor : !0,
												featureFillColor : !0,
												minScale : this._numberValidator,
												maxScale : this._numberValidator,
												queryable : !0,
												searchable : !0,
												snappable : !0,
												snappingEnabled : !0,
												showFeatureHyperlinks : !0,
												canToggleLabels : !0,
												showLabels : !0,
												showMapTips : !0,
												supportsIdentify : !0,
												supportsQuery : !0,
												type : !0,
												fields : !0,
												primaryKeyField : !0,
												displayField : !0,
												featureDescription : !1,
												featureLongDescription : !1,
												featureLabel : !1,
												featureHyperlinks : !1,
												layerHyperlinks : !1,
												relationships : !1,
												dataLinks : !1,
												reports : !1,
												charts : !1
											}
										}));
								return this._layer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "layerDefinition", {
							get : function () {
								this._layerDefinition ||
								(this._layerDefinition = $.extend({}, this._webMapFilter.layerDefinition, {
											drawingInfo : this.drawingInfo
										}));
								return this._layerDefinition
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "operationalLayer", {
							get : function () {
								var b = this;
								this._operationalLayer || (this._operationalLayer = $.extend({}, this._webMapFilter.operationalLayer, this._serviceLayerCommon, {
											layers : {
												item : function () {
													return b.layer
												}
											},
											featureCollection : this.featureCollection,
											layerDefinition : this.layerDefinition
										}));
								return this._operationalLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "renderer", {
							get : function () {
								return this._webMapFilter.renderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "serviceLayer", {
							get : function () {
								this._serviceLayer || (this._serviceLayer = $.extend({}, this.operationalLayer, this.baseMapLayer));
								return this._serviceLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "simpleRenderer", {
							get : function () {
								return this._webMapFilter.simpleRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "uniqueValueRenderer", {
							get : function () {
								return this._webMapFilter.uniqueValueRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "classBreaksRenderer", {
							get : function () {
								return this._webMapFilter.classBreaksRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "heatmapRenderer", {
							get : function () {
								return this._webMapFilter.heatmapRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "spatialReference", {
							get : function () {
								return this._webMapFilter.spatialReference
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "symbol", {
							get : function () {
								return this._webMapFilter.symbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "simpleMarkerSymbol", {
							get : function () {
								return this._webMapFilter.simpleMarkerSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "simpleLineSymbol", {
							get : function () {
								return this._webMapFilter.simpleLineSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "simpleFillSymbol", {
							get : function () {
								return this._webMapFilter.simpleFillSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "pictureMarkerSymbol", {
							get : function () {
								return this._webMapFilter.pictureMarkerSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "pictureFillSymbol", {
							get : function () {
								return this._webMapFilter.pictureFillSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "textSymbol", {
							get : function () {
								return this._webMapFilter.textSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "template", {
							get : function () {
								return this._webMapFilter.template
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "type", {
							get : function () {
								return this._webMapFilter.type
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(c.prototype, "_serviceLayerCommon", {
							get : function () {
								var b = this;
								return {
									layers : {
										item : function () {
											return b.layer
										}
									},
									gcxMapServiceDefinition : {
										id : !0,
										url : this._urlValidator,
										serviceUrl : this._urlValidator,
										serviceType : !0,
										serviceFunction : !0,
										displayName : this._xssHtmlValidator,
										shortDisplayName : !0,
										baseMapGroup : !0,
										baseMapGroupIndex : !0,
										baseMapGroupIsMutuallyExclusive : !0,
										description : !0,
										copyright : !0,
										hasAttributionData : !0,
										visible : !0,
										disableClientCaching : !0,
										opacity : this._numberValidator,
										instantSearch : !0,
										format : !0,
										isExpanded : !0,
										serverVersion : !0,
										failureAction : !0,
										tileMatrixSet : !0,
										requestEncoding : !0,
										operationalSpatialReference : !0,
										minScale : this._numberValidator,
										maxScale : this._numberValidator,
										identifiable : !0,
										includeCatalogItems : !0,
										includeMosaicDatasetValues : !0,
										defaultDateFormat : !0,
										defaultNumberFormat : !0,
										tileInfo : !0,
										includeInLayerList : !0,
										drawingBehavior : !0,
										featureClustering : {
											enabled : !0,
											userCanToggle : !0,
											radius : this._numberValidator,
											maximumFeatures : this._numberValidator,
											backgroundColor : this.color,
											labelColor : this.color
										},
										featureHeatMap : {
											enabled : !0,
											userCanToggle : !0,
											respectScaleRange : !0,
											gradient : !0,
											offset : {
												item : this._numberValidator
											},
											intensity : this._numberValidator,
											field : !0,
											defaultRenderer : this.renderer,
											defaultMinScale : this._numberValidator,
											defaultMaxScale : this._numberValidator,
											includeInLegend : !0
										},
										layerOptions : !1,
										layerHyperlinks : !1,
										attributionDataUrl : !1
									}
								}
							},
							enumerable : !0,
							configurable : !0
						});
						return c
					}
					();
					g.ProjectFilter = m
				})(h.project || (h.project = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					function h(c, b, a, e) {
						var f = this;
						void 0 === e && (e = 200);
						var d = -1,
						g = [],
						p = function () {
							d = setTimeout(function () {
									d = null;
									for (var a = g.length - 1; 0 <= a; a--) {
										var e = g[a];
										c.event(e.eventName).unsubscribe(e.subscriptionToken);
										g.pop()
									}
									b()
								}, e)
						};
						a.forEach(function (a) {
							var b = c.event(a).subscribe(f, function () {
									null !== d && (clearTimeout(d), p())
								});
							g.push({
								eventName : a,
								subscriptionToken : b
							})
						});
						p()
					}
					d.debounceViewEvents = function (c, b, a) {
						void 0 === a && (a = 400);
						h(c, b, "ViewInitializedEvent ViewActivatedEvent ViewDeactivatedEvent ViewDimensionsChangedEvent ViewHostedEvent ViewUnhostedEvent ApplicationResizeEvent".split(" "),
							a)
					};
					d.debounceEvents = h
				})(d.ShellUtils || (d.ShellUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b) {
							this.app = b;
							this.nativeInitialized = !1;
							this._ws = new d.webSocket.NativeWebSocket(b)
						}
						c.prototype.xhrGet = function (b) {
							var a = this;
							return this.onNativeInitialized().then(function () {
								a.appendAuthorizationHeader(b);
								return dojo.xhrGet(b)
							})
						};
						c.prototype.xhrPost = function (b) {
							var a = this;
							return this.onNativeInitialized().then(function () {
								a.appendAuthorizationHeader(b);
								return dojo.xhrPost(b)
							})
						};
						c.prototype.appendAuthorizationHeader =
						function (b) {
							b || (b = {});
							b.headers || (b.headers = {});
							b.headers.Authorization || (b.headers.Authorization = "Token " + this.app.localServerToken)
						};
						c.prototype.command = function (b) {
							return this._ws.command(b)
						};
						c.prototype.event = function (b) {
							return this._ws.event(b)
						};
						c.prototype.onNativeInitialized = function () {
							var b = this;
							return this._nativeInitializedPromise ? this._nativeInitializedPromise : this._nativeInitializedPromise = new Promise(function (a, e) {
									b._nativeInitializedResolve = a
								})
						};
						c.prototype.signalNativeInitialized = function () {
							this.onNativeInitialized();
							this.nativeInitialized = !0;
							this._nativeInitializedResolve()
						};
						c.prototype.getViewerResourceInfo = function (b) {
							return this.xhrGet({
								url : this.app.localServerAddress + "/resource/" + this.app.localServerNamespace + "/" + b + "/info"
							}).then(function (a) {
								a = JSON.parse(a);
								return {
									name : a.name,
									exists : a.exists,
									length : a.length,
									lastAccessTime : a.lastAccessTime ? new Date(a.lastAccessTime) : null,
									lastWriteTime : a.lastWriteTime ? new Date(a.lastWriteTime) : null
								}
							})
						};
						return c
					}
					();
					d.NativeManager = h
				})(d.nativeIntegration || (d.nativeIntegration = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						var c = function () {
							function b(a, b, f) {
								this.app = a;
								this.name = b;
								this.outgoing = f;
								this._localImplementations = new d.framework.commands.Command(b, a)
							}
							b.prototype.execute = function (a) {
								this.outgoing(a)
							};
							b.prototype.register = function (a, b) {
								return this._localImplementations.register(a, b)
							};
							b.prototype.unregister = function (a) {
								return this._localImplementations.unregister(a)
							};
							return b
						}
						();
						g.NativeCommand = c
					})(g.webSocket || (g.webSocket = {}))
				})(h.nativeIntegration ||
					(h.nativeIntegration = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						var c = function () {
							function b(a, b, f) {
								this.app = a;
								this.name = b;
								this.outgoing = f;
								this._localHandlers = new d.framework.events.Event(b, a)
							}
							b.prototype.publish = function (a) {
								this.outgoing(a)
							};
							b.prototype.subscribe = function (a, b) {
								return this._localHandlers.subscribe(a, b)
							};
							b.prototype.once = function (a, b) {
								return this._localHandlers.once(a, b)
							};
							b.prototype.unsubscribe = function (a) {
								return this._localHandlers.unsubscribe(a)
							};
							return b
						}
						();
						g.NativeEvent =
							c
					})(g.webSocket || (g.webSocket = {}))
				})(h.nativeIntegration || (h.nativeIntegration = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						var c = function () {
							function b(a) {
								this.app = a;
								this._connectDelay = 500;
								this._wsUri = "ws://localhost:8182/";
								this._sessionId = d.framework.utils.alphaNumericToken();
								this._nextPayload = [];
								this._nextMessageIx = 1;
								this._lastMessageIx = 0;
								this._commands = {};
								this._events = {};
								/\bGeocortexApp\b/.test(navigator.userAgent) && this._createWebSocket()
							}
							b.prototype._createWebSocket = function () {
								var a = this;
								if (this._ws && (this._ws.readyState === WebSocket.OPEN ||
										this._ws.readyState === WebSocket.CONNECTING))
									throw Error("Web socket is already live.");
								this._ws = new WebSocket(this._wsUri);
								this._ws.onopen = function () {
									a.app.trace.debug("Web socket connected.");
									a._ws.send(a._sessionId);
									a._connectDelay = 500
								};
								this._ws.onclose = function (b) {
									a.app.trace.error("Web socket closed. code=" + b.code + " reason='" + b.reason + "'");
									a._ws.onopen = null;
									a._ws.onclose = null;
									a._ws.onerror = null;
									a._ws.onmessage = null;
									setTimeout(function () {
										return a._createWebSocket()
									}, a._connectDelay);
									a._connectDelay *=
									2
								};
								this._ws.onerror = function (b) {
									a.app.trace.error("Web socket error. " + b.data)
								};
								this._ws.onmessage = function (b) {
									try {
										var f = JSON.parse(b.data);
										if (f.type === g.UnreliableMessage.type.Ack)
											a._outgoingMessage && a._outgoingMessage.messageIx === f.messageIx && (a._outgoingMessage = null, a._pump());
										else if (a._sendMessage({
												messageIx : f.messageIx,
												type : g.UnreliableMessage.type.Ack
											}), f.messageIx === a._lastMessageIx + 1) {
											a._lastMessageIx = f.messageIx;
											for (var c = 0; c < f.payloads.length; c++)
												a._processMessage(f.payloads[c])
										}
									} catch (d) {
										a.app.trace.error("Error parsing web socket message '" +
											b.data + "'. " + d)
									}
								}
							};
							b.prototype._pump = function () {
								var a = this;
								if (!this._outgoingMessage && this._nextPayload.length) {
									this._outgoingMessage = {
										payloads : this._nextPayload.concat(),
										messageIx : this._nextMessageIx++,
										type : g.UnreliableMessage.type.Content
									};
									this._nextPayload.length = 0;
									var b = this._outgoingMessage.messageIx,
									f = 500,
									c = function () {
										a._outgoingMessage && a._outgoingMessage.messageIx === b && (a._sendMessage(a._outgoingMessage), setTimeout(c, f), f = Math.min(2 * f, 1E4))
									};
									c()
								}
							};
							b.prototype._sendMessage = function (a) {
								if (this._ws &&
									this._ws.readyState === WebSocket.OPEN) {
									var b;
									try {
										b = JSON.stringify(a)
									} catch (f) {
										this.app.trace.error("Error serializing outgoing UnreliableMessage.  Examining NativeWebSocketMessages."),
										this._fixUnserializableMessge(a),
										b = JSON.stringify(a)
									}
									this._ws.send(b)
								}
							};
							b.prototype._fixUnserializableMessge = function (a) {
								var b = this;
								try {
									JSON.stringify(a.error)
								} catch (f) {
									this.app.trace.error("UnreliableMessage has unserializable error."),
									console.error(a.error),
									a.error = a.error.toString()
								}
								a.payloads = a.payloads.filter(function (a) {
										try {
											return JSON.stringify(a),
											!0
										} catch (f) {
											return b.app.trace.error("UnreliableMessage has unserializable payload."),
											console.error(a),
											!1
										}
									})
							};
							b.prototype._processMessage = function (a) {
								switch (a.type) {
								case g.NativeWebSocketMessage.type.Command:
									this.command(a.payload.name)._localImplementations.execute(a.payload.args);
									break;
								case g.NativeWebSocketMessage.type.Event:
									this.event(a.payload.name)._localHandlers.publish(a.payload.args)
								}
							};
							b.prototype._queueMessage = function (a) {
								var b = this;
								this._nextPayload.push(a);
								setTimeout(function () {
									return b._pump()
								},
									1)
							};
							b.prototype.command = function (a) {
								var b = this;
								this._commands.hasOwnProperty(a) || (this._commands[a] = new g.NativeCommand(this.app, a, function (f) {
											return b._queueMessage({
												type : g.NativeWebSocketMessage.type.Command,
												payload : {
													name : a,
													args : f
												}
											})
										}));
								return this._commands[a]
							};
							b.prototype.event = function (a) {
								var b = this;
								this._events.hasOwnProperty(a) || (this._events[a] = new g.NativeEvent(this.app, a, function (f) {
											return b._queueMessage({
												type : g.NativeWebSocketMessage.type.Event,
												payload : {
													name : a,
													args : f
												}
											})
										}));
								return this._events[a]
							};
							return b
						}
						();
						g.NativeWebSocket = c
					})(g.webSocket || (g.webSocket = {}))
				})(h.nativeIntegration || (h.nativeIntegration = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.nativeIntegration || (d.nativeIntegration = {});
	d = d.webSocket || (d.webSocket = {});
	(d.NativeWebSocketMessage || (d.NativeWebSocketMessage = {})).type = {
		Command : "Command",
		Event : "Event"
	}
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.nativeIntegration || (d.nativeIntegration = {});
	d = d.webSocket || (d.webSocket = {});
	(d.UnreliableMessage || (d.UnreliableMessage = {})).type = {
		Content : "Content",
		Completed : "Completed",
		Ack : "Ack"
	}
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					function h(a, e) {
						if (!e)
							return Promise.reject("basemap cannot be null.");
						if (!e.filename)
							return Promise.reject("basemap.filename cannot be null.");
						switch (e.sourceType) {
						case d.OfflineMapBasemap.Type.PREGENERATED:
							return c(a, e);
						case d.OfflineMapBasemap.Type.EXPORT_TILES:
							return b(a, e)
						}
						return null
					}
					function c(a, b) {
						var f = this;
						return new Promise(function (c, d) {
							var g = a.nativeManager.event("ResourceRemovedEvent").subscribe(f, function (f) {
									f.fileName ===
									b.filename && (a.nativeManager.event("ResourceRemovedEvent").unsubscribe(g), c())
								});
							a.nativeManager.command("RemoveResource").execute({
								fileName : b.filename
							})
						})
					}
					function b(a, b) {
						var f = this;
						return new Promise(function (c, d) {
							var g = a.nativeManager.event("ResourceRemovedEvent").subscribe(f, function (f) {
									f.fileName === b.filename && (a.nativeManager.event("ResourceRemovedEvent").unsubscribe(g), c())
								});
							a.nativeManager.command("RemoveExportedTiles").execute({
								fileName : b.filename
							})
						})
					}
					d.deleteBasemaps = function (a, b) {
						return Promise.all(b.map(function (b) {
								return h(a,
									b)
							})).then(function () {
							return null
						})
					}
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function h(a, e, f, c) {
						var g = this;
						return new Promise(function (h, k) {
							var m = a.makeAbsolute(e.url, a.site.url),
							q = a.site.getTokenFromPrincipal(m, d.essentials.Site) || a.site.getTokenFromPrincipal(m, esri.IdentityManagerBase);
							null != q && (m += (-1 === m.indexOf("?") ? "?" : "&") + "token=" + q);
							var w = a.nativeManager.event("ResourceDownloadEvent").subscribe(g, function (f) {
									if (-1 !== f.urls.indexOf(m) && -1 !== f.fileNames.indexOf(e.filename))
										switch (f.status) {
										case b.connecting:
											c &&
											c({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapdownload-connecting").format(e.filename),
												percentage : 0
											});
											break;
										case b.downloading:
											c && (f = Math.round(f.bytesDownloaded / f.bytesTotal * 100), c({
													message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapdownload-downloading").format(e.filename, f),
													percentage : f
												}));
											break;
										case b.completed:
											c && c({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapdownload-completed").format(e.filename),
												percentage : 100
											});
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(w);
											h();
											break;
										case b.failed:
											c && c({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapdownload-failed").format(e.filename, f.message),
												percentage : 100,
												isWarning : !0
											});
											a.trace.error("Failed to download " + e.filename + " from " + e.url + ". " + f.message);
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(w);
											h();
											break;
										case b.canceled:
											c && c({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapdownload-canceled").format(e.filename),
												percentage : 100
											});
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(w);
											k(Error("Canceled."));
											break;
										default:
											a.trace.error("Unknown ResourceDownloadEvent status " + f.status)
										}
								});
							f.register(function () {
								a.nativeManager.command("CancelDownload").execute({
									fileName : e.filename
								})
							});
							a.nativeManager.command("DownloadResource").execute({
								url : m,
								fileName : e.filename,
								overwrite : "OnNewer"
							})
						})
					}
					function c(a, e, f, c, d) {
						var g = this;
						return new Promise(function (h, m) {
							var k = f.url,
							q = a.site.getTokenFromPrincipal(k, esri.IdentityManagerBase);
							null != q && (k += (-1 === k.indexOf("?") ? "?" : "&") + "token=" + q);
							var t = a.nativeManager.event("ResourceDownloadEvent").subscribe(g, function (e) {
									if (-1 !== e.urls.indexOf(k) && -1 !== e.fileNames.indexOf(f.filename))
										switch (e.status) {
										case b.connecting:
											d && d({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapexport-connecting").format(f.filename),
												percentage : 0
											});
											break;
										case b.processing:
											d && d({
												message : e.message || a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapexport-processing").format(f.filename),
												percentage : 0
											});
											break;
										case b.downloading:
											d && (e = Math.round(e.bytesDownloaded / e.bytesTotal * 100), d({
													message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapexport-downloading").format(f.filename, e),
													percentage : e
												}));
											break;
										case b.completed:
											d && d({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapexport-completed").format(f.filename),
												percentage : 100
											});
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(t);
											h();
											break;
										case b.failed:
											d && d({
												message : a.getResource("Mapping.Infrastructure",
													"language-offline-progress-basemapexport-failed").format(f.filename, e.message),
												percentage : 100,
												isWarning : !0
											});
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(t);
											h();
											break;
										case b.canceled:
											d && d({
												message : a.getResource("Mapping.Infrastructure", "language-offline-progress-basemapexport-canceled").format(f.filename),
												percentage : 100
											});
											a.nativeManager.event("ResourceDownloadEvent").unsubscribe(t);
											m(Error("Canceled."));
											break;
										default:
											a.trace.error("Unknown ResourceDownloadEvent status " + e.status)
										}
								}),
							q = {
								url : k,
								fileName : f.filename,
								minLevel : f.minLevel,
								maxLevel : f.maxLevel,
								areaOfInterest : JSON.stringify({
									features : [{
											geometry : e.content.geometry
										}
									]
								}),
								refreshInterval : f.refreshInterval
							};
							c.register(function () {
								a.nativeManager.command("CancelDownload").execute({
									fileName : f.filename
								})
							});
							a.nativeManager.command("ExportTiles").execute(q)
						})
					}
					g.downloadBasemaps = function (a, b, f, d) {
						return Promise.reduce(b.content.basemaps, function (n, p) {
							if (f.isCancellationRequested)
								throw Error("Operation cancelled.");
							var k;
							a : {
								if (!p)
									throw Error("basemap cannot be null.");
								if (!p.filename)
									throw Error("basemap.filename cannot be null.");
								if (!p.url)
									throw Error("basemap.url cannot be null.");
								switch (p.sourceType) {
								case g.OfflineMapBasemap.Type.PREGENERATED:
									k = h(a, p, f, d);
									break a;
								case g.OfflineMapBasemap.Type.EXPORT_TILES:
									k = c(a, b, p, f, d);
									break a
								}
								k = null
							}
							return k
						}, null)
					};
					var b = {
						connecting : "Connecting",
						processing : "Processing",
						downloading : "Downloading",
						completed : "Completed",
						failed : "Failed",
						canceled : "Canceled"
					}
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping ||
			(k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						function c(a, b) {
							b.resources.push(h("__error_offline_no_endpoint", {
									error : {
										code : 400,
										message : "This resource is not available offline.",
										details : []
									}
								}));
							b.resources.push(h("__no_features", {
									objectIdFieldName : "OBJECTID",
									globalIdFieldName : "GlobalID",
									features : []
								}));
							b.resources.push(h("__no_search_results", {
									count : 0,
									features : [],
									ResponseStatus : {}

								}));
							b.resources.push(h("__no_data_links", {
									results : []
								}));
							b.resources.push(h("__empty_attribution_response",
									""));
							return null
						}
						function b(a, b) {
							return new Promise(function (e, f) {
								var c = s(a, a.app.site.url + "/map/layerlist");
								d.request({
									url : c,
									content : {
										f : "json"
									},
									load : function (a) {
										b.resources.push(h("__layerlist_", a));
										e(null)
									},
									error : function (b) {
										a.app.trace.error("Error fetching '" + c + "': " + b.message);
										f(b)
									},
									callbackParamName : "Callback"
								})
							})
						}
						function a(a, b) {
							return new Promise(function (e, f) {
								var c = s(a, a.app.site.url);
								d.request({
									url : c,
									content : {
										f : "json",
										deep : a.app.site.deepInitialize
									},
									load : function (a) {
										a && a.principal && (a.principal.isAuthenticated =
												!1, a.principal.label = "Guest", a.principal.expiry = null, a.principal.identities = [], a.principal.tokens = {
												arcgis : {},
												geocortex : {},
												site : null
											});
										b.resources.push(h("__site_", a));
										e(null)
									},
									error : function (b) {
										a.app.trace.error("Error fetching '" + c + "'. " + b.message);
										f(b)
									},
									callbackParamName : "Callback"
								})
							})
						}
						function e(a, b) {
							var e = [],
							c = a.app.site.essentialsMap.mapServices;
							a.app.site.overviewMap && (c = c.concat(a.app.site.overviewMap.mapServices));
							c = c.map(function (c) {
									if (-1 != e.indexOf(c.url))
										return null;
									e.push(c.url);
									return c.mapServiceType ===
									d.essentials.MapServiceType.BING || c.mapServiceType === d.essentials.MapServiceType.WMS || c.mapServiceType === d.essentials.MapServiceType.WEBTILED ? null : c.mapServiceType === d.essentials.MapServiceType.GEORSS || c.mapServiceType === d.essentials.MapServiceType.KML ? n(a, b, c) : c instanceof d.essentials.FeatureLayerService ? f(a, b, c) : l(a, b, c)
								});
							return Promise.all(c)
						}
						function f(a, b, e) {
							var f = [],
							c = /^(.*)(\/[0-9]+\/?)$/.exec(e.serviceUrl)[1],
							d = null;
							e.layers[0] ? d = e.layers[0].relationships : e.serviceLayer && (d = e.serviceLayer.relationships);
							d && (f = f.concat(d.map(function (f) {
											return new Promise(function (d, l) {
												var g = c + "/" + f.relatedTableId,
												n = {
													f : "json"
												},
												k = e.findServiceToken();
												k && (n.token = k);
												esri.request({
													url : g,
													handleAs : "json",
													content : n,
													callbackParamName : "Callback"
												}).then(function (a) {
													b.resources.push(h(w(g), a));
													d(null)
												}, function (b) {
													a.app.trace.error("Error fetching '" + g + "'. " + b.message);
													l(b)
												})
											})
										})));
							f.push(l(a, b, e));
							return Promise.all(f)
						}
						function l(a, b, e) {
							return new Promise(function (f, c) {
								var d = q(a, e),
								l = {
									f : "json"
								},
								g = e.findServiceToken();
								g && (l.token =
										g);
								esri.request({
									url : d,
									handleAs : "json",
									content : l,
									callbackParamName : "Callback"
								}).then(function (a) {
									b.resources.push(h(w(d), a));
									f(null)
								}, function (b) {
									a.app.trace.error("Error fetching '" + d + "'. " + b.message);
									c(b)
								})
							})
						}
						function n(a, b, e) {
							return new Promise(function (f, c) {
								var d = q(a, e);
								esri.request({
									url : d,
									handleAs : "xml",
									content : {},
									callbackParamName : "Callback"
								}).then(function (a) {
									b.resources.push(k(w(d), (new XMLSerializer).serializeToString(a)));
									f(null)
								}, function (b) {
									a.app.trace.error("Error fetching '" + d + "'. " +
										b.message);
									c(b)
								})
							})
						}
						function h(a, b, e) {
							void 0 === e && (e = !1);
							return k(a, JSON.stringify(b), e)
						}
						function k(a, b, e) {
							void 0 === e && (e = !1);
							return {
								isEncoded : e,
								isJson : !0,
								key : a,
								value : e ? d.framework.utils.base64Encode(b) : b
							}
						}
						function q(a, b) {
							var e = b.serviceUrl;
							!e && b.serviceLayer && (e = b.serviceLayer.url);
							e && (e = s(a, e));
							return e
						}
						function s(a, b) {
							b = a.app.makeAbsolute(b);
							var e = document.createElement("a");
							e.href = b;
							var e = e.href,
							f = e.charAt(e.length - 1);
							if ("/" === f || "\\" === f)
								e = e.substr(0, e.length - 1);
							return e
						}
						function w(a) {
							var b =
								/^[a-z]+:\/\/(.*)/.exec(a);
							b && (a = b[1]);
							(b = /^(services|server)\.arcgisonline\.(.*)/.exec(a)) && (a = "(services|server).arcgisonline." + b[2]);
							/^[^/]*virtualearth.net\//.exec(a) && (a = "[^/]*virtualearth.net/");
							(b = /^([a-zA-Z.]+):(80|443)(.*)/.exec(a)) && (a = b[1] + b[3]);
							return a = a.replace(/\//g, "/+").replace(/\./g, "\\.")
						}
						g.buildBundle = function (f) {
							var d = {
								id : f.bundleId,
								timestamp : (new Date).getTime(),
								routingRules : g.buildRoutingRules(f),
								resources : []
							};
							f = [c(f, d), a(f, d), b(f, d), e(f, d)];
							return Promise.all(f).then(function () {
								return d
							})
						};
						g.cleanUpMapServiceUrl = q;
						g.cleanUpRestUrl = s;
						g.urlToPattern = w
					})(g.bundle || (g.bundle = {}))
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (h) {
						var c = function () {
							function b(a, b) {
								var f = this;
								this.app = a;
								this.libraryId = b;
								this._router = new h.OfflineRouter(this.app);
								this._esriRequestHacker = new h.EsriRequestHacker(a, function (a, b) {
										return f._router.handle(a, b)
									});
								this._esriLayerHacker = new h.EsriLayerHacker(a, function (a) {
										return f._router.rewriteUrl(a)
									});
								this._esriLayerHacker.errorReporter = function (a) {
									return f.app.trace.warning(a)
								};
								this._serveResourceHandler = new h.offlineHandlers.ServeResourceHandler(this.app,
										function (a) {
										return f._appStoreGetPromise(a)
									}, function (a, b) {
										return f._appStoreSetPromise(a, b)
									}, function (a) {
										return f._appStoreRemovePromise(a)
									});
								var c = new h.offlineHandlers.PassthroughHandler(this.app, function (a, b) {
										return f._esriRequestHacker.unhackedRequest(a, b)
									});
								this._router.setDefaultHandler(c);
								this._router.addHandler(c);
								this._router.addHandler(this._serveResourceHandler);
								this._router.addHandler(new h.offlineHandlers.FailHandler);
								this._router.addHandler(new h.offlineHandlers.RewriteHandler(this.app,
										function (a, b) {
										return f._esriRequestHacker.unhackedRequest(a, b)
									}));
								this._router.addHandler(new h.offlineHandlers.SiteHandler(function (a) {
										return f._serveResourceHandler.getResourceValue(a)
									}, function (a, b) {
										return f._esriRequestHacker.unhackedRequest(a, b)
									}));
								this.app.event("ApplicationStorageClearedEvent").subscribe(this, function () {
									f._serveResourceHandler.clear();
									f._router.clearRoutingRules()
								})
							}
							b.prototype.createBundle = function (a, b) {
								return this._createBundle(a, b).then(function (a) {})
							};
							b.prototype._createBundle =
							function (a, b) {
								var f = this;
								return this._buildBundle(a, b).then(function (a) {
									return f._serveResourceHandler.stripAndStoreBundle(a)
								}).then(function (a) {
									return f._storeBundle(a)
								})
							};
							b.prototype.deleteBundle = function (a) {
								var b = this;
								return this._getBundle(a).then(function (a) {
									return a ? b._serveResourceHandler.unstoreBundle(a) : null
								}).then(function (a) {
									return a ? b._appStoreRemovePromise(b._getBundleKey(a)) : null
								}).then(function () {})
							};
							b.prototype.updateBundle = function (a, b) {
								var f = this;
								return this.deleteBundle(a)["catch"](function (a) {
									f.app.trace.warning("Unable to delete old bundle before replacing it. " +
										(a.message || a) + " Attempting to continue.");
									return null
								}).then(function () {
									return f._createBundle(a, b)
								}).then(function (a) {
									return f._router.setRoutingRules(a.routingRules)
								}).then(function () {})
							};
							b.prototype.loadBundle = function (a) {
								var b = this;
								return a ? this._getBundle(a).then(function (a) {
									if (!a)
										throw Error(b.getResource("language-offline-errors-bundlenotfound"));
									b._serveResourceHandler.loadBundle(a);
									b._router.setRoutingRules(a.routingRules)
								}) : Promise.reject(Error("Bundle ID cannot be null."))
							};
							b.prototype.unloadBundle =
							function () {
								this._serveResourceHandler.clear();
								this._router.clearRoutingRules();
								return Promise.resolve()
							};
							b.prototype._buildBundle = function (a, b) {
								var f = this;
								return d.SyncEngine.getSyncInfo(this.app, a).then(function (c) {
									c = {
										app : f.app,
										bundleId : a,
										basemaps : b,
										featureLayerSyncInfo : c
									};
									f._esriRequestHacker.disable();
									return h.buildBundle(c)["finally"](function () {
										f._esriRequestHacker.enable()
									})
								})
							};
							b.prototype._storeBundle = function (a) {
								var b = this;
								return null == a ? Promise.reject(Error("Bundle is null.")) : null == a.id ?
								Promise.reject(Error("Bundle ID is null.")) : this._appStoreSetPromise(this._getBundleKey(a), JSON.stringify(a)).then(function () {
									return a
								}, function (f) {
									b.app.trace.warning("Failed to save offline bundle '" + a.id + "'. " + (f.message || f));
									22 == f.code && window.localStorage && window.localStorage.remainingSpace && b.app.trace.warning("Local storage has " + window.localStorage.remainingSpace + " bytes remaining.");
									throw f;
								})
							};
							b.prototype._getBundle = function (a) {
								return a ? this._appStoreGetPromise(this._getBundleKey(a)).then(function (a) {
									return a ?
									JSON.parse(a) : null
								}) : Promise.reject(Error("Bundle ID is null."))
							};
							b.prototype._getBundleKey = function (a) {
								return "__bundle-" + ("string" === typeof a ? a : a.id)
							};
							b.prototype._appStoreGetPromise = function (a) {
								var b = this;
								return new Promise(function (f, c) {
									return b.app.store.get(a, f, c)
								})
							};
							b.prototype._appStoreSetPromise = function (a, b) {
								var f = this;
								return new Promise(function (c, d) {
									return f.app.store.set(a, b, function () {
										return c()
									}, d)
								})
							};
							b.prototype._appStoreRemovePromise = function (a) {
								var b = this;
								return new Promise(function (f,
										c) {
									return b.app.store.remove(a, function () {
										return f()
									}, c)
								})
							};
							b.prototype.getResource = function (a) {
								return this.app.getResource(this.libraryId, a)
							};
							return b
						}
						();
						h.BundleManager = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						var c = function () {
							return function (b) {
								b ? dojo.safeMixin(this, b) : this.key = ""
							}
						}
						();
						d.BundleResourceEntry = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						var c = function () {
							function b(a, b) {
								this.app = a;
								this.urlRewriter = b;
								this.errorReporter = function (a) {};
								this._captureHooks();
								this._extendEsriLayers()
							}
							b.prototype._captureHooks = function () {
								this._hooked_esri_getTileUrl = esri.layers.ArcGISTiledMapServiceLayer._meta.hidden.getTileUrl;
								this._hooked_ogc_getWMTSTileUrl = esri.layers.WMTSLayer._meta.hidden.getTileUrl;
								this._ogc__tileLoadHandler = esri.layers.WMTSLayer.superclass._tileLoadHandler;
								this._hooked_BingMaps_getTileUrl = esri.virtualearth.VETiledLayer._meta.hidden.getTileUrl;
								this._bingMaps__tileLoadHandler = esri.virtualearth.VETiledLayer.superclass._tileLoadHandler;
								this._hooked_WebTiledLayer_getTileUrl = esri.layers.WebTiledLayer._meta.hidden.getTileUrl;
								this._webTiledLayer__tileLoadHandler = esri.layers.WebTiledLayer.superclass._tileLoadHandler;
								this._hooked_esri_getImageUrl = esri.layers.ArcGISDynamicMapServiceLayer._meta.hidden.getImageUrl;
								this._hooked_ogc_getImageUrl = esri.layers.WMSLayer._meta.hidden.getImageUrl
							};
							b.prototype._extendEsriLayers = function () {
								var a = this;
								esri.virtualearth.VETiledLayer.extend({
									getTileUrl : function (b, f, c) {
										b = a._hooked_BingMaps_getTileUrl.apply(this, [b, f, c]);
										return a.app.offlineManager.isOfflineMapActive.get() ? a.urlRewriter(b) || b : b
									},
									_tileLoadHandler : function (b) {
										a._bingMaps__tileLoadHandler.apply(this, [b])
									}
								});
								esri.layers.WMTSLayer.extend({
									getTileUrl : function (b, f, c) {
										b = a._hooked_ogc_getWMTSTileUrl.apply(this, [b, f, c]);
										return a.app.offlineManager.isOfflineMapActive.get() ? a.urlRewriter(b) ||
										b : b
									},
									_tileLoadHandler : function (b) {
										a._ogc__tileLoadHandler.apply(this, [b])
									}
								});
								esri.layers.WebTiledLayer.extend({
									getTileUrl : function (b, f, c) {
										b = a._hooked_WebTiledLayer_getTileUrl.apply(this, [b, f, c]);
										return a.app.offlineManager.isOfflineMapActive.get() ? a.urlRewriter(b) || b : b
									},
									_tileLoadHandler : function (b) {
										a._webTiledLayer__tileLoadHandler.apply(this, [b])
									}
								});
								esri.layers.ArcGISTiledMapServiceLayer.extend({
									getTileUrl : function (b, f, c) {
										b = a._hooked_esri_getTileUrl.apply(this, [b, f, c]);
										return a.app.offlineManager.isOfflineMapActive.get() ?
										a.urlRewriter(b) || b : b
									}
								});
								esri.layers.WMSLayer.extend({
									getImageUrl : function (b, f, c, d) {
										a.app.offlineManager.isOfflineMapActive.get() ? a._hooked_ogc_getImageUrl.apply(this, [b, f, c, function (b) {
													b = a.urlRewriter(b) || b;
													d && d(b)
												}
											]) : (f && c || a.errorReporter("Invalid dimensions on requested map image. This is usually due to an invalid map resize event."), a._hooked_ogc_getImageUrl.apply(this, arguments))
									}
								});
								esri.layers.ArcGISDynamicMapServiceLayer.extend({
									getImageUrl : function (b, f, c, d) {
										a.app.offlineManager.isOfflineMapActive.get() ?
										a._hooked_esri_getImageUrl.apply(this, [b, f, c, function (b) {
													b = a.urlRewriter(b) || b;
													d && d(b)
												}
											]) : (f && c || a.errorReporter("Invalid dimensions on requested map image. This is usually due to an invalid map resize event."), a._hooked_esri_getImageUrl.apply(this, arguments))
									}
								})
							};
							return b
						}
						();
						d.EsriLayerHacker = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						var c = function () {
							function b(a, b) {
								this.app = a;
								this.requestHandler = b;
								this._isEnabled = !0;
								this._setupEsriRequestHooks()
							}
							b.prototype.unhackedRequest = function (a, b) {
								return this._hooked_esri_request.call(esri, a, b)
							};
							b.prototype.disable = function () {
								this._isEnabled = !1
							};
							b.prototype.enable = function () {
								this._isEnabled = !0
							};
							b.prototype._setupEsriRequestHooks = function () {
								var a = this;
								if (esri.request) {
									this._hooked_esri_request = esri.request;
									esri.request =
									function (b, e) {
										return a.app.offlineManager.getActiveOfflineMap() && a._isEnabled ? a.requestHandler(b, e) : a._hooked_esri_request.call(esri, b, e)
									};
									var b = null;
									esri.request.setRequestPreCallback = function (a) {
										b = a
									};
									this._hooked_esri_request.setRequestPreCallback(function (a) {
										/GeocortexApp/.test(navigator.userAgent) && /^https:\/\/(localhost|127\.0\.0\.1)(:\d+)?\//.test(a.url) && (a.url = "http" + a.url.substring(5));
										b && (a = b(a));
										return a
									})
								} else
									this.app.trace.error("Offline module could not hook into ESRI API.")
							};
							return b
						}
						();
						d.EsriRequestHacker = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function () {
								function a(a, b) {
									this.app = a;
									this.unhackedRequesthandler = b;
									this.name = "Passthrough"
								}
								a.prototype.handle = function (a, b, c) {
									this.unhackedRequesthandler(a, a.options).then(function (b) {
										return a.dfd.resolve(b)
									}, function (b) {
										return a.dfd.errback(b)
									});
									return !0
								};
								return a
							}
							();
							c.PassthroughHandler = b
						})(d.offlineHandlers || (d.offlineHandlers = {}))
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function () {
								function a() {
									this.name = "Fail"
								}
								a.prototype.handle = function (a, b, d) {
									a.dfd.reject();
									c.hookDeferredCallbacks(a);
									return !0
								};
								return a
							}
							();
							c.FailHandler = b
						})(d.offlineHandlers || (d.offlineHandlers = {}))
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							c.hookDeferredCallbacks = function (b) {
								var a = b.dfd,
								e = b.load;
								e && a.addCallback(function (b) {
									var f = a._pendingDfd,
									f = f && f.ioArgs;
									return e.call(f && f.args, b, f)
								});
								var f = b.error;
								f && a.addErrback(function (b) {
									var e = a._pendingDfd,
									e = e && e.ioArgs;
									return f.call(e && e.args, b, e)
								})
							}
						})(d.offlineHandlers || (d.offlineHandlers = {}))
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function () {
								function a(a, b) {
									this.app = a;
									this.unhackedRequesthandler = b;
									this.name = "Rewrite"
								}
								a.prototype.handle = function (a, b, c) {
									a.url = this.rewriteRequest(a, b, c);
									!require.has("esri-cors") && Modernizr.cors && (delete require.has.cache["esri-cors"], require.has.add("esri-cors", function () {
											return !0
										}));
									this.unhackedRequesthandler(a, a.options).then(function (b) {
										return a.dfd.resolve(b)
									}, function (b) {
										return a.dfd.errback(b)
									});
									return !0
								};
								a.prototype.rewriteRequest = function (a, b, c) {
									if (!b || !b.parameters || !b.parameters.newUrl)
										throw Error("Not a rewrite rule.");
									a = b.parameters.newUrl;
									a = a.format.apply(a, c);
									a = a.replace("{localserver}", this.app.localServerAddress);
									this.app.localServerAddress && 0 < this.app.localServerAddress.length && a.startsWith(this.app.localServerAddress) && (a = this._appendLocalServerToken(a));
									return a
								};
								a.prototype._appendLocalServerToken = function (a) {
									this.app.localServerToken && (a.endsWith("?") || (a += 0 < a.indexOf("?") ?
											"&" : "?"), a += "localServerToken=" + this.app.localServerToken);
									return a
								};
								return a
							}
							();
							c.RewriteHandler = b
						})(d.offlineHandlers || (d.offlineHandlers = {}))
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function () {
								function a(a, b, c, d) {
									this.app = a;
									this.resourceGetter = b;
									this.resourceSetter = c;
									this.resourceRemover = d;
									this.name = "ServeResource";
									this.isReady = new Observable(!1)
								}
								a.prototype.handle = function (a, b, d) {
									var g = this;
									if (!this._bundle || !b.parameters || !b.parameters.key)
										return !1;
									b = b.parameters.key;
									b = b.format.apply(b, d);
									d = 0;
									for (var h = this._bundle.resources.length; d < h; d++)
										if (this._bundle.resources[d].key === b)
											return c.hookDeferredCallbacks(a),
											this._getResourceValue(this._bundle.resources[d]).then(function (b) {
												a.dfd.resolve(b)
											})["catch"](function (b) {
												g.app.trace.error(b.message);
												a.dfd.reject(b.message)
											}), !0;
									return !1
								};
								a.prototype.loadBundle = function (a) {
									this.isReady.set(!0);
									this._bundle = a
								};
								a.prototype.clear = function () {
									this.isReady.set(!1);
									this._bundle = null
								};
								a.prototype.stripAndStoreBundle = function (b) {
									var f = this;
									if (!b)
										return Promise.reject(Error("Bundle cannot be null."));
									var c = b.resources.map(function (c) {
											return null == c.value ? Promise.reject(Error("Bundle resoure entry value is already null: " +
													c.key)) : c.value && c.value.length > a._resourceCachingLength ? f.resourceSetter(a._getResourceStorageKey(b, c), c.value).then(function () {
												c.value = null
											}, function (a) {
												f.app.trace.error("Unable to strip '" + c.key + "' out of the bundle and store it separately. " + a)
											}) : null
										});
									return Promise.all(c).then(function () {
										return b
									})
								};
								a.prototype.unstoreBundle = function (b) {
									var f = this;
									if (!b)
										return Promise.reject(Error("Bundle cannot be null."));
									var c = b.resources.map(function (c) {
											return null == c.value ? f.resourceRemover(a._getResourceStorageKey(b,
													c)) : null
										});
									return Promise.all(c).then(function () {
										return b
									})
								};
								a.prototype.getResourceValue = function (a) {
									for (var b = 0, c = this._bundle.resources.length; b < c; b++)
										if (this._bundle.resources[b].key === a)
											return this._getResourceValue(this._bundle.resources[b]);
									return Promise.reject(Error("No such entry found."))
								};
								a.prototype._getResourceValue = function (b) {
									var f = this;
									return Promise.resolve(b.value).then(function (c) {
										return null == c ? f.resourceGetter(a._getResourceStorageKey(f._bundle, b)) : c
									}).then(function (a) {
										if (!a)
											throw Error("Resource entry missing for: " +
												b.key);
										return a
									}).then(function (a) {
										!0 === b.isEncoded && (a = d.framework.utils.base64Decode(a));
										!0 === b.isJson && (a = JSON.parse(a));
										return a
									})
								};
								a._getResourceStorageKey = function (a, b) {
									return a.id + "-" + b.key
								};
								a._resourceCachingLength = 200;
								return a
							}
							();
							c.ServeResourceHandler = b
						})(g.offlineHandlers || (g.offlineHandlers = {}))
					})(g.bundle || (g.bundle = {}))
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex ||
	(geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function () {
								function a(a, b) {
									this.siteJsonGetter = a;
									this.unhackedRequesthandler = b;
									this.name = "Site"
								}
								a.prototype.handle = function (a, b, l) {
									var g = this;
									c.hookDeferredCallbacks(a);
									this.siteJsonGetter(b.parameters.key).then(function (b) {
										if (g._hasToken(a)) {
											var f = new d.RequestContext({
													callbackParamName : a.callbackParamName,
													content : a.content,
													form : a.form,
													handleAs : a.handleAs,
													timeOut : 1E4,
													url : a.url
												}, null, a.options);
											g.unhackedRequesthandler(f,
												f.options).then(function (f) {
												f && !f.error && f.principal && (b.principal = f.principal);
												a.dfd.resolve(b)
											}, function (f) {
												a.dfd.resolve(b)
											})
										} else
											a.dfd.resolve(b)
									}, function (b) {
										a.dfd.errback(b)
									});
									return !0
								};
								a.prototype._hasToken = function (a) {
									return /[?&]token=/.test(a.url) || a.content && a.content.token
								};
								return a
							}
							();
							c.SiteHandler = b
						})(d.offlineHandlers || (d.offlineHandlers = {}))
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						var c = function () {
							function b(a) {
								var b = this;
								this.app = a;
								this.isReady = new Observable(!1);
								this._handlers = {};
								this._rules = [];
								this.app.command("RewriteUrlForOffline").register(this, function (a, c) {
									c(b.rewriteUrl(a))
								})
							}
							b.prototype.addHandler = function (a) {
								this._handlers[a.name] = a
							};
							b.prototype.removeHandler = function (a) {
								return this._handlers.hasOwnProperty(a) ? (delete this._handlers[a], !0) : !1
							};
							b.prototype.setDefaultHandler = function (a) {
								this._defaultHandler =
									a
							};
							b.prototype.setRoutingRules = function (a) {
								this._rules = a.concat();
								this.isReady.set(!0)
							};
							b.prototype.setRoutingRulesFromPromise = function (a) {
								var b = this;
								this._rules.length = 0;
								this.isReady.set(!1);
								a.then(function (a) {
									if (a)
										try {
											b.setRoutingRules(JSON.parse(a))
										} catch (c) {
											b.app.trace.error("Unable to parse routing rules: {0}".format(c))
										}
									else
										b.app.trace.debug("No offline request routing table was found.")
								}, function (a) {
									b.app.trace.warning("An error occurred while attempting to fetch offline request routing rules: {0}".format(a))
								})
							};
							b.prototype.clearRoutingRules = function () {
								this._rules.length = 0;
								this.isReady.set(!1)
							};
							b.prototype.rewriteUrl = function (a) {
								var b = this._handlers.Rewrite;
								if (!b)
									return a;
								a = this._stripOutProxy(a);
								for (var f = 0; f < this._rules.length; ++f) {
									var c = this._rules[f];
									if ("Rewrite" === c.handlerName) {
										var d = RegExp(c.pattern).exec(a);
										if (d && d.length && 0 < d.length)
											return b.rewriteRequest(null, c, d)
									}
								}
								return null
							};
							b.prototype.handle = function (a, b) {
								var f = this,
								c = new dojo.Deferred;
								this._whenReady(function () {
									for (var g = new d.RequestContext(a,
												c, b), h = f._stripOutProxy(g.url), k = !1, q = 0; q < f._rules.length; ++q) {
										var s = f._rules[q],
										w = RegExp(s.pattern).exec(h),
										t = !0;
										if (w && s.queryParameterPatterns)
											for (var y in s.queryParameterPatterns)
												var u = RegExp(s.queryParameterPatterns[y].pattern).exec(a.content ? a.content[y] : null), t = t && !!u;
										if (w && w.length && 0 < w.length && t)
											if (t = f._handlers[s.handlerName]) {
												k = !0;
												try {
													if (!1 === t.handle(g, s, w))
														k = !1;
													else
														break
												} catch (x) {
													f.app.trace.warning("Offline request failed for resource '" + a.url + "'. " + x);
													c.errback(Error("Offline request failed"));
													break
												}
											} else
												f.app.trace.warning("Offline request failed for resource '" + a.url + "'. Matching rule found without handler.")
									}
									k || f._defaultHandler.handle(g, null, null)
								});
								return c
							};
							b.prototype._whenReady = function (a) {
								if (this.isReady.get())
									a();
								else
									this.isReady.once(this, a)
							};
							b.prototype._stripOutProxy = function (a) {
								if (!a)
									return null;
								var b = this.app.configuration.proxyUri;
								if (0 <= a.indexOf(b)) {
									if (a.replace)
										return a.replace(b, "")
								} else
									return a;
								return null
							};
							return b
						}
						();
						d.OfflineRouter = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline ||
					(d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						var c = function () {
							return function (b, a, e) {
								this.url = this.timeOut = this.handleAs = this.content = this.options = null;
								b && dojo.mixin(this, b);
								this.dfd = a || new dojo.Deferred;
								this.options = e || null
							}
						}
						();
						d.RequestContext = c
					})(d.bundle || (d.bundle = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						function c(a) {
							return [{
									handlerName : "Rewrite",
									pattern : a,
									parameters : {
										newUrl : "Resources/Images/blank-tile.png"
									}
								}
							]
						}
						function b(a) {
							a = decodeURI(a).replace(/%24/g, "$");
							return [{
									handlerName : "Rewrite",
									pattern : a.replace(/\$?{subDomain}/ig, "(?:.*)").replace(/\$?{level}/ig, "[0-9]*").replace(/\$?{row}/ig, "[0-9]*").replace(/\$?{col}/ig, "[0-9]*"),
									parameters : {
										newUrl : "Resources/Images/blank-tile.png"
									}
								}
							]
						}
						function a(a, b, f) {
							var c = [],
							d = /^(.*)(\/\+?[0-9]+\/?\+?)$/.exec(a)[1],
							l = /^(.*)\/([0-9]+\/?)$/.exec(b.serviceUrl),
							g = l[1],
							l = parseInt(l[2]);
							c.push({
								handlerName : "ServeResource",
								pattern : d + "/*$",
								parameters : {
									key : d
								}
							});
							var p = -1 !== b.serviceLayer.url.indexOf("?") ? b.serviceLayer.url.substr(0, b.serviceLayer.url.indexOf("?")) : b.serviceLayer.url,
							p = p.toLowerCase(),
							k = f.featureLayerSyncInfo.servers.filter(function (a) {
									return !!a.layers.filter(function (b) {
										return (a.featureServiceUrl + "/" + b.id).toLowerCase() === p
									})[0]
								})[0];
							k ? c.push({
								handlerName : "Rewrite",
								pattern : a + "/+(.+)",
								parameters : {
									newUrl : k.localServerUrl +
									"/" + l + "/{1}"
								}
							}) : c = c.concat(h(d, l));
							a = b.serviceLayer.relationships.map(function (a) {
									return e(d, g, k ? k.localServerUrl : null, a, f)
								});
							return c = c.concat.apply(c, a)
						}
						function e(a, b, f, e, c) {
							var d = [{
									handlerName : "ServeResource",
									pattern : a + "/+" + e.relatedTableId + "/*$",
									parameters : {
										key : a + "/+" + e.relatedTableId
									}
								}
							];
							f && c.featureLayerSyncInfo.servers.filter(function (a) {
								return a.featureServiceUrl === b
							}).some(function (a) {
								return a.layers && a.layers.some(function (a) {
									return a.id === e.relatedTableId
								})
							}) ? d.push({
								handlerName : "Rewrite",
								pattern : a + "/+" + e.relatedTableId + "/+(.+)",
								parameters : {
									newUrl : f + "/" + e.relatedTableId + "/{1}"
								}
							}) : d = d.concat(h(a, e.relatedTableId));
							return d
						}
						function f(a, b, f) {
							if (f = f.basemaps.filter(function (a) {
										return a.url === b.url || a.url === b.serviceUrl
									})[0]) {
								var e = p(a);
								return [{
										handlerName : "Rewrite",
										pattern : a + "/+tile/+([0-9]*)/+([0-9]*)/+([0-9]*)",
										parameters : {
											newUrl : "{localserver}/" + f.localServicePath + "/{{{0}}}/{{{1}}}/{{{2}}}".format(e + 1, e + 2, e + 3)
										}
									}
								].concat(l(a))
							}
							return c(a + "/+(tile|tilemap)").concat(l(a))
						}
						function l(a) {
							return [{
									handlerName : "ServeResource",
									pattern : a + "/+([^/]*/+)?(query|queryRelatedRecords|identify|find)",
									parameters : {
										key : "__no_features"
									}
								}
							]
						}
						function h(a, b) {
							return [{
									handlerName : "ServeResource",
									pattern : a + "/+" + b + "/+(query|queryRelatedRecords|applyEdits)",
									parameters : {
										key : "__no_features"
									}
								}
							]
						}
						function p(a) {
							a instanceof RegExp ? (a = a.toString(), a = a.substring(1, a.length - 2), a = RegExp(a + "|")) : a = RegExp(a.toString() + "|");
							return a.exec("").length - 1
						}
						g.buildRoutingRules = function (e) {
							var h = [{
									handlerName : "Rewrite",
									pattern : "/arcgis/+rest/+services/+Utilities/+Geometry/+GeometryServer/+(.*)",
									parameters : {
										newUrl : "{localserver}/GeometryServer/{1}"
									}
								}, {
									handlerName : "ServeResource",
									pattern : "/map/+layerlist$",
									parameters : {
										key : "__layerlist_"
									}
								}, {
									handlerName : "ServeResource",
									pattern : "/search$",
									parameters : {
										key : "__no_search_results"
									}
								}, {
									handlerName : "Site",
									pattern : g.urlToPattern(e.app.site.originalUrl) + "/*$",
									parameters : {
										key : "__site_"
									}
								}
							],
							n = [],
							p = e.app.site.essentialsMap.mapServices;
							e.app.site.overviewMap && (p = p.concat(e.app.site.overviewMap.mapServices));
							p.forEach(function (p) {
								if (-1 === n.indexOf(p.url)) {
									n.push(p.url);
									var k = p.serviceLayer && p.serviceLayer.attributionDataUrl || p.attributionDataUrl;
									k && h.push({
										handlerName : "ServeResource",
										pattern : g.urlToPattern(k),
										parameters : {
											key : "__empty_attribution_response"
										}
									});
									k = g.urlToPattern(g.cleanUpMapServiceUrl(e, p));
									p.mapServiceType === d.essentials.MapServiceType.BING || p.mapServiceType === d.essentials.MapServiceType.WMS ? h = h.concat(c(k)) : p.mapServiceType === d.essentials.MapServiceType.WMTS || p.mapServiceType === d.essentials.MapServiceType.WEBTILED ? h = h.concat(b(k)) : (h = p instanceof
												d.essentials.FeatureLayerService ? h.concat(a(k, p, e)) : h.concat(c(k + "/+export\\?.*f=image")), p.mapServiceType === d.essentials.MapServiceType.TILED && (h = h.concat(f(k, p, e))), p.mapServiceFunction === d.essentials.MapServiceFunction.BASE || p instanceof d.essentials.FeatureLayerService || (h = h.concat(l(k))), h.push({
												handlerName : "ServeResource",
												pattern : k + "/*$",
												parameters : {
													key : k
												}
											}))
								}
							});
							h.push({
								handlerName : "ServeResource",
								pattern : "/+map/+mapservices/+[0-9]+/+layers/+[0-9]+/+datalinks/+[^/]+/+link$",
								parameters : {
									key : "__no_data_links"
								}
							});
							return h
						}
					})(g.bundle || (g.bundle = {}))
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function () {
					function g(c, b) {
						this.app = c;
						this._enabled = !0;
						this.matchMapBackground = !1;
						this.fillColor = null;
						this.boundaryColor = new esri.Color("red");
						this.boundaryWidth = 2;
						this.boundaryStyle = esri.symbol.SimpleLineSymbol.STYLE_SOLID;
						this.layerId = "AreaOfInterestMask"
					}
					g.prototype.show = function (c) {
						var b = this;
						this._aoi = c;
						this.app.waitUntilSiteServiceLayersLoaded().then(function () {
							if (b._enabled) {
								var a = b._getLayer();
								a.clear();
								(b.fillColor || b.boundaryStyle !==
									esri.symbol.SimpleFillSymbol.STYLE_NULL) && a.show();
								if (b.fillColor) {
									for (var e = new esri.geometry.Polygon(c.spatialReference), f = b.app.map.getLayer(b.app.map.layerIds[0]), f = h.GeometryUtils.toRing(f.fullExtent.expand(1.5)), d = 0; d < c.rings.length; d++)
										e.rings.push(dojo.clone(c.rings[d]).reverse());
									e.rings.push(f);
									f = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_NULL), b.fillColor);
									e = new esri.Graphic({
											geometry : e
										});
									e.setSymbol(f);
									b.app.map.graphics.add(e)
								}
								b.boundaryStyle !== esri.symbol.SimpleFillSymbol.STYLE_NULL && (e = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_NULL, new esri.symbol.SimpleLineSymbol(b.boundaryStyle, b.boundaryColor, b.boundaryWidth), new esri.Color("white")), f = new esri.Graphic({
											geometry : c
										}), f.setSymbol(e), a.add(f));
								b.matchMapBackground && b.fillColor && (a = b._getMapNode(), b._originalMapBackground = a.css("background-color"), a.css("background-color", "rgba(" + b.fillColor.r + "," + b.fillColor.g +
										"," + b.fillColor.b + "," + b.fillColor.a + ")"))
							}
						})
					};
					g.prototype.hide = function () {
						this._aoi = null;
						var c = this.app.map.getLayer(this.layerId);
						c && this.app.map.removeLayer(c);
						this.matchMapBackground && this._getMapNode().css("background-color", this._originalMapBackground)
					};
					g.prototype.enable = function () {
						this._enabled = !0;
						this._aoi && this.show(this._aoi)
					};
					g.prototype.disable = function () {
						this._enabled = !1
					};
					g.prototype.configure = function (c) {
						c && (d.framework.utils.isNullOrUndefined(c.boundaryColor) || (this.boundaryColor = new esri.Color(c.boundaryColor)),
							d.framework.utils.isNullOrUndefined(c.boundaryWidth) || (this.boundaryWidth = c.boundaryWidth), d.framework.utils.isNullOrUndefined(c.boundaryStyle) || ("null" == c.boundaryStyle ? this.boundaryStyle = esri.symbol.SimpleLineSymbol.STYLE_NULL : "solid" == c.boundaryStyle ? this.boundaryStyle = esri.symbol.SimpleLineSymbol.STYLE_SOLID : "dash" == c.boundaryStyle ? this.boundaryStyle = esri.symbol.SimpleLineSymbol.STYLE_DASH : "dot" == c.boundaryStyle && (this.boundaryStyle = esri.symbol.SimpleLineSymbol.STYLE_DOT)), d.framework.utils.isNullOrUndefined(c.enabled) ||
							(c.enabled ? this.enable() : this.disable()), d.framework.utils.isNullOrUndefined(c.fillColor) || (this.fillColor = new esri.Color(c.fillColor)), d.framework.utils.isNullOrUndefined(c.layerId) || (this.layerId = c.layerId), d.framework.utils.isNullOrUndefined(c.matchMapBackground) || (this.matchMapBackground = c.matchMapBackground))
					};
					g.prototype._getLayer = function () {
						var c = this.app.map.getLayer(this.layerId);
						c || (c = new esri.layers.GraphicsLayer({
									id : this.layerId
								}), this.app.map.addLayer(c));
						return c
					};
					g.prototype._getMapNode =
					function () {
						return $(".esriMapContainer").first().parent()
					};
					return g
				}
				();
				h.AreaOfInterestMask = g
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c(b, a) {
							this.app = b;
							this.libraryId = a;
							this._previousActiveOfflineMapId = this._activeOfflineMapId = null;
							this._offlineMaps = [];
							this.canCancel = new Observable(!1);
							this.isOfflineMapActive = new Observable(!1);
							this._bundleManager = new g.bundle.BundleManager(b, a);
							this.aoiMask = new h.AreaOfInterestMask(b, {
									enabled : !1
								})
						}
						c.prototype.addOfflineMap = function (b, a) {
							var e = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									g.OfflineMap.verify(b);
									e._throwIfNotNativeInitialized();
									e.canCancel.set(!0);
									e._cancellationTokenSource = new h.CancellationTokenSource;
									a || (a = function () {});
									var f = g.WorkCalculator.calculateFirstDownloadWork(b),
									c = g.WorkCalculator.noWork(),
									d = function () {
										return g.WorkCalculator.calculatePercentageComplete(c, f)
									};
									return e._appStoreSetPromise(e._getOfflineMapKey(b), JSON.stringify(b)).then(function () {
										a({
											message : e.getResource("language-offline-progress-savingofflinemap"),
											percentage : d()
										});
										e._offlineMaps.push(b);
										return e._save()
									}).then(function () {
										e._throwIfCanceled();
										c.saveProfileWork = f.saveProfileWork;
										a({
											message : e.getResource("language-offline-progress-starting-sync"),
											percentage : d()
										});
										var h = g.SyncParameters.buildSyncParameters(e.app, b);
										return g.SyncEngine.sync(e.app, h, e._cancellationTokenSource.token(), function (b) {
											c.featureLayerWork = b.overallProgress / 100 * f.featureLayerWork;
											a({
												message : b.text,
												percentage : d()
											})
										})
									}).then(function () {
										e._throwIfCanceled();
										c.featureLayerWork = f.featureLayerWork;
										a({
											message : e.getResource("language-offline-progress-starting-basemap-download"),
											percentage : d()
										});
										return g.downloadBasemaps(e.app, b, e._cancellationTokenSource.token(), function (b) {
											c.basemapWork = b.percentage / 100 * f.basemapWork;
											a({
												message : b.message,
												percentage : d(),
												isWarning : b.isWarning
											})
										})
									}).then(function () {
										e._throwIfCanceled();
										c.basemapWork = f.basemapWork;
										a({
											message : e.getResource("language-offline-progress-downloadingsite"),
											percentage : d()
										});
										return e._bundleManager.createBundle(b.id, e._getOfflineMapBasemapMapping(b))
									}).then(function () {
										e._throwIfCanceled();
										c.bundleWork = f.bundleWork;
										a({
											message : e.getResource("language-offline-progress-complete"),
											percentage : d()
										});
										e.app.event("OfflineMapAddedEvent").publish({
											offlineMap : b
										})
									})["catch"](function (a) {
										e._removeOfflineMapNow(b, function () {});
										throw Error(a);
									})["finally"](function () {
										e._cancellationTokenSource.dispose();
										e._cancellationTokenSource = null;
										e.canCancel.set(!1)
									})
								})
						};
						c.prototype.removeOfflineMap = function (b, a) {
							var e = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									return e._removeOfflineMapNow(b, a)
								})
						};
						c.prototype._removeOfflineMapNow =
						function (b, a) {
							var e = this;
							if (!b)
								throw Error(this.getResource("language-offline-errors-offlinemapnull"));
							this._throwIfNotNativeInitialized();
							var f = this._getOfflineMapIx(b);
							if (-1 === f)
								throw Error(this.getResource("language-offline-errors-notfound"));
							if (this._offlineMaps[f].id === this._activeOfflineMapId)
								throw Error(this.getResource("language-offline-errors-isactive"));
							return g.SyncEngine.deleteData(this.app, this._offlineMaps[f].id)["catch"](function (a) {
								e.app.trace.error("Error deleting feature data: " +
									a)
							}).then(function () {
								a && a(e.getResource("language-offline-progress-unregisteringreplica"));
								return e._bundleManager.deleteBundle(e._offlineMaps[f].id)
							})["catch"](function (a) {
								e.app.trace.error("Error deleting bundle: " + a)
							}).then(function () {
								a && a(e.getResource("language-offline-progress-removingofflinemap"));
								e._offlineMaps[f].content.basemaps.filter(function (a) {
									return a.sourceType === g.OfflineMapBasemap.Type.EXPORT_TILES
								}).forEach(function (a) {
									return e.app.nativeManager.command("RemoveExportedTiles").execute({
										fileName : a.filename
									})
								});
								return e._appStoreRemovePromise(e._getOfflineMapKey(b))
							})["catch"](function (a) {
								e.app.trace.error("Error deleting offline map: " + a)
							}).then(function () {
								e._offlineMaps[f].id === e._previousActiveOfflineMapId && (e._previousActiveOfflineMapId = null);
								e._offlineMaps.splice(f, 1);
								return e._save()
							})["finally"](function () {
								e.app.event("OfflineMapRemovedEvent").publish({
									offlineMap : b
								})
							})
						};
						c.prototype.syncOfflineMap = function (b, a) {
							var e = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									if (!b)
										throw Error(e.getResource("language-offline-errors-offlinemapnull"));
									var f = e._getOfflineMapIx(b);
									if (-1 === f)
										throw Error(e.getResource("language-offline-errors-notfound"));
									e._throwIfNotNativeInitialized();
									if ("string" === typeof b || b instanceof String)
										b = e._offlineMaps[f];
									var c = null;
									b !== e._offlineMaps[f] && (c = g.OfflineMap.diff(e._offlineMaps[f], b));
									e.canCancel.set(!0);
									e._cancellationTokenSource = new h.CancellationTokenSource;
									var d = g.WorkCalculator.calculateSyncWork(b),
									p = g.WorkCalculator.noWork(),
									k = function () {
										return g.WorkCalculator.calculatePercentageComplete(p, d)
									},
									m = g.SyncParameters.buildSyncParameters(e.app,
											b);
									return g.SyncEngine.sync(e.app, m, e._cancellationTokenSource.token(), function (b) {
										p.featureLayerWork = b.overallProgress / 100 * d.featureLayerWork;
										a({
											message : b.text,
											percentage : k()
										})
									}).then(function () {
										e._throwIfCanceled();
										p.featureLayerWork = d.featureLayerWork;
										var a = [];
										c && c.content && c.content.geometry ? a = e._offlineMaps[f].content.basemaps.filter(function (a) {
												return a.sourceType === g.OfflineMapBasemap.Type.EXPORT_TILES
											}) : c && c.content && c.content.basemaps && (a = e._offlineMaps[f].content.basemaps.filter(function (a) {
														return a.sourceType ===
														g.OfflineMapBasemap.Type.EXPORT_TILES
													}).filter(function (a) {
														return !c.content.basemaps.some(function (b) {
															return b.baseMapId === a.baseMapId && b.sourceType === a.sourceType && b.url === a.url && b.minLevel === a.minLevel && b.maxLevel === a.maxLevel
														})
													}));
										return 0 < a.length ? g.deleteBasemaps(e.app, a) : null
									}).then(function () {
										e._throwIfCanceled();
										a({
											message : e.getResource("language-offline-progress-starting-basemap-download"),
											percentage : k()
										});
										return g.downloadBasemaps(e.app, b, e._cancellationTokenSource.token(), function (b) {
											p.basemapWork =
												b.percentage / 100 * d.basemapWork;
											a({
												message : b.message,
												percentage : k(),
												isWarning : b.isWarning
											})
										})
									}).then(function () {
										e._throwIfCanceled();
										e.canCancel.set(!1);
										p.basemapWork = d.basemapWork;
										a({
											message : e.getResource("language-offline-progress-downloadingsite"),
											percentage : k()
										});
										return e._bundleManager.updateBundle(b.id, e._getOfflineMapBasemapMapping(b))
									}).then(function () {
										if (!c)
											return null;
										a({
											message : e.getResource("language-offline-progress-savingofflinemap"),
											percentage : k()
										});
										return e._appStoreSetPromise(e._getOfflineMapKey(b),
											JSON.stringify(b))
									}).then(function () {
										if (!c)
											return null;
										e._offlineMaps.splice(f, 1, b);
										return e._save()
									}).then(function () {
										p.bundleWork = d.bundleWork;
										a({
											message : e.getResource("language-offline-progress-complete"),
											percentage : k()
										});
										e._offlineMaps[f] = b;
										e.aoiMask.show(new esri.geometry.Polygon(e._offlineMaps[f].content.geometry));
										e.app.site.essentialsMap.mapServices.forEach(function (a) {
											return a.refresh()
										});
										e.app.event("OfflineMapSyncedEvent").publish({
											offlineMap : b
										})
									})["finally"](function () {
										e._cancellationTokenSource.dispose();
										e._cancellationTokenSource = null;
										e.canCancel.set(!1)
									})
								})
						};
						c.prototype.updateBundle = function (b) {
							var a = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									if (!b)
										throw Error(a.getResource("language-offline-errors-offlinemapnull"));
									var e = a._getOfflineMapIx(b);
									if (-1 === e)
										throw Error(a.getResource("language-offline-errors-notfound"));
									a._throwIfNotNativeInitialized();
									return a._bundleManager.updateBundle(a._offlineMaps[e].id, a._getOfflineMapBasemapMapping(a._offlineMaps[e]))
								})
						};
						c.prototype.activateOfflineMap =
						function (b) {
							var a = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									if (!b)
										throw Error(a.getResource("language-offline-errors-offlinemapnull"));
									var e = a._getOfflineMapIx(b);
									if (-1 === e)
										throw Error(a.getResource("language-offline-errors-notfound"));
									a._throwIfNotNativeInitialized();
									var f = a._activeOfflineMapId;
									a._activeOfflineMapId = a._offlineMaps[e].id;
									return a._bundleManager.loadBundle(a._activeOfflineMapId).then(function () {
										return a.refreshSyncInfo()
									}).then(function () {
										return a._save()
									})["catch"](function (b) {
										a._activeOfflineMapId =
											f;
										return Promise.resolve().then(function () {
											return f ? a._bundleManager.loadBundle(a._activeOfflineMapId) : a._bundleManager.unloadBundle()
										}).then(function () {
											return a.refreshSyncInfo()
										})["catch"](function (b) {
											a.app.trace.error("Error undoing attempt to activate offline map. " + (b.message || b))
										}).then(function () {
											throw b;
										})
									}).then(function () {
										a.app.isOffline.set(!0);
										a.isOfflineMapActive.set(!0);
										var b = new esri.geometry.Polygon(a._offlineMaps[e].content.geometry);
										a.aoiMask.show(b);
										a.app.site.essentialsMap.mapServices.forEach(function (a) {
											if (a instanceof
												d.essentials.FeatureLayerService) {
												var b = a.serviceLayer;
												b.suspended && b.resume()
											}
											a.refresh()
										});
										a.app.event("OfflineMapActivatedEvent").publish({
											offlineMap : a._offlineMaps[e]
										})
									})
								})
						};
						c.prototype.deactivateOfflineMap = function () {
							var b = this;
							return this._lastOperation = this._waitForLast()["finally"](function () {
									b._throwIfNotNativeInitialized();
									if (null == b._activeOfflineMapId)
										return Promise.resolve();
									b._previousActiveOfflineMapId = b._activeOfflineMapId;
									b._activeOfflineMapId = null;
									return b._bundleManager.unloadBundle().then(function () {
										return b.refreshSyncInfo()
									}).then(function () {
										return b._save()
									}).then(function () {
										b.app.isOffline.set(!1);
										b.isOfflineMapActive.set(!1);
										b.aoiMask.hide();
										b.app.site.essentialsMap.mapServices.forEach(function (a) {
											if (a instanceof d.essentials.FeatureLayerService) {
												var b = a.serviceLayer,
												f = new esri.tasks.Query;
												f.objectIds = [0];
												b.queryIds(f, function () {
													a.refresh()
												}, function () {
													b.suspend()
												})
											} else
												a.refresh()
										});
										b.app.event("OfflineMapActivatedEvent").publish({
											offlineMap : null
										})
									})
								})
						};
						c.prototype.cancel = function () {
							return this.canCancel.get() ? (this._cancellationTokenSource.cancel(), this.canCancel.set(!1), this._lastOperation) :
							Promise.reject(this.getResource("language-offline-errors-cancelrejected"))
						};
						c.prototype.forgetLast = function () {
							this._lastOperation = Promise.resolve()
						};
						c.prototype.getOfflineMapById = function (b) {
							return this._offlineMaps.filter(function (a) {
								return a.id === b
							})[0]
						};
						c.prototype.getOfflineMaps = function () {
							return this._offlineMaps.concat()
						};
						c.prototype.getActiveOfflineMap = function () {
							return this._activeOfflineMapId ? this.getOfflineMapById(this._activeOfflineMapId) : null
						};
						c.prototype.refreshSyncInfo = function () {
							var b =
								this;
							return this._activeOfflineMapId ? g.SyncEngine.getSyncInfo(this.app, this._activeOfflineMapId).then(function (a) {
								b.syncInfo = a
							}) : (this.syncInfo = null, Promise.resolve())
						};
						c.prototype._save = function () {
							var b = this,
							a = {
								offlineMapIds : this._offlineMaps.map(function (a) {
									return a.id
								}),
								activeOfflineMapId : this._activeOfflineMapId,
								previousActiveOfflineMapId : this._previousActiveOfflineMapId
							};
							return this._appStoreSetPromise("__offlineManager", JSON.stringify(a))["catch"](function (a) {
								b.app.trace.error("Error saving offline manager state. " +
									(a.message || a));
								a.message = b.getResource("language-offline-errors-savefailed");
								throw a;
							})
						};
						c.prototype.load = function () {
							var b = this;
							this._lastOperation || (this._lastOperation = this._appStoreGetPromise("__offlineManager").then(function (a) {
										if (!a)
											return null;
										var e = JSON.parse(a);
										a = e.offlineMapIds.map(function (a) {
												return b._loadOfflineMapFromStorage(a)["catch"](function (e) {
													b.app.trace.warning("Unable to restore offline map '" + a + "'. " + (e.message || e));
													return null
												})
											});
										return Promise.filter(a, function (a) {
											return null !=
											a
										}).then(function (a) {
											b._offlineMaps = a;
											a = b._prioritizeOfflineMaps(e, b._offlineMaps);
											return b._initializeMap(a)
										}).then(function () {
											b.app.event("OfflineMapsLoadedEvent").publish({
												offlineMaps : b._offlineMaps,
												activeOfflineMap : b.getActiveOfflineMap()
											})
										})
									})["catch"](function (a) {
										b.app.trace.error("Error loading offline manager state. " + (a.message || a));
										a.message = b.getResource("language-offline-errors-loadfailed");
										throw a;
									}))
						};
						c.prototype._prioritizeOfflineMaps = function (b, a) {
							for (var e = [b.activeOfflineMapId, b.previousActiveOfflineMapId],
								f = 0, c = a.map(function (a) {
										return a.id
									}); f < c.length; f++) {
								var d = c[f];
								d !== b.activeOfflineMapId && d !== b.previousActiveOfflineMapId && e.push(d)
							}
							return e
						};
						c.prototype._initializeMap = function (b) {
							var a = this;
							if (0 === b.length && this.app.isOffline.get())
								return Promise.resolve();
							var e = b[0];
							return this.app.isOffline.get() && !e ? this._initializeMap(b.slice(1)) : e ? this._bundleManager.loadBundle(e).then(function () {
								a._activeOfflineMapId = e;
								a.app.isOffline.set(!!e);
								a.isOfflineMapActive.set(!!e);
								var b = a._getOfflineMapIx(e),
								b =
									new esri.geometry.Polygon(a._offlineMaps[b].content.geometry);
								a.aoiMask.show(b);
								return a.refreshSyncInfo()
							})["catch"](function (e) {
								return a._initializeMap(b.slice(1))
							}) : Promise.resolve()
						};
						c.prototype._waitForLast = function () {
							return this._lastOperation["catch"](function (b) {})
						};
						c.prototype._throwIfCanceled = function () {
							if (this._cancellationTokenSource.token().isCancellationRequested)
								throw Error(this.getResource("language-offline-errors-canceled"));
						};
						c.prototype._throwIfNotNativeInitialized = function () {
							if (!this.app.nativeManager.nativeInitialized)
								throw Error(this.getResource("language-offline-errors-notnativeinitialized"));
						};
						c.prototype._loadOfflineMapFromStorage = function (b) {
							var a = this;
							return this._appStoreGetPromise(this._getOfflineMapKey(b)).then(function (b) {
								if (!b)
									throw a.app.trace.error("Offline profile '{offlineMapId}' not found."), Error(a.getResource("language-offline-errors-notfound"));
								return JSON.parse(b)
							}, function (b) {
								a.app.trace.error("Error loading offline map. " + (b.message || b));
								b.message = a.getResource("language-offline-errors-loadfailed");
								throw b;
							})
						};
						c.prototype._getOfflineMapIx = function (b) {
							b = "string" === typeof b ?
								b : b.id;
							for (var a = 0; a < this._offlineMaps.length; a++)
								if (this._offlineMaps[a].id === b)
									return a;
							return -1
						};
						c.prototype._getOfflineMapBasemapMapping = function (b) {
							var a = this.app.site.essentialsMap.baseMaps;
							return b.content.basemaps.map(function (b) {
								var f = a.filter(function (a) {
										return b.baseMapId === a.id
									})[0];
								return f ? (f = f.services.filter(function (a) {
											return a.mapService.mapServiceType === d.essentials.MapServiceType.TILED
										})[0]) ? {
									url : d.essentials.utilities.DecomposedUri.removeQueryParameters(f.mapService.serviceLayer.url,
										"token"),
									localServicePath : (b.sourceType === g.OfflineMapBasemap.Type.PREGENERATED ? "tile" : "viewertile") + "/" + b.filename.replace(" ", "_")
								}
								 : null : null
							}).filter(function (a) {
								return !!a
							})
						};
						c.prototype._getOfflineMapKey = function (b) {
							return "string" === typeof b ? "__offlineMap-" + b : "__offlineMap-" + b.id
						};
						c.prototype._appStoreGetPromise = function (b) {
							var a = this;
							return new Promise(function (e, f) {
								return a.app.store.get(b, e, f)
							})
						};
						c.prototype._appStoreSetPromise = function (b, a) {
							var e = this;
							return new Promise(function (f, c) {
								return e.app.store.set(b,
									a, function () {
									return f()
								}, c)
							})
						};
						c.prototype._appStoreRemovePromise = function (b) {
							var a = this;
							return new Promise(function (e, f) {
								return a.app.store.remove(b, function () {
									return e()
								}, f)
							})
						};
						c.prototype.getResource = function (b) {
							return this.app.getResource(this.libraryId, b)
						};
						return c
					}
					();
					g.OfflineManager = k
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						function c(b, a) {
							return b === a || JSON.stringify(b) === JSON.stringify(a)
						}
						d.verify = function (b) {
							if (!b)
								throw Error("offlineMap is null or undefined.");
							if (!b.id)
								throw Error("offlineMap.id is null or undefined.");
							if (!b.content)
								throw Error("offlineMap.content is null or undefined.");
							if (!b.content.geometry)
								throw Error("offlineMap.content.geometry is null or undefined.");
							if (b.content.basemaps)
								for (var a = 0; a < b.content.basemaps.length; a++) {
									if (!b.content.basemaps[a].url)
										throw Error("offlineMap.content.basemaps[" +
											a + "].url is null or undefined.");
									if (!b.content.basemaps[a].baseMapId)
										throw Error("offlineMap.content.basemaps[" + a + "].baseMapId is null or undefined.");
									if (!b.content.basemaps[a].filename)
										throw Error("offlineMap.content.basemaps[" + a + "].filename is null or undefined.");
									if (!b.content.basemaps[a].sourceType)
										throw Error("offlineMap.content.basemaps[" + a + "].sourceType is null or undefined.");
								}
							else
								throw Error("offlineMap.content.basemaps is null or undefined.");
							if (b.content.layers)
								for (a = 0; a < b.content.layers.length; a++) {
									if (!b.content.layers[a].layerInfoUniqueId)
										throw Error("offlineMap.content.layers[" +
											a + "].layerInfoUniqueId is null or undefined.");
								}
							else
								throw Error("offlineMap.content.layers is null or undefined.");
							if (!b.properties.siteId)
								throw Error("offlineMap.properties.siteId is null or undefined.");
							if (!b.properties.viewerId)
								throw Error("offlineMap.properties.viewerId is null or undefined.");
						};
						d.diff = function (b, a) {
							var e = {};
							b.description !== a.description && (e.description = a.description);
							c(b.grants, a.grants) || (e.grants = a.grants);
							c(b.properties, a.properties) || (e.properties = a.properties);
							c(b.shape,
								a.shape) || (e.shape = a.shape);
							c(b.tags || [], a.tags || []) || (e.tags = a.tags);
							b.title !== a.title && (e.title = a.title);
							c(b.thumbnail, a.thumbnail) || (e.thumbnail = a.thumbnail);
							b.version !== a.version && (e.version = a.version);
							null == b.content !== (null == a.content) ? e.content = a.content : null == a.content ? e.content = null : c(b.content, a.content) || (e.content = {}, c(b.content.geometry, a.content.geometry) || (e.content.geometry = a.content.geometry), c(b.content.layers, a.content.layers) || (e.content.layers = a.content.layers), c(b.content.basemaps,
										a.content.basemaps) || (e.content.basemaps = a.content.basemaps), b.content.includeAttachments !== a.content.includeAttachments && (e.content.includeAttachments = a.content.includeAttachments));
							for (var f in e)
								if (e.hasOwnProperty(f))
									return e;
							return null
						}
					})(d.OfflineMap || (d.OfflineMap = {}));
					(function (d) {
						d.Type = {
							EXPORT_TILES : "exportTiles",
							PREGENERATED : "pregenerated"
						}
					})(d.OfflineMapBasemap || (d.OfflineMapBasemap = {}))
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b) {
							this.servers = [];
							for (var a = 0; a < b.servers.length; a++)
								"string" == typeof b.servers[a].lastSyncTime && (b.servers[a].lastSyncTime = new Date(b.servers[a].lastSyncTime)), this.servers.push(b.servers[a])
						}
						c.prototype.isSynced = function (b) {
							return !!this.findLayerOrTable(b)
						};
						c.prototype.findLayerOrTable = function (b) {
							var a = d.essentials.utilities.LayerUtilities.decomposeFeatureLayerUrl(b);
							b = this.servers.filter(function (b) {
									return b.featureServiceUrl ==
									a.serviceUrl
								});
							for (var e = 0; e < b.length; e++) {
								var f = b[e],
								c = f.layers.filter(function (b) {
										return b.id == a.layerId
									})[0];
								if (c)
									return c;
								if (f = f.layers.filter(function (b) {
											return b.id == a.layerId
										})[0])
									return f
							}
							return null
						};
						return c
					}
					();
					g.SyncInfo = h
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c() {}

						c.getSyncInfo = function (b, a) {
							return b.nativeManager.xhrGet({
								url : b.localServerAddress + "/sync/" + b.localServerNamespace + "/info?profile=" + a
							}).then(function (a) {
								a = JSON.parse(a);
								return new g.SyncInfo(a)
							})
						};
						c.sync = function (b, a, e, f) {
							var c = this;
							b.event("FeatureDataSyncStartedEvent").publish(a);
							return this._unregisterOfflineDeletedReplicas(b).then(function (d) {
								return c._sync(b, a, e, f)
							}).then(function (a) {
								b.event("FeatureDataSyncCompletedEvent").publish();
								return a
							})
						};
						c._sync = function (b, a, e, f) {
							var c = this;
							e.register(function () {
								return c._cancel(b)
							});
							return new Promise(function (e, d) {
								var g = b.event("NativeMessageEvent").subscribe(c, function (a) {
										"syncStatus" === a.type && (a.parameters.state === c.STATUS_SUCCESS ? (b.event("NativeMessageEvent").unsubscribe(g), f(a.parameters), e(a.parameters)) : a.parameters.state === c.STATUS_ERROR ? (b.event("NativeMessageEvent").unsubscribe(g), d(a.parameters.text)) : a.parameters.state === c.STATUS_IN_PROGRESS && f(a.parameters))
									}),
								h = {
									options : JSON.stringify(a)
								};
								b.nativeManager.xhrPost({
									url : b.localServerAddress + "/sync/" + b.localServerNamespace + "/execute",
									content : h,
									error : function (a) {
										b.event("NativeMessageEvent").unsubscribe(g);
										d(a.responseText)
									}
								})
							})
						};
						c._cancel = function (b) {
							return b.nativeManager.xhrPost({
								url : b.localServerAddress + "/sync/" + b.localServerNamespace + "/cancel",
								method : "POST"
							})
						};
						c.deleteData = function (b, a) {
							var e = this._getFeatureServiceTokenInfo(b),
							f = b.localServerAddress + "/sync/" + b.localServerNamespace + "/delete",
							e = {
								parameters : JSON.stringify({
									profile : a,
									serviceInfo : e
								})
							};
							return b.nativeManager.xhrPost({
								url : f,
								content : e,
								method : "POST"
							})
						};
						c._unregisterOfflineDeletedReplicas = function (b) {
							var a = this._getFeatureServiceTokenInfo(b),
							e = b.localServerAddress + "/sync/" + b.localServerNamespace + "/unregisterDeletedReplicas",
							a = {
								parameters : JSON.stringify({
									serviceInfo : a
								})
							};
							return b.nativeManager.xhrPost({
								url : e,
								content : a
							})
						};
						c._getFeatureServiceTokenInfo = function (b) {
							return b.site.essentialsMap.mapServices.filter(function (a) {
								return a instanceof d.essentials.FeatureLayerService
							}).map(function (a) {
								return {
									serviceUrl : d.essentials.utilities.LayerUtilities.decomposeFeatureLayerUrl(a.serviceUrl).serviceUrl,
									token : a.serviceToken
								}
							})
						};
						c.STATUS_IN_PROGRESS = "inProgress";
						c.STATUS_SUCCESS = "success";
						c.STATUS_ERROR = "error";
						return c
					}
					();
					g.SyncEngine = h
				})(h.offline || (h.offline = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					(function (g) {
						g.buildSyncParameters = function (c, b) {
							var a = d.gis.AppInfo.fromGeocortexApp(c).mapInfo.getLayerInfos(),
							e = [];
							b.content.layers.forEach(function (b) {
								var c = a.filter(function (a) {
										return a.uniqueId == b.layerInfoUniqueId
									})[0];
								if (c) {
									var d = c.url.substring(0, c.url.lastIndexOf("/")),
									g = parseInt(c.url.substring(c.url.lastIndexOf("/") + 1)),
									h = e.filter(function (a) {
											return a.url === d
										})[0];
									h ? h.layers.push({
										id : g,
										where : b.definitionExpression
									}) : (h = {
											url : d,
											layers : [{
													id : g,
													where : b.definitionExpression
												}
											],
											capabilities : c.serviceLayerInfo.capabilities,
											token : c.serviceLayerInfo.gcxMapService.serviceToken
										}, e.push(h));
									c.relationships.forEach(function (a) {
										h.layers.some(function (b) {
											return b.id == a.relatedTableId
										}) || h.layers.push({
											id : a.relatedTableId
										})
									})
								}
							});
							return {
								profile : b.id,
								featureServices : e,
								geometry : b.content.geometry,
								includeAttachments : b.content.includeAttachments,
								mapSpatialReference : c.map.spatialReference.toJson()
							}
						}
					})(g.SyncParameters || (g.SyncParameters = {}))
				})(d.offline ||
					(d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c() {}

						c.calculateFirstDownloadWork = function (b) {
							return {
								saveProfileWork : 0.25,
								featureLayerWork : b.content.layers.length + 2,
								basemapWork : 4 * b.content.basemaps.length,
								bundleWork : 0.5
							}
						};
						c.calculateSyncWork = function (b) {
							return {
								saveProfileWork : 0,
								featureLayerWork : b.content.layers.length + 2,
								basemapWork : 2 * b.content.basemaps.length,
								bundleWork : 0.5
							}
						};
						c.noWork = function () {
							return {
								saveProfileWork : 0,
								bundleWork : 0,
								featureLayerWork : 0,
								basemapWork : 0
							}
						};
						c.calculatePercentageComplete = function (b, a) {
							return this._calculateTotalWork(b) / this._calculateTotalWork(a) * 100
						};
						c._calculateTotalWork = function (b) {
							return b.saveProfileWork + b.bundleWork + b.featureLayerWork + b.basemapWork
						};
						return c
					}
					();
					d.WorkCalculator = h
				})(d.offline || (d.offline = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					function k(b) {
						return d.SecurityUtils.getIdentity("ags-oauth2", b)
					}
					function c(b) {
						b = k(b);
						return b ? (b = d.SecurityUtils.getClaimsByType(b, "http://www.geocortex.com/security/ags/portal")[0]) ? b.value : null : null
					}
					g.getPortalIdentity = k;
					g.hasAccessToPortal = function (b) {
						return !!k(b)
					};
					g.hasCreateContentPrivilege = function (b) {
						return (b = k(b)) ? d.SecurityUtils.hasPrivilegeClaim(b, "portal:user:createItem") : !1
					};
					g.getPortalBaseUrl = c;
					g.getPortalMyContentUrl =
					function (b) {
						var a = c(b);
						return a ? String.format("{0}{1}", a, b.configuration.portalContentRelUrl || "home/content.html") : null
					};
					g.getPortalItemUrl = function (b, a) {
						var e = c(a);
						return e ? String.format("{0}{1}{2}", e, a.configuration.portalItemRelUrl || "home/item.html?id=", b) : null
					}
				})(d.PortalUtils || (d.PortalUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					g.PROJECT_TYPE = "gvh-project";
					g.SITE_ID_PROPERTY_NAME = "siteID";
					g.VIEWER_ID_PROPERTY_NAME = "viewerID";
					g.PROJECT_QUERY_STRING_KEY = "project";
					g.VIEWER_QUERY_STRING_KEY = "viewer";
					var k = function () {
						function c(b) {
							if (!b)
								throw Error("ProjectManager: Parameter 'app' is required.");
							this.app = b;
							this.convert = new g.ProjectConverter(b);
							this.filter = new g.ProjectFilter(b)
						}
						c.prototype.createEmpty = function (b) {
							var a = {};
							a[g.SITE_ID_PROPERTY_NAME] = {
								string : this.app.site.id
							};
							a[g.VIEWER_ID_PROPERTY_NAME] = {
								string : this.app.configModel.viewerId
							};
							return {
								title : b,
								fileType : g.PROJECT_TYPE,
								contentType : "application/json",
								content : {
									moduleState : {}

								},
								properties : a
							}
						};
						c.prototype.create = function (b) {
							b = this.createEmpty(b);
							return this.update(b)["return"](b)
						};
						c.prototype.update = function (b) {
							return this._exportState().then(function (a) {
								b.content = a
							})
						};
						c.prototype.remove = function (b) {
							var a = this;
							if (!b)
								throw Error('RemoveProject: parameter "project" is required.');
							var e = this.getProjectID(b);
							return this.app.waitUntilSiteInitialized().then(function () {
								return a.app.event("ProjectDeletingEvent").publish(e)
							}).then(function () {
								return a.app.site.documentStore.deleteById(e)
							}).then(function () {
								a.current &&
								a.current.id === e && (a.current = null)
							}).then(function () {
								a.app.event("ProjectDeletedEvent").publish(e)
							})["catch"](function (b) {
								a.app.event("ProjectErrorEvent").publish(null, b);
								var e = a._getResource("language-project-error-title"),
								c = a._getResource("language-project-error-delete");
								b && "writer denied" === b.formalCode && (c = a._getResource("language-project-error-delete-denied"));
								a.app.command("Alert").execute(c, e);
								throw b;
							})
						};
						c.prototype.save = function (b, a) {
							var e = this;
							void 0 === a && (a = !0);
							if (!b)
								throw Error('SaveProject: parameter "project" is required.');
							return this.app.waitUntilSiteInitialized().then(function () {
								return e.app.event("ProjectSavingEvent").publish(b)
							}).then(function () {
								return a ? (new Promise(function (a, b) {
										return h.ShellUtils.debounceViewEvents(e.app, function () {
											return a()
										})
									})).then(function () {
									return e.update(b)
								}).then(function () {
									return h.MapUtils.getThumbnailUri(e.app)
								}).then(function (a) {
									return b.thumbnail = {
										location : a
									}
								})["catch"](function (a) {
									e.app.event("ProjectErrorEvent").publish(b, a);
									var c = e._getResource("language-project-error-title"),
									d = e._getResource("language-project-error-write");
									e.app.command("Alert").execute(d, c);
									throw a;
								}) : Promise.resolve()
							}).then(function () {
								return e.write(b)
							}).then(function (a) {
								return dojo.mixin(b, a)
							}).then(function () {
								return e.app.event("ProjectSavedEvent").publish(b)
							})
						};
						c.prototype.load = function (b) {
							var a = this;
							if (!b)
								throw Error('LoadProject: parameter "project" is required.');
							var e = this.getProjectID(b);
							this.app.event("ProjectLoadingEvent").publish(e);
							"object" === typeof b && void 0 === b.content && (b = e);
							return this.getProject(b).then(function (b) {
								return a._beginLoad(b)
							}).then(function () {
								if (a.current &&
									a.current.content)
									return a._applyState(a.current.content)
							}).then(function () {
								return a._finishLoad()
							})["catch"](function (b) {
								a.isLoading = !1
							})
						};
						c.prototype.write = function (b) {
							var a = this;
							if (!b)
								throw Error('ProjectManager.write: Parameter "project" is required.');
							b.content && b.content.isDecoded && this.encodeReferences(b.content);
							return this.app.waitUntilSiteInitialized().then(function () {
								return d.framework.utils.isNullOrUndefined(b.id) ? a.app.site.documentStore.add(b).then(function (a) {
									b.id = a.id;
									return a
								}) : a.app.site.documentStore.updateById(b.id,
									b)
							})["catch"](function (e) {
								a.app.event("ProjectErrorEvent").publish(b, e);
								var f = a._getResource("language-project-error-title"),
								c = a._getResource("language-project-error-write");
								!e || "writer denied" !== e.formalCode && "create denied" !== e.formalCode || (c = a._getResource("language-project-error-write-denied"));
								a.app.command("Alert").execute(c, f);
								throw e;
							})
						};
						c.prototype.read = function (b, a) {
							var e = this;
							void 0 === a && (a = !0);
							if (!b)
								throw Error('ProjectManager.read: parameter "id" is required.');
							return this.app.waitUntilSiteInitialized().then(function () {
								return e.app.site.documentStore.getById(b,
									a)
							}).then(function (a) {
								return a ? (e.decodeReferences(a.content), e._filterApplicationState(a.content).then(function (b) {
										a.content = b;
										return a
									})) : a
							})["catch"](function (a) {
								e.app.event("ProjectErrorEvent").publish(null, a);
								var c = e._getResource("language-project-error-title"),
								d = e._getResource("language-project-error-read");
								if (a && "item missing" === a.formalCode)
									d = e._getResource("language-project-error-read-not-found").format(b);
								else if (a && "reader denied" === a.formalCode) {
									d = e._getResource("language-project-error-read-denied");
									if (e.app.command("SignIn").canExecute(null))
										throw d = e._getResource("language-project-error-sign-in-required"), e.app.command("Confirm").execute(d, c, function (a) {
											a ? e.app.command("SignIn").execute(null) : window.location.assign(h.UrlUtils.removeQueryParameter(window.location.href, "project"))
										}, {
											okLabel : e._getResource("language-project-sign-in")
										}), a;
									d = e._getResource("language-project-error-read-denied")
								}
								e.app.command("Alert").execute(d, c);
								throw a;
							})
						};
						c.prototype.getProject = function (b, a) {
							void 0 === a && (a = !0);
							if (!b)
								throw Error('ProjectManager.getProject: parameter "project" is required.');
							return "string" === typeof b ? this.app.project.read(b, a) : Promise.resolve(b)
						};
						c.prototype.getProjectID = function (b) {
							if (!b)
								throw Error('ProjectManager.getProjectID: parameter "project" is required.');
							return "string" === typeof b ? b : b.id
						};
						c.prototype.getProjectUrl = function (b) {
							if (!b || !b.id)
								return null;
							var a = this.getSiteID(b);
							if (!a)
								throw Error("ProjectManager.getProjectUrl: project siteId is null or undefined.");
							var e = this.getViewerID(b);
							if (!e)
								throw Error("ProjectManager.getProjectUrl: project viewerId is null or undefined.");
							var f = window.location.href;
							-1 < f.indexOf("?") ? f = f.substring(0, f.indexOf("?")) : -1 < f.indexOf("#") && (f = f.substring(0, f.indexOf("#")));
							var c = new h.Dictionary;
							"unknown" !== e && (a = encodeURIComponent("{0}.{1}".format(a, e)), c.set(g.VIEWER_QUERY_STRING_KEY, a));
							c.set(g.PROJECT_QUERY_STRING_KEY, encodeURIComponent(b.id));
							return "{0}{1}".format(f, h.UrlUtils.queryStringDictionaryToString(c))
						};
						c.prototype.getSiteID = function (b) {
							if (!b)
								throw Error('ProjectManager.getSiteID: parameter "project" is required.');
							return b.properties ? (b = b.properties[g.SITE_ID_PROPERTY_NAME]) ? b.string : null : null
						};
						c.prototype.getViewerID = function (b) {
							if (!b)
								throw Error('ProjectManager.getViewerID: parameter "project" is required.');
							return b.properties ? (b = b.properties[g.VIEWER_ID_PROPERTY_NAME]) ? b.string : null : null
						};
						c.prototype.validateProjectOwnership = function (b) {
							return this.app.site.documentStore.isOwner(b) ? Promise.resolve(b) : Promise.reject(this._getResource("language-project-error-owner"))
						};
						c.prototype._exportState = function () {
							var b =
								this;
							this.convert.clearCache();
							var a = this._getModules(),
							e = {};
							Object.keys(a).forEach(function (b) {
								e[b] = Promise["try"](function () {
										return a[b].exportState()
									})
							});
							return h.PromiseUtils.propsSkipRejected(e).then(function (a) {
								for (var e in a)
									a[e] || delete a[e];
								a = {
									mapScale : b.app.map.getScale(),
									mapCenter : b.convert.fromEsriGeometry(b.app.map.extent.getCenter()),
									moduleState : a
								};
								return b._filterApplicationState(a)
							}).then(function (a) {
								b.encodeReferences(a);
								return a
							})
						};
						c.prototype._applyState = function (b) {
							var a = this;
							if (!b)
								return Promise.resolve();
							this.decodeReferences(b);
							var e = b.moduleState || [];
							return Promise.map(Object.keys(e), function (b) {
								var c = a._getModules()[b];
								if (c) {
									var d = e[b];
									d.serialVersion || (d.serialVersion = 1);
									return Promise["try"](function () {
										return c.applyState(d)
									})["catch"](function (e) {
										return a.app.trace.warning('Unable to restore project state for module "{0}": {1}'.format(b, e))
									})
								}
							})["return"]()
						};
						c.prototype._applyMapExtent = function (b) {
							this.app.site.essentialsMap.extentManager.setScaleWithPriority(b.content.mapScale,
								Number.MAX_VALUE);
							b = this.convert.toEsriGeometry(b.content.mapCenter);
							this.app.site.essentialsMap.extentManager.centerAtWithPriority(b, Number.MAX_VALUE)
						};
						c.prototype._getResource = function (b) {
							return this.app.getResource("Mapping.Infrastructure", b)
						};
						c.prototype._getModules = function () {
							return this.app.moduleManager._modules
						};
						c.prototype._beginLoad = function (b) {
							var a = this;
							return this.app.waitUntilSiteInitialized().then(function () {
								if (a.isLoading)
									throw Error("Cannot load a new project until the current project has finished loading.");
								var e = a.getSiteID(b);
								if (a.app.site.id !== e)
									throw Error('The project "{0}" was created for the Essentials site ID "{1}" and is not compatible with this site.'.format(b.title, e));
								a.convert.clearCache();
								a.isLoading = !0;
								a.current = b;
								a._applyMapExtent(b)
							})
						};
						c.prototype._finishLoad = function () {
							var b = this;
							setTimeout(function () {
								return b._applyMapExtent(b.current)
							}, 150);
							this.app.event("ProjectLoadedEvent").publish(this.current);
							this.isLoading = !1
						};
						c.prototype._filterApplicationState = function (b) {
							var a = this,
							e = {
								mapCenter : this.filter.point,
								mapScale : !0,
								moduleState : {},
								isDecoded : !0
							},
							f = this._getModules();
							return Promise.map(Object.keys(f), function (c) {
								var d = f[c];
								d && (d = d.getStateFilter(), b.moduleState[c] && !d ? a.app.trace.warning('Module "{0}" has project state, but has no defined state filter. A module that participate in projects must implement ModuleBase.getStateFilter().'.format(c)) : (d = $.extend({}, d, {
												serialVersion : !0
											}), e.moduleState[c] = d))
							}).then(function () {
								return h.ObjectFilter.filter(b, e)
							})
						};
						c.prototype.encodeReferences = function (b) {
							if (b) {
								var a =
									RegExp("~", "g"),
								e = new WeakMap,
								f = [],
								c = function (b) {
									Array.isArray(b) || e.set(b, "~" + f.join("~"));
									for (var d = 0, g = Object.keys(b); d < g.length; d++) {
										var h = g[d],
										k = b[h];
										if (k && "object" === typeof k) {
											var m = e.get(k);
											m ? b[h] = m : (f.push((h + "").replace(a, "\\x7e")), c(k), f.pop())
										} else
											k && "string" === typeof k && k.startsWith("~") && (b[h] = k.replace("~", "\\x7e"))
									}
								};
								c(b);
								delete b.isDecoded
							}
						};
						c.prototype.decodeReferences = function (b) {
							if (b && !b.isDecoded) {
								var a = RegExp("\\x7e".replace("\\", "\\\\"), "g"),
								e = new WeakMap,
								f = function (c) {
									if (!e.has(c)) {
										e.set(c,
											!0);
										for (var d = 0, g = Object.keys(c); d < g.length; d++) {
											var h = g[d],
											k = c[h];
											if (k && "string" === typeof k)
												if (k.startsWith("~")) {
													for (var k = k.split("~").map(function (b) {
																return b.replace(a, "~")
															}), m = b, q = 1; q < k.length; q++) {
														var t = k[q];
														t && m && (m = m[t])
													}
													c[h] = m
												} else
													k.startsWith("\\x7e") && (c[h] = k.replace("\\x7e", "~"));
											else
												k && "object" === typeof k && f(k)
										}
									}
								};
								f(b);
								b.isDecoded = !0
							}
						};
						return c
					}
					();
					g.ProjectManager = k
				})(h.project || (h.project = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					d.allSkipRejected = function (d) {
						var c = {};
						return Promise.resolve(d).then(function (b) {
							b = (b || []).map(function (a) {
								return Promise.resolve(a)["catch"](function (a) {
									return c
								})
							});
							return Promise.all(b).then(function (a) {
								return a.filter(function (a) {
									return a !== c
								})
							})
						})
					};
					d.mapSkipRejected = function (d, c, b) {
						var a = {};
						return Promise.resolve(d).then(function (e) {
							e = (e || []).map(function (b) {
								return Promise.resolve(b)["catch"](function (b) {
									return a
								})
							});
							return Promise.map(e,
								function (b, e, d) {
								return Promise["try"](function () {
									return c(b, e, d)
								})["catch"](function (b) {
									return a
								})
							}, b).then(function (b) {
								return b.filter(function (b) {
									return b !== a
								})
							})
						})
					};
					d.propsSkipRejected = function (d) {
						return Promise.resolve(d).then(function (c) {
							var b = {};
							return Promise.map(Object.keys(c), function (a) {
								return Promise.resolve(c[a]).then(function (e) {
									b[a] = e
								}, function (a) {})
							})["return"](b)
						})
					};
					d.warnOnReject = function (d, c, b) {
						return Promise.resolve(d)["catch"](function (a) {
							c.trace.warning(b.format(a));
							return Promise.reject(a)
						})
					}
				})(d.PromiseUtils ||
					(d.PromiseUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					g.getAllFeaturesFromReportable = function (g) {
						var c = [];
						g instanceof d.FeatureSetCollection ? g.featureSets.get().forEach(function (b) {
							b.features.get().forEach(function (a) {
								c.push(a)
							})
						}) : g instanceof d.FeatureSet ? g.features.get().forEach(function (b) {
							c.push(b)
						}) : g instanceof d.Feature ? c.push(g) : g && g.constructor === Array && (c = g);
						return c
					}
				})(d.reporting || (d.reporting = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {}

					}
					();
					d.ClusterLayerArgs = h
				})(d.commandArgs || (d.commandArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {}

					}
					();
					d.SnappingFeedbackEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c() {}

						c.Default = "default";
						c.MutuallyExclusive = "mutuallyExclusive";
						return c
					}
					();
					d.LayerVisibilityType = h
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c(b, a) {
							this.filteredLayerSelectorLayerItems = [];
							this.unfilteredLayerSelectorLayerItems = [];
							this.itemTypes = {
								FOLDER : "folder",
								LAYER : "layer",
								SERVICELAYER : "serviceLayer"
							};
							this._infrastructureLibraryId = "Mapping.Infrastructure";
							this._unfilteredItems = [];
							this._userAddedLayersFolder = null;
							this.appInfo = b;
							a && (a.layerFilter && dojo.isFunction(a.layerFilter) && (this.layerFilter = a.layerFilter), a.layerStateChangeHandler && dojo.isFunction(a.layerStateChangeHandler) &&
								(this.layerStateChangeHandler = a.layerStateChangeHandler), a.enableAllLayersHandler && dojo.isFunction(a.enableAllLayersHandler) && (this.enableAllLayersHandler = a.enableAllLayersHandler), a.disableAllLayersHandler && dojo.isFunction(a.disableAllLayersHandler) && (this.disableAllLayersHandler = a.disableAllLayersHandler), a.onInitializedHandler && dojo.isFunction(a.onInitializedHandler) && (this.onInitializedHandler = a.onInitializedHandler), a.onLayerSelectorFolderItemCreated && dojo.isFunction(a.onLayerSelectorFolderItemCreated) &&
								(this.onLayerSelectorFolderItemCreated = a.onLayerSelectorFolderItemCreated), a.onLayerSelectorLayerItemCreated && dojo.isFunction(a.onLayerSelectorLayerItemCreated) && (this.onLayerSelectorLayerItemCreated = a.onLayerSelectorLayerItemCreated), a.onLayerSelectorServiceLayerItemCreated && dojo.isFunction(a.onLayerSelectorServiceLayerItemCreated) && (this.onLayerSelectorServiceLayerItemCreated = a.onLayerSelectorServiceLayerItemCreated));
							this.items = new ObservableCollection;
							this._suspendLayerStateChangeHandler = this.initialized =
								!1;
							this.initialize()
						}
						c.prototype.initialize = function () {
							this._loadLayerSelectorItems();
							this.applyFilter(this.layerFilter);
							this.setLayerStateChangeHandler(this.layerStateChangeHandler);
							this.setEnableAllLayersHandler(this.enableAllLayersHandler);
							this.setDisableAllLayersHandler(this.disableAllLayersHandler);
							if (this.onInitializedHandler && !this.initialized)
								this.onInitializedHandler(this);
							this.initialized = !0
						};
						c.prototype.applyFilter = function (b) {
							var a = this;
							this.layerFilter = b && dojo.isFunction(b) ? b : null;
							this.items.clear();
							this.filteredLayerSelectorLayerItems = [];
							if (this.layerFilter) {
								var e = function (b) {
									var c = null;
									b.itemType === a.itemTypes.FOLDER ? (c = a._generateItemCloneForFilter(b), b.items.get().forEach(function (a) {
											(a = e(a)) && (!a.isFolder || a.isFolder && a.items.length()) && c.items.addItem(a)
										})) : b.itemType === a.itemTypes.SERVICELAYER && 0 < b.items.getLength() ? (a.layerFilter(b) ? (c = a._generateItemCloneForFilter(b), a.filteredLayerSelectorLayerItems.push(c)) : c = a._creatFolderItemFromServiceLayer(b, !0, !0), b.items.get().forEach(function (a) {
											(a =
													e(a)) && (!a.isFolder || a.isFolder && a.items.length()) && c.items.addItem(a)
										})) : a.layerFilter(b) && (c = b, a.filteredLayerSelectorLayerItems.push(c));
									return c
								};
								this._unfilteredItems.forEach(function (b) {
									(b = e(b)) && (!b.isFolder || b.isFolder && b.items.length()) && a.items.addItem(b)
								})
							} else
								this.items.set(this._unfilteredItems), this.filteredLayerSelectorLayerItems = this.unfilteredLayerSelectorLayerItems.slice(0)
						};
						c.prototype.reapplyFilter = function () {
							this.applyFilter(this.layerFilter)
						};
						c.prototype.setLayerStateChangeHandler =
						function (b) {
							var a = this;
							(function () {
								a.unfilteredLayerSelectorLayerItems.forEach(function (a) {
									a._isEnabledBindingToken && (a.isEnabled.unbind(a._isEnabledBindingToken), delete a._isEnabledBindingToken)
								})
							})();
							(this.layerStateChangeHandler = b && dojo.isFunction(b) ? b : null) && this.unfilteredLayerSelectorLayerItems.forEach(function (b) {
								b._isEnabledBindingToken = b.isEnabled.bind(a, function () {
										a._suspendLayerStateChangeHandler || a.layerStateChangeHandler(b)
									})
							})
						};
						c.prototype.setEnableAllLayersHandler = function (b) {
							this.enableAllLayersHandler =
								b && dojo.isFunction(b) ? b : null
						};
						c.prototype.setDisableAllLayersHandler = function (b) {
							this.disableAllLayersHandler = b && dojo.isFunction(b) ? b : null
						};
						c.prototype.enableAllLayers = function () {
							this._suspendLayerStateChangeHandler = !0;
							this.filteredLayerSelectorLayerItems.forEach(function (b) {
								return b.isEnabled.set(!0)
							});
							this._suspendLayerStateChangeHandler = !1;
							this.enableAllLayersHandler && this.enableAllLayersHandler()
						};
						c.prototype.disableAllLayers = function () {
							this._suspendLayerStateChangeHandler = !0;
							this.filteredLayerSelectorLayerItems.forEach(function (b) {
								return b.isEnabled.set(!1)
							});
							this._suspendLayerStateChangeHandler = !1;
							this.disableAllLayersHandler && this.disableAllLayersHandler()
						};
						c.prototype.addUserAddedServiceLayer = function (b) {
							var a = this;
							b instanceof h.gis.ServiceLayerInfo && (b = b.gcxMapService);
							if (!b || this.unfilteredLayerSelectorLayerItems.filter(function (a) {
									return a.serviceLayer && a.serviceLayer.gcxMapService === b
								}).length)
								return !1;
							var e = h.gis.ServiceLayerInfo.fromGcxMapService(b),
							f = this._createServiceLayerItemFromServiceLayer(e, !0, !0);
							this.unfilteredLayerSelectorLayerItems.push(f);
							b.layers.forEach(function (b) {
								if (a.unfilteredLayerSelectorLayerItems.filter(function (a) {
										return a.layer && a.layer.gcxLayer === b
									}).length)
									return !1;
								var c = e.findLayerById(b.id);
								c || (c = h.gis.LayerInfo.fromGcxLayer(b), c.serviceLayerInfo = e, e.layers.push(c));
								if (c = a._createLayerItemFromLayer(c, !0, !0))
									f.items.addItem(c), a.unfilteredLayerSelectorLayerItems.push(c)
							});
							this._unfilteredItems.push(f);
							this.applyFilter(this.layerFilter);
							this.setLayerStateChangeHandler(this.layerStateChangeHandler);
							return !0
						};
						c.prototype.removeServiceLayer =
						function (b) {
							var a = this;
							b instanceof h.gis.ServiceLayerInfo && (b = b.gcxMapService);
							if (!b)
								return !1;
							var e = this.unfilteredLayerSelectorLayerItems.filter(function (a) {
									return a.serviceLayer && a.serviceLayer.gcxMapService === b
								});
							e.length && e.forEach(function (b) {
								return a._removeItemFromUnfilteredCollections(b)
							});
							b.layers.forEach(function (b) {
								var e = a.unfilteredLayerSelectorLayerItems.filter(function (a) {
										return a.layer && a.layer.gcxLayer === b
									});
								if (!e.length)
									return !1;
								e.forEach(function (b) {
									return a._removeItemFromUnfilteredCollections(b)
								})
							});
							this.applyFilter(this.layerFilter);
							this.setLayerStateChangeHandler(this.layerStateChangeHandler);
							return !0
						};
						c.prototype.updateServiceLayer = function (b, a, e) {
							var c = this;
							a = a || [];
							e = e || [];
							b instanceof h.gis.ServiceLayerInfo && (b = b.gcxMapService);
							if (!b)
								return !1;
							b = h.gis.ServiceLayerInfo.fromGcxMapService(b);
							for (var l = 0; e && l < e.length; l++) {
								var g = e[l],
								k = this.unfilteredLayerSelectorLayerItems.filter(function (a) {
										return a.layer && a.layer.gcxLayer === g
									});
								k.length && k.forEach(function (a) {
									return c._removeItemFromUnfilteredCollections(a)
								})
							}
							this._userAddedLayersFolder ||
							(e = {
									id : d.framework.utils.alphaNumericToken() + ":UserAdded",
									name : this.appInfo.gcxApp.getResource(this._infrastructureLibraryId, "language-layerlist-user-added-layers-folder-title"),
									isExpanded : !0,
									isVisible : !0,
									items : [],
									canToggleVisibility : null,
									iconUri : null,
									isVisibleInLayerList : null,
									layerID : null,
									mapServiceID : null,
									layerVisibilityType : null,
									themeSettings : null,
									type : null
								}, this._userAddedLayersFolder = this._createFolderItemFromRestItem(e, !0, !0));
							for (e = 0; a && e < a.length; e++)
								if (g = a[e], k = this.unfilteredLayerSelectorLayerItems.filter(function (a) {
											return a.layer &&
											a.layer.gcxLayer === g
										}), !k.length && (k = b.findLayerById(g.id), k || (k = h.gis.LayerInfo.fromGcxLayer(g), k.serviceLayerInfo = b, b.layers.push(k)), k = this._createLayerItemFromLayer(k, !0, !0)))
									this._userAddedLayersFolder.items.addItem(k), this.unfilteredLayerSelectorLayerItems.push(k);
							this._userAddedLayersFolder && 0 < this._userAddedLayersFolder.items.length() && 0 > this._unfilteredItems.indexOf(this._userAddedLayersFolder) && this._unfilteredItems.unshift(this._userAddedLayersFolder);
							this.applyFilter(this.layerFilter);
							this.setLayerStateChangeHandler(this.layerStateChangeHandler);
							return !0
						};
						c.prototype._removeItemFromUnfilteredCollections = function (b) {
							var a = this;
							if (b) {
								var e = [],
								c = function (a, b) {
									var e = a.indexOf(b);
									-1 < e && a.splice(e, 1)
								},
								d = function (a, b) {
									for (var g = a.length - 1; 0 <= g; g--) {
										var h = a[g];
										h === b ? a.splice(g, 1) : h.isFolder && h.items.length() && (c(h.items.get(), b), h.items.pulse(), d(h.items.get(), b), 0 === h.items.length() && e.push(h))
									}
								};
								b.isFolder || c(this.unfilteredLayerSelectorLayerItems, b);
								d(this._unfilteredItems, b);
								e.length &&
								e.forEach(function (b) {
									return a._removeItemFromUnfilteredCollections(b)
								})
							}
						};
						c.prototype._loadLayerSelectorItems = function () {
							var b = this,
							a = this.appInfo.gcxApp.site.layerListRestEndpoint,
							e = this.appInfo.mapInfo;
							this._unfilteredItems = [];
							this.unfilteredLayerSelectorLayerItems = [];
							var c = function (a) {
								var d,
								g = void 0 != a.isExpanded ? a.isExpanded : !0;
								switch (a.type) {
								case "folder":
									d = b._createFolderItemFromRestItem(a, !0, g);
									break;
								case "mapService":
									d = e.findMapServiceById(a.mapServiceID);
									d = b._createServiceLayerItemFromServiceLayer(d,
											!0, g);
									b.unfilteredLayerSelectorLayerItems.push(d);
									break;
								case "layer":
									d = (d = e.findMapServiceById(a.mapServiceID)) && d.findLayerById(a.layerID),
									d = b._createLayerItemFromLayer(d, !0, g),
									b.unfilteredLayerSelectorLayerItems.push(d)
								}
								if (d && a.items)
									for (g = 0; g < a.items.length; g++) {
										var h = c(a.items[g]);
										h && d.items.addItem(h)
									}
								return "folder" === a.type && d && 0 === d.items.getLength() ? null : d
							};
							a.items && a.items.length && a.items.forEach(function (a) {
								(a = c(a)) && b._unfilteredItems.push(a)
							});
							this._loadSelectorItemsNotInLayerList()
						};
						c.prototype._loadSelectorItemsNotInLayerList = function () {
							for (var b = 0; b < this.appInfo.mapInfo.serviceLayers.length; b++) {
								var a = null,
								e = this.appInfo.mapInfo.serviceLayers[b];
								e && !e.includeInLayerList && (a = this._createServiceLayerItemFromServiceLayer(e, !0, !0), this._unfilteredItems.push(a), this.unfilteredLayerSelectorLayerItems.push(a));
								for (var c = 0; c < e.layers.length; c++) {
									var d = e.layers[c];
									!d || d && d.includeInLayerList || (d = this._createLayerItemFromLayer(d, !0, !0), a && d ? (a.items.addItem(d), this.unfilteredLayerSelectorLayerItems.push(d)) :
										null == a && d && (this._unfilteredItems.push(d), this.unfilteredLayerSelectorLayerItems.push(d)))
								}
							}
						};
						c.prototype._createFolderItemFromRestItem = function (b, a, e) {
							if (!b)
								return null;
							var c = {};
							c.itemType = this.itemTypes.FOLDER;
							c.name = new Observable(b.name || "Layers");
							c.isFolder = !0;
							c.isEnabled = new Observable(!!a);
							c.isExpanded = new Observable(!!e);
							c.iconUri = new Observable("");
							c.items = new ObservableCollection;
							this._setTooltips(c);
							if (this.onLayerSelectorFolderItemCreated)
								this.onLayerSelectorFolderItemCreated(c);
							return c
						};
						c.prototype._creatFolderItemFromServiceLayer = function (b, a, e) {
							var c = {};
							c.itemType = this.itemTypes.FOLDER;
							c.name = new Observable(b.name.get() || "Layers");
							c.isFolder = !0;
							c.isEnabled = new Observable(!!a);
							c.isExpanded = new Observable(!!e);
							c.iconUri = new Observable(b.iconUri.get() || "");
							c.items = new ObservableCollection;
							this._setTooltips(c);
							if (this.onLayerSelectorFolderItemCreated)
								this.onLayerSelectorFolderItemCreated(c);
							return c
						};
						c.prototype._createLayerItemFromLayer = function (b, a, e) {
							if (!b)
								return null;
							var c = {};
							c.itemType = this.itemTypes.LAYER;
							c.isEnabled = new Observable(!!a);
							c.isExpanded = new Observable(!!e);
							c.name = new Observable(b.gcxLayer.displayName);
							c.isFolder = !1;
							c.iconUri = new Observable(b.gcxLayer.iconUri);
							c.layer = b;
							c.items = new ObservableCollection([]);
							this._setTooltips(c);
							if (this.onLayerSelectorLayerItemCreated)
								this.onLayerSelectorLayerItemCreated(c);
							return c
						};
						c.prototype._createServiceLayerItemFromServiceLayer = function (b, a, e) {
							if (!b)
								return null;
							var c = {};
							c.itemType = this.itemTypes.SERVICELAYER;
							c.isEnabled =
								new Observable(!!a);
							c.isExpanded = new Observable(!!e);
							c.name = new Observable(b.gcxMapService.displayName);
							c.isFolder = !1;
							c.iconUri = new Observable(b.gcxMapService.iconUri);
							c.serviceLayer = b;
							c.items = new ObservableCollection([]);
							this._setTooltips(c);
							if (this.onLayerSelectorServiceLayerItemCreated)
								this.onLayerSelectorServiceLayerItemCreated(c);
							return c
						};
						c.prototype._generateItemCloneForFilter = function (b) {
							var a = dojo.mixin({}, b);
							a.isEnabled = new Observable(!0);
							a.items = new ObservableCollection;
							void 0 != b.serviceLayer &&
							(a.serviceLayer = b.serviceLayer);
							return a
						};
						c.prototype._setTooltips = function (b) {
							var a = this.appInfo.gcxApp.getResource(this._infrastructureLibraryId, "language-layerselector-item-expand").format(b.name.get()),
							e = this.appInfo.gcxApp.getResource(this._infrastructureLibraryId, "language-layerselector-state-toggle").format(b.name.get()),
							c = this.appInfo.gcxApp.getResource(this._infrastructureLibraryId, "language-layerselector-icon-tooltip").format(b.name.get());
							b.expanderTooltip = new Observable(a);
							b.stateToggleTooltip =
								new Observable(e);
							b.iconTooltip = new Observable(c)
						};
						return c
					}
					();
					g.LayerSelector = k
				})(h.layerSelector || (h.layerSelector = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function (c, b, a, e, f, d, g) {
							this.text = c;
							this.imageUri = b;
							this.userClosedCallback = a;
							this.imageClass = e;
							this.id = f;
							this.timeoutMS = d || 3E4;
							this.showBusyIcon = !!g
						}
					}
					();
					d.AddStatusArgs = h
				})(d.commandArgs || (d.commandArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c(b, a, e, c) {
							this.destroyContentView = !1;
							this.delay = 0;
							this.elementID = b || null;
							this.mapPoint = a || null;
							this.content = e || null;
							this.title = c || null
						}
						c.prototype.getNode = function () {
							if (this.content) {
								if (this.contentIsView())
									return this.content.root;
								if (this.content.nodeName)
									return this.content;
								if ("string" === typeof this.content) {
									var b = document.createElement("div");
									b.innerHTML = (new h.FilterUtils.UnsafeHtml(this.content)).safeHtml;
									return b
								}
							}
							return null
						};
						c.prototype.getTitleNode = function () {
							if (this.title) {
								if (this.titleIsView())
									return this.title.root;
								if (this.title.nodeName)
									return this.title;
								if ("string" === typeof this.title) {
									var b = document.createElement("div");
									b.innerHTML = (new h.FilterUtils.UnsafeHtml(this.content)).safeHtml;
									return b
								}
							}
							return null
						};
						c.prototype.contentIsView = function () {
							return this.content && this.content instanceof d.framework.ui.ViewBase
						};
						c.prototype.titleIsView = function () {
							return this.title && this.title instanceof d.framework.ui.ViewBase
						};
						return c
					}
					();
					g.ShowMapElementArgs = k
				})(h.commandArgs || (h.commandArgs = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs = geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ShowMapElementArgs;
geocortex.essentialsHtmlViewer.mapping.infrastructure.AngleFormat = geocortex.essentialsHtmlViewer.mapping.infrastructure.coordinates.AngleFormat;
geocortex.essentialsHtmlViewer.mapping.infrastructure.AngleDirectionSystem = geocortex.essentialsHtmlViewer.mapping.infrastructure.coordinates.AngleDirectionSystem;
geocortex.essentialsHtmlViewer.mapping.infrastructure.CoordinateUtils = geocortex.essentialsHtmlViewer.mapping.infrastructure.coordinates.CoordinateUtils;
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {
							this.token = this.username = this.result = null
						}
					}
					();
					d.AuthenticationEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
geocortex.essentialsHtmlViewer.mapping.infrastructure.AuthenticationEventArgs = geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.AuthenticationEventArgs;
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {
							this.accuracyThreshold = this.typeOfGeolocation = this.location = this.projectedMapPoint = this.mapPoint = null;
							this.timedOut = !1
						}
					}
					();
					d.GeolocationEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {
							this.currentResolution = this.currentScale = this.centerLatLon = null
						}
					}
					();
					d.MapExtentEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {
							this.isCancelled = !1
						}
					}
					();
					d.UserEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				var g = function (g) {
					function c(b, a) {
						g.call(this, b, a);
						this._xssHtmlValidator = new h.validation.XssHtmlValidator({
								contentPolicy : b.defaultContentPolicy
							})
					}
					__extends(c, g);
					c.prototype.attach = function (b) {
						var a = this;
						if (b && b instanceof h.Feature)
							return this.descriptionApply(b, this.root).then(function () {
								return g.prototype.attach.call(a, b)
							});
						g.prototype.attach.call(this, b);
						return Promise.resolve()
					};
					c.prototype.descriptionGet = function (b) {
						return this.getDescriptionContent(b)
					};
					c.prototype.getContentFieldFormat = function (b) {
						switch (this.contentField) {
						case "label":
							return b.labelFormat.get();
						case "description":
							return b.descriptionFormat.get();
						case "longDescription":
							return b.longDescriptionFormat.get();
						default:
							return b.longDescriptionFormat.get()
						}
					};
					c.prototype.getDescriptionContent = function (b, a) {
						var e = this,
						c = a;
						c || (c = this.getContentFieldFormat(b));
						var d = this._extractCommandHyperlinks(c),
						c = d.html;
						return this._sanitizeHtml(b.formatTemplateString(c)).then(function (a) {
							d.html = a;
							a =
								e._injectCommandHyperlinks(d);
							return a = e.insertLinkAndImageBindings(a)
						})
					};
					c.prototype.descriptionApply = function (b, a) {
						return this.applyDescriptiveTemplate(b, a)
					};
					c.prototype.applyDescriptiveTemplate = function (b, a) {
						var e = this,
						c = [],
						d = this.getContentFieldFormat(b);
						if (d && b.hasRelationships) {
							var g = d.match(/{{.[^}]+?\..+?}}|{.[^}]+?\..+?}/g),
							h = [],
							k;
							for (k in g)
								if (g.hasOwnProperty(k)) {
									var m = g[k],
									m = m.substr(1, m.length - 2);
									h.push(m.match(/[^.].[^.]*/g))
								}
							if (h.length && b.layer && b.layer.relationships)
								for (k in b.layer.relationships)
									if (b.layer.relationships.hasOwnProperty(k)) {
										var q =
											b.layer.relationships[k];
										-1 == h.toString().indexOf(q.name) && -1 == h.toString().indexOf(q.displayName) || c.push(new Promise(function (c, f) {
												e.app.command("GetRelatedFeatures").execute({
													mapService : b.layer.mapService,
													currentFeature : b,
													relationshipId : q.id,
													objectId : b.id.get(),
													successCallback : function (f) {
														return function (k) {
															if (0 < k.length)
																for (var m in h) {
																	if (h.hasOwnProperty(m)) {
																		var r = k[0],
																		q = h[m],
																		E = q[0].trim(),
																		q = q[1].trim();
																		if (-1 !== f.indexOf(E) && void 0 !== r.attributes[q])
																			for (m in g)
																				if (g.hasOwnProperty(m)) {
																					var s = g[m];
																					-1 !== d.indexOf(s) && -1 !== s.indexOf(E) && -1 !== s.indexOf(q) && (d = d.replace(s, r.attributes[q]), e.getDescriptionContent(b, d).then(function (b) {
																							return a.innerHTML = b
																						}).then(function () {
																							return c()
																						}))
																				}
																	}
																}
															else
																c()
														}
													}
													("{0}-{1}".format(q.name, q.displayName)),
													errorCallback : function (a) {
														a.message = "There was an error retrieving related features: " + a.message;
														e.app.trace.warning(a.message);
														c(a)
													}
												})
											}))
									}
						}
						c.push(this.getDescriptionContent(b).then(function (b) {
								return a.innerHTML = b
							}));
						return Promise.all(c).then(function () {
							return null
						})
					};
					c.prototype._extractCommandHyperlinks = function (b) {
						var a = [];
						if (!b)
							return {
								html : b,
								commandHyperlinkPlaceholders : a
							};
						b = b.replace(/\bhref="#?command:.*?"/ig, function (b) {
								var c = 'href="mailto:' + d.framework.utils.alphaNumericToken() + '"';
								a.push({
									commandHyperlink : b,
									placeholder : c
								});
								return c
							});
						return {
							html : b,
							commandHyperlinkPlaceholders : a
						}
					};
					c.prototype._injectCommandHyperlinks = function (b) {
						var a = b.html,
						c = b.commandHyperlinkPlaceholders;
						return a ? a.replace(/\bhref="mailto:.*?"/ig, function (a) {
							for (var b = 0; b < c.length; b++) {
								var d =
									c[b];
								if (a === d.placeholder)
									return d.commandHyperlink
							}
						}) : ""
					};
					c.prototype._sanitizeHtml = function (b) {
						return this._xssHtmlValidator.validate(b, {
							sanitizeOptions : {
								allowFrames : !0,
								allowArbitraryHyperlinks : !0,
								uriTransformer : function (a, b) {
									return b.type !== h.FilterUtils.UriType.NavigableLink ? a : /^mailto\:/.test(a) ? a : "command:OpenWebPage?" + a
								}
							}
						}).then(function (a) {
							return a.validatedValue
						})
					};
					c.prototype.cleansedFormatForFormat = function (b) {
						return this.insertLinkAndImageBindings(b)
					};
					c.prototype.insertLinkAndImageBindings =
					function (b) {
						var a = this;
						if (null === b)
							return null;
						if (b in this._descFormats)
							return this._descFormats[b];
						var c = /(<a.*?href\s*?=\s*?")(command:.+?)(".*?)(\/?>)/,
						f = b.replace(/<a[^>]*(\/?>)/g, function (b, f, d, g) {
								return (f = b.match(c)) ? '<a _key="' + a.keyForUri(f[2]) + '" href="javascript:void(0)" data-binding="{@event-onclick: handleHyperlinkClick}{@event-mouseup: ignoreEvent}{@event-mousedown: ignoreEvent}"' + f[4] : b
							}),
						f = f.replace(/<img/g, '<img data-binding="{@event-load: handleImgLoad}"');
						return this._descFormats[b] =
							f
					};
					c.prototype.handleImgLoad = function (b) {};
					c.prototype.keyForUri = function (b) {
						var a = dojo.indexOf(this._uris, b);
						0 <= a ? a : (a = this._uris.length, this._uris.push(b));
						return a
					};
					c.prototype.parseArguments = function (b, a, c) {
						var f = {};
						if ("none" === a)
							return null;
						if ("string" === a)
							return this.tryPerformTokenSubstitution(b, c, f) ? [f.value] : [b];
						if ("list" === a) {
							var d;
							try {
								d = JSON.parse(b)
							} catch (g) {
								d = b.split("&")
							}
							for (var h = 0; h < d.length; h++)
								this.tryPerformTokenSubstitution(d[h], c, f) && (d[h] = f.value);
							return d
						}
						try {
							h = JSON.parse(b)
						} catch (k) {
							if (0 >
								b.indexOf("=")) {
								if (this.tryPerformTokenSubstitution(b, c, f))
									return [f.value];
								this.app.trace.warning("The specified parameter could not be parsed to a valid Object in JSON or Query String format.");
								return [null]
							}
							h = dojo.queryToObject(b)
						}
						for (var m in h)
							h.hasOwnProperty(m) && "function" !== typeof h[m] && this.tryPerformTokenSubstitution(h[m], c, f) && (h[m] = f.value);
						c = null;
						"object" !== a && (a = dojo.getObject(a)(), c = h, h = dojo.safeMixin(a, h));
						c && h.spatialReference && !c.spatialReference && (h.spatialReference = null);
						return [h]
					};
					c.prototype.tryPerformTokenSubstitution = function (b, a, c) {
						var f = this;
						if (null === b || void 0 === b || !(a && a instanceof h.Feature))
							return c.value = null, !1;
						var l = a.esriFeature && a.esriFeature.get && a.esriFeature.get() || null;
						if ("{$Feature}" === b)
							return c.value = a, !0;
						if ("{$Graphic}" === b)
							return c.value = l || null, null === c.value ? !1 : !0;
						if ("{$Geometry}" === b)
							return c.value = l && l.geometry || null, null === c.value ? !1 : !0;
						if ("string" === typeof b) {
							var g = !1;
							b = b.replace(/{.+?}/g, function (b) {
									g = !0;
									b = b.substring(1, b.length - 1);
									var c = l && l.attributes[b];
									if (c)
										return c;
									!c && a.layer && (c = d.essentials.utilities.StringUtilities.replaceLayerTokens(b, a.layer));
									!c && a.layer && a.layer.mapService && (c = d.essentials.utilities.StringUtilities.replaceMapServicetokens(b, a.layer.mapService));
									if (0 < c.length)
										return c;
									f.app.trace.warning("The token syntax {{0}} was detected, but could not be matched to a valid replacement.".format(b));
									return ""
								});
							c.value = b;
							return g
						}
						return !1
					};
					c.prototype.decodeHtmlQuotes = function (b) {
						b = b.replace(/&quot;/g, '"');
						return b = b.replace(/&39;/g, "'")
					};
					c.prototype.decodeHtmlAmpersands = function (b) {
						return b = b.replace(/&amp;/g, "&")
					};
					c.prototype.handleHyperlinkClick = function (b, a, c) {
						b = a.getAttribute("_key");
						if (b = this._uris[b])
							b = new dojo._Url(b), "command" === b.scheme && this.runCommand(b.path, b.query, c);
						return !1
					};
					c.prototype.ignoreEvent = function (b, a, c) {
						return !1
					};
					c.prototype.runCommand = function (b, a, c) {
						var f = this.app.command(b),
						l = d.essentialsHtmlViewer.Commands.metadataForCommandName(b);
						null === l ? this.app.trace.warning('The specified command "{0}" has no associated metadata.'.format(b)) :
						l.isHyperlinkable ? (b = [], a && (a = this.decodeHtmlQuotes(a), a = this.decodeHtmlAmpersands(a), b = this.parseArguments(a, l.arguments, c)), f.execute.apply(f, b)) : this.app.trace.warning('The specified command "{0}" is not able to be hyperlinked.'.format(b))
					};
					return c
				}
				(d.framework.ui.ViewBase);
				h.FeatureDescriptionPresenterView = g;
				g.prototype._uris = [];
				g.prototype._descFormats = {};
				g.prototype.contentField = null
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function h(c) {
						c && d.framework.ui.animation.runWhenIdle(function () {
							try {
								c !== document.activeElement && c.focus()
							} catch (b) {}

						})
					}
					g.focusOnFirstInput = function (c) {
						if (c && c.root && !(c.app && c.app.modalRegionSingleton && c.app.modalRegionSingleton.isActive && "ModalViewContainerView" !== c.id))
							try {
								for (var b = $(c.root).find("input, a, button, select, textarea, [tabindex]").not(".inactive, .bound-invisible, .disabled, .close-16, .back-16, [tabindex=-1], [readonly]:not(.control-readonly)"), a =
										0; a < b.length; a++) {
									var e = b[a];
									if (!(1 <= $(e).parentsUntil(c.root, ".inactive, .bound-invisible, .disabled, .invisible, .hidden-hoisted-menu").length)) {
										if (-1 !== $.inArray(e.tagName.toLowerCase(), ["select", "input", "textarea"])) {
											if (e === document.activeElement)
												break;
											$(e).addClass("control-readonly");
											e.setAttribute("readonly", "true");
											h(e);
											$(e).one("blur", function (a) {
												e.removeAttribute("readonly");
												$(e).removeClass("control-readonly")
											});
											$(document).off("keypress.focus-control mousedown.focus-control touchstart.focus-control");
											$(document).off("keydown.focus-control");
											$(document).on("keydown.focus-control", function (a) {
												e.getAttribute("readonly") ? 8 === a.keyCode && a.preventDefault() : $(document).off("keydown.focus-control")
											});
											$(document).one("keypress.focus-control mousedown.focus-control touchstart.focus-control", function (a) {
												return function (a, b) {
													b.removeAttribute("readonly");
													$(b).removeClass("control-readonly");
													if ((a.target || a.srcElement) !== b)
														b.blur();
													else {
														b.blur();
														h(b);
														var c = b.getAttribute("type");
														c && c.toLowerCase && (c = c.toLowerCase());
														("textarea" === b.tagName.toLowerCase() || "true" === b.contentEditable || c && 0 <= "date datetime datetime-local email month number password search text tel time week".split(" ").indexOf(c)) && "keypress" === a.type && (0 != a.keyCode && $(b).val($(b).val() + String.fromCharCode(a.keyCode)), /Edge\/12./i.test(navigator.userAgent) && setTimeout(function () {
																b.setSelectionRange(1, 1)
															}, 10))
													}
													$(document).off("keypress.focus-control mousedown.focus-control touchstart.focus-control");
													$(document).off("keydown.focus-control")
												}
												(a, e)
											})
										} else
											h(e);
										break
									}
								}
							} catch (f) {
								c.app && c.app.trace.debug("Could not focus: " + f)
							}
					};
					g.focusOnMap = function (c) {
						if (c) {
							var b = function (a) {
								a = a.root;
								$(a).find("svg").attr("focusable", "false");
								a.tabIndex = 0;
								h(a)
							};
							if (c.loaded)
								b(c);
							else
								var a = c.on("load", function (c) {
										a.remove();
										b(c.map)
									})
						}
					};
					g.focus = h
				})(h.FocusUtils || (h.FocusUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					function k(a, b) {
						return b && a && a.name && (-1 !== a.name.indexOf(".Name()", a.name.length - 7) || b.getFieldByName(a.name + ".Name()")) ? !0 : !1
					}
					function c(a, c, e, f, d, l, g, h) {
						void 0 === d && (d = !1);
						void 0 === h && (h = "Mapping");
						var k = [],
						n = [],
						m = 0,
						q = {},
						D = function () {
							for (var a = 0; a < k.length; a++)
								if (k[a].visible)
									if (d && !k[a].hasOwnProperty("measurementId"))
										k.splice(a, 1);
									else {
										var b = k[a].getLayer();
										b && b.remove(k[a])
									}
								else
									k.splice(a, 1)
						};
						if (a && c && c.length && e) {
							for (var A = 0; A <
								c.length; A++) {
								var C = e.map.getLayer(c[A]);
								C && n.push(C)
							}
							if (n.length) {
								for (c = 0; c < n.length; c++)
									(A = b(a, n[c], e)) && A.length && (k = k.concat(A));
								for (a = 0; a < k.length && !(n = k[a], n.visible && (n.hasOwnProperty("measurementId") ? q.hasOwnProperty(n.measurementId) || (q[n.measurementId] = !0, m++) : d || m++), 1 < m); a++);
								0 === m ? f && f(k) : 1 !== m && l ? (l = e.getResource(h, l), g = g ? e.getResource(h, g) : null, e.command("Confirm").execute(l, g, function (a) {
										a ? D() : k = [];
										f && f(k)
									})) : (D(), f && f(k))
							} else
								e.trace.error("Error deleting markup. No graphics layer(s) found."),
								f && f(k)
						} else
							e ? e.trace.error("Error deleting markup. Required parameters missing.") : console.log("Error deleting markup. Required parameters missing."), f && f(k)
					}
					function b(b, c, d, l, g) {
						void 0 === g && (g = 6);
						var h = null,
						k = [];
						if (!b || !c || !d)
							return d ? d.trace.error("Error retrieving markup. Required parameters missing.") : console.log("Error retrieving markup. Required parameters missing."), k;
						if (!c.graphics.length)
							return k;
						"point" == b.type ? h = e(b, g, d).getExtent() : "polyline" == b.type ? h = b.getExtent() : "polygon" == b.type &&
							(h = b.getExtent());
						if (null == h)
							return d.trace.error("Error retrieving markup. Could not compute extent."), k;
						for (b = 0; b < c.graphics.length; b++)
							if (h.intersects(c.graphics[b].geometry))
								k.push(c.graphics[b]);
							else if (c.graphics[b].symbol instanceof esri.symbol.SimpleMarkerSymbol)
								if (c.graphics[b].geometry instanceof esri.geometry.Point)
									g = e(c.graphics[b].geometry, l || c.graphics[b].symbol.size, d), h.intersects(g) && k.push(c.graphics[b]);
								else {
									if (c.graphics[b].geometry instanceof esri.geometry.Multipoint) {
										g = c.graphics[b].symbol;
										for (var n = c.graphics[b].geometry, m = 0; m < n.points.length; m++) {
											var q = new esri.geometry.Point(n.points[m], n.spatialReference);
											if (h.intersects(e(q, l || g.size, d))) {
												k.push(c.graphics[b]);
												break
											}
										}
									}
								}
							else if (c.graphics[b].symbol instanceof esri.symbol.TextSymbol) {
								var n = g = c.graphics[b].symbol,
								m = d.map.toScreen(c.graphics[b].geometry),
								v = f(n.text, n.font.family, n.font.size, n.font.weight),
								q = v.height,
								v = v.width;
								m.x += n.xoffset;
								m.y -= n.yoffset;
								switch (n.align) {
								case esri.symbol.TextSymbol.ALIGN_START:
									var z = new esri.geometry.Point(m.x,
											m.y - q, null),
									D = new esri.geometry.Point(m.x + v, m.y - q, null),
									A = new esri.geometry.Point(m.x, m.y, null),
									C = new esri.geometry.Point(m.x + v, m.y, null);
									break;
								case esri.symbol.TextSymbol.ALIGN_MIDDLE:
									z = new esri.geometry.Point(m.x - v / 2, m.y - q, null);
									D = new esri.geometry.Point(m.x + v / 2, m.y - q, null);
									A = new esri.geometry.Point(m.x - v / 2, m.y, null);
									C = new esri.geometry.Point(m.x + v / 2, m.y, null);
									break;
								case esri.symbol.TextSymbol.ALIGN_END:
									z = new esri.geometry.Point(m.x - v, m.y - q, null),
									D = new esri.geometry.Point(m.x, m.y - q, null),
									A = new esri.geometry.Point(m.x -
											v, m.y, null),
									C = new esri.geometry.Point(m.x, m.y, null)
								}
								z = d.map.toMap(z);
								D = d.map.toMap(D);
								A = d.map.toMap(A);
								C = d.map.toMap(C);
								n = new esri.geometry.Polygon({
										rings : [[[z.x, z.y], [D.x, D.y], [C.x, C.y], [A.x, A.y]]],
										spatialReference : z.spatialReference
									});
								n = a(g.angle, c.graphics[b].geometry, n);
								h.intersects(n) && k.push(c.graphics[b])
							}
						return k
					}
					function a(a, b, c) {
						c = new esri.geometry.Polygon(c.toJson());
						a = Math.PI / 180 * (360 - (0 > a ? 360 + a : a) % 360);
						for (var e = 0; e < c.rings.length; e++)
							for (var f = 0; f < c.rings[e].length; f++) {
								var d = c.getPoint(e,
										f),
								l = (d.x - b.x) * Math.cos(a) - (d.y - b.y) * Math.sin(a) + b.x,
								g = (d.x - b.x) * Math.sin(a) + (d.y - b.y) * Math.cos(a) + b.y;
								d.setX(l);
								d.setY(g);
								c.setPoint(e, f, d)
							}
						return c
					}
					function e(a, b, c) {
						b = parseFloat(b);
						a = c.map.toScreen(a);
						var e = b / Math.sqrt(2) / 2;
						b = new esri.geometry.Point(a.x - e, a.y - e, null);
						var f = new esri.geometry.Point(a.x + e, a.y - e, null),
						d = new esri.geometry.Point(a.x - e, a.y + e, null);
						a = new esri.geometry.Point(a.x + e, a.y + e, null);
						b = c.map.toMap(b);
						f = c.map.toMap(f);
						d = c.map.toMap(d);
						a = c.map.toMap(a);
						return new esri.geometry.Polygon({
							rings : [[[b.x,
										b.y], [f.x, f.y], [a.x, a.y], [d.x, d.y], [b.x, b.y]]],
							spatialReference : b.spatialReference
						})
					}
					function f(a, b, c, e) {
						void 0 === e && (e = "normal");
						var f = document.body,
						d = document.createElement("div");
						b = {
							fontFamily : b,
							fontSize : void 0 != c && "number" === typeof c ? c + "px" : c,
							fontWeight : e,
							padding : "0",
							position : "absolute",
							lineHeight : "1",
							visibility : "hidden"
						};
						for (var l in b)
							d.style[l] = b[l];
						d.appendChild(document.createTextNode(a));
						f.appendChild(d);
						a = {
							width : d.clientWidth,
							height : d.clientHeight
						};
						f.removeChild(d);
						return a
					}
					function l(a,
						b, c) {
						var e = c.map.getLayer(a);
						!e && b && (e = new esri.layers.GraphicsLayer, e.id = a, c.map.addLayer(e));
						return e
					}
					var n = {};
					g.sanitizeAttributeNames = function (a, b) {
						var c = b.mapService ? "{0}.{1}".format(b.mapService.id, b.id) : null,
						e;
						if (c && n[c])
							e = n[c];
						else {
							e = {};
							for (var f = 0; f < b.fields.length; f++) {
								var d = b.fields[f];
								k(d, b) || (e[d.alias] = d.name)
							}
							c && (n[c] = e)
						}
						var c = [],
						l;
						for (l in e)
							e.hasOwnProperty(l) && a.attributes.hasOwnProperty(l) && ("Null" === a.attributes[l] && (a.attributes[l] = null), f = a.attributes[l], void 0 !== f && (f = {
										alias : l,
										name : e[l],
										value : f
									}, f.alias != f.name && c.push(f)));
						for (e = 0; e < c.length; e++)
							l = c[e], delete a.attributes[l.alias], a.attributes[l.name] = l.value
					};
					g._isSEPCodedDomainField = k;
					g.deleteMarkupSilently = function (a, b, e, f, d) {
						void 0 === d && (d = !1);
						c(a, b, e, f, d)
					};
					g.deleteMarkup = c;
					g.getMarkupFromGeometry = b;
					g.rotatePolygon = a;
					g.getPolygonFromPoint = e;
					g.getRenderedTextMarkupSize = f;
					g.addGraphicToLayer = function (a, b, c) {
						return a ? (b = l(b, !0, c), b.add(a), b.visible || b.setVisibility(!0), !0) : !1
					};
					g.getGraphicsLayer = l;
					g.getUserGraphicsLayers =
					function (a) {
						var b = function (b) {
							return a.site.essentialsMap.mapServices.some(function (a) {
								return a.serviceLayer === b || a.serviceLayer instanceof esri.layers.KMLLayer && 0 <= a.serviceLayer.getLayers().indexOf(b)
							})
						},
						c = [],
						e = ["snapping_graphics", "snapping_helper_graphics", "DefaultPushpinsLayer"],
						f = a.highlightManager.getHighlightLayers(),
						l;
						for (l in f)
							e.push(f[l].id);
						a.map.graphicsLayerIds.forEach(function (f) {
							var l = a.map.getLayer(f);
							b(l) || l instanceof d.ClusterLayer || l.id.endsWith("-explodedClusterLayer") || 0 <=
							e.indexOf(f) || c.push(l)
						});
						return c
					}
				})(d.GraphicUtils || (d.GraphicUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function h(c, b, a) {
						return d.framework.utils.ArrayUtils.firstOrDefault(c.claims, function (c) {
							return c.type === b && c.value === a
						})
					}
					g.getIdentity = function (c, b) {
						var a = b.site;
						return a && a.principal && a.principal.identities ? d.framework.utils.ArrayUtils.firstOrDefault(a.principal.identities, function (a) {
							return a.authenticationType === c
						}) : null
					};
					g.getClaimsByType = function (c, b) {
						return c.claims.filter(function (a) {
							return a.type === b
						})
					};
					g.getClaimsByValue =
					function (c, b) {
						return c.claims.filter(function (a) {
							return a.value === b
						})
					};
					g.getClaimByTypeAndValue = h;
					g.hasPrivilegeClaim = function (c, b) {
						return !!h(c, "http://www.geocortex.net/security/claims/privilege", b)
					}
				})(h.SecurityUtils || (h.SecurityUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.selection || (d.selection = {});
	d = d.CombineMode || (d.CombineMode = {});
	d.REPLACE = "replace";
	d.UNION = "union";
	d.SUBTRACT = "subtract";
	d.INTERSECT = "intersect"
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c(b) {
							this._store = new h.Dictionary;
							this.app = b
						}
						c.prototype.findByName = function (b) {
							b = this.find({
									name : b
								});
							return d.framework.utils.ArrayUtils.firstOrDefault(b)
						};
						c.prototype.findByCollectionId = function (b) {
							b = this.find({
									featureSetCollectionIds : [b]
								});
							return d.framework.utils.ArrayUtils.firstOrDefault(b)
						};
						c.prototype.findById = function (b) {
							b = this.find({
									ids : [b]
								});
							return d.framework.utils.ArrayUtils.firstOrDefault(b)
						};
						c.prototype.findAll =
						function () {
							return this.find()
						};
						c.prototype.find = function (b) {
							b = b || {};
							var a = this._store.values();
							b.ids && 0 < b.ids.length && (a = a.filter(function (a) {
										return -1 < b.ids.indexOf(a.id)
									}));
							b.featureSetCollectionIds && 0 < b.featureSetCollectionIds.length && (a = a.filter(function (a) {
										return -1 < b.featureSetCollectionIds.indexOf(a.featureSetCollectionId)
									}));
							b.name && (a = a.filter(function (a) {
										return a.name && a.name == b.name
									}));
							if (b.dateCreatedMin && b.dateCreatedMin instanceof Date)
								var c = b.dateCreatedMin.getTime(), a = a.filter(function (a) {
										return "undefined" !=
										typeof a.timeCreated && a.timeCreated >= c
									});
							if (b.dateCreatedMax && b.dateCreatedMax instanceof Date)
								var f = b.dateCreatedMax.getTime(), a = a.filter(function (a) {
										return "undefined" != typeof a.timeCreated && a.timeCreated <= f
									});
							if (b.dateModifiedMin && b.dateModifiedMin instanceof Date)
								var d = b.dateModifiedMin.getTime(), a = a.filter(function (a) {
										return "undefined" != typeof a.timeModified && a.timeModified >= d
									});
							if (b.dateModifiedMax && b.dateModifiedMax instanceof Date)
								var g = b.dateModifiedMax.getTime(), a = a.filter(function (a) {
										return "undefined" !=
										typeof a.timeModified && a.timeModified <= g
									});
							if (b.dateExpirationMin && b.dateExpirationMin instanceof Date)
								var h = b.dateExpirationMin.getTime(), a = a.filter(function (a) {
										return "undefined" != typeof a.timeExpiration && a.timeExpiration >= h
									});
							if (b.dateExpirationMax && b.dateExpirationMax instanceof Date)
								var k = b.dateExpirationMax.getTime(), a = a.filter(function (a) {
										return "undefined" != typeof a.timeExpiration && a.timeExpiration <= k
									});
							return a.map(function (a) {
								return dojo.mixin({}, a)
							})
						};
						c.prototype.add = function (b) {
							if (!b)
								throw Error("The selection metadata cannot be null.");
							b = dojo.mixin({}, b);
							var a = b.id = this._generateId();
							this._store.set(a, b);
							return a
						};
						c.prototype.updateById = function (b, a) {
							if (!b)
								throw Error("The metadata ID must be set.");
							if (!a)
								throw Error("The selection metadata cannot be null.");
							if (!this._store.containsKey(b))
								throw Error("Selection metadata with ID '{0}' not found.".format(b));
							var c = this._store.get(b);
							this._update(c, a)
						};
						c.prototype.removeById = function (b) {
							if (!b)
								throw Error("The metadata ID must be set.");
							this._store.remove(b)
						};
						c.prototype.clear = function () {
							this._store.clear()
						};
						c.prototype._update = function (b, a) {
							b.name = a.name;
							b.count = a.count;
							b.timeCreated = a.timeCreated;
							b.timeModified = a.timeModified;
							b.timeExpiration = b.timeExpiration;
							b.featureSetCollectionId = a.featureSetCollectionId;
							b.modified = a.modified
						};
						c.prototype._generateId = function () {
							return d.framework.utils.alphaNumericToken()
						};
						return c
					}
					();
					g.SelectionMetadataStore = k
				})(h.selection || (h.selection = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function h(b) {
						if (!b)
							return null;
						var a = null,
						c = null,
						a = b.timeZoneId;
						b.essentialsMap && b.essentialsMap.site && (c = b.essentialsMap.site.timeZoneId);
						return d.framework.utils.ArrayUtils.firstOrDefault([a, c], function (a) {
							return !!a
						})
					}
					function c(b, a) {
						if (!a)
							return b;
						var c = -moment.tz(b.getTime(), a).utcOffset();
						return moment(b).add(c, "minutes").toDate()
					}
					g.UTC_ZONE_ID = "Etc/UTC";
					g.getTimeZoneFromLayer = function (b) {
						if (!b)
							return null;
						var a = null,
						c = null,
						a =
							b.timeZoneId;
						b.mapService && (c = h(b.mapService));
						return d.framework.utils.ArrayUtils.firstOrDefault([a, c], function (a) {
							return !!a
						})
					};
					g.getTimeZoneFromMapService = h;
					g.getDisplayTimeZoneFromMapService = function (b) {
						return b ? b.essentialsMap && b.essentialsMap.site ? b.essentialsMap.site.displayTimeZoneId : null : null
					};
					g.correctDatesForDisplayInDisplayTimeZone = function (b, a, e) {
						a || (a = g.UTC_ZONE_ID);
						if (!e)
							return c(b, a);
						var f = -b.getTimezoneOffset();
						e = moment.tz(b.getTime(), e).utcOffset();
						f =  - (f - e);
						b = c(b, a);
						return moment(b).add(f,
							"minutes").toDate()
					};
					g.correctDatesForDisplayInLocalTime = c;
					g.correctDatesToSubmitInDatabaseTime = function (b, a, c) {
						a || (a = g.UTC_ZONE_ID);
						a = moment.tz(b.getTime(), a).utcOffset();
						if (!c)
							return moment(b).add(a, "minutes").toDate();
						c = moment.tz(b.getTime(), c).utcOffset();
						c = a - c;
						a = -b.getTimezoneOffset();
						return moment(b).add(a + c, "minutes").toDate()
					};
					g.correctDatesToQueryInDatabaseTime = function (b, a, c) {
						a || (a = g.UTC_ZONE_ID);
						a = moment.tz(b.getTime(), a).utcOffset();
						if (!c)
							return c = b.getTimezoneOffset(), moment(b).add(c +
								a, "minutes").toDate();
						c = moment.tz(b.getTime(), c).utcOffset();
						a -= c;
						return moment(b).add(a, "minutes").toDate()
					}
				})(h.TimeZoneUtils || (h.TimeZoneUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this.libraryId = "Mapping.Infrastructure"
								}
								__extends(b, a);
								b.prototype.attach = function (a) {
									this.viewModel = a
								};
								b.prototype.handlePageFirst = function (a, b, c) {
									1 < this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() && this.viewModel.collectionViewModel.presentableResults.currPageNumber.set(1)
								};
								b.prototype.handlePagePrev = function (a, b, c) {
									1 < this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() &&
									(a = this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() - 1, this.viewModel.collectionViewModel.presentableResults.currPageNumber.set(a))
								};
								b.prototype.handlePageNext = function (a, b, c) {
									this.viewModel.collectionViewModel.presentableResults.lastPageNumber.get() > this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() && (a = this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() + 1, this.viewModel.collectionViewModel.presentableResults.currPageNumber.set(a))
								};
								b.prototype.handlePageLast = function (a, b, c) {
									this.viewModel.collectionViewModel.presentableResults.currPageNumber.get() < this.viewModel.collectionViewModel.presentableResults.lastPageNumber.get() && (a = this.viewModel.collectionViewModel.presentableResults.lastPageNumber.get(), this.viewModel.collectionViewModel.presentableResults.currPageNumber.set(a))
								};
								return b
							}
							(d.framework.ui.ViewBase);
							c.PagingControlsView = b
						})(g.PagingControls || (g.PagingControls = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure ||
				(k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b(c, e) {
									a.call(this, c, "Mapping.Infrastructure");
									this.libraryId = "Mapping.Infrastructure";
									this.collectionViewModel = e;
									this.presentableResults = this.collectionViewModel.presentableResults;
									this.numberOfItems = this.presentableResults.items.length()
								}
								__extends(b, a);
								return b
							}
							(d.framework.ui.ViewModelBase);
							c.PagingControlsViewModel = b
						})(g.PagingControls || (g.PagingControls = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.ui || (d.ui = {});
	d = d.components || (d.components = {});
	d = d.Table || (d.Table = {});
	d = d.SortState || (d.SortState = {});
	d[d.UNSORTED = 0] = "UNSORTED";
	d[d.ASCENDING = 1] = "ASCENDING";
	d[d.DESCENDING = 2] = "DESCENDING"
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.undo || (d.undo = {});
	d = d.TransactionStatus || (d.TransactionStatus = {});
	d.PENDING = "pending";
	d.COMMITTING = "committing";
	d.COMMITTED = "committed";
	d.ABORTING = "aborting";
	d.ABORTED = "aborted"
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (c) {
						c[c.SCALE = 0] = "SCALE";
						c[c.CENTER = 1] = "CENTER";
						c[c.EXTENT = 2] = "EXTENT"
					})(d.ExtentLinkPriority || (d.ExtentLinkPriority = {}));
					(function (c) {
						c[c.LAYERTHEME = 0] = "LAYERTHEME";
						c[c.LAYERS = 1] = "LAYERS"
					})(d.LayerListLinkPriority || (d.LayerListLinkPriority = {}));
					var h = function () {
						function c(b, a) {
							this.generateParameter = this.acceptParameter = !0;
							this.app = b;
							this.libraryId = a
						}
						c.prototype.initialize = function (b) {};
						c.prototype.generate = function () {
							return ""
						};
						c.prototype.apply = function (b) {};
						c.prototype.getResource = function (b, a) {
							return this.app.getResource(this.libraryId, b, a)
						};
						return c
					}
					();
					d.SharingLinkProviderBase = h
				})(d.sharing || (d.sharing = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this.menuTitle = new Observable("");
							this.menuDescription = new Observable("");
							this.menuItems = new ObservableCollection([]);
							this.visibleMenuItems = new ObservableCollection([]);
							this.hasExecutableMenuItems = new Observable(!1);
							this.menuContext = new Observable(null);
							this.auto(this.menuContext, this, this._handleContextChanged);
							this.auto(this.menuItems, this, this._handleMenuItemsChanged)
						}
						__extends(b,
							c);
						b.prototype.initialize = function (a) {
							c.prototype.initialize.call(this, a);
							this.menuId = a && a.menuId || null;
							this.libraryId = a && a.libraryId || this.libraryId
						};
						b.prototype.setupMenu = function (a) {
							var b = this;
							if (this.menuId = a || this.menuId)
								if (this.menuItems.clear(), a = this.app.menuRegistry.getMenu(this.menuId)) {
									if (a.title && this.menuTitle.set(a.title), a.description && this.menuDescription.set(a.description), a.items && a.items.length) {
										var c = [];
										a.items.forEach(function (a) {
											a = new g.MenuItemViewModel(b, a);
											c.push(a);
											b.auto(a.canExecute,
												b, b._computeExecutableMenuItems)
										});
										this.menuItems.addItems(c)
									}
								} else
									this.app.trace.error("MenuViewModel: Could not load menu '{0}'. Menu not registered.".format(this.menuId));
							else
								this.app.trace.error("MenuViewModel: Could not load menu. Menu id not specified.")
						};
						b.prototype.onDestroy = function () {
							c.prototype.onDestroy.call(this);
							this.menuItems.get().forEach(function (a) {
								return a.destroy()
							});
							this.menuItems.clear();
							this.visibleMenuItems.clear()
						};
						b.prototype._computeExecutableMenuItems = function () {
							var a =
								!1,
							b = [];
							this.visibleMenuItems.clear();
							for (var c = 0; c < this.menuItems.length(); c++) {
								var d = this.menuItems.getAt(c);
								d.canExecute.get() ? (a = !0, b.push(d)) : d.menuItem.hideOnDisable || b.push(d)
							}
							this.visibleMenuItems.set(b);
							this.hasExecutableMenuItems.set(a)
						};
						b.prototype._handleContextChanged = function (a) {
							this.menuItems.get().forEach(function (a) {
								return a.refreshCanExecute()
							})
						};
						b.prototype._handleMenuItemsChanged = function (a) {
							if ("clear" === a.type)
								this.visibleMenuItems.clear();
							else if ("append" === a.type)
								this._computeExecutableMenuItems();
							else if ("remove" === a.type) {
								a = a.sender.get().slice(a.rangeStart, a.rangeEnd + 1);
								for (var b = 0; b < a.length; b++)
									this.visibleMenuItems.removeItem(a[b])
							} else
								"insert" === a.type && this._computeExecutableMenuItems()
						};
						b.DefaultParameterName = "context";
						return b
					}
					(d.framework.ui.ViewModelBase);
					g.MenuViewModel = h
				})(h.menus || (h.menus = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function (c, b) {
							this.stateDefinition = c;
							this.activatedBy = b
						}
					}
					();
					d.ActiveState = h
				})(d.applicationState || (d.applicationState = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this.registeredStates = [];
							this.activeStates = [];
							this.previousModalState = this.modalState = null;
							this.commandTokens = [];
							this.eventTokens = [];
							this.app = b;
							this.libraryId = a;
							for (var c = 0; c < d.definedStates.length; c++)
								this.registerState(d.definedStates[c])
						}
						c.prototype.registerState = function (b) {
							var a = this;
							if (this.registeredStates.some(function (a) {
									return a.name === b.name
								}))
								this.app.trace.info("States with duplicate names registered! New state ignored. Name is: " +
									b.name);
							else if (this.registeredStates.filter(function (a) {
									return a.hasOwnProperty("parentState")
								}).some(function (a) {
									return a.name === b.parentState
								}))
								this.app.trace.info("Tried to load a state with a parent that references another state that has a parent. Only parent -> child relationships are allowed. State name: " + b.name);
							else {
								var c = dojo.connect(this.app, "onLibrariesDownloaded", this, function () {
										dojo.disconnect(c);
										a.app.hasLibrary(a.libraryId) && -1 === b.description.search(" ") && (b.description = a.app.getResource(a.libraryId,
													b.description))
									});
								b.enterCommands && b.enterCommands.forEach(function (c) {
									var e = a.app.command(c.name).register(a, function (e) {
											return a._stateEntered(b, c, e)
										});
									a.commandTokens.push({
										instance : c,
										token : e
									})
								});
								b.exitCommands && b.exitCommands.forEach(function (c) {
									var e = a.app.command(c.name).register(a, function (e) {
											return a._stateExited(b, c, e)
										});
									a.commandTokens.push({
										instance : c,
										token : e
									})
								});
								b.enterEvents && b.enterEvents.forEach(function (c) {
									var e = a.app.event(c.name).subscribe(a, function (e) {
											return a._stateEntered(b,
												c, e)
										});
									a.eventTokens.push({
										instance : c,
										token : e
									})
								});
								b.exitEvents && b.exitEvents.forEach(function (c) {
									var e = a.app.event(c.name).subscribe(a, function (e) {
											return a._stateExited(b, c, e)
										});
									a.eventTokens.push({
										instance : c,
										token : e
									})
								});
								this.registeredStates.push(b);
								"DefaultState" === b.name && this.activeStates.push(new d.ActiveState(b))
							}
						};
						c.prototype.onDestroy = function () {
							for (var b = 0; b < this.eventTokens.length; b++)
								this.app.event(this.eventTokens[b].instance.name).unsubscribe(this.eventTokens[b].token);
							for (b = 0; b < this.commandTokens.length; b++)
								this.app.command(this.commandTokens[b].instance.name).unregister(this.commandTokens[b].token)
						};
						c.prototype.getActiveStates = function () {
							for (var b = [], a = 0; a < this.activeStates.length; a++)
								b[this.activeStates[a].stateDefinition.name] = this.activeStates[a];
							return this.activeStates.filter(function (a) {
								return a.stateDefinition.parentState && b[a.stateDefinition.parentState] || !a.stateDefinition.parentState
							})
						};
						c.prototype.getStateByName = function (b) {
							for (var a = 0; a < this.registeredStates.length; a++)
								if (this.registeredStates[a].name === b)
									return this.registeredStates[a];
							return null
						};
						c.prototype.getModalState = function () {
							return this.modalState ||
							null
						};
						c.prototype.isModalStateActive = function () {
							return null !== this.modalState
						};
						c.prototype.isCurrentlyActive = function (b) {
							return this.activeStates.some(function (a) {
								return a.stateDefinition.name === b
							})
						};
						c.prototype.getAllStateNames = function () {
							for (var b = [], a = 0; a < this.registeredStates.length; a++)
								b.push(this.registeredStates[a].name);
							return b
						};
						c.prototype._stateEntered = function (b, a, c) {
							if (!(b.parentState && !this.activeStates.some(function (a) {
										return a.stateDefinition.name === b.parentState
									}) || this.isCurrentlyActive(b.name) ||
									a.parameter && a.parameter !== c)) {
								var f = null;
								if ("string" === typeof c || c instanceof String)
									f = c;
								this.app.trace.debug("State entered: " + b.name);
								b.isModal && (null !== this.modalState && (this.previousModalState = this.modalState, this._exitState(this.modalState, a, f)), this.app.trace.debug("Modal State entered: " + b.name), this.modalState = b);
								this.activeStates.push(new d.ActiveState(b, a));
								this.app.event("StateEnteredEvent").publish({
									stateDefinition : b,
									activeStates : this.activeStates,
									modalState : this.modalState,
									previousModalState : this.modalState
								})
							}
						};
						c.prototype._stateExited = function (b, a, c) {
							if (!a.parameter || a.parameter === c) {
								for (var f = !1, d = 0; d < this.activeStates.length; d++)
									this.activeStates[d].stateDefinition === b && (f = !0);
								d = !1;
								b.parentState && (d = this.activeStates.some(function (a) {
											return a.stateDefinition.name === b.parentState
										}));
								if (f && (!b.parentState || d)) {
									f = null;
									if ("string" === typeof c || c instanceof String)
										f = c;
									this._exitState(b, a, f)
								}
							}
						};
						c.prototype._exitState = function (b, a, c) {
							this._exitChildStates(b, a, c);
							for (a = this.activeStates.length - 1; 0 <= a; a--)
								this.activeStates[a].stateDefinition ===
								b && (this.activeStates.splice(a, 1), this.app.trace.debug("State exited: " + b.name));
							this.modalState === b && (this.modalState = null, this.previousModalState = b, this.app.trace.debug("Modal state exited: " + b.name));
							this.app.event("StateExitedEvent").publish({
								stateDefinition : b,
								activeStates : this.activeStates,
								modalState : this.modalState,
								previousModalState : this.previousModalState
							})
						};
						c.prototype._exitChildStates = function (b, a, c) {
							for (var f = [], d = 0; d < this.activeStates.length; d++)
								if (this.activeStates[d].stateDefinition.parentState ===
									b.name) {
									var g = this.activeStates[d].stateDefinition;
									if (g.exitCommands)
										for (var h = 0; h < g.exitCommands.length; h++)
											g.exitCommands[h].name !== a.name || g.exitCommands[h].parameter && g.exitCommands[h].parameter !== c || f.push(g);
									if (g.exitEvents)
										for (h = 0; h < g.exitEvents.length; h++)
											g.exitEvents[h].name !== a.name || g.exitEvents[h].parameter && g.exitEvents[h].parameter !== c || f.push(g)
								}
							for (d = 0; d < f.length; d++)
								this._exitState(f[d], a, c)
						};
						return c
					}
					();
					d.StateManager = h
				})(d.applicationState || (d.applicationState = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	(d.applicationState || (d.applicationState = {})).definedStates = [{
			name : "DefaultState",
			description : "language-states-default-description",
			isModal : !1
		}, {
			name : "TransientActiveState",
			description : "language-states-transient-active-description",
			isModal : !1,
			enterEvents : [{
					name : "TransientActivatedEvent"
				}
			],
			exitEvents : [{
					name : "TransientsDeactivatedEvent"
				}
			]
		}, {
			name : "IdentifyState",
			description : "language-states-identify-state-description",
			isModal : !1,
			enterCommands : [{
					name : "SetActiveTool",
					parameter : "PointIdentifyTool-Navigation"
				}, {
					name : "SetActiveTool",
					parameter : "IdentifyRectangleTool"
				}, {
					name : "SetActiveTool",
					parameter : "RectangleIdentifyTool"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "Identify"
				}
			]
		}, {
			name : "IdentifyBufferingState",
			parentState : "IdentifyState",
			description : "language-states-buffering-description",
			isModal : !1,
			enterEvents : [{
					name : "BufferingActivatedEvent",
					parameter : "Identify"
				}
			],
			exitEvents : [{
					name : "BufferingDeactivatedEvent",
					parameter : "Identify"
				}
			]
		}, {
			name : "PlotCoordinatesState",
			description : "language-states-plotcoordinates-state-description",
			isModal : !1,
			enterCommands : [{
					name : "SetActiveTool",
					parameter : "PlotCoordinatesTool"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "PlotCoordinates"
				}
			]
		}, {
			name : "SnappingState",
			description : "language-states-snapping-description",
			isModal : !1,
			enterCommands : [{
					name : "ActivateSnapping"
				}
			],
			exitCommands : [{
					name : "DeactivateSnapping"
				}
			]
		}, {
			name : "FindDataState",
			description : "language-states-identify-state-description",
			isModal : !0,
			enterEvents : [{
					name : "ToolCommandActivatedEvent",
					parameter : "Identify"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "Identify"
				}
			]
		}, {
			name : "FindDataBufferingState",
			parentState : "FindDataState",
			description : "language-states-buffering-description",
			isModal : !1,
			enterEvents : [{
					name : "BufferingActivatedEvent",
					parameter : "Identify"
				}
			],
			exitEvents : [{
					name : "BufferingDeactivatedEvent",
					parameter : "Identify"
				}
			]
		}, {
			name : "DrawMarkupState",
			description : "language-states-draw-markup-state-description",
			isModal : !0,
			enterEvents : [{
					name : "ToolCommandActivatedEvent",
					parameter : "AddMarkup"
				}, {
					name : "ToolCommandActivatedEvent",
					parameter : "AddTextMarkup"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "AddMarkup"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "AddTextMarkup"
				}
			]
		}, {
			name : "MeasureState",
			description : "language-states-measure-state-description",
			isModal : !0,
			enterEvents : [{
					name : "ToolCommandActivatedEvent",
					parameter : "MeasureDistance"
				}, {
					name : "ToolCommandActivatedEvent",
					parameter : "MeasureArea"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "MeasureDistance"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "MeasureArea"
				}
			]
		}, {
			name : "SelectMarkupForEditingState",
			description : "language-states-edit-state-description",
			isModal : !0,
			enterEvents : [{
					name : "ToolCommandActivatedEvent",
					parameter : "DeleteMeasurement"
				}, {
					name : "ToolCommandActivatedEvent",
					parameter : "DeleteMarkup"
				}, {
					name : "ToolCommandActivatedEvent",
					parameter : "EditMarkup"
				}
			],
			exitEvents : [{
					name : "ToolCommandDeactivatedEvent",
					parameter : "DeleteMeasurement"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "DeleteMarkup"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "EditMarkup"
				}
			]
		}, {
			name : "EditorActiveState",
			description : "language-states-editing-active-state-description",
			isModal : !1,
			enterCommands : [{
					name : "StartEditingFeature"
				}, {
					name : "StartEditingNewFeature"
				}, {
					name : "StartEditingNewRelatedRecord"
				}
			],
			exitEvents : [{
					name : "EditorClosedEvent"
				}
			]
		}, {
			name : "EditingMarkupState",
			description : "language-states-editing-state-description",
			isModal : !1,
			enterEvents : [{
					name : "MarkupEditingStartedEvent"
				}
			],
			exitEvents : [{
					name : "MarkupEditingStoppedEvent"
				}
			]
		}, {
			name : "EditingMeasurementMarkupState",
			description : "language-states-editing-state-description",
			isModal : !1,
			enterEvents : [{
					name : "MeasurementEditingStartedEvent"
				}
			],
			exitEvents : [{
					name : "MarkupEditingStoppedEvent"
				}
			]
		}, {
			name : "FeaturePlacementState",
			description : "language-states-feature-editing-state-description",
			isModal : !0,
			enterEvents : [{
					name : "StartFeaturePlacementEvent"
				}, {
					name : "ToolCommandActivatedEvent",
					parameter : "SetEditorFeatureGeometry"
				}
			],
			exitEvents : [{
					name : "StopFeaturePlacementEvent"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "SetEditorFeatureGeometry"
				}
			]
		}, {
			name : "FeaturePlacementGraphicState",
			parentState : "FeaturePlacementState",
			description : "language-states-feature-editing-state-graphic-description",
			isModal : !1,
			enterCommands : [{
					name : "StartEditingGraphicGeometry"
				}
			],
			enterEvents : [{
					name : "ToolCommandActivatedEvent",
					parameter : "SetEditorFeatureGeometry"
				}
			],
			exitEvents : [{
					name : "StopFeaturePlacementEvent"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "SetEditorFeatureGeometry"
				}
			]
		}, {
			name : "FeaturePlacementPointGraphicState",
			parentState : "FeaturePlacementState",
			description : "language-states-feature-editing-state-point-graphic-description",
			isModal : !1,
			enterEvents : [{
					name : "GeometryEditPointActivatedEvent"
				}
			],
			exitEvents : [{
					name : "StopFeaturePlacementEvent"
				}, {
					name : "ToolCommandDeactivatedEvent",
					parameter : "SetEditorFeatureGeometry"
				}
			]
		}
	]
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					function k(a) {
						var b = null;
						a instanceof esri.layers.ArcGISDynamicMapServiceLayer ? a.gdbVersion && (b = a.gdbVersion) : a instanceof esri.layers.FeatureLayer && a.gdbVersion && (b = a.gdbVersion);
						return b
					}
					function c(a, b) {
						if (!a)
							return null;
						if (b.mapServiceType === d.essentials.MapServiceType.WMS) {
							var c = d.essentials.RestHelperHTTPService.getTokenForScope(b.url);
							c && (a += -1 < a.indexOf("?") ? "&token=" : "?token=", a += encodeURIComponent(c))
						} else
							b && b.serviceToken &&
							!/.*token=.*/.test(a) && (a += -1 < a.indexOf("?") ? "&token=" : "?token=", a += encodeURIComponent(b.serviceToken));
						return a
					}
					function b(a) {
						return a && a.identifiable && a.supportsIdentify ? !0 : !1
					}
					function a(a) {
						return a && a.queryable && a.supportsQuery ? !0 : !1
					}
					function e(b) {
						if (!b || !b.serviceLayer)
							return !1;
						if (b.mapServiceType === d.essentials.MapServiceType.WMS) {
							for (var c = 0; c < b.layers.length; c++)
								if (a(b.layers[c]))
									return !0;
							return !1
						}
						b = b.serviceLayer;
						return b.capabilities ? 10 > b.version ? !0 : b.capabilities && 0 <= b.capabilities.indexOf("Query") :
						!1
					}
					var f = function () {
						return function () {}

					}
					();
					g.getQueryTaskUrl = function (a, b) {
						var g = null,
						h = null,
						k;
						a instanceof d.essentials.Layer ? (g = a, k = g.mapService, h = b.serviceLayer) : a instanceof esri.layers.Layer && (h = a, b && (k = b));
						if (h instanceof esri.layers.FeatureLayer && "table" === h.type || h instanceof esri.layers.FeatureLayer && !k)
							return h.url;
						if (!e(k))
							return null;
						k = null;
						if (h instanceof esri.layers.WMSLayer) {
							if (!g)
								return null;
							k = g.url
						} else
							g ? k = g.mapService.serviceLayer.url : h && (k = h.url);
						var m,
						q = null;
						if (g)
							if (g.isDynamic) {
								m =
									"dynamicLayer";
								var q = null,
								t = g.mapService.getDynamicLayerInfoById(g.id);
								if (t && t.source && (t.source instanceof esri.layers.LayerDataSource || t.source instanceof esri.layers.LayerMapSource)) {
									if (q = new f, q.source = t.source.toJson(), t.id && (q.id = t.id), g = g.getDefinitionExpression(g.mapService.serviceLayer))
										q.definitionExpression = g
								} else
									throw Error("A dynamic layer must have a DataSource!");
							} else
								m = g.id;
						else
							h && (m = h.id);
						h instanceof esri.layers.FeatureLayer || k.match(/\/\d+(\?.*)?$/) || (h = k.indexOf("?"), g = k.indexOf("#"),
							k = -1 != h ? k.substring(0, h) + "/" + m + k.substring(h) : -1 != g ? k.substring(0, g) + "/" + m + k.substring(g) : k + ("/" + m));
						k = c(k, b);
						q && (k += -1 < k.indexOf("?") ? "&layer=" : "?layer=", k += encodeURIComponent(JSON.stringify(q)));
						return k
					};
					g.getQueryTask = function (a, b) {
						var c = null,
						e = null,
						f = null,
						h = null;
						if (a instanceof esri.layers.Layer)
							e = a, b && (f = b);
						else if (a instanceof d.essentials.Layer && a.mapService && a.mapService.serviceLayer)
							e = a.mapService.serviceLayer, f = a.mapService, h = a;
						else
							throw Error("Cannot generate a QueryTask from the given parameters.");
						if (e) {
							var q = k(e);
							q && (c = {
									gdbVersion : q
								})
						}
						return new esri.tasks.QueryTask(g.getQueryTaskUrl(h ? h : e, f), c)
					};
					g.getIdentifyTaskUrl = function (a) {
						if (!a || !a.serviceUrl)
							return null;
						if (a.mapServiceType === d.essentials.MapServiceType.WMS) {
							for (var f = 0; f < a.layers.length; f++)
								if (b(a.layers[f]))
									return c(a.url, a);
							return null
						}
						return e(a) ? a instanceof d.essentials.FeatureLayerService ? a.serviceUrl.substring(0, a.serviceUrl.lastIndexOf("/")).replace(/FeatureServer$/i, "MapServer") : a.mapServiceType == d.essentials.MapServiceType.DYNAMIC ||
						a.mapServiceType == d.essentials.MapServiceType.TILED ? c(a.serviceUrl, a) : null : null
					};
					g.getIdentifyTask = function (a) {
						var b = null;
						if (a.serviceLayer) {
							var c = k(a.serviceLayer);
							c && (b = {
									gdbVersion : c
								})
						}
						return new esri.tasks.IdentifyTask(g.getIdentifyTaskUrl(a), b)
					};
					g.getTokenizedUrl = c;
					g.canIdentifyLayer = b;
					g.canQueryLayer = a;
					g.canQueryMapService = e;
					g.getSearchTextWhereClause = function (a, b, c, e) {
						if (!a || !b || 0 == b.length || !c)
							return "";
						for (var f = String(c).toLowerCase(), g = "", k = 0; k < b.length; k++) {
							var m = b[k];
							if (m.searchable && "gml:id" !==
								m.name)
								if (m.isCodedValueDomain() || m.hasSubtypeCodedValueDomains()) {
									var q = [],
									u = m.getCodedValueDomain();
									u && u.codedValues.forEach(function (a) {
										return q.push(a)
									});
									var u = m.getSubtypeCodedValueDomains(),
									x;
									for (x in u)
										u.hasOwnProperty(x) && u[x].codedValues.forEach(function (a) {
											return q.push(a)
										});
									q.forEach(function (a) {
										-1 < a.name.toLowerCase().indexOf(f) && (0 < g.length && (g += " OR "), g = m.type === d.essentials.EsriFieldTypes.esriFieldTypeString ? g + (encodeURI(m.name) + " = '" + a.code.replace("'", "''") + "'") : g + (encodeURI(m.name) +
													" = " + a.code))
									})
								} else
									switch (m.type) {
									case d.essentials.EsriFieldTypes.esriFieldTypeString:
										0 < g.length && (g += " OR ");
										g = a.mapService.serviceLayer instanceof esri.layers.WMSLayer ? g + (encodeURI(m.name) + " LIKE '%" + c.replace("'", "''") + "%'") : g + ("LOWER(" + m.name + ") LIKE '%" + f.replace("'", "''") + "%'");
										break;
									case d.essentials.EsriFieldTypes.esriFieldTypeSmallInteger:
									case d.essentials.EsriFieldTypes.esriFieldTypeInteger:
									case d.essentials.EsriFieldTypes.esriFieldTypeOID:
									case d.essentials.EsriFieldTypes.esriFieldTypeSingle:
									case d.essentials.EsriFieldTypes.esriFieldTypeDouble:
										u =
											h.FormatUtils.parseNumber(c);
										if (isNaN(u))
											break;
										0 < g.length && (g += " OR ");
										var B = h.FormatUtils.formatNumber(u, h.NumberFormat.ROUND_TRIP),
										v;
										if (B.indexOf(".")) {
											var z = B.length - B.indexOf(".") - 1;
											v = Math.pow(10, -z)
										} else
											v = 1;
										0 > u ? (z = h.FormatUtils.formatNumber(u - v, h.NumberFormat.ROUND_TRIP), u = B) : (z = B, u = h.FormatUtils.formatNumber(u + v, h.NumberFormat.ROUND_TRIP));
										g += "(" + encodeURI(m.name.toLowerCase()) + " <= " + u + " AND " + encodeURI(m.name.toLowerCase()) + " >= " + z + ")";
										break;
									case d.essentials.EsriFieldTypes.esriFieldTypeDate:
										break;
									case d.essentials.EsriFieldTypes.esriFieldTypeGlobalID:
									case d.essentials.EsriFieldTypes.esriFieldTypeBlob:
										break;
									default:
										e && e.warning("Unhandled layer data type: '{0}'. Field '{1}' in layer '{2}' has been excluded from search.".format(m.type, m.alias, a.displayName))
									}
						}
						(a = a.getDefinitionExpression(a.mapService.serviceLayer)) && (g = "(" + g + ") AND (" + a + ")");
						return g
					}
				})(h.taskUtils || (h.taskUtils = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					(function (b) {
						b[b.TOGGLE_BUTTON_OFF = 0] = "TOGGLE_BUTTON_OFF";
						b[b.TOGGLE_BUTTON_ON = 1] = "TOGGLE_BUTTON_ON"
					})(g.ToggleButtonState || (g.ToggleButtonState = {}));
					var k = g.ToggleButtonState,
					c = function (b) {
						function a(a, c, g) {
							var n = this;
							b.call(this, a, c, g);
							this.state = new Observable(null);
							this.toggleButtonEntry = g;
							this.toggleOnCommand = new d.CommandViewModel(this.app, c, g.toggleOn.command, g.toggleOn.commandParameter);
							this.toggleOffCommand = new d.CommandViewModel(this.app,
									c, g.toggleOff.command, g.toggleOff.commandParameter);
							this.isToggledOn = new Observable(!1);
							this.iconUri = new Observable(null);
							this.state.bind(this, function (a) {
								return n.setState(a)
							});
							this.toggleButtonEntry.toggleStateName && "" !== this.toggleButtonEntry.toggleStateName ? (this.app.event("StateEnteredEvent").subscribe(this, function (a) {
									a.stateDefinition.name === n.toggleButtonEntry.toggleStateName && n.state.set(k.TOGGLE_BUTTON_ON);
									n.isToggledOn.get() && "TransientActiveState" === a.stateDefinition.name && n.activeTransient.set(!0)
								}),
								this.app.event("StateExitedEvent").subscribe(this, function (a) {
									a.stateDefinition.name === n.toggleButtonEntry.toggleStateName && n.state.set(k.TOGGLE_BUTTON_OFF);
									"TransientActiveState" === a.stateDefinition.name && n.activeTransient.set(!1)
								})) : this._setUpBindings();
							if (!this.app.site || !this.app.site.isInitialized)
								this.app.event("SiteInitializedEvent").once(this, function () {
									n.toggleOffCommand.commandName && n.app.command(n.toggleOffCommand.commandName).raiseCanExecuteChanged();
									n.toggleOnCommand.commandName && n.app.command(n.toggleOnCommand.commandName).raiseCanExecuteChanged();
									n.state.get() === k.TOGGLE_BUTTON_OFF ? n.disabled.set(!n.toggleOffCommand.canExecute.get()) : n.disabled.set(!n.toggleOnCommand.canExecute.get())
								});
							g.toggleStateName && this.app.stateManager.isCurrentlyActive(g.toggleStateName) ? this.state.set(k.TOGGLE_BUTTON_ON) : this.state.set(k.TOGGLE_BUTTON_OFF)
						}
						__extends(a, b);
						a.prototype.execute = function () {
							this.command && this.command.commandName && (this.command.commandParameter ? this.app.commandRegistry.command(this.command.commandName).execute(this.command.commandParameter) :
								this.app.commandRegistry.command(this.command.commandName).execute())
						};
						a.prototype.setState = function (a) {
							if (a === k.TOGGLE_BUTTON_OFF)
								var b = this.toggleButtonEntry.toggleOn.name || this.toggleButtonEntry.name || "", c = this.toggleButtonEntry.toggleOn.iconUri || this.toggleButtonEntry.iconUri || null, d = this.toggleButtonEntry.toggleOn.tooltip || this.toggleButtonEntry.tooltip || null, g = void 0 != this.toggleButtonEntry.toggleOn.hideOnDisable ? !!this.toggleButtonEntry.toggleOn.hideOnDisable : !!this.toggleButtonEntry.hideOnDisable,
								h = !1;
							else
								b = this.toggleButtonEntry.toggleOff.name || this.toggleButtonEntry.name || "", c = this.toggleButtonEntry.toggleOff.iconUri || this.toggleButtonEntry.iconUri || null, d = this.toggleButtonEntry.toggleOff.tooltip || this.toggleButtonEntry.tooltip || null, g = void 0 != this.toggleButtonEntry.toggleOff.hideOnDisable ? !!this.toggleButtonEntry.toggleOff.hideOnDisable : !!this.toggleButtonEntry.hideOnDisable, h = !0;
							this.name.set(b);
							this.isToggledOn.set(h);
							this.iconUri.set(c);
							this.tooltip.set(d);
							this.command = a === k.TOGGLE_BUTTON_OFF ?
								this.toggleOnCommand : this.toggleOffCommand;
							this.disabled.set(!this.command.canExecute.get());
							this.hideOnDisable.set(g);
							this.setHidden();
							this.app.event("ToggleButtonStateChangedEvent").publish({
								toggleButtonEntry : this.toggleButtonEntry,
								state : a
							})
						};
						a.prototype.onDestroy = function () {
							this._disconnectBindings()
						};
						a.prototype._setUpBindings = function () {
							var a = this;
							this._toggleOnCommandCanExecuteBindingToken = this.toggleOnCommand.canExecute.bind(this, function (b) {
									return a._handleCommandCanExecuteChanged(a.toggleOnCommand,
										b)
								});
							this._toggleOnCommandPostExecSubscriptionToken = this.app.command(this.toggleButtonEntry.toggleOn.command).postExecute.subscribe(this, this._handleToggleOnCommandPostExecute);
							this._toggleOffCommandCanExecuteBindingToken = this.toggleOffCommand.canExecute.bind(this, function (b) {
									return a._handleCommandCanExecuteChanged(a.toggleOffCommand, b)
								});
							this._toggleOffCommandPostExecSubscriptionToken = this.app.command(this.toggleButtonEntry.toggleOff.command).postExecute.subscribe(this, this._handleToggleOffCommandPostExecute)
						};
						a.prototype._disconnectBindings = function () {
							this.toggleOnCommand.canExecute.unbind(this._toggleOnCommandCanExecuteBindingToken);
							this.app.command(this.toggleButtonEntry.toggleOn.command).postExecute.unsubscribe(this._toggleOnCommandPostExecSubscriptionToken);
							this.toggleOffCommand.canExecute.unbind(this._toggleOffCommandCanExecuteBindingToken);
							this.app.command(this.toggleButtonEntry.toggleOff.command).postExecute.unsubscribe(this._toggleOffCommandPostExecSubscriptionToken)
						};
						a.prototype._handleToggleOnCommandPostExecute =
						function (a) {
							a && this.command.commandParameter !== a || this.state.get() !== k.TOGGLE_BUTTON_ON && this.state.set(k.TOGGLE_BUTTON_ON)
						};
						a.prototype._handleToggleOffCommandPostExecute = function (a) {
							a && this.command.commandParameter !== a || this.state.get() !== k.TOGGLE_BUTTON_OFF && this.state.set(k.TOGGLE_BUTTON_OFF)
						};
						a.prototype._handleCommandCanExecuteChanged = function (a, b) {
							this.command === a && (this.disabled.set(!b), this.setHidden())
						};
						return a
					}
					(g.ToolbarGroupItemBase);
					g.ToolbarToggleButton = c
				})(d.toolbarGroup || (d.toolbarGroup = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b, f) {
							var d = this;
							c.call(this, a, b, f);
							f.layout && "small" === f.layout.toLowerCase() && this.hasSmallLayout.set(!0);
							this.items = new ObservableCollection;
							for (a = 0; a < f.items.length; a++)
								(b = this.getToolbarItemType(f.items[a])) && this.items.addItem(b);
							this.disabled.set(this.areAllHidden(this.items));
							this.setHidden();
							this.disabled.bind(this, function (a) {
								d.setHidden()
							})
						}
						__extends(b, c);
						b.prototype.getToolbarItemType = function (a) {
							if ("button" ==
								a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarButton(this.app, this.libraryId, a);
							if ("toggleButton" == a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarToggleButton(this.app, this.libraryId, a);
							if ("region" == a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarRegion(this.app, this.libraryId, a);
							if ("tool" == a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarTool(this.app,
									this.libraryId, a);
							if ("toolbarGroup" == a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroup(this.app, this.libraryId, a);
							if ("flyout" == a.type)
								return new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarFlyout(this.app, this.libraryId, a)
						};
						return b
					}
					(g.ToolbarGroupItemBase);
					g.ToolbarGroup = h
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex ||
	(geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function (c) {
						function b(a, b, f) {
							var d = this;
							c.call(this, a, b, f);
							this.flyoutButtonDescription = new Observable("");
							this.selectedTool.set(this.items.getAt(0));
							this.flyoutButtonDescription.set(this.app.getResource(this.libraryId, "language-toolbar-flyout-description").format(this.name.get()));
							this.app.event("ActiveToolChangedEvent").subscribe(this, function (a) {
								var b = d.items.get().filter(function (b) {
										return d._seeIfActiveToolIsInFlyout(b, a)
									});
								0 < b.length && d.selectedTool.set(b[0])
							})
						}
						__extends(b, c);
						b.prototype._seeIfActiveToolIsInFlyout = function (a, b) {
							if (!(a.tool instanceof h.tools.MapTool))
								return !1;
							var c = a.tool;
							if (b.tool instanceof h.tools.MapTool) {
								var d = b.tool;
								return c.command === d.command && c.drawMode === d.drawMode
							}
							return !1
						};
						b.prototype.toggleFlyout = function () {
							this.toolChangeActive.set(!this.toolChangeActive.get())
						};
						b.prototype.switchActiveFlyoutTool = function (a) {
							"tool" === a.type && this.selectedTool.set(a);
							a.execute()
						};
						b.prototype.getToolbarItemType =
						function (a) {
							return "button" == a.type ? new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarButton(this.app, this.libraryId, a) : "toggleButton" == a.type ? new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarToggleButton(this.app, this.libraryId, a) : "region" == a.type ? new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarRegion(this.app, this.libraryId, a) : "tool" == a.type ? new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarTool(this.app, this.libraryId,
								a) : "toolbarGroup" == a.type ? new d.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroup(this.app, this.libraryId, a) : null
						};
						return b
					}
					(g.ToolbarGroup);
					g.ToolbarFlyout = k
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b, f) {
							var g = this;
							c.call(this, a, b, f);
							this.command = new d.modules.command.CommandViewModel(this.app, void 0, f.command, f.commandParameter);
							this.disabled.set(!this.command.canExecute.get());
							this.setHidden();
							this.command.canExecute.bind(this, function (a) {
								g.disabled.set(!a);
								g.setHidden()
							});
							this.iconUri = new Observable(f.iconUri);
							if (!this.app.site || !this.app.site.isInitialized)
								this.app.event("SiteInitializedEvent").once(this,
									this._raiseCommandCanExecuteChanged)
						}
						__extends(b, c);
						b.prototype.execute = function () {
							this.command && this.command.commandName && (this.command.commandParameter ? this.app.commandRegistry.command(this.command.commandName).execute(this.command.commandParameter) : this.app.commandRegistry.command(this.command.commandName).execute());
							var a = {
								commandName : this.command.commandName,
								commandParameter : this.command.commandParameter,
								id : this.id,
								name : this.name.get(),
								libraryId : this.libraryId
							};
							this.app.event("ToolbarButtonClickedEvent").publish(a)
						};
						b.prototype._raiseCommandCanExecuteChanged = function () {
							this.command.commandName && this.app.command(this.command.commandName).raiseCanExecuteChanged()
						};
						return b
					}
					(g.ToolbarGroupItemBase);
					g.ToolbarButton = h
				})(h.toolbarGroup || (h.toolbarGroup = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function (c) {
						function b(a, b, d) {
							c.call(this, a, b, d);
							this.regionName = d.regionName
						}
						__extends(b, c);
						return b
					}
					(d.ToolbarGroupItemBase);
					d.ToolbarRegion = h
				})(d.toolbarGroup || (d.toolbarGroup = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function (c) {
						function b(a, b, d) {
							var g = this;
							c.call(this, a, b, d);
							if (d) {
								a = {};
								for (var h in d) {
									if (!h)
										break;
									a[h] = d[h]
								}
								a.name = d.id;
								var k = [];
								k.push(a);
								this.app.allLibrariesLoaded ? this._initializeTool(k) : (this.disabled.set(!0), this.setHidden(), this.app.event("ViewerLibrariesDownloadedEvent").once(this, function () {
										g.disabled.set(!1);
										g.setHidden();
										g._initializeTool(k)
									}));
								this.isActive.set(!1);
								this.iconUri = new Observable(d.iconUri);
								this.app.event("StateEnteredEvent").subscribe(this,
									function (a) {
									g.isActive.get() && "TransientActiveState" === a.stateDefinition.name && g.activeTransient.set(!0)
								});
								this.app.event("StateExitedEvent").subscribe(this, function (a) {
									"TransientActiveState" === a.stateDefinition.name && g.activeTransient.set(!1)
								})
							}
						}
						__extends(b, c);
						b.prototype.execute = function () {
							this.isActive.get() || this.tool.isActive ? this.app.commandRegistry.command("ClearActiveTool").execute() : this.tool.enabled && !this.tool.enabled.get() || this.app.commandRegistry.command("SetActiveTool").execute(this.tool.id)
						};
						b.prototype._initializeTool = function (a) {
							var b = this;
							this.tool = this.app.toolRegistry.createTools(a, !0)[0];
							this.tool ? this.tool.enabled && (this.disabled.set(!this.tool.enabled.get()), this.setHidden(), this.tool.enabled.bind(this, function (a) {
									b.disabled.set(!a);
									b.setHidden();
									a || !b.isActive.get() && !b.tool.isActive || b.app.commandRegistry.command("ClearActiveTool").execute()
								})) : (this.disabled.set(!0), this.setHidden())
						};
						return b
					}
					(d.ToolbarGroupItemBase);
					d.ToolbarTool = h
				})(d.toolbarGroup || (d.toolbarGroup = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this._drawIsActive = !1;
							this._mapMouseDownToken = this._mapMouseHoverToken = this._inputMethodChangeHandle = this._drawEndHandlerToken = null;
							this._autoPanPixelTolerance = 15;
							this._autoPanStep = 1 / 3;
							this._unsupportedAutoPanDrawModes = ["FREEHAND_POLYGON", "FREEHAND_POLYLINE", "POINT", "MULTI_POINT"];
							this._drawEndSuspended = !1
						}
						__extends(b, c);
						b.prototype._createDrawObject = function () {
							this._drawObject = this.app.accessibilityManager.createComponent("geocortex.accessibility.draw",
									this.app.map);
							this._drawObject.setMarkerSymbol(new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, 10, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.8]), 2), new esri.Color([0, 0, 0, 0.8])));
							this._drawObject.setFillSymbol(new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.8]), 2), new esri.Color([0, 0, 0, 0.25])));
							this._drawObject.setLineSymbol(new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new esri.Color([0, 0, 0, 0.8]), 2))
						};
						b.prototype._activateToolbar = function () {
							this._drawObject || this._createDrawObject();
							this._drawEndHandlerToken || (this._drawEndHandlerToken = dojo.aspect.after(this._drawObject, "onDrawEnd", dojo.hitch(this, "onDrawEnd"), !0));
							this._drawObject instanceof d.essentialsHtmlViewer.mapping.infrastructure.accessibility.Draw && (this._inputMethodChangeHandle = dojo.aspect.after(this._drawObject,
										"onInputMethodChange", dojo.hitch(this, "onInputMethodChange"), !0));
							this._drawObject.activate(esri.toolbars.Draw[this.drawMode]);
							this._drawIsActive = !0;
							this._drawEndSuspended = !1
						};
						b.prototype._deactivateToolbar = function () {
							this._drawEndHandlerToken && (this._drawEndHandlerToken.remove(), this._drawEndHandlerToken = null);
							this._inputMethodChangeHandle && (this._inputMethodChangeHandle.remove(), this._inputMethodChangeHandle = null);
							this._drawObject && this._drawIsActive && (this._drawObject.deactivate(), this._drawEndSuspended =
									this._drawIsActive = !1)
						};
						b.prototype.onActivated = function () {
							this._drawObject || this._createDrawObject();
							this._drawIsActive && this._deactivateToolbar();
							if ("CURRENT_EXTENT" == this.drawMode)
								this.onDrawEnd(this.app.map.extent);
							else {
								if (!this.app.map.graphics)
									return;
								this.app.command("ShowMap").execute();
								this._activateToolbar()
							}
							this._mapMouseDownToken = this.app.event("MapMouseDownEvent").subscribe(this, this.onMapMouseDown);
							this._mapMouseHoverToken = this.app.event("MapMouseHoverEvent").subscribe(this, this.onMapMouseHover)
						};
						b.prototype.onDeactivated = function () {
							this._mapMouseHoverToken && (this.app.event("MapMouseHoverEvent").unsubscribe(this._mapMouseHoverToken), this._mapMouseHoverToken = null);
							this._mapMouseDownToken && (this.app.event("MapMouseDownEvent").unsubscribe(this._mapMouseDownToken), this._mapMouseDownToken = null);
							this._deactivateToolbar();
							this.app.command("ShowMap").execute()
						};
						b.prototype.onDrawEnd = function (a) {
							var b = this;
							if (!this._drawEndSuspended) {
								if (this.command) {
									var c = this.app.command(this.command);
									c.canExecute(a) ?
									(c.execute(a), this.app.command("LogOptimizerEvent").execute(this.name, this.command)) : this.app.trace.warning("Could not invoke command '{0}' for tool '{1}'.".format(this.name, this.command))
								}
								this.isSticky ? (this._drawEndSuspended = !0, setTimeout(function () {
										return b._drawEndSuspended = !1
									}, 100)) : this.setActive(!1)
							}
						};
						b.prototype.onInputMethodChange = function (a) {
							a = {
								tool : this,
								previousMethod : a ? a.previousMethod : null,
								newMethod : a ? a.newMethod : null
							};
							this.app.event("ToolInputMethodChangedEvent").publish(a)
						};
						b.prototype.onMapMouseDown =
						function (a) {
							3 === a.which && this._drawObject && (this.app.command("ClearActiveTool").execute(), this._deactivateToolbar(), this.app.command("RemoveStatus").execute())
						};
						b.prototype.onMapMouseHover = function (a) {
							if (null != this._drawObject && this._drawIsActive && !(0 <= this._unsupportedAutoPanDrawModes.indexOf(this.drawMode)) && a.hasOwnProperty("clientX") && a.hasOwnProperty("clientY")) {
								var b = $(this.app.map.root).offset();
								a.clientX < b.left + this._autoPanPixelTolerance ? this.app.command("PanLeft").execute(this._autoPanStep) :
								b.left + this.app.map.width - this._autoPanPixelTolerance < a.clientX ? this.app.command("PanRight").execute(this._autoPanStep) : a.clientY < b.top + this._autoPanPixelTolerance ? this.app.command("PanUp").execute(this._autoPanStep) : b.top + this.app.map.height - this._autoPanPixelTolerance < a.clientY && this.app.command("PanDown").execute(this._autoPanStep)
							}
						};
						return b
					}
					(g.ToolBase);
					g.MapTool = h;
					h.prototype.command = null;
					h.prototype.drawMode = null;
					h.prototype.isSticky = !1
				})(h.tools || (h.tools = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function (c) {
						function b(a, b) {
							var d = this;
							c.call(this, a, b);
							this.enabled = new Observable(!0);
							if (b.command) {
								var g = a.command(b.command);
								this.enabled.set(g.canExecute());
								g.canExecuteChanged.subscribe(this, function () {
									var a = g.canExecute();
									!a && d.isActive && d.setActive(!1);
									d.enabled.set(a)
								})
							}
						}
						__extends(b, c);
						return b
					}
					(d.MapTool);
					d.DisablingMapTool = h
				})(d.tools || (d.tools = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this.currentFeature = new Observable(null);
							this.providerEnabled = new Observable(!1);
							this.currentFeature.bind(this, this.handleCurrentFeatureChanged)
						}
						__extends(b, c);
						b.prototype.initialize = function (a) {};
						b.prototype.handleCurrentFeatureChanged = function (a) {};
						b.prototype.updateProviderState = function (a) {
							a = !!this.currentFeature.get() && !!a;
							this.providerEnabled.get() !== a && this.providerEnabled.set(a)
						};
						b.prototype.createAttachedViews = function (a, b, c, d) {
							var g = this,
							h = [];
							if (a.viewType && a.markup && b) {
								var k = function (c, f, k) {
									var m = b[f];
									null !== m && (m ? (c = g.app.viewManager.createView({
													viewId : k,
													markupResource : c,
													typeName : a.viewType,
													iconUri : a.iconUri,
													title : a.title || "",
													regionName : m,
													isVisible : !0,
													libraryId : a.libraryId || g.libraryId,
													configuration : a.viewConfig
												}), c.attach(d || g), h.push(c)) : g.app.trace.warning("FeatureProviderBase: Could not resolve target region for view mode {0}. Failed to create view with id {1}".format(f,
												k)))
								};
								if ("string" === typeof a.markup)
									k(a.markup, "default", a.viewId || null);
								else
									for (var m in a.markup)
										if (a.markup.hasOwnProperty(m)) {
											var q = a.viewId ? "{0}-{1}".format(a.viewId, m) : null;
											k(a.markup[m], m, q)
										}
								c && "function" === typeof c && c(h)
							} else
								this.app.trace.warning("FeatureProviderBase: View type, markup or region not specified. Cannot create view for {0}".format(a.type))
						};
						return b
					}
					(d.framework.ui.ViewModelBase);
					g.FeatureProviderBase = h
				})(h.featureDetails || (h.featureDetails = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c() {
							this.layers = [];
							this.tables = [];
							this.isUserCreated = !1;
							this.isExpanded = this.includeInLayerList = !0;
							this._delayedRefreshToken = null
						}
						c.fromEsriLayer = function (b) {
							var a = new c;
							a.serviceLayer = b;
							a.serviceType = g.GisUtils.getServiceLayerType(b);
							a.id = b.id;
							if (b instanceof esri.layers.ArcGISDynamicMapServiceLayer || b instanceof esri.layers.ArcGISTiledMapServiceLayer) {
								a.capabilities = b.capabilities.split(",");
								for (var d = 0; d <
									b.layerInfos.length; d++) {
									var f = g.LayerInfo.fromEsriLayerInfo(b.layerInfos[d], b);
									f.serviceLayerInfo = a;
									a.layers.push(f)
								}
							} else
								b instanceof esri.layers.FeatureLayer && (a.displayName = b.name, a.capabilities = b.capabilities.split(","), f = g.LayerInfo.fromEsriFeatureLayer(b), f.serviceLayerInfo = a, "Table" === b.type ? a.tables.push(f) : a.layers.push(f));
							return a
						};
						c.fromGcxMapService = function (b) {
							var a = new c;
							a.gcxMapService = b;
							a.serviceType = b.mapServiceType;
							a.serviceLayerFunction = b.mapServiceFunction;
							a.serviceLayer = b.serviceLayer;
							a.id = b.id;
							a.isExpanded = b.isExpanded;
							a.isUserCreated = b.isUserCreated;
							a.includeInLayerList = b.includeInLayerList;
							a.displayName = b.displayName;
							b.serviceLayer.capabilities && (a.capabilities = b.serviceLayer.capabilities.split(","));
							for (var e = 0; e < b.layers.length; e++) {
								var f = b.layers[e],
								l = g.LayerInfo.fromGcxLayer(f);
								l.serviceLayerInfo = a;
								f.type === d.essentials.LayerType.TABLE_LAYER ? a.tables.push(l) : a.layers.push(l)
							}
							for (e = 0; e < b.tables.length; e++)
								f = g.LayerInfo.fromGcxLayer(b.tables[e]), f.serviceLayerInfo = a, a.tables.push(f);
							return a
						};
						c.prototype.findLayerById = function (b) {
							for (var a = 0, c = this.layers.length; a < c; a++) {
								var d = this.layers[a];
								if (b === d.id.toString())
									return d
							}
							return null
						};
						c.prototype.isVisible = function () {
							var b = !1;
							this.serviceLayer && "boolean" === typeof this.serviceLayer.visible && (b = this.serviceLayer.visible);
							return b
						};
						c.prototype.setVisibility = function (b) {
							this.gcxMapService ? this.gcxMapService.setVisibility(b) : null !== this.serviceLayer && this.serviceLayer.setVisibility(b)
						};
						c.prototype.opacity = function () {
							return this.gcxMapService ?
							this.gcxMapService.opacity : this.serviceLayer ? this.serviceLayer.opacity : null
						};
						c.prototype.setOpacity = function (b) {
							if (this.gcxMapService)
								this.gcxMapService.setOpacity(b);
							else if (this.serviceLayer) {
								if (null == b || isNaN(b))
									b = 1;
								b = Math.min(1, Math.max(0, b));
								this.serviceLayer.setOpacity(b)
							}
						};
						c.prototype.refresh = function (b, a) {
							var c = this,
							d = this.serviceLayer;
							if (d && "function" === typeof d.refresh) {
								var g = function () {
									c._delayedRefreshToken = null;
									if (!0 === a && "function" === typeof d.setDisableClientCaching) {
										var a = d.disableClientCaching;
										d.setDisableClientCaching(!0);
										d.refresh();
										d.setDisableClientCaching(a)
									} else
										d.refresh()
								};
								this._delayedRefreshToken && clearTimeout(this._delayedRefreshToken);
								"number" !== typeof b ? g() : this._delayedRefreshToken = setTimeout(g, b)
							}
						};
						c.prototype.supportsLayerVisibility = function () {
							switch (this.serviceType) {
							case d.essentials.MapServiceType.FEATURE:
							case d.essentials.MapServiceType.GEORSS:
							case d.essentials.MapServiceType.KML:
							case d.essentials.MapServiceType.BING:
							case d.essentials.MapServiceType.TILED:
							case d.essentials.MapServiceType.WMTS:
							case d.essentials.MapServiceType.IMAGE:
							case d.essentials.MapServiceType.WEBTILED:
								return !1;
							case d.essentials.MapServiceType.DYNAMIC:
								return null !== this.serviceLayer && !!this.serviceLayer.visibleLayers
							}
							return !0
						};
						c.prototype.loaded = function () {
							var b = this;
							if (this._loadedDeferred)
								return this._loadedDeferred;
							this._loadedDeferred = new dojo.Deferred;
							if (this.serviceLayer.loaded)
								this._loadedDeferred.resolve(this.serviceLayer);
							else if (this.serviceLayer.loadError)
								this._loadedDeferred.resolve(this.serviceLayer.loadError);
							else
								var a = this.serviceLayer.on("load", function () {
										a.remove();
										c.remove();
										b._loadedDeferred.resolve(b.serviceLayer)
									}),
								c = this.serviceLayer.on("error", function (d) {
										a.remove();
										c.remove();
										b._loadedDeferred.errback(d)
									});
							return this._loadedDeferred
						};
						return c
					}
					();
					g.ServiceLayerInfo = h
				})(h.gis || (h.gis = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this.id = new Observable("");
							this.parent = this.children = null;
							b && this.id.set(b);
							a && (this.parent = a)
						}
						c.prototype.getRoot = function () {
							for (var b = this; null != b.parent; )
								b = b.parent;
							return b
						};
						c.prototype.getAncestors = function () {
							var b = null;
							if (this.parent)
								for (var b = [], a = this.parent; null != a; )
									b.push(a), a = a.parent;
							return b
						};
						c.prototype.getSelfAndAncestors = function () {
							var b = this.getAncestors(),
							b = b && b.length ? b : [];
							b.unshift(this);
							return b
						};
						c.prototype.getSiblings = function (b) {
							void 0 === b && (b = !1);
							var a = null;
							if (this.parent && this.parent.children && (a = this.parent.children.get(), !b))
								for (a = a.slice(0), b = 0; b < a.length; b++)
									if (a[b] === this) {
										a.splice(b, 1);
										break
									}
							return a
						};
						c.prototype.getDescendants = function () {
							if (this.children) {
								for (var b = [], a = this.children.get(), c = 0; c < a.length; c++) {
									var d = a[c];
									b.push(d);
									for (var d = d.getDescendants(), g = 0; g < d.length; g++)
										b.push(d[g])
								}
								return b
							}
						};
						c.prototype.getSelfAndDescendants = function () {
							var b = this.getDescendants(),
							b = b && b.length ? b : [];
							b.unshift(this);
							return b
						};
						return c
					}
					();
					d.LayerListNode = h
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function (c) {
						function b(a, b, f, g) {
							c.call(this, "GCXLayerListRootNode-".concat(d.framework.utils.alphaNumericToken()));
							this.layerListInitialized = !1;
							this.layerListInitializationFailure = null;
							this.onLayerListInitializationFailed = function (a) {};
							this.onLayerListInitialized = function (a) {};
							this.autoActivateAncestorVisibilities = this.onlyShowSwatchesOnVisibleLayers = this.enableLegendIntegration = !1;
							this._addedFolderReferences = [];
							this._handledMapServiceReferences =
								[];
							this._allMapServiceReferences = [];
							this._outOfFolderMapServiceReferences = [];
							this._initializing = !1;
							this._groupByOperationalAndBase = !0;
							this._layerListRestEndpoint = null;
							this._suspendMapUpdates = !1;
							if (!a || !a.mapInfo)
								throw Error("LayerList: Initialization failed. AppInfo/MapInfo cannot be null");
							this.appInfo = a;
							this.mapInfo = a.mapInfo;
							this.url = b || "";
							this._libraryId = "Mapping.Infrastructure";
							this._layerListRestEndpoint = f || null;
							this.enableLegendIntegration = g && void 0 != g.enableLegendIntegration ? g.enableLegendIntegration :
								!1;
							this.onlyShowSwatchesOnVisibleLayers = g && void 0 != g.onlyShowSwatchesOnVisibleLayers ? g.onlyShowSwatchesOnVisibleLayers : !1;
							this.autoActivateAncestorVisibilities = g && void 0 != g.autoActivateAncestorVisibilities ? g.autoActivateAncestorVisibilities : !1;
							this._groupByOperationalAndBase = g && void 0 != g.groupByOperationalAndBase ? g.groupByOperationalAndBase : !0;
							this.enableLayerIcons = g && void 0 != g.enableLayerIcons ? g.enableLayerIcons : !1;
							this.serviceLoadFailureIconUri = g ? g.serviceLoadFailureIconUri || "" : "";
							this.serviceLoadFailureIconTooltip =
								g ? g.serviceLoadFailureIconTooltip || "" : "";
							this.multiLegendSwatchElement = g ? g.multiLegendSwatchElement || "" : "";
							this.singleLegendIconTooltip = g ? g.singleLegendIconTooltip || "" : "";
							this.multiLegendIconTooltip = g ? g.multiLegendIconTooltip || "" : ""
						}
						__extends(b, c);
						Object.defineProperty(b.prototype, "suspendMapUpdates", {
							get : function () {
								return this._suspendMapUpdates
							},
							set : function (a) {
								a !== this._suspendMapUpdates && ((this._suspendMapUpdates = a) ? this._enableDeferredItemVisibilities(this.children.get()) : this._applyDeferredItemVisibilities(this.children.get()))
							},
							enumerable : !0,
							configurable : !0
						});
						b.prototype.initialize = function () {
							this.layerListInitialized || this._initializing || (this._initializing = !0, this.children = new g.LayerListItemCollection(null), this.children.layerList = this, this._layerListRestEndpoint ? this._layerListInitializationHandler(this._layerListRestEndpoint) : this.url && this.appInfo.essentialsVersion && 4.02 <= this.appInfo.essentialsVersion ? d.request({
									url : this.url,
									content : {
										f : "json"
									},
									load : dojo.hitch(this, this._layerListInitializationHandler),
									error : dojo.hitch(this,
										this._layerListInitializationErrorHandler),
									callbackParamName : "CallBack"
								}) : this._layerListInitializationHandler(null))
						};
						b.prototype.addUserAddedServiceLayer = function (a) {
							if (!this.layerListInitialized)
								return !1;
							if (!(a instanceof h.gis.ServiceLayerInfo))
								if (a instanceof d.essentials.MapService)
									a = h.gis.ServiceLayerInfo.fromGcxMapService(a);
								else if (a instanceof esri.layers.Layer)
									a = h.gis.ServiceLayerInfo.fromEsriLayer(a);
								else
									return this.appInfo.gcxApp.trace.error("addUserAddedServiceLayer: Could not add layer. Invalid layer type."),
									!1;
							return (a = this._generateLayerListItemsFromServiceLayer(a, this, !0)) && a.length ? this._addItemsToUserAddedFolder(a) : !1
						};
						b.prototype.removeServiceLayer = function (a) {
							if (!this.layerListInitialized)
								return !1;
							if (!(a instanceof esri.layers.Layer))
								if (a instanceof d.essentials.MapService || a instanceof h.gis.ServiceLayerInfo)
									a = a.serviceLayer;
								else
									return this.appInfo.gcxApp.trace.error("removeServiceLayer: Could not remove layer. Invalid layer type."), !1;
							var b = this.getDescendants();
							if (b.length) {
								for (var c = 0; c < b.length; c++) {
									var l =
										b[c];
									if (l.mapService && l.mapService.serviceLayer === a) {
										var k = l.parent;
										k ? (k.children.removeItem(l), k instanceof g.LayerListItem && k.refreshOnDemandItemCollection()) : this.children.removeItem(l)
									}
								}
								return !0
							}
							return !1
						};
						b.prototype.updateServiceLayer = function (a, b, c) {
							if (!this.layerListInitialized || !a)
								return !1;
							b = b || [];
							c = c || [];
							var l;
							if (a instanceof d.essentials.MapService)
								l = h.gis.ServiceLayerInfo.fromGcxMapService(a);
							else if (a instanceof h.gis.ServiceLayerInfo)
								l = a;
							else
								return this.appInfo.gcxApp.trace.error("updateServiceLayer: Could not update layer. Invalid layer type."),
								!1;
							a = this.getDescendants();
							if (!a.filter(function (a) {
									return a.mapService && a.mapService && a.mapService.gcxMapService === l.gcxMapService
								}).length)
								return this.addUserAddedServiceLayer(l);
							if (c && c.length) {
								a = this.getDescendants();
								for (var k = 0; k < a.length; k++) {
									var m = a[k];
									if (m.type === g.LayerListItemType.LAYER) {
										var r = m.layer && m.layer.gcxLayer ? m.layer.gcxLayer : null;
										r && r.isUserCreated && 0 <= c.indexOf(r) && ((r = m.parent) ? (r.children.removeItem(m), r instanceof g.LayerListItem && r.refreshOnDemandItemCollection()) : (this.children.removeItem(m),
												this.children.pulse()))
									}
								}
							}
							if (b && b.length) {
								a = this.getDescendants();
								c = [];
								for (k = 0; k < b.length; k++) {
									var m = b[k],
									q = l.findLayerById(m.id);
									q || (q = h.gis.LayerInfo.fromGcxLayer(m), q.serviceLayerInfo = l, l.layers.push(q));
									a.filter(function (a) {
										return a.layer && a.layer.gcxLayer === q.gcxLayer
									}).length || (m = new g.LayerListLayerItem(q.id, q, this, g.LayerListItemType.LAYER), c.push(m))
								}
								if (c.length)
									return this._addItemsToUserAddedFolder(c)
							}
							return !1
						};
						b.prototype.updateServiceLayerLegendSwatch = function (a) {
							if (!this.layerListInitialized)
								return !1;
							var b = a.serviceLayer;
							return b ? (a = this.getDescendants().filter(function (a) {
										return a.mapService && a.mapService.serviceLayer.id === b.id
									})[0]) && a instanceof g.LayerListLayerItem ? (a.updateLegendItems(), !0) : !1 : (this.appInfo.gcxApp.trace.error("updateServiceLayerLegendSwatch: Could not update layer swatch. Invalid layer type."), !1)
						};
						b.prototype._applyDeferredItemVisibilities = function (a) {
							var b = this;
							dojo.forEach(a, function (a) {
								a._applyDeferredInitialVisibility();
								a.children && a.children.length() && b._applyDeferredItemVisibilities(a.children.get())
							})
						};
						b.prototype._enableDeferredItemVisibilities = function (a) {
							var b = this;
							a.forEach(function (a) {
								d.framework.utils.isNullOrUndefined(a._deferredVisibilitySetting) && (a._deferredVisibilitySetting = a.isVisible.get());
								b._enableDeferredItemVisibilities(a.children.get())
							})
						};
						b.prototype._layerListInitializationErrorHandler = function (a) {
							this.layerListInitializationFailure = a;
							if (this.onLayerListInitializationFailed)
								this.onLayerListInitializationFailed(a);
							this._initializing = !1
						};
						b.prototype._layerListInitializationHandler =
						function (a) {
							var b = this,
							c = function () {
								b.layerListInitialized = !0;
								b._initializing = !1;
								b._processEligibleSingleMapServiceFolders();
								b._processUnhandledMapServices();
								b._setupOpacityBindingsForParentsOfHiddenItemsWithOpacityBindings();
								b._applyInitialLayerTheme();
								b._applyDeferredItemVisibilities(b.children.get());
								if (b.onLayerListInitialized)
									b.onLayerListInitialized(b)
							};
							a ? this._configureLayerListFromRestResponse(a, c, this._layerListInitializationErrorHandler) : this._configureLayerListFromMapInfo(this.mapInfo,
								c, this._layerListInitializationErrorHandler)
						};
						b.prototype._configureLayerListFromMapInfo = function (a, b, c) {
							if (a) {
								if (a.gcxMap && a.serviceLayers.length && void 0 != a.serviceLayers[0].serviceLayerFunction && this._groupByOperationalAndBase)
									var d = new g.LayerListFolderItem(this.id.get() + ":Operational", this.appInfo.gcxApp.getResource(this._libraryId, "language-layerlist-operational-maps-folder-title"), this), h = new g.LayerListFolderItem(this.id.get() + ":Base", this.appInfo.gcxApp.getResource(this._libraryId, "language-layerlist-base-maps-folder-title"),
											this);
								try {
									for (var k = 0; k < a.serviceLayers.length; k++) {
										var m = a.serviceLayers[k],
										q = this._generateLayerListItemsFromServiceLayer(m, this);
										if (q && q.length)
											if (this._groupByOperationalAndBase)
												switch (m.serviceLayerFunction) {
												case "Operational":
													d.children.addItems(q);
													break;
												case "Base":
													h.children.addItems(q);
													break;
												default:
													throw Error("ServiceLayerFunction undefined or not recognized: {0}".format(m.serviceLayerFunction));
												}
											else
												this.children.addItems(q)
									}
									this._groupByOperationalAndBase && (d.children.length() && (this._generateThemeSettingsForCoreFolder(d),
											this.children.addItem(d), d.isExpanded.set(!0), d.isVisible.set(!0), d.configuredVisible = !0), h.children.length() && (this._generateThemeSettingsForCoreFolder(h), this.children.addItem(h), h.isExpanded.set(!0), h.isVisible.set(!0), h.configuredVisible = !0))
								} catch (s) {
									console.error("Layer List Configuration Error: {0}".format(s && s.message || "Unknown Error"));
									c(s);
									return
								}
								b()
							} else
								this._layerListInitializationErrorHandler(Error("Error initializing layer list from MapInfo."))
						};
						b.prototype._configureLayerListFromRestResponse =
						function (a, b, c) {
							try {
								if (!a || !a.items)
									throw Error("Layer list failed to load (general data failure).");
								this._userAddedLayersDestinationId = a.userAddedLayersDestinationId;
								for (var d = 0, g = a.items; d < g.length; d++) {
									var h = this._createLayerListItemFromRestResult(g[d], this);
									h && this.children.addItem(h)
								}
							} catch (k) {
								k.name = "LayerListConfigurationError/" + k.name;
								this._layerListInitializationErrorHandler(k);
								c(k);
								return
							}
							b()
						};
						b.prototype._generateLayerListItemsFromServiceLayer = function (a, b, c) {
							var d = this;
							void 0 === c && (c =
									!1);
							var h = [],
							k = null,
							m = function (b, c) {
								var e = b.subLayerIds || [];
								if (0 < e.length)
									for (var f = 0; f < e.length; f++) {
										var h = a.findLayerById(e[f]);
										if (h && (h.processed = !0, h.includeInLayerList)) {
											var k = new g.LayerListLayerItem(h.id, h, d);
											q(k);
											c.children.addItem(k);
											m(h, k)
										}
									}
								c.isExpanded.set(b.isExpanded && !(!b.subLayerIds || !b.subLayerIds.length))
							},
							q = function (a) {
								a && c && (a.unbindFromActiveTheme(), a.inActiveTheme.set(!0))
							};
							a.includeInLayerList && (k = new g.LayerListMapServiceItem(a.id, a, this), q(k));
							a.serviceLayer instanceof esri.layers.GraphicsLayer &&
							1 === a.layers.length ? (k = this._handleGraphicsLayerItem(a, k), q(k && k.children.length() ? k.children.getAt(0) : k)) : a.layers.length && (dojo.forEach(a.layers, function (a) {
									if ((a.includeInLayerList || a.isUserCreated) && !a.processed) {
										var b = new g.LayerListLayerItem(a.id, a, d);
										q(b);
										k ? k.children.addItem(b) : h.push(b);
										m(a, b)
									}
								}), k && k.isExpanded.set(a.isExpanded && !!a.layers.length));
							k && (h.push(k), b && (k.parent = b));
							return h
						};
						b.prototype._handleGraphicsLayerItem = function (a, b) {
							var c = b;
							if (a.layers[0].includeInLayerList || a.layers[0].isUserCreated) {
								var d =
									a.layers[0],
								h = new g.LayerListGraphicsLayerItem(d.id, a.layers[0], this);
								h.isExpanded.set(d.isExpanded && !(!d.subLayerIds || !d.subLayerIds.length));
								c ? (c.isVisible.set(h.isVisible.get()), h.isVisible.set(!0), h.canNotAssignVisibility.set(!0), c.children.addItem(h), c.isExpanded.set(a.isExpanded && !!a.layers.length)) : c = h
							}
							return c
						};
						b.prototype._createLayerListItemFromRestResult = function (a, b) {
							var c = this,
							d = null,
							h = function (b) {
								console.error("Layer List Error: {0} with ID: {1} not available. Excluding from layer list. Please check your security settings.".format(b ===
										g.LayerListItemType.MAPSERVICE ? "MapService" : b === g.LayerListItemType.LAYER ? "Map Layer" : "Object", a.mapServiceID))
							};
							switch (a.type) {
							case "folder":
								d = new g.LayerListFolderItem(a.id, a.name, this);
								a.items && a.items.length && this._subItemIncludedInLayerList(a.items) || (d.displayItem.set(!1), d.isExpanded.set(!1));
								this._userAddedLayersDestinationId && a.id === this._userAddedLayersDestinationId && (this._userAddedLayersFolder = d);
								break;
							case "mapService":
								var k = this.mapInfo.findMapServiceById(a.mapServiceID);
								k || h(g.LayerListItemType.MAPSERVICE);
								k && k.includeInLayerList && (d = new g.LayerListMapServiceItem(a.id, k, this));
								break;
							case "layer":
								(k = this.mapInfo.findMapServiceById(a.mapServiceID)) || h(g.LayerListItemType.MAPSERVICE);
								if (k) {
									var m = k.findLayerById(a.layerID);
									m || h(g.LayerListItemType.LAYER);
									m && m.includeInLayerList && (d = k.serviceLayer instanceof esri.layers.GraphicsLayer ? new g.LayerListGraphicsLayerItem(a.id, m, this) : new g.LayerListLayerItem(a.id, m, this))
								}
								break;
							default:
								throw Error("Unknown layer list item type. Reported type: {0}".format(a.type));
							}
							d && (b && (d.parent = b), null != a.items && a.items.length && dojo.forEach(a.items, function (a) {
									(a = c._createLayerListItemFromRestResult(a, d)) && d.children.addItem(a)
								}), this._processItem(d, a));
							return d
						};
						b.prototype._subItemIncludedInLayerList = function (a) {
							for (var b = 0; b < a.length; b++) {
								var c;
								c = a[b];
								if ("folder" === c.type)
									c = c.items && c.items.length ? this._subItemIncludedInLayerList(c.items) : !1;
								else if ("mapService" === c.type) {
									var d = this.mapInfo.findMapServiceById(c.mapServiceID);
									c = d ? !!d.includeInLayerList : !1
								} else
									"layer" ===
									c.type ? (d = this.mapInfo.findMapServiceById(c.mapServiceID), c = (c = d.findLayerById(c.layerID)) ? !!c.includeInLayerList : !1) : c = void 0;
								if (c)
									return !0
							}
							return !1
						};
						b.prototype._processItem = function (a, b) {
							if (a.type === g.LayerListItemType.FOLDER) {
								if (this.mapInfo.gcxMap && b.themeSettings && b.themeSettings.length)
									for (var c = 0; c < b.themeSettings.length; c++) {
										var l = b.themeSettings[c],
										h = this.mapInfo.gcxMap.layerThemesInfo.getTheme(l.themeID);
										h && a.layerThemeSettings.push(new d.essentials.LayerThemeSetting(h, void 0 != l.visible ?
												l.visible : b.isVisible))
									}
								a._deferredVisibilitySetting = b.isVisible;
								a.isVisible.set(b.isVisible);
								a.configuredVisible = b.isVisible;
								a.isExpanded.set(b.isExpanded && !(!b.items || !b.items.length));
								this._disableFolderIfParentTiled(a)
							}
							a.type === g.LayerListItemType.MAPSERVICE && a.isExpanded.set(a.mapService.isExpanded);
							a.type === g.LayerListItemType.LAYER && a.isExpanded.set(a.layer.isExpanded && !(!a.layer.subLayerIds || !a.layer.subLayerIds.length));
							a.type === g.LayerListItemType.FOLDER && (c = b.iconUri) && (this.mapInfo.gcxMap &&
								this.mapInfo.gcxMap.site && (c = d.essentials.RestHelper.processClientSideTokens(this.mapInfo.gcxMap.site, c)), a.iconUri.set(c), a.iconTooltip.set(a.name.get()));
							a.canDisplayItem.set(!1 !== b.isVisibleInLayerList);
							if (b.layerVisibilityType === g.LayerVisibilityType.MutuallyExclusive && b.items && 1 < b.items.length)
								for (c = d.framework.utils.alphaNumericToken(32), l = 0; l < a.children.length(); l++)
									a.children.getAt(l).isMutuallyExclusive.set(!0), a.children.getAt(l).hasRadioToggle.set(!0), a.children.getAt(l).radioGroup.set(c)
						};
						b.prototype._disableFolderIfParentTiled = function (a) {
							for (var b = a.parent; b && b.id !== this.id && (b.type === g.LayerListItemType.MAPSERVICE || b.type === g.LayerListItemType.FOLDER); ) {
								if (b.type === g.LayerListItemType.FOLDER && b.canNotAssignVisibility.get() || b.type === g.LayerListItemType.MAPSERVICE && b.mapService.serviceType === d.essentials.MapServiceType.TILED) {
									a.canNotAssignVisibility.set(!0);
									break
								}
								b = b.parent
							}
						};
						b.prototype._generateThemeSettingsForCoreFolder = function (a, b) {
							void 0 === b && (b = !1);
							if (b) {
								if (this.mapInfo.gcxMap &&
									this.mapInfo.gcxMap.layerThemesInfo.layerThemesConfigured)
									for (var c = this.mapInfo.gcxMap.layerThemesInfo.themes, l = 0; l < c.length; l++)
										a.layerThemeSettings.push(new d.essentials.LayerThemeSetting(c[l], !0));
								a.inActiveTheme.set(!0)
							} else
								for (var c = {}, l = 0, h = a.children.length(); l < h; l++) {
									var k = a.children.getAt(l),
									m = null;
									switch (k.type) {
									case g.LayerListItemType.FOLDER:
										m = k.layerThemeSettings;
										break;
									case g.LayerListItemType.MAPSERVICE:
										m = k.mapService.gcxMapService ? k.mapService.gcxMapService.layerThemeSettings : null;
										break;
									case g.LayerListItemType.LAYER:
									case g.LayerListItemType.GRAPHICSLAYER:
										m = k.layer.gcxLayer ? k.layer.gcxLayer.layerThemeSettings : null
									}
									if (m && m.length)
										for (k = 0; k < m.length; k++) {
											var q = m[k].theme.id;
											void 0 == c[q] && (a.layerThemeSettings.push(new d.essentials.LayerThemeSetting(m[k].theme, !0)), c[q] = !0)
										}
								}
						};
						b.prototype._applyInitialLayerTheme = function () {
							this.mapInfo.gcxMap && this.mapInfo.gcxMap.layerThemesInfo.layerThemesConfigured && this.mapInfo.gcxMap.applyStartupTheme()
						};
						b.prototype._processEligibleSingleMapServiceFolders =
						function () {
							for (var a = this._handledMapServiceReferences.slice(0), b = this._getFoldersContainingSingleMapService(), b = this._filterEligibleSingleMsFolders(b), b = this._selectDeepestLevelSingleMapServiceFolders(b), c = 0; c < b.length; c++) {
								var d = b[c];
								d.containedMapServices[0].serviceLayer instanceof esri.layers.GraphicsLayer || -1 !== a.indexOf(d.containedMapServices[0]) || -1 !== this._outOfFolderMapServiceReferences.indexOf(d.containedMapServices[0]) || (d.linkWithMapService(d.containedMapServices[0]), a.push(d.containedMapServices[0]))
							}
						};
						b.prototype._setupOpacityBindingsForParentsOfHiddenItemsWithOpacityBindings = function () {
							for (var a = this.getDescendants(), a = dojo.filter(a, function (a) {
										return a.canAdjustOpacity.get()
									}), b = 0; b < a.length; b++) {
								var c = a[b];
								if (!this.isEffectivelyDisplayed(c)) {
									for (c = c.parent; c instanceof g.LayerListItem && !this.isEffectivelyDisplayed(c); )
										c = c.parent;
									c instanceof g.LayerListItem && c._setupOpacityBindings()
								}
							}
						};
						b.prototype.isEffectivelyDisplayed = function (a) {
							return a.displayItem.get() ? a.parent instanceof g.LayerListItem ?
							this.isEffectivelyDisplayed(a.parent) : !0 : !1
						};
						b.prototype._getFoldersContainingSingleMapService = function () {
							for (var a = [], b = 0; b < this._addedFolderReferences.length; b++)
								1 === this._addedFolderReferences[b].containedMapServices.length && a.push(this._addedFolderReferences[b]);
							return a
						};
						b.prototype._filterEligibleSingleMsFolders = function (a) {
							if (a) {
								for (var b = [], c = 0; c < a.length; c++) {
									var d = a[c],
									g = dojo.filter(this._addedFolderReferences, function (a) {
											return a.id !== d.id && 1 < a.containedMapServices.length && -1 !== a.containedMapServices.indexOf(d.containedMapServices[0])
										}) ||
										[];
									this._noChildItemsWithMapService(d.containedMapServices[0], g) && this._allFoldersAncestorsOf(d, g) && b.push(d)
								}
								return b
							}
						};
						b.prototype._selectDeepestLevelSingleMapServiceFolders = function (a) {
							if (a) {
								for (var b = [], c = [], d = 0; d < a.length; d++) {
									var g = a[d];
									if (-1 === c.indexOf(g.containedMapServices[0])) {
										var h = dojo.filter(a, function (a) {
												return a.id !== g.id && -1 !== a.containedMapServices.indexOf(g.containedMapServices[0])
											}) || [];
										if (h.length) {
											var k = g,
											m;
											for (m = 0; m < h.length; m++)
												if (this._onlyFolderItems(k.children.get()) && this._allFoldersDescendantsOf(k,
														h.slice(m))) {
													if (1 < k.children.length())
														break;
													k = h[m]
												} else {
													k = 1 <= m ? h[m - 1] : k;
													break
												}
											this._allFoldersDescendantsOf(k, h.slice(m)) && (b.push(k), c.push(k.containedMapServices[0]))
										} else
											b.push(g), c.push(g.containedMapServices[0])
									}
								}
								return b
							}
						};
						b.prototype._allFoldersDescendantsOf = function (a, b) {
							for (var c = 0; c < b.length; c++) {
								var d = b[c].getAncestors();
								if (!d || -1 === d.indexOf(a))
									return !1
							}
							return !0
						};
						b.prototype._allFoldersAncestorsOf = function (a, b) {
							for (var c = a.getAncestors(), d = 0; d < b.length; d++)
								if (-1 === c.indexOf(b[d]))
									return !1;
							return !0
						};
						b.prototype._noChildItemsWithMapService = function (a, b) {
							for (var c = 0; c < b.length; c++)
								for (var d = b[c].children.get(), g = 0; g < d.length; g++)
									if (d[g].mapService && d[g].mapService === a)
										return !1;
							return !0
						};
						b.prototype._onlyFolderItems = function (a) {
							for (var b = 0; b < a.length; b++)
								if (a[b].type !== h.layerList.LayerListItemType.FOLDER)
									return !1;
							return !0
						};
						b.prototype._processUnhandledMapServices = function () {
							for (var a = this, b = dojo.filter(this._allMapServiceReferences, function (b) {
										return -1 === a._handledMapServiceReferences.indexOf(b)
									}),
								c = 0; c < b.length; c++) {
								var d = b[c];
								if (d.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer || d.serviceLayer instanceof esri.layers.WMSLayer)
									d.serviceLayer.on("visibility-change", function (a) {
										a.visible ? d._esriLayerStateBackup && (d.serviceLayer.setVisibleLayers(d._esriLayerStateBackup), d._esriLayerStateBackup = null) : d.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer ? (d._esriLayerStateBackup = d.serviceLayer.visibleLayers ? d.serviceLayer.visibleLayers.slice(0) : [-1], d.serviceLayer.setVisibleLayers(["-1"])) :
										(d._esriLayerStateBackup = d.serviceLayer.visibleLayers ? d.serviceLayer.visibleLayers.slice(0) : [], d.serviceLayer.setVisibleLayers([]))
									})
							}
						};
						b.prototype._addItemsToUserAddedFolder = function (a) {
							var b = this._userAddedLayersFolder || this;
							a = a.every(function (a) {
									return b.children.validateAndInsertItem(0, a)
								});
							this._userAddedLayersFolder && (this._userAddedLayersFolder.displayItem.set(!0), this._userAddedLayersFolder.isExpanded.set(!0), this._userAddedLayersFolder.isVisible.set(!0), this._userAddedLayersFolder.parent instanceof
								g.LayerListFolderItem && this._userAddedLayersFolder.parent.refreshOnDemandItemCollection());
							this._applyDeferredItemVisibilities(b.children.get());
							return a
						};
						b.prototype._createUserAddedLayerFolder = function (a) {
							return a && "" !== a ? new g.LayerListFolderItem(this.id.get() + ":UserAdded" + a, a, this) : new g.LayerListFolderItem(this.id.get() + ":UserAdded", this.appInfo.gcxApp.getResource(this._libraryId, "language-layerlist-user-added-layers-folder-title"), this)
						};
						return b
					}
					(g.LayerListNode);
					g.LayerList = k
				})(h.layerList ||
					(h.layerList = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (b) {
						b[b.FOLDER = 0] = "FOLDER";
						b[b.MAPSERVICE = 1] = "MAPSERVICE";
						b[b.LAYER = 2] = "LAYER";
						b[b.GRAPHICSLAYER = 3] = "GRAPHICSLAYER";
						b[b.KMLFOLDER = 4] = "KMLFOLDER"
					})(g.LayerListItemType || (g.LayerListItemType = {}));
					var k = g.LayerListItemType,
					c = function (b) {
						function a(a, c, d) {
							var h = this;
							b.call(this, a);
							this.opacity = this.mapService = null;
							if (!a)
								throw Error("LayerListItem: Initialization failed. Layer list item id cannot be null");
							if (!d)
								throw Error("LayerListItem: Initialization failed. LayerList cannot be null");
							this.type = c;
							this.layerList = d;
							this.allAncestorsVisible = !0;
							this.isVisible = new Observable(!1);
							this.isEffectivelyVisible = new Observable(!1);
							this.parentEffectivelyVisible = new Observable(!0);
							this.inVisibleScaleRange = new Observable(!0);
							this.isEffectivelyVisible.syncTransform(this.isVisible, function (a) {
								return a && !!h.allAncestorsVisible
							});
							this.name = new Observable("");
							this.isExpanded = new Observable(!1);
							this.expandLegend = new Observable(!1);
							this.canNotAssignVisibility = new Observable(!1);
							this.canAdjustOpacity =
								new Observable(!1);
							this.inActiveTheme = new Observable(!0);
							this.canDisplayItem = new Observable(!0);
							this.displayItem = new Observable(!0);
							this.hasDisplayedChildren = new Observable(!1);
							this.children = new g.LayerListItemCollection(this);
							this.onDemandItemCollection = new ObservableCollection([]);
							this.legendItems = new ObservableCollection([]);
							this.legendSwatch = new Observable("");
							this.legendHasMultipleItems = new Observable(!1);
							this.enableLayerActions = !1;
							this.iconUri = new Observable("");
							this.iconTooltip = new Observable("");
							this.legendTooltip = new Observable("");
							this.layerFolderToggleTooltip = new Observable("");
							this.layerActionsTooltip = new Observable("");
							this.layerToggleTooltip = new Observable("");
							this.isMutuallyExclusive = new Observable(!1);
							this.hasRadioToggle = new Observable(!1);
							this.radioGroup = new Observable("");
							this.isVisible.bind(this, this.setVisibility);
							this.isExpanded.bind(this, this.refreshOnDemandItemCollection);
							this.inActiveTheme.bind(this, this._onActiveThemeChanged);
							this.canDisplayItem.bind(this, this._updateDisplayItem);
							this.currentUserClickOriginator = !1;
							this.legendIsVisible = new Observable(!1);
							this.layerList.onlyShowSwatchesOnVisibleLayers && (this.isEffectivelyVisible.bind(this, this._processLegendVisibility), this.inVisibleScaleRange.bind(this, this._processLegendVisibility), this.legendItems.bind(this, this._processLegendVisibility));
							this.legendSwatch.bind(this, function (a) {
								h.layerList.onlyShowSwatchesOnVisibleLayers ? h._processLegendVisibility() : h.layerList.enableLegendIntegration && h.legendIsVisible.set(!!a)
							});
							this.layerList &&
							this.layerList.mapInfo && this.layerList.mapInfo.gcxMap && this.layerList.mapInfo.gcxMap.layerThemesInfo && dojo.connect(this.layerList.mapInfo.gcxMap.layerThemesInfo, "layerThemeChangingEvent", dojo.hitch(this, this._handleLayerThemeChangingEvent))
						}
						__extends(a, b);
						a.prototype.bindToActiveTheme = function () {};
						a.prototype.unbindFromActiveTheme = function () {};
						a.prototype.notifyActiveThemeChanged = function (a) {
							a && !this.inActiveTheme.get() && this.inActiveTheme.set(!0);
							this.type === k.FOLDER && !a && this.inActiveTheme.get() &&
							this.children && dojo.every(this.children.get(), function (a) {
								return !a.inActiveTheme.get()
							}) && this.inActiveTheme.set(!1)
						};
						a.prototype.setItemVisibility = function (a) {
							this.currentUserClickOriginator = !0;
							this.isVisible.set(a)
						};
						a.prototype.setVisibility = function (a) {
							if (void 0 !== this.allAncestorsVisible)
								if (void 0 != this._deferredVisibilitySetting)
									this._deferredVisibilitySetting = a;
								else if (a && this.isMutuallyExclusive.get() && this.parent && !this.layerList.mapInfo.gcxMap.layerThemesInfo.themeChangeInProgress)
									for (a =
											0; a < this.parent.children.length(); a++) {
										var b = this.parent.children.getAt(a);
										b !== this && b.isVisible.get() && b.isVisible.set(!1)
									}
						};
						a.prototype.setAncestorVisibility = function (a) {
							this.allAncestorsVisible = a;
							this.isVisible.pulse()
						};
						a.prototype.refreshOnDemandItemCollection = function (a) {
							a = void 0 == a ? this.isExpanded.get() : a;
							this.onDemandItemCollection.clear();
							if (this.children && this.children.length() && a) {
								a = 0;
								for (var b = this.children.length(); a < b; a++) {
									var c = this.children.getAt(a);
									this._notFolderOrContainsAtLeastOneChildLayer(c) &&
									this.onDemandItemCollection.addItem(c)
								}
							}
						};
						a.prototype.populateMapServicesInParentFolders = function () {
							var a = this;
							if (this.type !== h.layerList.LayerListItemType.FOLDER && this.mapService) {
								for (var b = [], c = this.parent, d = !0; c; ) {
									if (c.type === h.layerList.LayerListItemType.MAPSERVICE && c.mapService === this.mapService)
										return;
									c.type === h.layerList.LayerListItemType.FOLDER && (d = !1, -1 === c.containedMapServices.indexOf(this.mapService) && -1 === c.id.get().indexOf(this.layerList.id.get()) && b.push(c));
									c = c.parent
								}
								d ? this.layerList._outOfFolderMapServiceReferences.push(this.mapService) :
								dojo.forEach(b, function (b) {
									b.containedMapServices.push(a.mapService)
								})
							}
						};
						a.prototype._applyDeferredInitialVisibility = function () {
							if (void 0 != this._deferredVisibilitySetting && !this.layerList.suspendMapUpdates) {
								var a = this._deferredVisibilitySetting;
								delete this._deferredVisibilitySetting;
								this.setVisibility(a)
							}
						};
						a.prototype._setupOpacityBindings = function () {
							var a = this;
							this.type !== h.layerList.LayerListItemType.LAYER && this.type !== h.layerList.LayerListItemType.GRAPHICSLAYER && this.mapService && this.mapService.serviceLayer &&
							void 0 != this.mapService.serviceLayer.opacity && void 0 != this.mapService.serviceLayer.setOpacity && this.mapService.serviceType !== d.essentials.MapServiceType.FEATURE && (this.canAdjustOpacity.set(!0), this.opacity = new Observable(this.mapService.serviceLayer.opacity), this.opacity.bind(this, function (b) {
									a.mapService.setOpacity(b)
								}), this.mapService.serviceLayer.on("opacity-change", function () {
									return a.opacity.set(a.mapService.opacity())
								}))
						};
						a.prototype._notFolderOrContainsAtLeastOneChildLayer = function (a) {
							if (a.type !==
								h.layerList.LayerListItemType.FOLDER)
								return !0;
							if (a.children && a.children.length())
								for (var b = 0, c = a.children.length(); b < c; b++)
									if (this._notFolderOrContainsAtLeastOneChildLayer(a.children.getAt(b)))
										return !0;
							return !1
						};
						a.prototype._handleLayerThemeChangingEvent = function (a) {
							a.currTheme && (this.type === k.FOLDER && (this.isVisible.get() || this.isVisible.set(!0)), this._deferredVisibilitySetting = this.isEffectivelyVisible.get())
						};
						a.prototype._updateDisplayItem = function () {
							this.displayItem.set(this.canDisplayItem.get() &&
								this.inActiveTheme.get());
							var a = this.getSiblings(!0);
							if (a && a.length) {
								for (var b = 0, c = 0; c < a.length; c++) {
									var d = a[c];
									d.displayItem.get() && b++
								}
								for (c = 0; c < a.length; c++)
									d = a[c], d.hasRadioToggle.set(d.isMutuallyExclusive.get() && 1 !== b)
							}
						};
						a.prototype._onActiveThemeChanged = function (a) {
							this._updateDisplayItem();
							var b = this.parent;
							b && b.id !== this.layerList.id && b.notifyActiveThemeChanged(a)
						};
						a.prototype._processLegendVisibility = function () {
							this.legendIsVisible.set(this.isEffectivelyVisible.get() && this.inVisibleScaleRange.get() &&
								!!this.legendItems.length() && !!this.legendSwatch.get())
						};
						a.prototype._setTooltips = function () {
							var a = this,
							b = this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId, "language-layerlist-toggle").format(this.name.get()),
							c = this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId, "language-layer-actions-tooltip").format(this.name.get()),
							d = this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId, "language-layerlist-visible-at-extent"),
							g = this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId,
									"language-layerlist-not-visible-at-extent"),
							h = this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId, "language-layerlist-expand").format(this.name.get());
							this.layerActionsTooltip.set(c);
							this.layerFolderToggleTooltip.set(h);
							this.inVisibleScaleRange.get() ? this.layerToggleTooltip.set(b + " " + d) : this.layerToggleTooltip.set(b + " " + g);
							this.inVisibleScaleRange.bind(this, function (c) {
								c ? a.layerToggleTooltip.set(b + " " + d) : a.layerToggleTooltip.set(b + " " + g)
							})
						};
						return a
					}
					(g.LayerListNode);
					g.LayerListItem =
						c
				})(h.layerList || (h.layerList = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function (c) {
						function b(a, b, f, h) {
							c.call(this, a, d.LayerListItemType.KMLFOLDER, b);
							if (!f)
								throw Error("LayerListKmlFolderItem: Initialization failed. KML layer object cannot be null.");
							if (!h)
								throw Error("LayerListKmlFolderItem: Initialization failed. KML folder object cannot be null.");
							this._kmlLayer = f;
							this._kmlFolder = h;
							this.name = new Observable(h.name);
							this._setTooltips();
							this.isVisible.set(!!h.visibility)
						}
						__extends(b, c);
						b.prototype.setItemVisibility =
						function (a) {
							c.prototype.setItemVisibility.call(this, a);
							this._kmlLayer.setFolderVisibility(this._kmlFolder, a)
						};
						return b
					}
					(d.LayerListItem);
					d.LayerListKmlFolderItem = h
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function d() {}

					d.sortBy = function (c, b) {
						c.sort(function (a, c) {
							var d = b(a),
							g = b(c);
							return d == g ? 0 : d < g ? -1 : 1
						});
						return c
					};
					d.sum = function (c, b) {
						for (var a = 0, d = 0; d < c.length; d++)
							a += b(c[d]);
						return a
					};
					d.max = function (c, b) {
						for (var a = null, d = 0; d < c.length; d++) {
							var f = b(c[d]);
							if (null == a || a < f)
								a = f
						}
						return a
					};
					d.mapWithErrorCallback = function (c, b, a, d) {
						if ("function" !== typeof b)
							throw Error("Callback required.");
						if ("function" !== typeof a)
							throw Error("Error callback required.");
						if (!c)
							return c;
						for (var f = [], g = 0; g < c.length; g++) {
							var h = c[g];
							try {
								f.push(b.call(d, h, g, c))
							} catch (k) {
								a.call(d, h, k, f)
							}
						}
						return f
					};
					return d
				}
				();
				d.ArrayUtils = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				var g = function () {
					function d() {
						this._backingStore = {}

					}
					d.prototype.containsKey = function (c) {
						return this._backingStore.hasOwnProperty(c)
					};
					d.prototype.get = function (c) {
						return this._backingStore[c]
					};
					d.prototype.set = function (c, b) {
						this._backingStore[c] = b
					};
					d.prototype.remove = function (c) {
						return this.containsKey(c) ? (delete this._backingStore[c], !0) : !1
					};
					d.prototype.clear = function () {
						this._backingStore = {}

					};
					d.prototype.values = function () {
						var c = [],
						b;
						for (b in this._backingStore)
							this._backingStore.hasOwnProperty(b) &&
							c.push(this._backingStore[b]);
						return c
					};
					d.prototype.keys = function () {
						var c = [],
						b;
						for (b in this._backingStore)
							this._backingStore.hasOwnProperty(b) && c.push(b + "");
						return c
					};
					return d
				}
				();
				d.Dictionary = g
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this._emptyFeatureSetCollection = null;
							this._watchHandles = new h.Dictionary;
							this.featureSetCollection = new Observable;
							this.featureActions = new ObservableCollection;
							this.currentFeature = new Observable;
							this.hasFeatureSets = new Observable(!1);
							this.isBusy = new Observable(!1);
							this.isModified = new Observable(!1);
							this.defaultIsPaged = !0;
							this.defaultPageSize = 50;
							this.headerText = new Observable(this.app.getResource(this.libraryId,
										"language-common-results"));
							this.searchSuggestion = new Observable(this.app.getResource(this.libraryId, "language-common-no-results-desc"));
							this.featureSetCollection.bind(this, this.handleCollectionChanged);
							this.registerCommand();
							this.subscribeEvents()
						}
						__extends(b, c);
						b.prototype.subscribeEvents = function () {
							this.app.event("FSMCollectionOpenedEvent").subscribe(this, this._openFSC);
							this.app.event("FSMCollectionClosedEvent").subscribe(this, this._closeFSC);
							this.app.event("FSMCollectionRemovedEvent").subscribe(this,
								this._removeFSC);
							this.app.event("FSMCollectionChangedEvent").subscribe(this, this._changeFSC);
							this.app.event("FeatureEditedEvent").subscribe(this, this._pulseFeatureSetsInCollection);
							this.app.event("FeatureDeletedEvent").subscribe(this, this._pulseFeatureSetsInCollection);
							this.app.event("RelatedRecordEditedEvent").subscribe(this, this._pulseFeatureSetsInCollection)
						};
						b.prototype.handleCollectionChanged = function (a) {
							var b = a && this.app.featureSetManager.getCollectionById(a.id);
							!b && a && a.featureSets && (b = a);
							b ? (this.isBusy.set(this.app.featureSetManager.isCollectionOpen(a.id)), this.hasFeatureSets.set(this._featureSetsHaveFeatures(b.featureSets)), this._watchDisplayNameChanges(), this._watchIsModifiedChanges()) : (this.isBusy.set(!1), this._unwatchDisplayNameChanges(), this._unwatchIsModifiedChanges());
							null != this.presentableResults && this.presentableResults.numberOfItems.bind(this, this.updateHeaderText)
						};
						b.prototype.handleFeatureSetsChanged = function (a) {
							a = this._featureSetsHaveFeatures(a.sender);
							this.hasFeatureSets.get() !==
							a && this.hasFeatureSets.set(a)
						};
						b.prototype.updateHeaderText = function (a) {
							var b = null,
							c = "",
							d = !1;
							a && (c = " (" + a + ")");
							this.featureSetCollection.get() && (b = this.featureSetCollection.get().displayName.get(), d = this.featureSetCollection.get().isModified.get());
							this._count = a;
							a = "{0}{1}{2}".format(b ? b : this.app.getResource(this.libraryId, "language-common-results"), c, d ? "*" : "");
							this.headerText.set(a)
						};
						b.prototype._featureSetsHaveFeatures = function (a) {
							if (a)
								for (var b = 0; b < a.length(); b++)
									if (a.getAt(b).features && 0 < a.getAt(b).features.length() ||
										a.getAt(b).esriFeatureSet && a.getAt(b).esriFeatureSet.features && 0 < a.getAt(b).esriFeatureSet.features.length)
										return !0;
							return !1
						};
						b.prototype._openFSC = function (a) {
							this.featureSetCollection.get() && a && a.featureSetCollectionId && a.featureSetCollectionId == this.featureSetCollection.get().id && (this.isBusy.set(!0), this.hasFeatureSets.set(!1), a = this.app.featureSetManager.getSearchSuggestion(this.featureSetCollection.get().sourceName), this.searchSuggestion.set(a ? a : this.app.getResource(this.libraryId, "language-common-no-results-desc")))
						};
						b.prototype._closeFSC = function (a) {
							this.featureSetCollection.get() && a && a.featureSetCollectionId && a.featureSetCollectionId == this.featureSetCollection.get().id && this.isBusy.set(!1);
							this.featureSetCollection.pulse()
						};
						b.prototype._removeFSC = function (a) {
							this.featureSetCollection.get() && a && a.featureSetCollectionId && a.featureSetCollectionId == this.featureSetCollection.get().id && this.featureSetCollection.set(this._getEmptyFeatureSetCollection())
						};
						b.prototype._changeFSC = function (a) {
							this.featureSetCollection.get() &&
							a && a.featureSetCollectionId && a.featureSetCollectionId == this.featureSetCollection.get().id && this.featureSetCollection.pulse()
						};
						b.prototype._getEmptyFeatureSetCollection = function () {
							null == this._emptyFeatureSetCollection ? this._emptyFeatureSetCollection = new d.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection : this._emptyFeatureSetCollection.clear();
							return this._emptyFeatureSetCollection
						};
						b.prototype.registerCommand = function () {
							var a = this;
							this.app.command("ShowResultsListFeatureAction").register(this,
								function (b) {
								a.currentFeature.set(b);
								a.getResultsFeatureActions();
								a.app.command("ActivateView").execute("ResultsFeatureActionsView")
							});
							this.app.command("ClearSelection").register(this, function () {
								a.app.command("RemoveFeatureSetCollection").execute(a.featureSetCollection.get())
							})
						};
						b.prototype.getResultsFeatureActions = function () {
							this.featureActions.clear();
							var a = this.app.menuRegistry.getMenu("ResultsListFeatureAction");
							this.app.menuRegistry.getDefaultIconUri("ResultsListFeatureAction");
							if (a)
								this.featureActions.addItems(a.items);
							else
								throw Error("Results Feature Actions not found");
						};
						b.prototype._pulseFeatureSetsInCollection = function () {
							this.featureSetCollection && this.featureSetCollection.get() && this.featureSetCollection.get().featureSets && 0 < this.featureSetCollection.get().featureSets.length() && this.featureSetCollection.get().featureSets.pulse()
						};
						b.prototype._watchDisplayNameChanges = function () {
							var a = this;
							this._unwatchDisplayNameChanges();
							var b = this.featureSetCollection.get() ? this.featureSetCollection.get().displayName : null;
							if (!b)
								return null;
							var c = b.bind(this, function () {
									return a.updateHeaderText(a._count)
								}),
							d = {
								remove : function () {
									return b.unbind(c)
								}
							};
							this._watchHandles.set("displayName", d);
							return d
						};
						b.prototype._unwatchDisplayNameChanges = function () {
							var a = this._watchHandles.get("displayName");
							a && a.remove();
							this._watchHandles.remove("displayName")
						};
						b.prototype._watchIsModifiedChanges = function () {
							var a = this;
							this._unwatchIsModifiedChanges();
							var b = this.featureSetCollection.get() ? this.featureSetCollection.get().isModified : null;
							if (!b)
								return null;
							var c = b.bind(this, function () {
									return a.updateHeaderText(a._count)
								}),
							d = {
								remove : function () {
									return b.unbind(c)
								}
							};
							this._watchHandles.set("isModified", d);
							return d
						};
						b.prototype._unwatchIsModifiedChanges = function () {
							var a = this._watchHandles.get("isModified");
							a && a.remove();
							this._watchHandles.remove("isModified")
						};
						return b
					}
					(d.framework.ui.ViewModelBase);
					g.ResultsViewModel = k
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function (c) {
						function b(a, b) {
							var f = this;
							c.call(this, a, b);
							this.pageControlsEnabled = new Observable(!1);
							this.resultsList = new Observable("results-list");
							this.pagingControlClassName = new Observable("paging-control no-pages");
							this.contentField = new Observable("description");
							this._boundFeatureSetCollection = this._featureSetsBindingToken = null;
							this._featureViewMap = {};
							this.results = new d.framework.ui.ObservableCollectionAggregator(new ObservableCollection);
							this.presentableResults =
								new d.framework.ui.PresentableCollection(this.results);
							this.presentableResults.items.useThrottling = !0;
							this.resultsPage = this.presentableResults.items;
							this.presentableResults.pageSize.set(this.defaultPageSize);
							this.defaultIsPaged != this.presentableResults.isPaginated.get() && this.presentableResults.isPaginated.set(this.defaultIsPaged);
							this.resultsPage.bind(this, this.handlePageResultsChange);
							this.presentableResults.numberOfItems.bind(this, function (a) {
								0 < a ? f.pagingControlClassName.set("paging-control has-pages") :
								f.pagingControlClassName.set("paging-control no-pages");
								f.updateHeaderText(a)
							});
							this.app.command("ShowResultsList").register(this, this.showResultsList);
							this.app.command("SwitchToTabularResultsView").register(this, this._switchToTabularResultsViewImpl, this._canExecuteSwitchToTabularResultsView)
						}
						__extends(b, c);
						b.prototype.subscribeEvents = function () {
							c.prototype.subscribeEvents.call(this);
							this.app.event("FeatureChangedEvent").subscribe(this, this.handleFeatureChanged)
						};
						b.prototype.handleCollectionChanged =
						function (a) {
							c.prototype.handleCollectionChanged.call(this, a);
							this._clearResetUnderlyingCollection(!0);
							if (a && a.featureSets) {
								this._featureSetsBindingToken = a.featureSets.bind(this, this.handleFeatureSetsChanged);
								this._boundFeatureSetCollection = a;
								for (var b = this.results.getCollectionSource(), d = 0, g = a.featureSets.length(); d < g; d++)
									b.addItem(a.featureSets.getAt(d).features)
							}
						};
						b.prototype.handleFeatureSetsChanged = function (a) {
							c.prototype.handleFeatureSetsChanged.call(this, a);
							var b = this.results.getCollectionSource();
							if ("append" === a.type) {
								var d = a.sender.getRange(a.rangeStart, a.rangeEnd);
								for (a = 0; a < d.length; a++)
									b.addItem(d[a].features)
							} else if ("remove" === a.type)
								for (d = a.sender.getRange(a.rangeStart, a.rangeEnd), a = 0; a < d.length; a++)
									b.removeItem(d[a].features);
							else
								"clear" === a.type && (this._clearResetUnderlyingCollection(!1), this.results.bindingEvent.publish(a))
						};
						b.prototype.handlePageResultsChange = function (a) {
							var b = this;
							a = a ? a : {
								type : null
							};
							if ("clear" === a.type)
								Object.keys(this._featureViewMap).map(function (a) {
									return b._featureViewMap[a]
								}).forEach(function (a) {
									return b.app.viewManager.destroyView(a)
								}),
								this._featureViewMap = {};
							else if ("remove" === a.type && a.sender.value.length > a.rangeStart) {
								var c = a.sender.getAt(a.rangeStart);
								this._destroyViewForToken(c.token);
								this._destroyViewForToken(c.token + "-label")
							}
							a = "clear" === a.type || "remove" === a.type && 1 >= a.sender.value.length;
							c = new h.eventArgs.ResultsPageChangedEventArgs;
							c.featureSetCollection = this.featureSetCollection.get();
							c.newValue = a ? new ObservableCollection : this.resultsPage;
							this.app.event("ResultsPageChangedEvent").publish(c)
						};
						b.prototype.handleFeatureChanged =
						function (a) {
							if (a && this._featureViewMap.hasOwnProperty(a.token)) {
								var b = this._featureViewMap[a.token],
								c = this._featureViewMap[a.token + "-label"];
								c.destroyBindings();
								b.destroyBindings();
								c.attach(a);
								b.attach(a)
							}
						};
						b.prototype._destroyViewForToken = function (a) {
							if (a && this._featureViewMap.hasOwnProperty(a)) {
								var b = this._featureViewMap[a];
								b && (this.app.viewManager.destroyView(b), delete this._featureViewMap[a])
							}
						};
						b.prototype.showResultsList = function (a) {
							(a = "string" === typeof a ? this.app.featureSetManager.getCollectionById(a) :
									a) && a !== this.featureSetCollection.get() ? (this.unbindFeatureSet(), this.featureSetCollection.set(a)) : this.handlePageResultsChange();
							this.app.command("_setResultMappingCommand").execute(a.sourceName, "ShowResultsList");
							this.presentableResults.numberOfItems.bind(this, this.updateHeaderText)
						};
						b.prototype._switchToTabularResultsViewImpl = function () {
							this.app.command("ShowResultsTable").execute(this.featureSetCollection.get())
						};
						b.prototype._canExecuteSwitchToTabularResultsView = function () {
							return !!this.featureSetCollection.get()
						};
						b.prototype.getFeatureView = function (a) {
							return this._featureViewMap[a]
						};
						b.prototype.setFeatureView = function (a, b) {
							this._featureViewMap[a] = b
						};
						b.prototype.unbindFeatureSet = function () {
							this._featureSetsBindingToken && this._boundFeatureSetCollection && (this._boundFeatureSetCollection.featureSets.unbind(this._featureSetsBindingToken), this._boundFeatureSetCollection = this._featureSetsBindingToken = null)
						};
						b.prototype.exportState = function (a) {
							var b = this.featureSetCollection.get();
							a.results = this.app.project.convert.fromGcxFeatureSetCollection(b);
							a.page = this.presentableResults.currPageNumber.get();
							a.viewMode = "list"
						};
						b.prototype.applyState = function (a) {
							var b = this;
							a.promises.push(this.app.project.convert.toGcxFeatureSetCollection(a.state.results).then(function (c) {
									c && (c !== b.featureSetCollection.get() && (b.unbindFeatureSet(), b.featureSetCollection.set(c)), d.framework.utils.isNullOrUndefined(a.state.page) || b.presentableResults.currPageNumber.set(a.state.page), "list" === a.state.viewMode && b.app.command("_setResultMappingCommand").execute(c.sourceName,
											"ShowResultsList"))
								}))
						};
						b.prototype._pulseFeatureSetsInCollection = function () {
							var a = this.presentableResults.currPageNumber.get();
							c.prototype._pulseFeatureSetsInCollection.call(this);
							this.presentableResults.currPageNumber.set(a)
						};
						b.prototype._clearResetUnderlyingCollection = function (a) {
							this.results.getCollectionSource().clear();
							this.presentableResults.currPageNumber.set(1);
							a && (this.unbindFeatureSet(), this._featureViewMap = {})
						};
						return b
					}
					(g.ResultsViewModel);
					g.FlatResultsViewModel = k
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c(b, a, c, d) {
							this.sortState = new Observable(0);
							this.sortClass = new Observable("");
							this._reverseSortingPredicate = this._sortingPredicate = null;
							this.displayName = a.displayName;
							this._sharedState = b;
							"DateTime" === c ? (this._sortingPredicate = this.buildDateSortingFunction(d), this._reverseSortingPredicate = this.buildReverseDateSortingFunction(d)) : (this._sortingPredicate = this.buildSortingFunction(d), this._reverseSortingPredicate =
									this.buildReverseSortingFunction(d));
							this.sortClass.syncTransform(this.sortState, function (a) {
								switch (a) {
								case 1:
									return b.sortedClass;
								case 2:
									return b.reverseSortedClass
								}
								return b.unsortedClass
							});
							this.sortState.bind(this, this.onSortStateChange)
						}
						c.prototype.buildSortingFunction = function (b) {
							return function (a, c) {
								return d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(a.attributes.getAt(b).presentableValue.get(), c.attributes.getAt(b).presentableValue.get())
							}
						};
						c.prototype.buildReverseSortingFunction = function (b) {
							return function (a, c) {
								return d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(c.attributes.getAt(b).presentableValue.get(), a.attributes.getAt(b).presentableValue.get())
							}
						};
						c.prototype.buildDateSortingFunction = function (b) {
							return function (a, c) {
								var f = a.attributes.getAt(b).value.get(),
								g = c.attributes.getAt(b).value.get(),
								h = new Date(f),
								k = new Date(g),
								m = "Invalid Date" != h;
								return m !== ("Invalid Date" != k) ? m ? -1 : 1 : m ?
								h.getTime() - k.getTime() : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(f, g)
							}
						};
						c.prototype.buildReverseDateSortingFunction = function (b) {
							return function (a, c) {
								var f = c.attributes.getAt(b).value.get(),
								g = a.attributes.getAt(b).value.get(),
								h = new Date(f),
								k = new Date(g),
								m = "Invalid Date" != h;
								return m !== ("Invalid Date" != k) ? m ? -1 : 1 : m ? h.getTime() - k.getTime() : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(f, g)
							}
						};
						c.prototype.onSortStateChange =
						function (b) {
							if (!this._sharedState.ignoreStateChange) {
								if (0 > b || 2 < b)
									throw Error("Illegal column sort state: " + b);
								if (0 == b) {
									if (this._sharedState.lastSortedColumn != this)
										throw Error("Column sort state out of sync");
									this._sharedState.lastSortedColumn = null;
									this._sharedState.presentableResults.sortingPredicate = null;
									this._sharedState.presentableResults.unsortCollection()
								} else {
									null != this._sharedState.lastSortedColumn && this._sharedState.lastSortedColumn != this && (this._sharedState.ignoreStateChange = !0, this._sharedState.lastSortedColumn.sortState.set(0),
										this._sharedState.ignoreStateChange = !1);
									this._sharedState.lastSortedColumn = this;
									if (1 == b)
										this._sharedState.presentableResults.sortingPredicate = this._sortingPredicate;
									else if (2 == b)
										this._sharedState.presentableResults.sortingPredicate = this._reverseSortingPredicate;
									else
										throw Error("Invalid column sort state.");
									this._sharedState.presentableResults.sortCollection()
								}
							}
						};
						return c
					}
					();
					g.ResultsAttributeHeaderViewModel = h;
					(function (c) {
						c.manualCollator = function (a, b) {
							return isNaN(a) || isNaN(b) ? a < b ? -1 : a > b ? 1 : 0 : +a -
							b
						};
						c.collator = "object" == typeof Intl && "function" == typeof Intl.Collator ? (new Intl.Collator(void 0, {
									numeric : !0
								})).compare : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.manualCollator;
						var b = function () {
							function a(a, b, c, d) {
								this.lastSortedColumn = null;
								this.presentableResults = a;
								this.unsortedClass = b;
								this.sortedClass = c;
								this.reverseSortedClass = d;
								this.reset()
							}
							a.prototype.reset = function () {
								this.ignoreStateChange = !1;
								this.lastSortedColumn = null
							};
							return a
						}
						();
						c.SharedState = b
					})(h =
							g.ResultsAttributeHeaderViewModel || (g.ResultsAttributeHeaderViewModel = {}))
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype.handleMenuItemClick = function (a, b, c) {
							c.execute(this.viewModel.currentFeature.get())
						};
						b.prototype.handleGetDescription = function (a, b, c) {
							b.title = c.description.get()
						};
						return b
					}
					(d.framework.ui.ViewBase);
					g.ResultsFeatureActionsView = h
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b) {
							var d = this;
							c.call(this, a, b);
							this.isContainerCollapsed = this.isCollapsed = !0;
							this._pressStartTime = this._longPressTimer = null;
							this._pressLengthMs = 1500;
							this._ignoreMouseEventFlag = this._firedTouchOrPress = !1;
							this._lastTouchY = this._pressYStart = null;
							this._scrollYDeltaThreshold = 35;
							this._firstEvent = null;
							this.app.event("ViewContainerActivatedEvent").subscribe(this, function (a) {
								!d.isCollapsed && d._isViewHostedInContainer(a) &&
								(d.app.event("ResultsViewOpenedEvent").publish(d), d.isContainerCollapsed = !1)
							});
							this.app.event("ViewContainerDeactivatedEvent").subscribe(this, function (a) {
								!d.isCollapsed && d._isViewHostedInContainer(a) && (d.app.event("ResultsViewCollapsedEvent").publish(d), d.isContainerCollapsed = !0)
							});
							this.app.event("ViewContainerViewClosedEvent").subscribe(this, function (a) {
								a.viewId === d.id && (d.app.event("ResultsViewClosedEvent").publish(d), d.isContainerCollapsed = !0)
							})
						}
						__extends(b, c);
						b.prototype.activated = function () {
							c.prototype.activated.call(this);
							this.isCollapsed = !1;
							this.app.event("ResultsViewOpenedEvent").publish(this)
						};
						b.prototype.deactivated = function () {
							c.prototype.deactivated.call(this);
							this.isCollapsed = !0;
							this.app.event("ResultsViewCollapsedEvent").publish(this)
						};
						b.prototype.handleTouchStart = function (a, b, c) {
							this._firstEvent || (this._firstEvent = "touch start", this._beginLongPress(c));
							return !0
						};
						b.prototype.handleTouchMove = function (a, b, c) {
							"touch start" === this._firstEvent && (this._firstEvent = null, this._cancelLongPress());
							return !0
						};
						b.prototype.handleTouchEnd =
						function (a, b, c) {
							"touch start" === this._firstEvent && (this._firstEvent = null, this._cancelLongPress());
							return !0
						};
						b.prototype.handleTouchCancel = function (a, b, c) {
							"touch start" === this._firstEvent && (this._firstEvent = null, this._cancelLongPress());
							return !0
						};
						b.prototype.handleMouseDown = function (a, b, c) {
							this._firstEvent || (this._firstEvent = "mouse down", this._beginLongPress(c));
							return !0
						};
						b.prototype.handleClick = function (a, b, c) {
							this._firstEvent && (this._firstEvent = null, this._cancelLongPress());
							a = a.target;
							b = !("IMG" !==
								a.tagName || !a.parentElement || "A" !== a.parentElement.tagName || !a.parentElement.href);
							if ("A" === a.tagName || b)
								return !0;
							this.app.command("ClearFeatureInformation").execute();
							this.app.event(this.featureClickedEventName).publish(c);
							return !1
						};
						b.prototype.handleMouseUp = function (a, b, c) {
							"mouse down" === this._firstEvent && (this._firstEvent = null, this._cancelLongPress());
							return !0
						};
						b.prototype.handleMouseOut = function (a, b, c) {
							"mouse down" === this._firstEvent && (this._firstEvent = null, this._cancelLongPress())
						};
						b.prototype._beginLongPress =
						function (a) {
							var b = this;
							this._longPressTimer && clearTimeout(this._longPressTimer);
							this._longPressTimer = setTimeout(function () {
									b.app.event(b.featurePressedEventName).publish(a)
								}, this._pressLengthMs)
						};
						b.prototype._cancelLongPress = function () {
							this._longPressTimer && (clearTimeout(this._longPressTimer), this._longPressTimer = null)
						};
						b.prototype._isViewHostedInContainer = function (a) {
							if (a instanceof d.framework.ui.ViewContainer.ViewContainerView) {
								a = a.viewModel.regionName.get();
								var b = this.app.viewManager.getRegionForViewId(this.id);
								if (b && b.name === a)
									return !0
							}
							return !1
						};
						b.prototype.scrollView = function (a) {
							this.scrollContainerElement && (this.scrollContainerElement.scrollTop = a || 0)
						};
						return b
					}
					(d.framework.ui.ViewBase);
					g.ResultsViewBase = h;
					h.prototype.featureClickedEventName = "ResultsListFeatureClickedEvent";
					h.prototype.featurePressedEventName = "ResultsListFeaturePressedEvent"
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex ||
	(geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this.featureClickedEventName = "ResultsListFeatureClickedEvent";
							this.featurePressedEventName = "ResultsListFeaturePressedEvent";
							this._subscriptions = null;
							this._scrollTop = 0;
							this.app.command("ShowResultsList").register(this, this.showResultsList);
							this.app.command("ShowResultsTable").register(this, this._handleShowResultsTable);
							this.app.command("SwitchToTabularResultsView").register(this, this._switchToTabularResultsViewImpl,
								this._canExecuteSwitchToTabularResultsView);
							this.app.command("_ExportResultsViewState").register(this, this._exportState);
							this.app.command("_ApplyResultsViewState").register(this, this._applyState)
						}
						__extends(b, c);
						b.prototype.activated = function () {
							var a = this;
							c.prototype.activated.call(this);
							this._unsubscribeFromEvents();
							if ("DataFrameResultsContainerRegion" === this.regionName || "DataRegion" === this.regionName) {
								var b = this.app.event("DataFrameOpenedEvent").subscribe(this, this._dataFrameOpenedEventHandler),
								d = this.app.event("DataFrameClosedEvent").subscribe(this, this._dataFrameClosedEventHandler);
								this._subscriptions = [{
										eventName : "DataFrameOpenedEvent",
										token : b
									}, {
										eventName : "DataFrameClosedEvent",
										token : d
									}
								]
							}
							if (this.resultsList) {
								var g = this.resultsList;
								setTimeout(function () {
									dojo.style(g, {
										display : "block"
									})
								}, 1)
							}
							this.viewModel.featureSetCollection.bind(this, function (b) {
								a.app.trace.debug("View focused in results list: " + a.id);
								a.app.command("FocusOnFirstInputInView").execute(a)
							})
						};
						b.prototype.deactivated = function () {
							c.prototype.deactivated.call(this);
							this._unsubscribeFromEvents()
						};
						b.prototype.attach = function (a) {
							var b = this;
							this.title.sync(a.headerText);
							this.isBusy.sync(a.isBusy);
							void 0 != this.configuration.isPaged && a.presentableResults.isPaginated.set(this.configuration.isPaged);
							this.configuration.pageSize && a.presentableResults.pageSize.set(this.configuration.pageSize);
							this.configuration.contentField && a.contentField.set(this.configuration.contentField);
							a.presentableResults.currPageNumber.bindingEvent.subscribe(this, function () {
								b.scrollViewTop()
							});
							this.scrollViewTop(this._scrollTop);
							c.prototype.attach.call(this, a)
						};
						b.prototype.showResultsList = function (a) {
							this.app.viewManager.activateView(this)
						};
						b.prototype.handlePageFirst = function (a, b, c) {
							1 < this.viewModel.presentableResults.currPageNumber.get() && this.viewModel.presentableResults.currPageNumber.set(1)
						};
						b.prototype.handlePagePrev = function (a, b, c) {
							1 < this.viewModel.presentableResults.currPageNumber.get() && this.viewModel.presentableResults.currPageNumber.set(this.viewModel.presentableResults.currPageNumber.get() -
								1)
						};
						b.prototype.handlePageNext = function (a, b, c) {
							this.viewModel.presentableResults.lastPageNumber.get() > this.viewModel.presentableResults.currPageNumber.get() && this.viewModel.presentableResults.currPageNumber.set(this.viewModel.presentableResults.currPageNumber.get() + 1)
						};
						b.prototype.handlePageLast = function (a, b, c) {
							this.viewModel.presentableResults.currPageNumber.get() < this.viewModel.presentableResults.lastPageNumber.get() && this.viewModel.presentableResults.currPageNumber.set(this.viewModel.presentableResults.lastPageNumber.get())
						};
						b.prototype.handleScrollChange = function (a, b, c) {
							c && (this._scrollTop = b.scrollTop)
						};
						b.prototype.getDescription = function (a, b, c) {
							b.title = c.description.get()
						};
						b.prototype.scrollViewTop = function (a) {
							this.scrollContainerElement && (this.scrollContainerElement.scrollTop = a || 0)
						};
						b.prototype.resolveWidget = function (a, b, f) {
							c.prototype.resolveWidget.call(this, a, b);
							switch (a) {
							case "GetLabel":
								return a = new d.FeatureDescriptionPresenterView(this.app, this.libraryId),
								a.contentField = "label",
								a.root = dojo.create("div"),
								a.root.className =
									"feature-label",
								a.attach(b),
								this.viewModel.setFeatureView(b.token + "-label", a),
								a;
							case "GetDescription":
								return a = new d.FeatureDescriptionPresenterView(this.app, this.libraryId),
								a.contentField = this.viewModel.contentField.get(),
								a.root = dojo.create("div"),
								a.root.className = "feature-description",
								a.attach(b),
								this.viewModel.setFeatureView(b.token, a),
								a;
							case "ResultsListActionsWidget":
								if (b = this.app.menuRegistry.createMenuWidget(this, b, f))
									return b
							}
						};
						b.prototype._handleShowResultsTable = function () {
							this.app.viewManager.deactivateView(this)
						};
						b.prototype._switchToTabularResultsViewImpl = function () {
							this.app.command("CloseDataFrame").execute()
						};
						b.prototype._canExecuteSwitchToTabularResultsView = function () {
							return this.isActive && !this.app.configuration.mobileMode
						};
						b.prototype._dataFrameOpenedEventHandler = function () {
							this.isContainerCollapsed || this.app.event("ResultsViewOpenedEvent").publish(this)
						};
						b.prototype._dataFrameClosedEventHandler = function () {
							this.isContainerCollapsed || this.app.event("ResultsViewCollapsedEvent").publish(this)
						};
						b.prototype._unsubscribeFromEvents =
						function () {
							if (this._subscriptions)
								for (var a = 0; a < this._subscriptions.length; a++) {
									var b = this._subscriptions[a];
									this.app.event(b.eventName).unsubscribe(b.token)
								}
							this._subscriptions = null
						};
						b.prototype._exportState = function (a) {
							this.isActive && this.viewModel.exportState(a)
						};
						b.prototype._applyState = function (a) {
							this.viewModel.applyState(a)
						};
						return b
					}
					(g.ResultsViewBase);
					g.ResultsListView = k
				})(d.results || (d.results = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function b() {}

						b.prototype.toJSONString = function () {
							return JSON.stringify({
								name : this.name,
								featureSet : this.featureSet.toJson()
							})
						};
						return b
					}
					(),
					c = function (b) {
						function a() {
							b.apply(this, arguments);
							this._supportedFormats = ["csv", "xlsx", "shp"];
							this._showInvisibleAttributes = !1
						}
						__extends(a, b);
						a.prototype.initialize = function (a) {
							var c = this;
							b.prototype.initialize.call(this, a);
							a && (this.resultMappings = a.resultMappings, a.customSearchSuggestions &&
								this.app.featureSetManager.addSearchSuggestions(a.customSearchSuggestions));
							a.showInvisibleAttributesOnExport && (this._showInvisibleAttributes = a.showInvisibleAttributesOnExport);
							this.wireUpResultMapping();
							this.app.command("ExportResultsTo").register(this, function (a) {
								var b = "csv";
								a.fsc ? (a.format ? -1 === c._supportedFormats.indexOf(a.format) ? c.app.trace.warning("ExportResultsTo: {0} file format not recognized. Defaulting to csv.".format(a.format)) : b = a.format : c.app.trace.warning("ExportResultsTo: file format not specified. Defaulting to csv."),
									c.exportTo({
										fsc : a.fsc,
										format : b
									})) : c.app.trace.error("ExportResultsTo: Cannot export, no feature set collection specified.")
							}, this.exportToCanExecute)
						};
						a.prototype.getStateFilter = function () {
							var a = new h.validation.NumberValidator;
							return {
								featureSetCollections : {
									item : this.app.project.filter.featureSetCollection
								},
								results : this.app.project.filter.featureSetCollection,
								viewMode : !0,
								page : a,
								tableOptions : {
									selectedFeatureSet : this.app.project.filter.featureSet,
									sortColumn : a,
									sortDirection : !0
								}
							}
						};
						a.prototype.exportState =
						function () {
							var a = this,
							b = {
								featureSetCollections : this.app.featureSetManager.featureSetCollections.get().map(function (b) {
									return a.app.project.convert.fromGcxFeatureSetCollection(b)
								})
							};
							return Promise["try"](function () {
								a.app.command("_ExportResultsViewState").execute(b);
								return b
							})
						};
						a.prototype.applyState = function (a) {
							var b = this;
							return h.PromiseUtils.mapSkipRejected(a.featureSetCollections, function (a) {
								return b.app.project.convert.toGcxFeatureSetCollection(a)
							}).then(function () {
								return b.app.waitUntilAllLibrariesLoaded()
							}).then(function () {
								var c = {
									state : a,
									promises : []
								};
								b.app.command("_ApplyResultsViewState").execute(c);
								return Promise.all(c.promises)["return"]()
							})
						};
						a.prototype.wireUpResultMapping = function () {
							this.app.event("FSMCollectionOpenedEvent").subscribe(this, this.fsmCollectionOpenedHandler);
							this.app.command("_setResultMappingCommand").register(this, this.fsmCollectionSetCommand);
							this.app.command("FSMCollectionSetCommand").register(this, this.fsmCollectionSetCommand)
						};
						a.prototype.fsmCollectionOpenedHandler = function (a) {
							a = a.featureSetCollection;
							if (this.resultMappings) {
								var b = this.resultMappings[a.sourceName];
								if (b)
									for (var c = 0; c < b.length; c++) {
										var d = b[c];
										this.app.command(d).execute(a.id);
										this._lastCommand = d
									}
							}
						};
						a.prototype.fsmCollectionSetCommand = function (a, b) {
							if (b) {
								var c = null;
								"ShowResultsList" === b ? c = "ShowResultsTable" : "ShowResultsTable" === b && (c = "ShowResultsList");
								if (c && this.resultMappings && this.resultMappings[a]) {
									var d = this.resultMappings[a],
									c = d.indexOf(c);
									-1 < c ? d[c] = b : -1 === d.indexOf(b) && d.push(b)
								}
							}
						};
						a.prototype.exportTo = function (a) {
							var b = this,
							c = new d.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs(this.app.getResource(this.libraryId, "language-results-export-to-status-message").format(a.format)),
							g = "exportTo " + a.format + "StatusMessage";
							c.id = g;
							c.showBusyIcon = !0;
							this.app.command("AddStatus").execute(c);
							c = this.app.site.url;
							c = c.substring(0, c.toLowerCase().lastIndexOf("/sites/")) + "/Utilities/Extract";
							d.request({
								url : c,
								content : {
									format : a.format,
									featureSets : this.fscToJson(a.fsc),
									f : "json"
								},
								load : dojo.hitch(this, function (c) {
									return b.exportToSuccess(c,
										a.format)
								}),
								error : function (c) {
									b.app.command("RemoveStatus").execute(g);
									b.app.commandRegistry.command("Alert").execute(c.message, b.app.getResource(b.libraryId, "language-results-export-to-alert-error-message").format(a.format))
								}
							})
						};
						a.prototype.exportToSuccess = function (a, b) {
							var c = this;
							if (a && a.hasOwnProperty("href")) {
								var d = a.href,
								g = this.app.getResource(this.libraryId, "language-results-export-to-confirm-content").format(b),
								h = this.app.getResource(this.libraryId, "language-results-export-to-confirm-title").format(b),
								k = "exportTo " + b + "StatusMessage";
								this.app.command("RemoveStatus").execute(k);
								this.app.commandRegistry.command("Confirm").execute(g, h, function (a) {
									a && (c.app.isNative.get() ? window.open(d, "_blank") : window.location.assign(d))
								})
							}
						};
						a.prototype.exportToCanExecute = function (a) {
							var b = null;
							a && (a instanceof h.FeatureSetCollection ? b = a : a.fsc && a.fsc instanceof h.FeatureSetCollection && (b = a.fsc));
							return b && b.featureSets.get() && 0 < b.featureSets.get().length
						};
						a.prototype.getFields = function (a) {
							var b = [];
							a.esriFeatureSet &&
							a.esriFeatureSet.features && 0 < a.esriFeatureSet.features.length && (b = this.getFieldsFromEsriLayer(a.esriFeatureSet.features[0].getLayer(), a));
							0 === b.length && (a.layer && a.layer.fields && 0 < a.layer.fields.length ? b = this.getFieldsFromEssentialsLayer(a.layer) : a.attributes.get() && 0 < a.attributes.get().length ? b = this.getFieldsFromGcxFeatureSetAttributes(a.attributes.get(), a) : a.features.get() && 0 < a.features.get().length && a.features.getAt(0).attributes.get() && 0 < a.features.getAt(0).attributes.get().length ? b = this.getFieldsFromGcxFeatureAttributes(a.features.getAt(0).attributes.get(),
										a) : a.esriFeatureSet && a.esriFeatureSet.features && 0 < a.esriFeatureSet.features.length && a.esriFeatureSet.features[0].attributes && 0 < a.esriFeatureSet.features[0].attributes.length ? b = this.getFieldsFromEsriFeatureAttributeValues(a.esriFeatureSet.features) : a.features.get() && 0 < a.features.get().length && a.features.getAt(0).attributes.get() && 0 < a.features.getAt(0).attributes.get().length && (b = this.getFieldsFromGcxFeatureAttributeValues(a.features.get())));
							return b
						};
						a.prototype.getFieldsFromEsriLayer = function (a,
							b) {
							var c = [];
							if (a && a.fields && (c = a.fields.slice(0), b && b.features.get() && b.features.getAt(0).attributes.get())) {
								var d = b.features.getAt(0).attributes.get();
								d.length === c.length && d.forEach(function (a, b) {
									c[b].alias = a.displayName.get() ? a.displayName.get() : c[b].alias
								})
							}
							return c
						};
						a.prototype.getFieldsFromEssentialsLayer = function (a) {
							var b = [],
							c = new esri.layers.Field;
							a.fields.forEach(function (a) {
								c = new esri.layers.Field;
								c.name = a.name;
								c.alias = a.displayName;
								c.type = d.essentials.Field.convertToEsriFieldType(a.dataType);
								b.push(c)
							});
							return b
						};
						a.prototype.getFieldsFromGcxFeatureSetAttributes = function (a, b) {
							var c = this,
							g = [],
							h = new esri.layers.Field;
							a.forEach(function (a, e) {
								h = new esri.layers.Field;
								h.name = a.name.get();
								h.alias = a.displayName.get();
								a.type.get() ? h.type = d.essentials.Field.convertToEsriFieldType(a.type.get()) : 0 < b.features.get().length && b.features.getAt(0).attributes.get() && 0 < b.features.getAt(0).attributes.get().length ? h.type = c.getTypeFromGcxFeatures(b.features.get(), e) : h.type = c.getEsriTypeFromValue(null);
								g.push(h)
							});
							return g
						};
						a.prototype.getFieldsFromGcxFeatureAttributes = function (a, b) {
							var c = this,
							g = [],
							h = new esri.layers.Field;
							a.forEach(function (a, e) {
								h = new esri.layers.Field;
								h.name = a.name.get();
								h.alias = a.displayName.get();
								a.type.get() ? h.type = d.essentials.Field.convertToEsriFieldType(a.type.get()) : h.type = c.getTypeFromGcxFeatures(b.features.get(), e);
								g.push(h)
							});
							return g
						};
						a.prototype.getFieldsFromEsriFeatureAttributeValues = function (a) {
							var b = 0,
							c = [],
							d = new esri.layers.Field,
							g = a[0].attributes,
							h;
							for (h in g)
								g.hasOwnProperty(h) &&
								(d = new esri.layers.Field, d.name = h, d.alias = h, d.type = this.getTypeFromEsriFeatures(a, b), c.push(d), b++);
							return c
						};
						a.prototype.getFieldsFromGcxFeatureAttributeValues = function (a) {
							var b = 0,
							c = [],
							d = new esri.layers.Field,
							g = a[0].attributes.get(),
							h;
							for (h in g)
								g.hasOwnProperty(h) && (d = new esri.layers.Field, d.name = h, d.alias = h, d.type = this.getTypeFromGcxFeatures(a, b), c.push(d), b++);
							return c
						};
						a.prototype.getTypeFromEsriFeatures = function (a, b) {
							var c = this,
							d = this.getEsriTypeFromValue(null);
							a.forEach(function (a) {
								(a = a.attributes[b]) &&
								(d = c.getEsriTypeFromValue(a))
							});
							return d
						};
						a.prototype.getTypeFromGcxFeatures = function (a, b) {
							var c = this,
							d = this.getEsriTypeFromValue(null);
							a.forEach(function (a) {
								(a = a.attributes.getAt(b).value.get()) && (d = c.getEsriTypeFromValue(a))
							});
							return d
						};
						a.prototype.getEsriTypeFromValue = function (a) {
							var b = "esriFieldTypeString";
							"number" === typeof a ? b = "esriFieldTypeDouble" : a instanceof Date && (b = "esriFieldTypeDate");
							return b
						};
						a.prototype.getFeatureSets = function (a) {
							var b = this,
							c = new esri.tasks.FeatureSet,
							g = new esri.Graphic,
							p = [];
							a.featureSets.get().forEach(function (q, E) {
								var s = b.getFields(q);
								c = new esri.tasks.FeatureSet;
								if (q && q.features.get() && 0 < q.features.get().length) {
									var w = [],
									t = [];
									q.features.getAt(0).attributes.get().forEach(function (a) {
										a.visible.get() || b._showInvisibleAttributes ? w.push(a.name.get()) : t.push(a.name.get())
									});
									q.features.get().forEach(function (a) {
										var e = {},
										k = a.esriFeature.get().attributes;
										a.getAttributes().forEach(function (a) {
											if (a.visible.get() || b._showInvisibleAttributes) {
												var c = a.name.get(),
												g = a.presentableValue.get(),
												l,
												m;
												for (m in s) {
													var n = s[m];
													if (n.name === a.name.get()) {
														l = n.type;
														if ((m = s.filter(function (a) {
																		return -1 !== a.name.indexOf(".Name()", a.name.length - 7) && a.name.substr(0, a.name.length - 7) === n.name
																	})) && 0 < m.length && (m = m[0].name) && k && k.hasOwnProperty(m)) {
															var p = k[n.name],
															q = p,
															p = g,
															g = q;
															e[m] = p
														}
														break
													}
												}
												g && c && (n.domain && "codedValue" == n.domain.type ? (n.type = d.essentials.EsriFieldTypes.esriFieldTypeString, e[c] = a.presentableValue.get()) : e[c] = n.type === d.essentials.EsriFieldTypes.esriFieldTypeDouble || n.type === d.essentials.EsriFieldTypes.esriFieldTypeSingle ?
														h.FormatUtils.parseNumber(a.value.get()) : l === d.essentials.EsriFieldTypes.esriFieldTypeInteger || n.type === d.essentials.EsriFieldTypes.esriFieldTypeSmallInteger ? Math.floor(h.FormatUtils.parseNumber(a.value.get())) : l === d.essentials.EsriFieldTypes.esriFieldTypeDate ? h.FormatUtils.parseDate(a.value.get()) : g)
											}
										});
										c.displayFieldName = q.esriFeatureSet.displayFieldName;
										g = new esri.Graphic(a.esriFeature.get().geometry, null, e, null);
										c.features.push(g)
									})
								} else
									q && 0 < q.features.get().length && q.features.get().forEach(function (a) {
										g =
											a.esriFeature.get();
										c.features.push(g)
									});
								if (0 < c.features.length) {
									if (s && 0 < s.length) {
										var y = [];
										s.forEach(function (a) {
											-1 == $.inArray(a.name, t) && y.push(a)
										});
										c.fields = y
									}
									var u = new k;
									u.name = a.featureSets.getAt(E).displayName.get();
									u.featureSet = c;
									var x = 0;
									p.forEach(function (a) {
										u.name === a.name && (x += 1)
									});
									0 < x && (u.name += x);
									p.push(u)
								}
							});
							return p
						};
						a.prototype.fscToJson = function (a) {
							var b = "[";
							this.getFeatureSets(a).forEach(function (a, c, d) {
								var e = new k;
								e.featureSet = a.featureSet;
								e.name = a.name;
								b += e.toJSONString();
								c !== d.length -
								1 && (b += ",")
							});
							return b += "]"
						};
						return a
					}
					(d.framework.application.ModuleBase);
					g.ResultsModule = c
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b(a, b) {
							c.call(this, a, b);
							this.featureClickedEventName = "ResultsTableFeatureClickedEvent";
							this.featurePressedEventName = "ResultsTableFeaturePressedEvent";
							this._boundFs = this._fsBindingToken = this.scrollTabRightElement = this.scrollTabLeftElement = this.tabElements = this.tabContainerElement = this.scrollContainerElement = null;
							this.app.command("ShowResultsTable").register(this, this.showResultsTable);
							this.app.command("ShowResultsList").register(this,
								this._handleShowResultsList);
							this.app.command("SwitchToListResultsView").register(this, this._switchToListResultsViewImpl, this._canExecuteSwitchToListResultsView);
							this.app.command("_ExportResultsViewState").register(this, this._exportState);
							this.app.command("_ApplyResultsViewState").register(this, this._applyState)
						}
						__extends(b, c);
						b.prototype.attach = function (a) {
							var b = this;
							this.title.sync(a.headerText);
							this.isBusy.sync(a.isBusy);
							void 0 != this.configuration.isPaged && a.presentableResults.isPaginated.set(this.configuration.isPaged);
							this.configuration.pageSize && a.presentableResults.pageSize.set(this.configuration.pageSize);
							a.presentableResults.currPageNumber.bindingEvent.subscribe(this, function () {
								var a = b.viewModel.curFeatureSet.get();
								b.scrollView(a ? b.viewModel.currScrollPosWithinTab[a.uniqueId] || 0 : 0)
							});
							c.prototype.attach.call(this, a)
						};
						b.prototype.resolveWidget = function (a, b, f) {
							c.prototype.resolveWidget.call(this, a, b);
							switch (a) {
							case "ResultsTableActionsWidget":
								return this.app.menuRegistry.createMenuWidget(this, b, f);
							case "TableViewWidget":
								a =
									this.viewModel;
								if (b = this.app.viewManager.createView({
											type : "geocortex.essentialsHtmlViewer.mapping.infrastructure.ui.components.Table.TableView",
											markup : "Mapping/infrastructure/ui/components/Table/TableView.html",
											libraryId : this.libraryId,
											visible : !0
										}))
									f = new d.essentialsHtmlViewer.mapping.infrastructure.ui.components.Table.TableViewModel(this.app, this.libraryId), f.addRecordClickEvents(this.featureClickedEventName), f.addRecordLongPressEvents(this.featurePressedEventName), f.columnHeaders = this.viewModel.columnHeaders,
									f.attachToPresentableCollection(a.presentableResults), b.attach(f), this.scrollContainerElement = b.tableContainerElement;
								return b;
							default:
								this.app.trace.warning("ResultsTableView: Unknown Widget")
							}
						};
						b.prototype.showResultsTable = function (a) {
							var b = this;
							this.app.viewManager.activateView(this);
							this.viewModel.featureSetCollection.get() && (this._unbindFromPrevFeatureSet(), this._boundFs = this.viewModel.featureSetCollection.get().featureSets) && (this._fsBindingToken = this.viewModel.featureSetCollection.get().featureSets.bind(this,
										this._refreshTabControlVisibility));
							var c = null,
							d = this.app.event("ApplicationResizedEvent").subscribe(this, function () {
									b.isActive ? (c && (clearTimeout(c), c = null), c = setTimeout(function () {
												b._refreshTabControlVisibility()
											}, 200)) : (b.app.event("ApplicationResizedEvent").unsubscribe(d), d = null)
								});
							this._refreshTabControlVisibility()
						};
						b.prototype._refreshTabControlVisibility = function () {
							var a = this;
							setTimeout(function () {
								a.tabContainerElement && a.tabElements && (a.viewModel.tabControlsEnabled.set(a.tabElements.offsetWidth >
										a.tabContainerElement.offsetWidth), a._updateScrollTabDisabledStatus())
							}, 100)
						};
						b.prototype.handleTabClick = function (a, b, c) {
							this.scrollContainerElement && (this.viewModel.currScrollPosWithinTab[this.viewModel.curFeatureSet.get().uniqueId] = this.scrollContainerElement.scrollTop);
							(a = dojo.filter(this.viewModel.featureSetCollection.get().featureSets.get(), function (a) {
										return a.uniqueId === c.uniqueId
									})) && a[0] && this.viewModel.curFeatureSet.get() !== a[0] && (this.viewModel.setCurrentSelectedFeatureSet(a[0]), this.viewModel.setCurrentPageWithinTab(c.uniqueId));
							this.app.command("FocusOnFirstInputInView").execute(this)
						};
						b.prototype.handlePageFirst = function (a, b, c) {
							1 < this.viewModel.presentableResults.currPageNumber.get() && (this.viewModel.updateCurrentPageAndScrollPosWithinTab(1, 0), this.viewModel.presentableResults.currPageNumber.set(1))
						};
						b.prototype.handlePagePrev = function (a, b, c) {
							1 < this.viewModel.presentableResults.currPageNumber.get() && (a = this.viewModel.presentableResults.currPageNumber.get() - 1, this.viewModel.updateCurrentPageAndScrollPosWithinTab(a, 0), this.viewModel.presentableResults.currPageNumber.set(a))
						};
						b.prototype.handlePageNext = function (a, b, c) {
							this.viewModel.presentableResults.lastPageNumber.get() > this.viewModel.presentableResults.currPageNumber.get() && (a = this.viewModel.presentableResults.currPageNumber.get() + 1, this.viewModel.updateCurrentPageAndScrollPosWithinTab(a, 0), this.viewModel.presentableResults.currPageNumber.set(a))
						};
						b.prototype.handlePageLast = function (a, b, c) {
							this.viewModel.presentableResults.currPageNumber.get() < this.viewModel.presentableResults.lastPageNumber.get() && (a = this.viewModel.presentableResults.lastPageNumber.get(),
								this.viewModel.updateCurrentPageAndScrollPosWithinTab(a, 0), this.viewModel.presentableResults.currPageNumber.set(a))
						};
						b.prototype.handleTabScrollBack = function (a, b, c) {
							a = $(this.tabContainerElement);
							b = a.scrollLeft() - 2 * this.scrollTabLeftElement.offsetWidth;
							a.scrollLeft(0 > b ? 0 : b);
							this._updateScrollTabDisabledStatus()
						};
						b.prototype.handleTabScrollForward = function (a, b, c) {
							a = $(this.tabContainerElement);
							b = this.tabContainerElement.scrollWidth - this.tabContainerElement.offsetWidth;
							c = a.scrollLeft() + 2 * this.scrollTabRightElement.offsetWidth;
							a.scrollLeft(c > b ? b : c);
							this._updateScrollTabDisabledStatus()
						};
						b.prototype.handleClickFeature = function (a, b, c) {
							this.app.event("ResultsTableFeatureClickedEvent").publish(c)
						};
						b.prototype.handleColumnHeadClick = function (a, b, c) {
							c.sortState.set((c.sortState.get() + 1) % 3)
						};
						b.prototype._handleShowResultsList = function () {
							this.app.viewManager.deactivateView(this)
						};
						b.prototype._switchToListResultsViewImpl = function () {
							this.app.command("CloseBottomRegion").execute()
						};
						b.prototype._canExecuteSwitchToListResultsView = function () {
							return this.isActive &&
							!this.app.configuration.mobileMode
						};
						b.prototype._updateScrollTabDisabledStatus = function () {
							if (this.tabContainerElement) {
								var a = this.tabContainerElement.scrollWidth - this.tabContainerElement.offsetWidth;
								this.viewModel.leftScrollTabDisabled.set(0 === this.tabContainerElement.scrollLeft);
								this.viewModel.rightScrollTabDisabled.set(this.tabContainerElement.scrollLeft > a - 1)
							}
						};
						b.prototype._unbindFromPrevFeatureSet = function () {
							this._fsBindingToken && this._boundFs && this._boundFs.unbind(this._fsBindingToken);
							this._fsBindingToken =
								this._boundFs = null
						};
						b.prototype._exportState = function (a) {
							this.isActive && this.viewModel.exportState(a)
						};
						b.prototype._applyState = function (a) {
							this.viewModel.applyState(a)
						};
						return b
					}
					(g.ResultsViewBase);
					g.ResultsTableView = h
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = d.framework.utils.ArrayUtils,
					c = k.infrastructure.ui.components.Table.SortState,
					b = function (a) {
						function b(c, e) {
							a.call(this, c, e);
							this.curFeatureSet = new Observable(null);
							this.currPageWithinTab = {};
							this.currScrollPosWithinTab = {};
							this.presentableResults = new d.framework.ui.PresentableCollection;
							this.pageControlsEnabled = new Observable(!1);
							this.tabControlsEnabled = new Observable(!1);
							this.resultsTable = new Observable("results-table");
							this.columnSharedState =
								null;
							this.columnHeaders = new ObservableCollection([]);
							this.leftScrollTabDisabled = new Observable(!1);
							this.rightScrollTabDisabled = new Observable(!1);
							this._firstVisibleTab = 0;
							this._emptyFeatureSet = new d.essentialsHtmlViewer.mapping.infrastructure.FeatureSet({
									app : this.app
								});
							this._featureSetsBindingToken = this._boundFeatureSets = null;
							this.presentableResults.items.useThrottling = !0;
							this.resultsPage = this.presentableResults.items;
							this.presentableResults.pageSize.set(this.defaultPageSize);
							this.defaultIsPaged !=
							this.presentableResults.isPaginated.get() && this.presentableResults.isPaginated.set(this.defaultIsPaged);
							this.curFeatureSet.bind(this, this.handleCurrentFeatureSetChanged);
							this.presentableResults.numberOfItems.bind(this, this.updateHeaderText);
							this.resultsPage.bind(this, this._handlePageResultsChange);
							this.app.command("ShowResultsTable").register(this, this.showResultsTable);
							this.app.command("SwitchToListResultsView").register(this, this._switchToListResultsViewImpl, this._canExecuteSwitchToListResultsView)
						}
						__extends(b, a);
						b.prototype.handleCollectionChanged = function (b) {
							a.prototype.handleCollectionChanged.call(this, b);
							this.unbindFeatureSets();
							if (b && b.featureSets) {
								this._featureSetsBindingToken = b.featureSets.bind(this, this.handleFeatureSetsChanged);
								this._boundFeatureSets = b.featureSets;
								this._firstVisibleTab = 0;
								for (var c = null, d = 0; d < b.featureSets.length(); d++)
									if (b.featureSets.getAt(d).isSelectedInCollection.get()) {
										c = b.featureSets.getAt(d);
										break
									}
								!c && 0 < b.featureSets.length() && (c = b.featureSets.getAt(0));
								c !== this.curFeatureSet.get() &&
								(this.setCurrentSelectedFeatureSet(c), this.currPageWithinTab = {}, this.currScrollPosWithinTab = {})
							}
						};
						b.prototype.handleCurrentFeatureSetChanged = function (a) {
							this.presentableResults.sortingPredicate = null;
							this.presentableResults.attachToCollection(a.features);
							this.buildColumnHeaders(a)
						};
						b.prototype.handleFeatureSetsChanged = function (b) {
							a.prototype.handleFeatureSetsChanged.call(this, b);
							var c = b.sender;
							if ("append" === b.type) {
								0 === b.rangeStart && this.setCurrentSelectedFeatureSet(c.getAt(0));
								for (var d = b.rangeStart; d <=
									b.rangeEnd; d++)
									c.getAt(d).isSelectedInCollection.get() && this.setCurrentSelectedFeatureSet(c.getAt(d))
							} else
								"remove" === b.type && (d = this.curFeatureSet.get()) && (d = c.indexOf(d), d >= b.rangeStart && d <= b.rangeEnd && (b.rangeEnd + 1 < c.length() ? this.setCurrentSelectedFeatureSet(c.getAt(b.rangeEnd + 1)) : 0 < b.rangeStart ? this.setCurrentSelectedFeatureSet(c.getAt(b.rangeStart - 1)) : this.setCurrentSelectedFeatureSet(null)))
						};
						b.prototype.showResultsTable = function (a) {
							if (a = "string" === typeof a ? this.app.featureSetManager.getCollectionById(a) :
									a)
								a !== this.featureSetCollection.get() ? (this.unbindFeatureSets(), this.featureSetCollection.set(a)) : this._handlePageResultsChange(), this.app.command("_setResultMappingCommand").execute(a.sourceName, "ShowResultsTable");
							this.currPageWithinTab = {};
							this.currScrollPosWithinTab = {}

						};
						b.prototype._switchToListResultsViewImpl = function () {
							this.app.command("ShowResultsList").execute(this.featureSetCollection.get())
						};
						b.prototype._canExecuteSwitchToListResultsView = function () {
							return !!this.featureSetCollection.get()
						};
						b.prototype.setCurrentSelectedFeatureSet = function (a) {
							for (var b = this.featureSetCollection.get().featureSets, c = 0; c < b.length(); c++)
								b.getAt(c).isSelectedInCollection.set(b.getAt(c) === a);
							a && this.curFeatureSet.set(a)
						};
						b.prototype.unbindFeatureSets = function () {
							this._featureSetsBindingToken && this._boundFeatureSets && this._boundFeatureSets.unbind(this._featureSetsBindingToken);
							this._featureSetsBindingToken = this._boundFeatureSets = null
						};
						b.prototype.buildColumnHeaders = function (a) {
							this.columnHeaders.clear();
							this.columnSharedState ?
							this.columnSharedState.reset() : this.columnSharedState = new d.essentialsHtmlViewer.mapping.infrastructure.ui.components.Table.TableColumnHeaderViewModel.SharedState(this.presentableResults, "sort", "sort-up", "sort-down");
							var b,
							c = {};
							if (a.layer && a.layer.fields)
								for (b = 0; b < a.layer.fields.length; b++) {
									var e = a.layer.fields[b];
									c[e.name] = e.dataType
								}
							e = a.attributes.length();
							e || (a.loadAttributes(), e = a.attributes.length());
							for (b = 0; b < e; b++) {
								var g = a.attributes.getAt(b);
								g.visible && !g.visible.get() || this.columnHeaders.addItem(new d.essentialsHtmlViewer.mapping.infrastructure.ui.components.Table.TableColumnHeaderViewModel(this.app,
										this.libraryId, this.columnSharedState, g.displayName.get(), c[g.name.get()], b))
							}
						};
						b.prototype.setCurrentPageWithinTab = function (a) {
							this.currPageWithinTab[a] ? this.currPageWithinTab[a] !== this.presentableResults.currPageNumber.get() && this.presentableResults.currPageNumber.set(this.currPageWithinTab[a]) : this.currPageWithinTab[a] = this.presentableResults.currPageNumber.get()
						};
						b.prototype.updateCurrentPageAndScrollPosWithinTab = function (a, b) {
							this.currScrollPosWithinTab[this.curFeatureSet.get().uniqueId] = b;
							this.currPageWithinTab[this.curFeatureSet.get().uniqueId] =
								a
						};
						b.prototype.exportState = function (a) {
							var b = this.featureSetCollection.get();
							a.results = this.app.project.convert.fromGcxFeatureSetCollection(b);
							a.viewMode = "table";
							a.page = this.presentableResults.currPageNumber.get();
							if (b = m.firstOrDefault(b.featureSets.get(), function (a) {
										return a.isSelectedInCollection.get()
									}))
								if (a.tableOptions = {
										selectedFeatureSet : this.app.project.convert.fromGcxFeatureSet(b)
									}, b = m.firstOrDefault(this.columnHeaders.get(), function (a) {
											return a.sortState.get() !== c.UNSORTED
										}))
									a.tableOptions.sortColumn =
										this.columnHeaders.get().indexOf(b), a.tableOptions.sortDirection = b.sortState.get() === c.ASCENDING ? "asc" : "desc"
						};
						b.prototype.applyState = function (a) {
							var b = this,
							e = {
								results : this.app.project.convert.toGcxFeatureSetCollection(a.state.results),
								selectedFeatureSet : a.state.tableOptions ? this.app.project.convert.toGcxFeatureSet(a.state.tableOptions.selectedFeatureSet)["catch"](function (a) {}) : null
							};
							a.promises.push(Promise.props(e).then(function (e) {
									if (e.results) {
										e.results !== b.featureSetCollection.get() && (b.unbindFeatureSets(),
											b.featureSetCollection.set(e.results));
										"table" === a.state.viewMode && b.app.command("_setResultMappingCommand").execute(e.results.sourceName, "ShowResultsTable");
										var g = m.firstOrDefault(e.results.featureSets.get(), function (a) {
												return a === e.selectedFeatureSet
											});
										g && (b.setCurrentSelectedFeatureSet(g), d.framework.utils.isNullOrUndefined(a.state.page) || (b.updateCurrentPageAndScrollPosWithinTab(b.presentableResults.currPageNumber.get(), 0), b.presentableResults.currPageNumber.set(a.state.page)), d.framework.utils.isNullOrUndefined(a.state.tableOptions.sortColumn) ||
											(g = b.columnHeaders.getAt(a.state.tableOptions.sortColumn)) && g.sortState.set("desc" === a.state.tableOptions.sortDirection ? c.DESCENDING : c.ASCENDING))
									}
								}))
						};
						b.prototype._handlePageResultsChange = function (a) {
							a = a ? a : {
								type : null
							};
							a = "clear" === a.type || "remove" === a.type && 1 >= a.sender.value.length;
							var b = new h.eventArgs.ResultsPageChangedEventArgs;
							b.featureSetCollection = this.featureSetCollection.get();
							b.newValue = a ? new ObservableCollection : this.resultsPage;
							this.app.event("ResultsPageChangedEvent").publish(b)
						};
						return b
					}
					(g.ResultsViewModel);
					g.TabbedResultsViewModel = b
				})(h.results || (h.results = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function () {
						function c(b, a) {
							var c = this;
							this.iconUri = new Observable("");
							this.text = new Observable(b);
							this.plainText = new Observable("");
							this.plainText.syncTransform(this.text, function (a) {
								return d.FilterUtils.stripHtml(a)
							});
							this.safeText = new Observable("");
							this.safeText.syncTransform(this.text, function (a) {
								return c.sanitizeText(a)
							})
						}
						c.prototype.sanitizeText = function (b) {
							var a = {
								allowFrames : !1,
								uriTransformer : function (a) {
									return a
								}
							};
							return b ?
							d.FilterUtils.sanitize(b, a) : ""
						};
						c.prototype.toString = function () {
							return this.plainText.get()
						};
						return c
					}
					();
					g.SearchHintItem = k
				})(d.search || (d.search = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c() {}

						c.POINT = "POINT";
						c.MULTI_POINT = "MULTI_POINT";
						c.LINE = "LINE";
						c.POLYGON = "POLYGON";
						c.FREEHAND_POLYGON = "FREEHAND_POLYGON";
						c.POLYLINE = "POLYLINE";
						c.FREEHAND_POLYLINE = "FREEHAND_POLYLINE";
						c.RECTANGLE = "RECTANGLE";
						c.TRIANGLE = "TRIANGLE";
						c.CIRCLE = "CIRCLE";
						c.ELLIPSE = "ELLIPSE";
						c.ARROW = "ARROW";
						c.LEFT_ARROW = "LEFT_ARROW";
						c.RIGHT_ARROW = "RIGHT_ARROW";
						c.UP_ARROW = "UP_ARROW";
						c.DOWN_ARROW = "DOWN_ARROW";
						c.EXTENT = "EXTENT";
						return c
					}
					();
					d.DrawMode = h
				})(d.tools || (d.tools = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b(c, d) {
									a.call(this, c, d);
									this.hoistedMenuViewModel = new Observable(b.emptyMenuViewModel);
									this.hasHoistedMenu = new Observable(!1);
									this.hasExecutableMenuItems = new Observable(!1);
									this.inlineMenuIsOpen = new Observable(!1);
									this.panelMaximized = new Observable(!1);
									this.showingMaximizeButton = new Observable(!1);
									this.resizeY = this.resizeX = !1;
									b.emptyMenuViewModel || (b.emptyMenuViewModel = new h.menus.MenuViewModel(c,
												d))
								}
								__extends(b, a);
								b.prototype.initialize = function (b) {
									a.prototype.initialize.call(this, b);
									this.statusRegion = b.statusRegionName;
									this.statusRegionType = b.statusRegionType || "geocortex.framework.ui.DivRegionAdapter";
									b.resizeX && (this.resizeX = b.resizeX);
									b.resizeY && (this.resizeY = b.resizeY);
									this.menuRegion = b.menuRegion || null;
									void 0 != b.showMaximizeButton && this.showingMaximizeButton.set(b.showMaximizeButton)
								};
								return b
							}
							(d.framework.ui.ViewContainer.ViewContainerViewModel);
							c.SmartPanelViewModel = b
						})(g.SmartPanel ||
							(g.SmartPanel = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this.paneItems = new ObservableCollection;
									this.defaultPaneItems = new ObservableCollection;
									this.displayedPaneItems = new ObservableCollection;
									this.expanded = new Observable(!1);
									this.headerIsVisible = new Observable(!0);
									this.showXButton = new Observable(!0);
									this.selectorIconUri = new Observable("");
									this.selectorText = new Observable("")
								}
								__extends(b, a);
								b.prototype.initialize =
								function (b) {
									a.prototype.initialize.call(this, b);
									b && (b.hasOwnProperty("headerIsVisible") && this.headerIsVisible.set(!!b.headerIsVisible), b.hasOwnProperty("showXButton") && this.showXButton.set(!!b.showXButton), b.hasOwnProperty("selectorIconUri") && this.selectorIconUri.set(b.selectorIconUri), b.hasOwnProperty("selectorText") && this.selectorText.set(b.selectorText))
								};
								b.prototype.findPaneItemById = function (a) {
									return d.framework.utils.ArrayUtils.firstOrDefault(this.paneItems.getItems(), function (b) {
										return b.id &&
										b.id === a
									})
								};
								b.prototype.findDisplayedPaneItemById = function (a) {
									return d.framework.utils.ArrayUtils.firstOrDefault(this.displayedPaneItems.getItems(), function (b) {
										return b.id && b.id === a
									})
								};
								return b
							}
							(d.essentialsHtmlViewer.mapping.infrastructure.ui.components.SmartPanel.SmartPanelViewModel);
							c.MultiPaneViewModel = b
						})(g.MultiPane || (g.MultiPane = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this.currentPaneItem = new Observable(null);
									this.headerIsVisible = new Observable(!0);
									this.showXButton = new Observable(!0)
								}
								__extends(b, a);
								b.prototype.initialize = function (b) {
									a.prototype.initialize.call(this, b);
									b && (b.hasOwnProperty("headerIsVisible") && this.headerIsVisible.set(!!b.headerIsVisible), b.hasOwnProperty("showXButton") && this.showXButton.set(!!b.showXButton))
								};
								b.prototype.onDestroy = function () {
									a.prototype.onDestroy.call(this);
									this.currentPaneItem.set(null);
									this.app = this.currentPaneItem = null
								};
								return b
							}
							(d.framework.ui.ViewModelBase);
							c.PaneViewModel = b
						})(g.MultiPane || (g.MultiPane = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this._isDestroyed = !1
								}
								__extends(b, a);
								b.prototype.destroy = function () {
									a.prototype.destroy.call(this);
									this._isDestroyed = !0
								};
								b.prototype.onClose = function (a) {};
								b.prototype.handleClickClose = function (a, b, c) {
									if (this.viewModel && this.onClose)
										this.onClose(this.viewModel.currentPaneItem.get());
									this._isDestroyed || this.app.command("DestroyView").execute(this.id)
								};
								return b
							}
							(d.framework.ui.ViewBase);
							c.PaneView = b
						})(g.MultiPane || (g.MultiPane = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this.resizeX = this.resizeY = !1;
									this._menuViews = {};
									this._menuItemInvokedSubscriptionToken = null
								}
								__extends(b, a);
								b.prototype.attach = function (b) {
									var c = this;
									a.prototype.attach.call(this, b);
									if (this.configuration.resizableParentRegion)
										if (this.app.site && this.app.site.isInitialized)
											b = this.app.viewManager.getExistingRegionByName(this.configuration.resizableParentRegion),
											this.resizableRegion = b.domElement;
										else
											this.app.event("SiteInitializedEvent").once(this, function () {
												var a = c.app.viewManager.getExistingRegionByName(c.configuration.resizableParentRegion);
												c.resizableRegion = a.domElement
											});
									else if (this.app.site && this.app.site.isInitialized)
										b = this.app.viewManager.getExistingRegionByName(this.regionName), this.resizableRegion = b.domElement;
									else
										this.app.event("SiteInitializedEvent").once(this, function () {
											var a = c.app.viewManager.getExistingRegionByName(c.regionName);
											c.resizableRegion =
												a.domElement
										});
									this.viewModel.resizeX ? this.resizeX = this.viewModel.resizeX : this.configuration.resizeX && (this.resizeX = this.configuration.resizeX);
									this.viewModel.resizeY ? this.resizeY = this.viewModel.resizeY : this.configuration.resizeY && (this.resizeY = this.configuration.resizeY);
									$(this.app.getHostElement()).on("onclick.handle-resize-error", function (a) {
										$(c.app.getHostElement()).off("mousemove.header-resize touchmove.header-resize");
										null != c.resizePreviewElement.parentNode && c.resizableRegion.parentNode.removeChild(c.resizePreviewElement)
									});
									this.viewModel.panelMaximized.bind(this, function (a) {
										a ? $(c.resizableRegion).attr("data-maximized", "true") : $(c.resizableRegion).attr("data-maximized", "false")
									});
									this.viewModel.statusRegion ? ($(this.statusRegionElement).attr("data-region-name", this.viewModel.statusRegion), $(this.statusRegionElement).attr("data-region-adapter", this.viewModel.statusRegionType)) : this.statusRegionElement && this.statusRegionElement.parentNode && (this.statusRegionElement.parentNode.removeChild(this.statusRegionElement), this.statusRegionElement =
											null);
									this._initializeEvents();
									this.app.command("MaximizePanel").register(this, function (a) {
										return c._togglePanelMaximized(a, "maximize")
									}, this._canExecuteMaximizeRestoreOperations);
									this.app.command("RestorePanel").register(this, function (a) {
										return c._togglePanelMaximized(a, "restore")
									}, this._canExecuteMaximizeRestoreOperations)
								};
								b.prototype._initializeEvents = function () {
									var a = this,
									b = this.app.event("PanelRegionRestoredEvent").subscribe(this, function (b) {
											b === a.resizableRegion && a.viewModel.panelMaximized.set(!1)
										}),
									c = this.app.event("PanelRegionMaximizedEvent").subscribe(this, function (b) {
											b === a.resizableRegion && a.viewModel.panelMaximized.set(!0)
										});
									this.trackSubscription(this.app.event("PanelRegionRestoredEvent"), b);
									this.trackSubscription(this.app.event("PanelRegionMaximizedEvent"), c);
									this.viewModel.statusRegion && (b = this.app.event("RegionActivatedEvent").subscribe(this, this._handleRegionActivatedOrDeactivated), c = this.app.event("RegionDeactivatedEvent").subscribe(this, this._handleRegionActivatedOrDeactivated), this.trackSubscription(this.app.event("RegionActivatedEvent"),
											b), this.trackSubscription(this.app.event("RegionDeactivatedEvent"), c))
								};
								b.prototype._handleRegionActivatedOrDeactivated = function (a) {
									var b = this.viewModel ? this.viewModel.statusRegion : null;
									a && a.name === b && this.delayedResize()
								};
								b.prototype._togglePanelMaximized = function (a, b) {
									a === this.id && "maximize" === b && this.maximizePanel();
									a === this.id && "restore" === b && this.minimizePanel()
								};
								b.prototype._canExecuteMaximizeRestoreOperations = function () {
									return this.viewModel.showingMaximizeButton.get() ? !0 : !1
								};
								b.prototype._handleViewActivatedInContainerEvent =
								function (c) {
									a.prototype._handleViewActivatedInContainerEvent.call(this, c);
									if (this.viewModel && this.viewModel.getDescriptorForActiveView(c))
										if (!0 === c instanceof b)
											c.setParentPanel(this), (c = c.viewModel.currentView) && c.viewModel && c.isActive && this.hoistMenuForView(c);
										else {
											for (var d = this._parentPanel, g; d; )
												d.viewModel.headerIsVisible.get() && (g = d), d = d._parentPanel;
											g ? g.hoistMenuForView(c) : this.hoistMenuForView(c)
										}
								};
								b.prototype.activated = function () {
									a.prototype.activated.call(this)
								};
								b.prototype.deactivated =
								function () {
									a.prototype.deactivated.call(this)
								};
								b.prototype.destroy = function () {
									a.prototype.destroy.call(this);
									this._unsubscribeMenuItemInvokedSubscription();
									for (var b in this._menuViews)
										this._menuViews.hasOwnProperty(b) && this.app.viewManager.destroyView(this._menuViews[b]);
									this._parentPanel = this._menuViews = null
								};
								b.prototype.openHoistedMenuInRegion = function (a) {
									this._destroyHoistedMenuOwnerViewIfExists();
									this.hoistedMenuOwnerView = this.createMenuView(this.viewModel.hoistedMenuViewModel.get());
									this.hoistedMenuOwnerView.regionName =
										a;
									this.app.viewManager.activateView(this.hoistedMenuOwnerView)
								};
								b.prototype.resolveWidget = function (a, b, c) {
									if ("SmartPanelHoistedMenu" === a) {
										if (!this.hoistedMenuId)
											return;
										this._destroyHoistedMenuOwnerViewIfExists();
										this.hoistedMenuOwnerView = this.createMenuView(b);
										return this.viewModel.menuRegion ? null : this.hoistedMenuOwnerView
									}
									return null
								};
								b.prototype.createMenuView = function (a) {
									var b = this,
									c = this.app.viewManager.createView({
											markupResource : "Mapping/infrastructure/menus/MenuView.html",
											typeName : "geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuView",
											libraryId : "Mapping.Infrastructure"
										});
									c.libraryId = this.libraryId;
									c.configuration.menuId = this.hoistedMenuId;
									a && (c.attach(a), this.auto(a.hasExecutableMenuItems, this, function (a) {
											a || b.viewModel.menuRegion || b.viewModel.inlineMenuIsOpen.set(!1)
										}));
									this._menuViews[c.id] = c;
									this._unsubscribeMenuItemInvokedSubscription();
									this._menuItemInvokedSubscriptionToken = this.app.event("MenuItemInvokedEvent").subscribe(this, function (a) {
											a.menuView.id in b._menuViews && (b.viewModel.menuRegion || b.viewModel.inlineMenuIsOpen.set(!1),
												b.app.viewManager.deactivateView(a.menuView))
										});
									var d = this.app.event("ViewDeactivatedEvent").subscribe(this, function (a) {
											a === c && (b.app.event("ViewDeactivatedEvent").unsubscribe(d), a.viewModel = null, b.app.viewManager.destroyView(a), delete b._menuViews[c.id])
										});
									a.menuContext.pulse();
									return c
								};
								b.prototype.handleTapMenuButton = function () {
									var a = this;
									if (this.viewModel.menuRegion)
										if (this.hoistedMenuOwnerView && this.hoistedMenuOwnerView.regionName === this.viewModel.menuRegion && this.hoistedMenuOwnerView.isActive) {
											var b =
												this.hoistedMenuOwnerView.viewModel && this.hoistedMenuOwnerView.viewModel.menuSourceView;
											this._destroyHoistedMenuOwnerViewIfExists();
											b && this.app.viewManager.activateView(b)
										} else
											this.openHoistedMenuInRegion(this.viewModel.menuRegion);
									else
										this.viewModel.inlineMenuIsOpen.set(!this.viewModel.inlineMenuIsOpen.get()), this.viewModel.inlineMenuIsOpen.get() && (this.app.event("FlyoutActivated").publish(this), b = {
												view : this.hoistedMenuOwnerView,
												onOtherInteracted : function (b) {
													a.viewModel.inlineMenuIsOpen.set(!1);
													a.app.event("FlyoutDeactivated").publish(a)
												}
											}, this.app.command("TapToDismiss").execute(b))
								};
								b.prototype.hoistMenuForView = function (a) {
									var g = this;
									if (a !== this.hoistedMenuOwnerView) {
										var h = this.app.menuRegistry.getMenuWidgetsForView(a);
										h && (h = h.filter(function (a) {
													return a.hoistMenu
												}));
										if (h && h.length) {
											var k = h[0],
											h = new d.essentialsHtmlViewer.mapping.infrastructure.menus.MenuViewModel(this.app, this.libraryId);
											h.menuSourceView = a;
											k.context && k.context.isObservable ? h.menuContext.sync(k.context) : h.menuContext.sync(k.widgetViewModel.menuContext);
											this.hoistedMenuId = k.menuId;
											this.viewModel.hoistedMenuViewModel.set(h);
											this.viewModel.hasHoistedMenu.set(!0);
											this.viewModel.hasExecutableMenuItems.sync(h.hasExecutableMenuItems);
											$(k.domElement).addClass(b.HoistedClassName);
											var m = this.app.event("ViewUnhostedEvent").subscribe(this, function (b) {
													b.view === a && (g.app.event("ViewUnhostedEvent").unsubscribe(m), $(k.domElement).removeClass("hidden-hoisted-menu"))
												})
										} else
											this.viewModel.inlineMenuIsOpen.get() && this.viewModel.inlineMenuIsOpen.set(!1), this.viewModel.hasHoistedMenu.set(!1),
											this.viewModel.hoistedMenuViewModel.set(c.SmartPanelViewModel.emptyMenuViewModel), this.viewModel.hasExecutableMenuItems.removeSync(), this.viewModel.hasExecutableMenuItems.set(!1)
									}
								};
								b.prototype.setParentPanel = function (a) {
									this._parentPanel = a
								};
								b.prototype.handleMaximizeToggleClick = function (a, b, c) {
									this.viewModel.panelMaximized.get() ? this.minimizePanel() : this.maximizePanel()
								};
								b.prototype.maximizePanel = function () {
									this.viewModel.panelMaximized.set(!0);
									this.app.command("ResizeShell").execute();
									this.app.event("ApplicationResizedEvent").publish();
									this.app.event("PanelRegionMaximizedEvent").publish(this.resizableRegion)
								};
								b.prototype.minimizePanel = function () {
									this.viewModel.panelMaximized.set(!1);
									this.app.command("ResizeShell").execute();
									this.app.event("ApplicationResizedEvent").publish();
									this.app.event("PanelRegionRestoredEvent").publish(this.resizableRegion)
								};
								b.prototype._unsubscribeMenuItemInvokedSubscription = function () {
									this._menuItemInvokedSubscriptionToken && (this.app.event("MenuItemInvokedEvent").unsubscribe(this._menuItemInvokedSubscriptionToken),
										this._menuItemInvokedSubscriptionToken = null)
								};
								b.prototype.handleHeaderMouseDown = function (a, b, c) {
									var d = this;
									if (this.viewModel.panelMaximized.get() || a.target !== a.currentTarget)
										return !0;
									$(this.app.getHostElement()).off("mouseup.header-click touchend.header-click");
									var e = !0;
									$(this.app.getHostElement()).one("mouseup.header-click touchend.header-click", function () {
										e = !1
									});
									setTimeout(function () {
										e && d.resizableRegion && ($(d.app.getHostElement()).off("mouseup.header-click touchend.header-click"), d.resizeSmartPanel(a.pageX,
												a.pageY), a.preventDefault())
									}, 250);
									a.preventDefault();
									a.stopImmediatePropagation();
									return !0
								};
								b.prototype.handleHeaderTouchStart = function (a, b, c) {
									var d = this;
									if (this.viewModel.panelMaximized.get())
										return !0;
									for (b = a.target || a.srcElement; b != this.root; ) {
										if ($(b).is("button") && !$(b).hasClass("resize-handle"))
											return !0;
										b = b.parentElement
									}
									$(this.app.getHostElement()).off("touchend.header-click");
									var e = !0;
									$(this.app.getHostElement()).one("touchend.header-click", function () {
										e = !1
									});
									setTimeout(function () {
										e && d.resizableRegion &&
										(a.preventDefault(), $(d.app.getHostElement()).off("touchend.header-click"), d.resizeSmartPanel(a.targetTouches[0].pageX, a.targetTouches[0].pageY))
									}, 250);
									a.preventDefault();
									return !0
								};
								b.prototype.resize = function () {
									if (this.headerElement && this.scrollRegionElement && this.containerElement) {
										var a = $(this.statusRegionElement),
										b = $(this.headerElement),
										c = $(this.footerElement),
										d = $(this.scrollRegionElement),
										a = a.length && "none" !== a.css("display") ? a.outerHeight() : 0,
										b = b.length && "none" !== b.css("display") ? b.outerHeight() :
											0,
										c = c.length && "none" !== c.css("display") ? c.outerHeight() : 0,
										b = b + a;
										"relative" !== d.css("position") && d.css("top", b + "px");
										d.css("bottom", c + "px")
									}
								};
								b.prototype.resizeSmartPanel = function (a, b) {
									var c = this;
									if (this.resizeX || this.resizeY) {
										var d = {};
										d.initialX = a;
										d.initialY = b;
										this.app.event("PanelResizeStartEvent").publish({
											viewId : this.id,
											resizeInformation : d
										});
										if (null === this.resizePreviewElement || void 0 === this.resizePreviewElement)
											this.resizePreviewElement = document.createElement("div"), this.resizePreviewElement.className =
												"resize-hint";
										null === this.resizePreviewElement.parentElement && (this.app.getHostElement().appendChild(this.resizePreviewElement), $(this.resizePreviewElement).css("left", this.root.getBoundingClientRect().left));
										d.initialPanelHeight = $(this.resizableRegion).height();
										d.initialPanelWidth = $(this.resizableRegion).width();
										if (0 === d.initialPanelHeight || d.initialPanelHeight > $(this.resizableRegion.parentElement).height())
											d.initialPanelHeight = $(this.resizableRegion.parentElement).height();
										if (0 === d.initialPanelWidth ||
											d.initialPanelWidth > $(this.resizableRegion.parentElement).width())
											d.initialPanelWidth = $(this.resizableRegion.parentElement).width();
										this.resizeX ? ($(this.resizePreviewElement).width(d.initialPanelWidth), $(this.resizePreviewElement).height(d.initialPanelHeight), d.minWidth = parseInt($(this.resizableRegion).css("min-width")), d.maxWidth = parseInt($(this.resizableRegion).css("max-width"))) : this.resizeY && ($(this.resizePreviewElement).width(d.initialPanelWidth), $(this.resizePreviewElement).height(d.initialPanelHeight),
											d.minHeight = parseInt($(this.resizableRegion).css("min-height")), d.maxHeight = parseInt($(this.resizableRegion).css("max-height")));
										this._resizeAccordingToSizeConstraints(d, this.resizePreviewElement);
										$(this.app.getHostElement()).one("mouseup.header-resize touchend.header-resize", function (a) {
											return c._handleResizeEnd(a, d)
										});
										$(this.app.getHostElement()).on("mousemove.header-resize ", function (a) {
											c.app.event("PanelResizingEvent").publish({
												viewId : c.id,
												resizeInformation : d
											});
											d.currentX = a.pageX;
											d.currentY = a.pageY;
											c._resizeAccordingToSizeConstraints(d, c.resizePreviewElement);
											a.preventDefault();
											return !1
										});
										$(this.app.getHostElement()).on("touchmove.header-resize", function (a) {
											c.app.event("PanelResizingEvent").publish({
												viewId : c.id,
												resizeInformation : d
											});
											var b = a.originalEvent;
											d.currentX = b.targetTouches[0].pageX;
											d.currentY = b.targetTouches[0].pageY;
											c._resizeAccordingToSizeConstraints(d, c.resizePreviewElement);
											a.preventDefault();
											return !1
										})
									} else
										this.app.trace.debug("This panel is not configured to be resizable!")
								};
								b.prototype._handleResizeEnd = function (a, b) {
									$(this.app.getHostElement()).off("mousemove.header-resize touchmove.header-resize");
									this.resizePreviewElement.parentNode && this.resizePreviewElement.parentNode.removeChild(this.resizePreviewElement);
									this._resizeAccordingToSizeConstraints(b, this.resizableRegion);
									this.app.event("PanelResizeEndEvent").publish({
										viewId : this.id,
										resizeInformation : b
									});
									this.app.command("ResizeShell").execute();
									this.app.event("ApplicationResizedEvent").publish()
								};
								b.prototype._resizeAccordingToSizeConstraints =
								function (a, b) {
									if (this.resizeX) {
										var c = a.initialPanelWidth + (a.currentX - a.initialX);
										c < a.minWidth ? $(b).width(a.minWidth) : c > a.maxWidth ? $(b).width(a.maxWidth) : $(b).width(c)
									}
									this.resizeY && (c = a.initialPanelHeight + (a.initialY - a.currentY), c < a.minHeight ? $(b).height(a.minHeight) : c > a.maxHeight ? $(b).height(a.maxHeight) : $(b).height(c))
								};
								b.prototype._destroyHoistedMenuOwnerViewIfExists = function () {
									if (this.hoistedMenuOwnerView) {
										var a = this.hoistedMenuOwnerView;
										this.hoistedMenuOwnerView = null;
										a.viewModel = null;
										this.app.viewManager.destroyView(a);
										delete this._menuViews[a.id]
									}
								};
								b.HoistedClassName = "hidden-hoisted-menu";
								return b
							}
							(d.framework.ui.ViewContainer.ViewContainerView);
							c.SmartPanelView = b
						})(g.SmartPanel || (g.SmartPanel = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b(c, d) {
									a.call(this, c, d);
									this._panes = [];
									this.app.event("ApplicationResizedEvent").subscribe(this, this.handleApplicationResizedEvent);
									this.app.event("ViewDeactivatedEvent").subscribe(this, this.handleViewDeactivatedEvent)
								}
								__extends(b, a);
								b.prototype.activated = function () {
									var b = this;
									a.prototype.activated.call(this);
									this.viewModel && this.viewModel.expanded.set(!0);
									setTimeout(function () {
										b.handleApplicationResizedEvent()
									},
										0)
								};
								b.prototype.deactivated = function () {
									a.prototype.deactivated.call(this);
									this.viewModel && this.viewModel.expanded.set(!1)
								};
								b.prototype.addDefaultPanes = function () {
									if (!(0 < this.viewModel.displayedPaneItems.getLength()))
										for (var a = 0; a < this.viewModel.defaultPaneItems.getLength(); a++) {
											var b = this.viewModel.defaultPaneItems.getAt(a);
											this.addPaneItem(b)
										}
								};
								b.prototype.addPaneItemById = function (a) {
									a = this.viewModel.findPaneItemById(a);
									this.addPaneItem(a)
								};
								b.prototype.addPaneItem = function (a) {
									throw Error("Not implemented");
								};
								b.prototype.canAddPaneItem = function (a) {
									return a && this.viewModel ? !this.viewModel.displayedPaneItems.contains(a) : !1
								};
								b.prototype.destroyPaneItemById = function (a) {
									a = this.viewModel.findDisplayedPaneItemById(a);
									this.destroyPaneItem(a)
								};
								b.prototype.destroyPaneItem = function (a) {
									if (a && this.canDestroyPaneItem(a)) {
										var b = this.findPaneForPaneItem(a);
										if (!b)
											return !1;
										this.viewModel.displayedPaneItems.removeItem(a);
										this.selector.unselectItem(a);
										this.app.command("DestroyView").execute(b.id);
										0 != this.viewModel.displayedPaneItems.length() ||
										this.viewModel.headerIsVisible.get() || this.app.command("DeactivateView").execute(this.id);
										return !0
									}
									return !1
								};
								b.prototype.canDestroyPaneItem = function (a) {
									return a && this.viewModel ? this.viewModel.displayedPaneItems.contains(a) : !1
								};
								b.prototype.clearPaneItems = function () {
									for (var a = this.viewModel.displayedPaneItems.getLength(); a--; ) {
										var b = this.viewModel.displayedPaneItems.getAt(a);
										this.destroyPaneItem(b)
									}
								};
								b.prototype.handleSelectPane = function (a) {
									this.addPaneItem(a)
								};
								b.prototype.handleUnSelectPane = function (a) {
									this.destroyPaneItem(a)
								};
								b.prototype.handleClickClose = function () {
									this.deactivateContainer()
								};
								b.prototype.handleApplicationResizedEvent = function () {
									if (this.viewModel) {
										var a = -1 < this.viewModel.regionType.get().indexOf("Stack"),
										b = this.scrollRegionElement,
										c = $(".view .pane", b);
										a && 0 !== c.length && (a = b.clientWidth / c.length - 5, $(c).width(a))
									}
								};
								b.prototype.handleViewDeactivatedEvent = function (a) {
									d.framework.utils.ArrayUtils.firstOrDefault(this._panes, function (b) {
										return a === b
									}) && (d.framework.utils.ArrayUtils.removeItem(this._panes, a), this.handleApplicationResizedEvent())
								};
								b.prototype.findPaneForPaneItem = function (a) {
									for (var b = 0; b < this._panes.length; b++) {
										var c = this._panes[b];
										if (c.viewModel.currentPaneItem.get() === a)
											return c
									}
									return null
								};
								b.prototype._executeShowMultiPaneView = function () {
									this.app.command("ActivateView").execute(this.id);
									this.addDefaultPanes();
									0 < this.viewModel.displayedPaneItems.getLength() && this.handleApplicationResizedEvent()
								};
								return b
							}
							(d.essentialsHtmlViewer.mapping.infrastructure.ui.components.SmartPanel.SmartPanelView);
							c.MultiPaneView = b
						})(g.MultiPane ||
							(g.MultiPane = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function () {
								function a(a, b, d, g, h, k) {
									this.visible = new Observable(!0);
									this.value = new Observable("");
									this.presentableValue = new Observable("");
									this.columnDescriptor = new Observable("");
									this.sortState = new Observable(c.SortState.UNSORTED);
									this.sortClass = new Observable("");
									this._reverseSortingPredicate = this._sortingPredicate = null;
									this.app = a;
									this.libraryId = b;
									this.value.set(g);
									this.presentableValue.set(g);
									this.columnDescriptor.set(this.app.getResource(this.libraryId,
											"language-ui-table-unsorted").format(this.presentableValue.get()));
									this._sharedState = d;
									"DateTime" === h ? (this._sortingPredicate = this.buildDateSortingFunction(k), this._reverseSortingPredicate = this.buildReverseDateSortingFunction(k)) : (this._sortingPredicate = this.buildSortingFunction(k), this._reverseSortingPredicate = this.buildReverseSortingFunction(k));
									this.sortClass.syncTransform(this.sortState, function (a) {
										switch (a) {
										case 1:
											return d.sortedClass;
										case 2:
											return d.reverseSortedClass
										}
										return d.unsortedClass
									});
									this.sortState.bind(this, this.onSortStateChange)
								}
								a.prototype.buildSortingFunction = function (a) {
									return function (b, c) {
										return d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(b.attributes.getAt(a).presentableValue.get(), c.attributes.getAt(a).presentableValue.get())
									}
								};
								a.prototype.buildReverseSortingFunction = function (a) {
									return function (b, c) {
										return d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(c.attributes.getAt(a).presentableValue.get(),
											b.attributes.getAt(a).presentableValue.get())
									}
								};
								a.prototype.buildDateSortingFunction = function (a) {
									return function (b, c) {
										var g = b.attributes.getAt(a).value.get(),
										k = c.attributes.getAt(a).value.get(),
										m = h.FormatUtils.parseDate(g),
										q = h.FormatUtils.parseDate(k),
										s = "Invalid Date" != m;
										return s !== ("Invalid Date" != q) ? s ? -1 : 1 : s ? m.getTime() - q.getTime() : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(g, k)
									}
								};
								a.prototype.buildReverseDateSortingFunction = function (a) {
									return function (b,
										c) {
										var g = c.attributes.getAt(a).value.get(),
										k = b.attributes.getAt(a).value.get(),
										m = h.FormatUtils.parseDate(g),
										q = h.FormatUtils.parseDate(k),
										s = "Invalid Date" != m;
										return s !== ("Invalid Date" != q) ? s ? -1 : 1 : s ? m.getTime() - q.getTime() : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.collator(g, k)
									}
								};
								a.prototype.onSortStateChange = function (a) {
									if (!this._sharedState.ignoreStateChange) {
										if (a < c.SortState.UNSORTED || a > c.SortState.DESCENDING)
											throw Error("Illegal column sort state: " + a);
										if (0 == a) {
											if (this._sharedState.lastSortedColumn != this)
												throw Error("Column sort state out of sync");
											this._sharedState.lastSortedColumn = null;
											this._sharedState.presentableResults.sortingPredicate = null;
											this._sharedState.presentableResults.unsortCollection();
											this.columnDescriptor.set(this.app.getResource(this.libraryId, "language-ui-table-unsorted").format(this.presentableValue.get()))
										} else {
											null != this._sharedState.lastSortedColumn && this._sharedState.lastSortedColumn != this && (this._sharedState.ignoreStateChange =
													!0, this._sharedState.lastSortedColumn.sortState.set(c.SortState.UNSORTED), this._sharedState.ignoreStateChange = !1);
											this._sharedState.lastSortedColumn = this;
											if (a == c.SortState.ASCENDING)
												this._sharedState.presentableResults.sortingPredicate = this._sortingPredicate, this.columnDescriptor.set(this.app.getResource(this.libraryId, "language-ui-table-sorted-ascending").format(this.presentableValue.get()));
											else if (a == c.SortState.DESCENDING)
												this._sharedState.presentableResults.sortingPredicate = this._reverseSortingPredicate,
												this.columnDescriptor.set(this.app.getResource(this.libraryId, "language-ui-table-sorted-descending").format(this.presentableValue.get()));
											else
												throw Error("Invalid column sort state.");
											this._sharedState.presentableResults.sortCollection()
										}
									}
								};
								return a
							}
							();
							c.TableColumnHeaderViewModel = b;
							(function (a) {
								a.manualCollator = function (a, b) {
									return isNaN(a) || isNaN(b) ? a < b ? -1 : a > b ? 1 : 0 : +a - b
								};
								a.collator = "object" == typeof Intl && "function" == typeof Intl.Collator ? (new Intl.Collator(void 0, {
											numeric : !0
										})).compare : d.essentialsHtmlViewer.mapping.infrastructure.results.ResultsAttributeHeaderViewModel.manualCollator;
								var b = function () {
									function a(b, c, d, e) {
										this.lastSortedColumn = null;
										this.presentableResults = b;
										this.unsortedClass = c;
										this.sortedClass = d;
										this.reverseSortedClass = e;
										this.reset()
									}
									a.prototype.reset = function () {
										this.ignoreStateChange = !1;
										this.lastSortedColumn = null
									};
									return a
								}
								();
								a.SharedState = b
							})(b = c.TableColumnHeaderViewModel || (c.TableColumnHeaderViewModel = {}))
						})(g.Table || (g.Table = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function () {
								return function () {}

							}
							();
							c.TableColumnViewModelInterface = b
						})(d.Table || (d.Table = {}))
					})(d.components || (d.components = {}))
				})(d.ui || (d.ui = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments)
								}
								__extends(b, a);
								return b
							}
							(c.TableColumnViewModelInterface);
							c.TableColumnHeaderViewModelInterface = b
						})(d.Table || (d.Table = {}))
					})(d.components || (d.components = {}))
				})(d.ui || (d.ui = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b() {
									a.apply(this, arguments);
									this._pressStartTime = this._longPressTimer = this.tableContainerElement = null;
									this._ignoreMouseEventFlag = this._firedTouchOrPress = !1;
									this._lastTouchY = this._pressYStart = null;
									this._scrollYDeltaThreshold = 35;
									this._firstEvent = null
								}
								__extends(b, a);
								b.prototype.handleColumnHeadClick = function (a, b, c) {
									c.sortState.set((c.sortState.get() + 1) % 3)
								};
								b.prototype.handleMouseDown =
								function (a, b, c) {
									this._beginLongPressIfNoEventsInProgress(c, "mouse-down");
									return !0
								};
								b.prototype.handleMouseUp = function (a, b, c) {
									this._cancelLongPressIfEventInProgress("mouse-down");
									return !0
								};
								b.prototype.handleTouchStart = function (a, b, c) {
									this._beginLongPressIfNoEventsInProgress(c, "touch-start");
									return !0
								};
								b.prototype.handleTouchMove = function (a, b, c) {
									return this.handleTouchEnd(a, b, c)
								};
								b.prototype.handleTouchEnd = function (a, b, c) {
									this._cancelLongPressIfEventInProgress("touch-start");
									return !0
								};
								b.prototype.handleClick =
								function (a, b, c) {
									var d = this;
									this.viewModel && this.viewModel.recordClickEvents.length && this.viewModel.recordClickEvents.forEach(function (a) {
										return d.app.event(a).publish(c)
									});
									return !0
								};
								b.prototype.handleClickAttributelink = function (a, b, c) {
									return this.app.followNavigationLink({
										url : c.value.get(),
										element : b
									})
								};
								b.prototype._beginLongPressIfNoEventsInProgress = function (a, b) {
									this._firstEvent || (this._firstEvent = b, this._beginLongPress(a))
								};
								b.prototype._cancelLongPressIfEventInProgress = function (a) {
									this._firstEvent ===
									a && (this._firstEvent = null, this._cancelLongPress())
								};
								b.prototype._beginLongPress = function (a) {
									var b = this;
									this._cancelLongPress();
									this.viewModel && this.viewModel.recordLongPressEvents.length && (this._longPressTimer = setTimeout(function () {
												b.viewModel.recordLongPressEvents.forEach(function (c) {
													b.app.event(c).publish(a)
												}, b.viewModel.recordLongPressDuration || 1E3)
											}))
								};
								b.prototype._cancelLongPress = function () {
									this._longPressTimer && (clearTimeout(this._longPressTimer), this._longPressTimer = null)
								};
								return b
							}
							(d.framework.ui.ViewBase);
							c.TableView = b
						})(g.Table || (g.Table = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						(function (c) {
							var b = function (a) {
								function b(c, d) {
									a.call(this, c, d);
									this.columnHeaders = new ObservableCollection([]);
									this.records = new ObservableCollection([]);
									this.presentableRecordCollection = null;
									this.recordClickEvents = [];
									this.recordLongPressEvents = [];
									this.recordLongPressDuration = 1E3
								}
								__extends(b, a);
								b.prototype.attachToPresentableCollection = function (a) {
									a && a instanceof d.framework.ui.PresentableCollection && (this.presentableRecordCollection =
											a, this.records = this.presentableRecordCollection.items)
								};
								b.prototype.addRecordClickEvents = function (a) {
									this._executeAddEvents(a, 0)
								};
								b.prototype.addRecordLongPressEvents = function (a) {
									this._executeAddEvents(a, 1)
								};
								b.prototype._executeAddEvents = function (a, b) {
									var c = this,
									d = function (a) {
										a && "string" === typeof a && (0 === b ? (c.recordClickEvents = c.recordClickEvents.filter(function (b) {
														return b !== a
													}), c.recordClickEvents.push(a)) : 1 === b && (c.recordLongPressEvents = c.recordLongPressEvents.filter(function (b) {
														return b !== a
													}),
												c.recordLongPressEvents.push(a)))
									};
									a && dojo.isArray(a) ? a.forEach(function (a) {
										return d(a)
									}) : d(a)
								};
								return b
							}
							(d.framework.ui.ViewModelBase);
							c.TableViewModel = b
						})(g.Table || (g.Table = {}))
					})(g.components || (g.components = {}))
				})(h.ui || (h.ui = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a, c) {
							void 0 === a && (a = "[anonymous]");
							void 0 === c && (c = {});
							if (!b)
								throw Error("Transaction manager is required");
							this.owner = b;
							this.displayName = a;
							this.state = c;
							this.transactionStatus = d.TransactionStatus.PENDING;
							this.changes = []
						}
						c.prototype.isTopLevel = function () {
							return !this.parentTransaction
						};
						c.prototype.isComplete = function () {
							return this.isCommitted() || this.isAborted()
						};
						c.prototype.isAborted = function () {
							return this.transactionStatus ==
							d.TransactionStatus.ABORTED
						};
						c.prototype.isCommitted = function () {
							return this.transactionStatus == d.TransactionStatus.COMMITTED
						};
						c.prototype.add = function (b, a, d) {
							void 0 === d && (d = {});
							a && !this.isComplete() && (b = a instanceof c ? a : this._wrapInTransaction(b, a, d), this.changes.push(b))
						};
						c.prototype._wrapInTransaction = function (b, a, e) {
							void 0 === e && (e = {});
							a.state = a.state || e;
							b = new c(this.owner, b);
							b.transactionStatus = d.TransactionStatus.PENDING;
							b.parentTransaction = this;
							b.changes.push(a);
							return b
						};
						c.prototype.hasChanges =
						function () {
							return 0 < this.changes.length
						};
						c.prototype.commit = function () {
							return this.owner.commitTransaction(this)
						};
						c.prototype.rollback = function () {
							return this.owner.rollbackTransaction(this)
						};
						c.prototype.performUndo = function (b, a) {
							var c = this;
							return this.hasChanges() ? Promise.reduce(this.changes.slice().reverse(), function (a, b) {
								if (b)
									return b.performUndo(b.state, c)
							}, null) : Promise.resolve()
						};
						c.prototype.performRedo = function (b, a) {
							var c = this;
							return this.hasChanges() ? Promise.reduce(this.changes, function (a,
									b) {
								if (b)
									return b.performRedo(b.state, c)
							}, null) : Promise.resolve()
						};
						return c
					}
					();
					d.UndoTransaction = h
				})(d.undo || (d.undo = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					function k(a) {
						var b = "";
						if (!a)
							return b;
						for (var c = a.keys(), d = 0; d < c.length; d++)
							0 < b.length && (b += "&"), b += "{0}={1}".format(c[d], a.get(c[d]));
						return "{0}{1}".format(0 < b.length ? "?" : "", b)
					}
					function c(a) {
						var b = new d.Dictionary;
						if (!a)
							return b;
						a.startsWith("?") && (a = a.slice(1));
						a.split(/[&;]/g).forEach(function (a) {
							a && (a = a.split("=", 2), b.set(a[0], a[1]))
						});
						return b
					}
					function b(a) {
						var b = document.createElement("a");
						b.href = a;
						return b
					}
					g.queryStringDictionaryToString =
						k;
					g.queryStringToDictionary = c;
					g.parseUrl = b;
					g.addQueryParameter = function (a, d, f) {
						a = b(a);
						var g = c(a.search);
						g.set(d, f);
						a.search = k(g);
						return a.toString()
					};
					g.removeQueryParameter = function (a, d) {
						var f = b(a),
						g = c(f.search);
						g.remove(d);
						f.search = k(g);
						return f.toString()
					};
					g.getFolder = function (a) {
						a = "string" === typeof a ? b(a) : dojo.clone(a);
						var c = null == a.pathname ? "" : a.pathname;
						if (null == c)
							return a;
						var d = c.split("/");
						0 <= d[d.length - 1].indexOf(".") && (d.pop(), a.pathname = d.join("/"));
						a.pathname.endsWith("/") || (a.pathname =
								c + "/");
						a.search = "";
						a.hash = "";
						return a
					}
				})(d.UrlUtils || (d.UrlUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c() {}

						c.prototype.validate = function (b, a) {
							var c = a && !!a.invalidNumbersAsNaN,
							f = h.FormatUtils.parseNumber(b);
							return d.framework.utils.isNullOrUndefined(b) ? Promise.resolve({
								validatedValue : b
							}) : isNaN(f) && !c ? Promise.reject(Error("Invalid number.")) : Promise.resolve({
								validatedValue : f
							})
						};
						return c
					}
					();
					g.NumberValidator = k
				})(h.validation || (h.validation = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function () {
						function c(b) {
							void 0 === b && (b = {});
							this._tokenLeft = "{";
							this._tokenRight = "}";
							this._tokenLeftEscaped = "\\{";
							this._tokenRightEscaped = "\\}";
							b.contentPolicy && (this._contentPolicy = b.contentPolicy)
						}
						c.prototype.validate = function (b, a) {
							var c = this;
							void 0 === a && (a = {
									XssHtmlValidator : {}

								});
							var d = {
								html : b,
								uris : [],
								contentPolicy : this._contentPolicy || a.XssHtmlValidator.defaultContentPolicy
							};
							if (!d.contentPolicy)
								throw Error("XssHtmlValidator cannot perform validation without a ContentPolicy instance.");
							var g = a.sanitizeOptions;
							return Promise.resolve(d).then(function (a) {
								return c._escape(a)
							}).then(function (a) {
								return c._sanitize(a, g)
							}).then(function (a) {
								return c._runUrisThroughContentPolicy(a)
							}).then(function (a) {
								return c._applyUris(a)
							}).then(function (a) {
								return c._unescape(a)
							}).then(function (a) {
								return {
									validatedValue : a.html
								}
							})
						};
						c.prototype._escape = function (b) {
							b.html = b.html.split(this._tokenLeft).join(this._tokenLeftEscaped);
							b.html = b.html.split(this._tokenRight).join(this._tokenRightEscaped);
							return b
						};
						c.prototype._sanitize = function (b, a) {
							var c = this;
							void 0 === a && (a = {});
							var f = a ? a.uriTransformer : null;
							a.uriTransformer = function (g, k) {
								f && (g = f(g, k), k.uri = g);
								if (a.allowArbitraryHyperlinks && k.type === d.FilterUtils.UriType.NavigableLink)
									return g;
								b.uris.push(k);
								return c._tokenize(b.uris.length - 1)
							};
							b.html = d.FilterUtils.sanitize(b.html, a);
							return b
						};
						c.prototype._runUrisThroughContentPolicy = function (b) {
							return this._contentPolicy.screenUris(b.uris).then(function (a) {
								return b
							})
						};
						c.prototype._applyUris = function (b) {
							var a =
								this;
							b.uris.forEach(function (c, d) {
								var g = a._tokenize(d);
								b.html = b.html.replace(g, c.uri)
							});
							return b
						};
						c.prototype._unescape = function (b) {
							b.html = b.html.split(this._tokenLeftEscaped).join(this._tokenLeft);
							b.html = b.html.split(this._tokenRightEscaped).join(this._tokenRight);
							return b
						};
						c.prototype._tokenize = function (b) {
							return this._tokenLeft + b.toString() + this._tokenRight
						};
						return c
					}
					();
					g.XssHtmlValidator = k
				})(d.validation || (d.validation = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function () {
						function c(b) {
							if (!b)
								throw Error('Argument "app" is required.');
							this.app = b;
							this._initializeAllowedUrls()
						}
						c.prototype.validate = function (b, a) {
							var c = this;
							return b ? "string" !== typeof b ? Promise.reject(Error("Input is not a URL.")) : this._initializeAllowedUrls().then(function () {
								var a = h.UrlUtils.parseUrl(d.essentials.RestHelper.processClientSideTokens(c.app.site, b));
								if (c._allowedUrls.some(function (b) {
										return c._isMatch(b, a)
									}))
									return Promise.resolve({
										validatedValue : b
									});
								var g = "The following URL is not defined by this Essentials site and will be skipped: {0}".format(b);
								return Promise.reject(g)
							}) : Promise.resolve({
								validatedValue : b
							})
						};
						c.prototype.tryValidateSynchronously = function (b) {
							var a = this;
							if (!this._allowedUrls)
								return !1;
							var c = h.UrlUtils.parseUrl(d.essentials.RestHelper.processClientSideTokens(this.app.site, b));
							return this._allowedUrls.some(function (b) {
								return a._isMatch(b, c)
							})
						};
						c.prototype._isMatch = function (b, a) {
							if ("mailto:" === a.protocol)
								return !0;
							if (!a.pathname)
								return !1;
							var c = a.pathname.replace(/[\?#]+$/, ""),
							d = b.pathname.replace(/[\?#]+$/, "");
							return a.host == b.host && a.protocol == b.protocol && a.pathname && (c.startsWith(d) || c + "/" === d)
						};
						c.prototype._initializeAllowedUrls = function () {
							var b = this;
							return this._allowedUrls ? Promise.resolve() : this.app.waitUntilSiteInitialized().then(function () {
								var a = b.app.site;
								b._allowedUrls = [];
								b._allowUrl(a.url);
								b._allowUrl("http://localhost:8181");
								b._allowUrl("http://127.0.0.1:8181");
								a.properties.trustedUrls && a.properties.trustedUrls.split(",").forEach(function (a) {
									b._allowUrl(a)
								});
								a.essentialsMap && a.essentialsMap.mapServices.filter(function (a) {
									return !a.isUserCreated
								}).forEach(function (a) {
									b._allowUrl(a.serviceUrl);
									b._allowUrl(a.tileRestUrl);
									b._allowUrl(a.mapUrl);
									b._allowUrl(a.iconUri);
									(a.layerHyperlinks || []).forEach(function (a) {
										b._allowUrl(a.uri);
										b._allowUrl(a.iconUri)
									});
									(a.layers || []).forEach(function (a) {
										b._allowUrl(a.getLayerUrl());
										b._allowUrl(a.legendUrl);
										b._allowUrl(a.iconUri);
										(a.featureHyperlinks || []).forEach(function (a) {
											b._allowUrl(a.uri);
											b._allowUrl(a.iconUri)
										});
										(a.layerHyperlinks ||
											[]).forEach(function (a) {
											b._allowUrl(a.uri);
											b._allowUrl(a.iconUri)
										});
										b._extractUrls(a.featureLabel).forEach(function (a) {
											return b._allowUrl(a)
										});
										b._extractUrls(a.featureDescription).forEach(function (a) {
											return b._allowUrl(a)
										});
										b._extractUrls(a.featureLongDescription).forEach(function (a) {
											return b._allowUrl(a)
										})
									})
								})
							})
						};
						c.prototype._allowUrl = function (b) {
							if (b)
								try {
									this._allowedUrls.push(h.UrlUtils.getFolder(b))
								} catch (a) {}

						};
						c.prototype._extractUrls = function (b) {
							return b ? (b.match(/(https?:\/\/[A-Za-z0-9\-\._~:\/\?#[\]@!\$&'()*\+,;=%]+)/g) ||
								[]).map(function (a) {
								return 0 <= a.indexOf("{") ? a.slice(0, a.indexOf("{")) : a
							}) : []
						};
						return c
					}
					();
					g.SiteUrlValidator = k
				})(h.validation || (h.validation = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					d.getFeatureHeatMap = function (d) {
						return d && d.mapService ? (d.includeInLegend && d.mapService.heatMap && (d.mapService.heatMap.includeInLegend = d.includeInLegend), d.mapService.heatMap) : null
					};
					d.getHeatMapRenderer = function (d) {
						if (!d || !d.mapService || !d.mapService.serviceLayer)
							return null;
						d = d.mapService.serviceLayer.renderer;
						return d instanceof esri.renderer.HeatmapRenderer ? d : null
					}
				})(d.VisualizationUtils || (d.VisualizationUtils = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this.currentLayer = new Observable(null);
							this.isEnabled = new Observable(!1);
							this.isSupported = new Observable(!1);
							this.app = b;
							this.libraryId = a;
							this.currentLayer.bind(this, this.handleCurrentLayerChanged)
						}
						c.prototype.initialize = function (b) {
							b.viewId && (this.viewId = b.viewId);
							b.displayName && (this.displayName = b.displayName)
						};
						c.prototype.canSupport = function (b) {
							return !1
						};
						c.prototype.handleCurrentLayerChanged = function (b) {
							throw Error("Not implemented");
						};
						c.prototype.handleActivate = function () {
							throw Error("Not implemented");
						};
						c.prototype.handleApply = function () {
							throw Error("Not implemented");
						};
						return c
					}
					();
					d.VisualizationProviderBase = h
				})(d.visualization || (d.visualization = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						function c(a) {
							return a.split(e)
						}
						var b = null,
						a = {},
						e = /\r\n|\r|\n/g;
						d.getLabelSize = function (d, g, h, k) {
							for (var m = !0, q = null, s = (e.test(d) ? d.match(e).length : 0) + 1, w = c(d), t = 0, y = 0; w && y < w.length; y++) {
								for (var u = d.length, x = 0, B = 0; B < u; B++) {
									var v = w[y].charAt(B),
									v = " " === v ? "." : v;
									if (!a.hasOwnProperty(v)) {
										m ? (m = document.getElementById(k + "_layer"), q = document.createElementNS("http://www.w3.org/2000/svg", "text"), q.setAttributeNS(null, "font-size",
												h), q.setAttributeNS(null, "font-family", g), q.setAttributeNS(null, "visibility", "hidden"), q.textContent = v, m.appendChild(q), m = !1) : q.textContent = v;
										var z = q.getBBox();
										b = null === b ? z.height : b;
										a[v] = q.getComputedTextLength()
									}
									v = a[v];
									x += v
								}
								x > t && (t = x)
							}
							return {
								width : Math.ceil(t),
								height : Math.ceil(b * s)
							}
						};
						d.getTextLines = c;
						d.generateSvgHighlightLabelPath = function (a, b, c, d, e) {
							void 0 === d && (d = !1);
							void 0 === e && (e = a / 5);
							var g = "",
							g = 0 === c ? "M1,0h" + a + "v" + b : "M1,0h" + (a - c) + "a" + c + "," + c + " 0 0 1 " + c + "," + c + "v" + (b - 2 * c) + "a" + c + "," + c + " 0 0 1 " +
								-c + "," + c,
							g = d ? g + ("h" + (c - (a - e)) / 2 + "l" +  - (e / 2) + "," + e / 2 + "l" +  - (e / 2) + "," +  - (e / 2) + "h" + (c - (a - e)) / 2) : g + ("h" + (c - a));
							return 0 === c ? g + "z" : g + ("a" + c + "," + c + " 0 0 1 " + -c + "," + -c + "v" + (2 * c - b) + "a" + c + "," + c + " 0 0 1 " + c + "," + -c + "z")
						};
						d.generateSvgCirclePath = function (a) {
							if (!a)
								throw Error("HighlightLabelUtils: Cannot generate SVG circle path. Radius cannot be zero or undefined.");
							return "M0,0a" + a + "," + a + " 0 0 1 " + a + "," + a + "a" + a + "," + a + " 0 0 1 " + -a + "," + a + "a" + a + "," + a + " 0 0 1 " + -a + "," + -a + "a" + a + "," + a + " 0 0 1 " + a + "," + -a + "z"
						}
					})(d.HighlightedLabelUtils ||
						(d.HighlightedLabelUtils = {}))
				})(d.highlightedLabel || (d.highlightedLabel = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.webMap || (d.webMap = {});
	d = d.BaseMapType || (d.BaseMapType = {});
	d.OPEN_STREET_MAP = "OpenStreetMap";
	d.BING_AERIAL = "BingMapsAerial";
	d.BING_ROAD = "BingMapsRoad";
	d.BING_HYBRID = "BingMapsHybrid";
	d.WEB_TILED = "WebTiledLayer"
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.webMap || (d.webMap = {});
	d = d.OperationalLayerType || (d.OperationalLayerType = {});
	d.CSV = "CSV";
	d.WMS = "WMS";
	d.KML = "KML"
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						d.SIMPLE = "simple";
						d.UNIQUE_VALUE = "uniqueValue";
						d.CLASS_BREAKS = "classBreaks";
						d.HEATMAP = "heatmap"
					})(d.RendererType || (d.RendererType = {}));
					(function (d) {
						d.BY_FIELD = "esriNormalizeByField";
						d.BY_LOG = "esriNormalizeByLog";
						d.BY_PERCENT_OF_TOTAL = "esriNormalizeByPercentOfTotal"
					})(d.NormalizationType || (d.NormalizationType = {}));
					(function (d) {
						d.NATURAL_BREAKS = "esriClassifyNaturalBreaks";
						d.EQUAL_INTERVAL = "esriClassifyEqualInterval";
						d.QUANTILE =
							"esriClassifyQuantile";
						d.STANDARD_DEVIATION = "esriClassifyStandardDeviation";
						d.GEOMETRICAL_INTERVAL = "esriClassifyGeometricalInterval"
					})(d.ClassificationMethod || (d.ClassificationMethod = {}))
				})(d.webMap || (d.webMap = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	d = d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {});
	d = d.mapping || (d.mapping = {});
	d = d.infrastructure || (d.infrastructure = {});
	d = d.webMap || (d.webMap = {});
	d = d.DomainType || (d.DomainType = {});
	d.INHERITED = "inherited";
	d.RANGE = "range";
	d.CODED_VALUE = "codedValue"
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (d) {
						d.POINT = "esriGeometryPoint";
						d.MULTIPOINT = "esriGeometryMultipoint";
						d.POLYLINE = "esriGeometryPolyline";
						d.POLYGON = "esriGeometryPolygon";
						d.EXTENT = "esriGeometryEnvelope";
						d.fromEsriGeometryType = function (c) {
							if (c) {
								if (c.startsWith("esriGeometry"))
									return c;
								switch (c) {
								case "point":
									return d.POINT;
								case "multipoint":
									return d.MULTIPOINT;
								case "polyline":
									return d.POLYLINE;
								case "polygon":
									return d.POLYGON;
								case "extent":
									return d.EXTENT;
								default:
									throw Error("GeometryType.fromEsriGeometryType: Unrecognized geometry type.");
								}
							}
						}
					})(d.GeometryType || (d.GeometryType = {}))
				})(d.webMap || (d.webMap = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = "__conversionType",
					c = function () {
						function b(a) {
							var b = this;
							this._numberValidator = new d.validation.NumberValidator;
							this.object = function (a) {
								if (!a || "object" !== typeof a)
									return !0;
								if (Array.isArray(a))
									return {
										item : b.object
									};
								switch (a[k]) {
								case g.ConversionType.GCX_MAP_SERVICE:
								case g.ConversionType.ESRI_LAYER:
									return b.serviceLayer;
								case g.ConversionType.GCX_LAYER:
									return b.layer;
								case g.ConversionType.GCX_FEATURE_SET:
								case g.ConversionType.ESRI_FEATURE_SET:
									return b.featureSet;
								case g.ConversionType.GCX_FEATURE:
								case g.ConversionType.ESRI_GRAPHIC:
									return b.feature;
								case g.ConversionType.ESRI_GEOMETRY:
									return b.geometry;
								case g.ConversionType.ESRI_SYMBOL:
									return b.symbol;
								case g.ConversionType.ESRI_RENDERER:
									return b.renderer;
								case g.ConversionType.ESRI_SPATIAL_REFERENCE:
									return b.spatialReference
								}
								var c = {},
								d = 0;
								for (a = Object.keys(a); d < a.length; d++)
									c[a[d]] = b.object;
								return c
							};
							this.app = a;
							this._urlValidator = new d.validation.SiteUrlValidator(a)
						}
						Object.defineProperty(b.prototype, "baseMap", {
							get : function () {
								this._baseMap || (this._baseMap = {
										baseMapLayers : {
											item : this.baseMapLayer
										},
										title : !0
									});
								return this._baseMap
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "baseMapLayer", {
							get : function () {
								this._baseMapLayer || (this._baseMapLayer = $.extend({}, this._serviceLayerCommon, {
											type : !0,
											isReference : !0,
											templateUrl : this._urlValidator
										}), this._baseMapLayer[k] = !0);
								return this._baseMapLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "bookmark", {
							get : function () {
								this._bookmark ||
								(this._bookmark = {
										name : !0,
										extent : this.extent
									});
								return this._bookmark
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "color", {
							get : function () {
								this._color || (this._color = {
										item : this._numberValidator
									});
								return this._color
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "csvLayer", {
							get : function () {
								this._csvLayer || (this._csvLayer = $.extend({}, this.operationalLayer, {
											columnDelimiter : !0,
											locationInfo : this.locationInfo
										}));
								return this._csvLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "domain", {
							get : function () {
								var a = this;
								this._domain || (this._domain = function (b) {
									if (!b)
										return !1;
									switch (b.type) {
									case g.DomainType.INHERITED:
										return a.inheritedDomain;
									case g.DomainType.RANGE:
										return a.rangeDomain;
									case g.DomainType.CODED_VALUE:
										return a.codedValueDomain;
									default:
										return !1
									}
								});
								return this._domain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "inheritedDomain", {
							get : function () {
								this._inheritedDomain || (this._inheritedDomain = {
										type : !0
									});
								return this._inheritedDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "rangeDomain", {
							get : function () {
								this._rangeDomain || (this._rangeDomain = {
										type : !0,
										name : !0,
										range : {
											item : this._numberValidator
										}
									});
								return this._rangeDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "codedValueDomain", {
							get : function () {
								this._codedValueDomain || (this._codedValueDomain = {
										type : !0,
										name : !0,
										codedValues : {
											item : {
												name : !0,
												code : !0
											}
										}
									});
								return this._codedValueDomain
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype,
							"drawingInfo", {
							get : function () {
								this._drawingInfo || (this._drawingInfo = {
										renderer : this.renderer,
										fixedSymbols : !0
									});
								return this._drawingInfo
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "feature", {
							get : function () {
								this._feature || (this._feature = {
										attributes : this.object,
										geometry : this.geometry
									}, this._feature[k] = !0);
								return this._feature
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "featureCollection", {
							get : function () {
								this._featureCollection || (this._featureCollection = {
										layers : {
											item : this.layer
										},
										showLegend : !0
									});
								return this._featureCollection
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "featureSet", {
							get : function () {
								this._featureSet || (this._featureSet = {
										features : {
											item : this.feature
										},
										geometryType : !0
									}, this._featureSet[k] = !0);
								return this._featureSet
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "field", {
							get : function () {
								this._field || (this._field = {
										alias : !0,
										domain : this.domain,
										editable : !0,
										length : !0,
										name : !0,
										nullable : !0,
										type : !0
									});
								return this._field
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "geometry", {
							get : function () {
								var a = this;
								this._geometry || (this._geometry = function (b) {
									return b ? b.hasOwnProperty("x") ? a.point : b.hasOwnProperty("points") ? a.multiPoint : b.hasOwnProperty("paths") ? a.polyline : b.hasOwnProperty("rings") ? a.polygon : b.hasOwnProperty("xmin") ? a.extent : !1 : !1
								});
								return this._geometry
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "point", {
							get : function () {
								this._point || (this._point = {
										spatialReference : this.spatialReference,
										x : this._numberValidator,
										y : this._numberValidator,
										z : this._numberValidator,
										m : this._numberValidator
									}, this._point[k] = !0);
								return this._point
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "multiPoint", {
							get : function () {
								this._multipoint || (this._multipoint = {
										spatialReference : this.spatialReference,
										hasM : !0,
										hasZ : !0,
										points : {
											item : {
												item : this._numberValidator
											}
										}
									}, this._multipoint[k] = !0);
								return this._multipoint
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "polyline", {
							get : function () {
								this._polyline ||
								(this._polyline = {
										spatialReference : this.spatialReference,
										hasM : !0,
										hasZ : !0,
										paths : {
											item : {
												item : {
													item : this._numberValidator
												}
											}
										}
									}, this._polyline[k] = !0);
								return this._polyline
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "polygon", {
							get : function () {
								this._polygon || (this._polygon = {
										spatialReference : this.spatialReference,
										hasM : !0,
										hasZ : !0,
										rings : {
											item : {
												item : {
													item : this._numberValidator
												}
											}
										}
									}, this._polygon[k] = !0);
								return this._polygon
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype,
							"extent", {
							get : function () {
								this._extent || (this._extent = {
										spatialReference : this.spatialReference,
										xmin : this._numberValidator,
										xmax : this._numberValidator,
										ymin : this._numberValidator,
										ymax : this._numberValidator,
										zmin : this._numberValidator,
										zmax : this._numberValidator,
										mmin : this._numberValidator,
										mmax : this._numberValidator
									}, this._extent[k]);
								return this._extent
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "layer", {
							get : function () {
								this._layer || (this._layer = {
										featureSet : this.featureSet,
										id : !0,
										layerDefinition : this.layerDefinition,
										layerUrl : this._urlValidator,
										legendUrl : this._urlValidator,
										name : !0,
										title : !0,
										popupInfo : this.popupInfo
									}, this._layer[k] = !0);
								return this._layer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "layerDefinition", {
							get : function () {
								this._layerDefinition || (this._layerDefinition = {
										definitionExpression : !0,
										displayField : !0,
										drawingInfo : this.drawingInfo,
										fields : {
											item : this.field
										},
										geometryType : !0,
										hasAttachments : !0,
										maxScale : this._numberValidator,
										minScale : this._numberValidator,
										name : !0,
										objectIdField : !0,
										templates : {
											item : this.template
										},
										type : !0,
										typeIdField : !0,
										types : {
											item : this.type
										},
										source : {
											type : !0,
											mapLayerId : this._numberValidator
										}
									});
								return this._layerDefinition
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "locationInfo", {
							get : function () {
								this._locationInfo || (this._locationInfo = {
										locationType : !0,
										latitudeFieldName : !0,
										longitudeFieldName : !0
									});
								return this._locationInfo
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "operationalLayer", {
							get : function () {
								this._operationalLayer ||
								(this._operationalLayer = $.extend({}, this._serviceLayerCommon, {
											type : !0,
											capabilities : !0,
											featureCollection : this.featureCollection,
											itemId : !0,
											layerDefinition : this.layerDefinition,
											layers : {
												item : this.layer
											},
											maxScale : this._numberValidator,
											minScale : this._numberValidator,
											mode : this._numberValidator,
											popupInfo : this.popupInfo,
											title : !0,
											visibleLayers : {
												item : !0
											}
										}), this._operationalLayer[k] = !0);
								return this._operationalLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "popupInfo", {
							get : function () {
								return {}

							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "renderer", {
							get : function () {
								var a = this;
								this._renderer || (this._renderer = function (b) {
									if (!b)
										return !1;
									switch (b.type) {
									case g.RendererType.SIMPLE:
										return a.simpleRenderer;
									case g.RendererType.UNIQUE_VALUE:
										return a.uniqueValueRenderer;
									case g.RendererType.CLASS_BREAKS:
										return a.classBreaksRenderer;
									case g.RendererType.HEATMAP:
										return a.heatmapRenderer;
									default:
										return !1
									}
								});
								return this._renderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype,
							"serviceLayer", {
							get : function () {
								this._serviceLayer || (this._serviceLayer = $.extend({}, this.operationalLayer, this.wmsLayer, this.csvLayer, this.baseMapLayer));
								return this._serviceLayer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "simpleRenderer", {
							get : function () {
								this._simpleRenderer || (this._simpleRenderer = {
										type : !0,
										symbol : this.symbol,
										label : !0,
										description : !0
									}, this._simpleRenderer[k] = !0);
								return this._simpleRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "uniqueValueRenderer", {
							get : function () {
								this._uniqueValueRenderer || (this._uniqueValueRenderer = {
										type : !0,
										field1 : !0,
										field2 : !0,
										field3 : !0,
										fieldDelimiter : !0,
										defaultSymbol : this.symbol,
										defaultLabel : !0,
										uniqueValueInfos : {
											item : {
												value : !0,
												label : !0,
												description : !0,
												symbol : this.symbol
											}
										}
									}, this._uniqueValueRenderer[k] = !0);
								return this._uniqueValueRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "classBreaksRenderer", {
							get : function () {
								this._classBreaksRenderer || (this._classBreaksRenderer = {
										type : !0,
										field : !0,
										classificationMethod : !0,
										normalizationType : !0,
										normalizationField : !0,
										normalizationTotal : this._numberValidator,
										defaultSymbol : this.symbol,
										defaultLabel : !0,
										backgroundFillSymbol : this.simpleFillSymbol,
										minValue : this._numberValidator,
										classBreakInfos : {
											item : {
												classMinValue : this._numberValidator,
												classMaxValue : this._numberValidator,
												label : !0,
												description : !0,
												symbol : this.symbol
											}
										}
									}, this._classBreaksRenderer[k] = !0);
								return this._classBreaksRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "heatmapRenderer", {
							get : function () {
								this._heatmapRenderer ||
								(this._heatmapRenderer = {
										type : !0,
										blurRadius : this._numberValidator,
										field : !0,
										maxPixelIntensity : this._numberValidator,
										minPixelIntensity : this._numberValidator,
										colorStops : {
											item : {
												ratio : !0,
												color : this.color
											}
										}
									});
								return this._heatmapRenderer
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "_serviceLayerCommon", {
							get : function () {
								return {
									id : !0,
									url : this._urlValidator,
									visibility : !0,
									opacity : this._numberValidator,
									layerType : !0
								}
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "spatialReference", {
							get : function () {
								this._spatialReference || (this._spatialReference = {
										wkid : this._numberValidator,
										wkt : !0
									}, this._spatialReference[k] = !0);
								return this._spatialReference
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "symbol", {
							get : function () {
								var a = this;
								this._symbol || (this._symbol = function (b) {
									if (!b)
										return !1;
									switch (b.type) {
									case g.SymbolType.SIMPLE_MARKER:
										return a.simpleMarkerSymbol;
									case g.SymbolType.SIMPLE_LINE:
										return a.simpleLineSymbol;
									case g.SymbolType.SIMPLE_FILL:
										return a.simpleFillSymbol;
									case g.SymbolType.PICTURE_MARKER:
										return a.pictureMarkerSymbol;
									case g.SymbolType.PICTURE_FILL:
										return a.pictureFillSymbol;
									case g.SymbolType.TEXT:
										return a.textSymbol;
									default:
										return !1
									}
								});
								return this._symbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "simpleMarkerSymbol", {
							get : function () {
								this._simpleMarkerSymbol || (this._simpleMarkerSymbol = {
										type : !0,
										style : !0,
										color : this.color,
										size : !0,
										angle : this._numberValidator,
										path : !0,
										xoffset : this._numberValidator,
										yoffset : this._numberValidator,
										outline : {
											type : !0,
											style : !0,
											color : this.color,
											width : this._numberValidator
										}
									}, this._simpleMarkerSymbol[k] = !0);
								return this._simpleMarkerSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "simpleLineSymbol", {
							get : function () {
								this._simpleLineSymbol || (this._simpleLineSymbol = {
										type : !0,
										style : !0,
										color : this.color,
										width : this._numberValidator
									}, this._simpleLineSymbol[k] = !0);
								return this._simpleLineSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "simpleFillSymbol", {
							get : function () {
								this._simpleFillSymbol ||
								(this._simpleFillSymbol = {
										type : !0,
										style : !0,
										color : this.color,
										outline : this.simpleLineSymbol
									}, this._simpleFillSymbol[k] = !0);
								return this._simpleFillSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "pictureMarkerSymbol", {
							get : function () {
								this._pictureMarkerSymbol || (this._pictureMarkerSymbol = {
										type : !0,
										url : this._urlValidator,
										imageData : !0,
										contentType : !0,
										width : this._numberValidator,
										height : this._numberValidator,
										angle : this._numberValidator,
										xoffset : this._numberValidator,
										yoffset : this._numberValidator
									},
									this._pictureMarkerSymbol[k] = !0);
								return this._pictureMarkerSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "pictureFillSymbol", {
							get : function () {
								this._pictureFillSymbol || (this._pictureFillSymbol = {
										type : !0,
										url : this._urlValidator,
										imageData : !0,
										contentType : !0,
										outline : this.simpleLineSymbol,
										width : this._numberValidator,
										height : this._numberValidator,
										angle : this._numberValidator,
										xoffset : this._numberValidator,
										yoffset : this._numberValidator,
										xscale : this._numberValidator,
										yscale : this._numberValidator
									},
									this._pictureFillSymbol[k] = !0);
								return this._pictureFillSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "textSymbol", {
							get : function () {
								this._textSymbol || (this._textSymbol = {
										type : !0,
										color : this.color,
										backgroundColor : this.color,
										borderLineSize : this._numberValidator,
										borderLineColor : this.color,
										haloSize : this._numberValidator,
										haloColor : this.color,
										verticalAlignment : !0,
										horizontalAlignment : !0,
										rightToLeft : !0,
										angle : this._numberValidator,
										xoffset : this._numberValidator,
										yoffset : this._numberValidator,
										kerning : !0,
										font : {
											family : !0,
											size : this._numberValidator,
											style : !0,
											weight : !0,
											decoration : !0
										},
										text : !0
									}, this._textSymbol[k] = !0);
								return this._textSymbol
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "template", {
							get : function () {
								this._template || (this._template = {
										description : !0,
										drawingTool : !0,
										name : !0,
										prototype : this.feature
									});
								return this._template
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "type", {
							get : function () {
								var a = this;
								this._type || (this._type = {
										domains : function (b) {
											if (!b)
												return !0;
											var c = {},
											d = 0;
											for (b = Object.keys(b); d < b.length; d++)
												c[b[d]] = a.domain;
											return c
										},
										id : this._numberValidator,
										name : !0,
										templates : {
											item : this.template
										}
									});
								return this._type
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype, "webMap", {
							get : function () {
								this._webMap || (this._webMap = {
										operationalLayers : {
											item : this.operationalLayer
										},
										baseMap : this.baseMap,
										bookmarks : {
											item : this.bookmark
										},
										version : !0,
										applicationProperties : !0
									});
								return this._webMap
							},
							enumerable : !0,
							configurable : !0
						});
						Object.defineProperty(b.prototype,
							"wmsLayer", {
							get : function () {
								this.wmsLayer || (this._wmsLayer = $.extend({}, this.operationalLayer, {
											copyright : !0,
											extent : this.extent,
											format : !0,
											mapUrl : this._urlValidator,
											maxHeight : this._numberValidator,
											maxWidth : this._numberValidator,
											spatialReferences : {
												item : this._numberValidator
											},
											version : !0
										}));
								return this._wmsLayer
							},
							enumerable : !0,
							configurable : !0
						});
						return b
					}
					();
					g.WebMapFilter = c
				})(d.webMap || (d.webMap = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = function () {
						function c(b) {
							if (!b)
								throw Error("ProjectManager: Parameter 'app' is required.");
							this.app = b;
							this.convert = new g.WebMapConverter(b);
							this.filter = new g.WebMapFilter(b)
						}
						c.prototype.create = function () {
							var b = this;
							if (!this.app.site || !this.app.site.isInitialized)
								throw Error("WebMapConverter.fromCurrentMap: The Essentials site for this application is missing or not yet initialized.");
							this.convert.clearCache();
							var a = this.app.site.essentialsMap,
							c = function (a, b) {
								console.warn('Unable to convert map service "{0}" to web map format: {1}'.format(a.displayName, b))
							},
							f = a.mapServices.filter(function (a) {
									return a.mapServiceFunction === d.essentials.MapServiceFunction.OPERATIONAL
								}).reverse(),
							g = k.infrastructure.ArrayUtils.mapWithErrorCallback(f, function (a) {
									return b.convert.fromGcxMapService(a)
								}, c);
							h.GraphicUtils.getUserGraphicsLayers(this.app).filter(function (a) {
								return 0 < a.graphics.length
							}).forEach(function (a) {
								try {
									g.push(b.convert.fromEsriLayer(a))
								} catch (c) {
									console.warn('Unable to convert graphics layer "{0}" to web map format: {1}'.format(a.id,
											c))
								}
							});
							var m = a.mapServices.filter(function (a) {
									return a.isVisible() && a.mapServiceFunction === d.essentials.MapServiceFunction.BASE
								}).reverse(),
							p = "",
							r = k.infrastructure.ArrayUtils.mapWithErrorCallback(m, function (a) {
									return b.convert.fromGcxMapService(a)
								}, c);
							m.length && (a = a.baseMaps.filter(function (a) {
										return m.every(function (b) {
											return a.services.some(function (a) {
												return a.mapService === b
											})
										})
									}), p = 1 === a.length ? a[0].displayName : m[m.length - 1].displayName);
							r.length || (p = "Light Gray Canvas", r[0] = {
									id : "World_Light_Gray_Base_1486",
									layerType : "ArcGISTiledMapServiceLayer",
									opacity : 1,
									visibility : !0,
									url : "http://services.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer"
								});
							return this.app.bookmarks["export"]().then(function (a) {
								return {
									operationalLayers : g,
									baseMap : {
										title : p,
										baseMapLayers : r
									},
									bookmarks : a,
									version : "1.7"
								}
							})
						};
						return c
					}
					();
					g.WebMapManager = m
				})(h.webMap || (h.webMap = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex ||
	(geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					function k(b, a, d, f) {
						if ("object" === typeof b && d.has(b))
							return Promise.resolve(d.get(b));
						for (; "function" === typeof a; )
							a = a(b, f);
						return a && "function" === typeof a.validate ? a.validate(b, f).then(function (a) {
							return a.validatedValue
						}) : "object" === typeof a && "object" === typeof b ? c(b, a, d, f) : !0 === a ? Promise.resolve(b) : Promise.reject(g.FILTERED)
					}
					function c(b, a, c, f) {
						if (!b)
							return Promise.resolve(b);
						if (c.has(b))
							return c.get(b);
						for (var g; "function" === typeof a; )
							a =
								a(b, f);
						if ("object" === typeof a)
							if (Array.isArray(b))
								g = d.PromiseUtils.mapSkipRejected(b, function (b) {
										return k(b, a.item, c, f)
									}), c.set(b, g);
							else {
								var n = {};
								c.set(b, n);
								g = d.PromiseUtils.mapSkipRejected(Object.keys(a), function (d) {
										if (d in b)
											return k(b[d], a[d], c, f).then(function (a) {
												n[d] = a
											})
									})["return"](n)
							}
						else
							g = k(b, a, c);
						return g
					}
					g.FILTERED = {};
					g.filter = function (b, a, d) {
						if (!a)
							return Promise.reject(Error("Filter required."));
						var f = new WeakMap;
						return c(b, a, f, d)
					}
				})(d.ObjectFilter || (d.ObjectFilter = {}))
			})(d.infrastructure ||
				(d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function (c, b) {
							var a = this;
							this.esriLayer = c;
							this.templateType = "single-item";
							this.swatchElement = null;
							this.label = new Observable("");
							this.description = new Observable("");
							this.isVisible = new Observable(!0);
							this.isVisibleInLayerListLegend = new Observable(!0);
							this.isCluster = !1;
							this.expanded = new Observable(!0);
							this.expanderClass = new Observable;
							this.children = new ObservableCollection;
							this.children.useThrottling = !!b;
							this.expanderClass.syncTransform(this.expanded,
								function (a) {
								return a ? "tree-expander expanded" : "tree-expander collapsed"
							});
							this.expanded.pulse();
							this.isVisibleInLayerListLegend.syncTransform(this.isVisible, function (b) {
								return a.isCluster ? b : !0
							})
						}
					}
					();
					d.LegendItem = h
				})(d.legend || (d.legend = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					(function (c) {
						c[c.NotFound = 0] = "NotFound";
						c[c.Rendered = 1] = "Rendered";
						c[c.Show = 2] = "Show";
						c[c.Hide = 3] = "Hide";
						c[c.Pending = 4] = "Pending";
						c[c.Error = 5] = "Error"
					})(d.LegendItemProviderResponseCode || (d.LegendItemProviderResponseCode = {}));
					var h = function () {
						return function (c, b) {
							this.code = new Observable(c);
							this.item = b
						}
					}
					();
					d.LegendItemProviderResponse = h
				})(d.legend || (d.legend = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function (c, b) {
							this.identifier = c;
							this._provider = b
						}
					}
					();
					d.LegendItemProviderEntry = h
				})(d.legend || (d.legend = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function () {
						function c() {}

						c.registerLegendItemProvider = function (b) {
							var a = this,
							c = function (b, c) {
								a._legendItemInfos.push({
									uniqueId : b,
									legendItem : c
								});
								for (var d = 0; d < a._legendItemCallbacks.length; d++)
									if (b === a._legendItemCallbacks[d].uniqueId) {
										a._legendItemCallbacks[d].callback(c);
										a._legendItemCallbacks.splice(d, 1);
										break
									}
							},
							f = function (a) {
								var b = a.essLayer && a.essLayer.mapService && a.essLayer.mapService.id || a.children && a.children.length() &&
									a.children.getAt(0).essLayer && a.children.getAt(0).essLayer.mapService && a.children.getAt(0).essLayer.mapService.id || a.esriLayer.id;
								a = a.essLayer && a.essLayer.id || a.sublayerId || null;
								return b + (null != a ? "." + a : "")
							},
							k = function (a) {
								if (a) {
									if ("group" === a.templateType) {
										var b;
										if (b = a.children.length())
											a : {
												b = a.children.get();
												if (b.length)
													for (var d, g = 0; g < b.length; g++) {
														var h = b[g].sublayerId || b[g].essLayer && b[g].essLayer.id;
														0 === g && (d = h);
														if (h !== d || "single-item" !== b[g].templateType) {
															b = !1;
															break a
														}
													}
												b = !0
											}
										if (b) {
											d = a.children.getAt(0);
											c(f(d), a);
											return
										}
										if (a.children && a.children.length())
											for (d = 0, b = a.children.length(); d < b; d++)
												g = a.children.getAt(d), k(g)
									}
									"single-item" === a.templateType && c(f(a), a)
								}
							};
							dojo.aspect.after(b, "provide", function (b) {
								var c = b.code.get();
								if (c === g.LegendItemProviderResponseCode.Pending || c === g.LegendItemProviderResponseCode.Show)
									if (c === d.legend.LegendItemProviderResponseCode.Show)
										b.item && k(b.item);
									else
										var e = b.code.bind(a, function (a) {
												b.code.unbind(e);
												a === g.LegendItemProviderResponseCode.Show && b.item && k(b.item)
											});
								return b
							});
							this._providers.push(b)
						};
						c.getProviders = function () {
							return this._providers
						};
						c.getLegendItemWhenAvailable = function (b, a) {
							this.getLegendItemByIdWhenAvailable(b.uniqueId, a)
						};
						c.getLegendItemByIdWhenAvailable = function (b, a) {
							if (b && a) {
								for (var c = null, d = 0, g = this._legendItemInfos.length; d < g; d++) {
									var h = this._legendItemInfos[d];
									h.uniqueId === b && (c = h.legendItem)
								}
								c ? a(c) : this._legendItemCallbacks.push({
									uniqueId : b,
									callback : a
								})
							}
						};
						c._providers = [];
						c._legendItemInfos = [];
						c._legendItemCallbacks = [];
						return c
					}
					();
					g.LegendItemProviderFactory =
						k
				})(d.legend || (d.legend = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						return function () {}

					}
					();
					d.ResultsPageChangedEventArgs = h
				})(d.eventArgs || (d.eventArgs = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function () {
						function c() {}

						c.fromGeocortexApp = function (b) {
							var a = new c;
							a.gcxApp = b;
							a.urlParameters = b.urlParameters;
							b.isArcGisWebApp ? a.mapInfo = g.MapInfo.fromEsriMap(b.map) : (a.essentialsVersion = b.site.getEssentialsVersion(), a.mapInfo = g.MapInfo.fromViewerApp(b));
							a.map = a.mapInfo.map;
							return a
						};
						c.prototype.getGeometryService = function () {
							return this._geometryService ? this._geometryService : this.geometryServiceUrl ? this._geometryService = new esri.tasks.GeometryService(this.geometryServiceUrl) :
								this.gcxApp ? d.GeometryUtils.getGeometryService(this.gcxApp) : null
						};
						return c
					}
					();
					g.AppInfo = k
				})(d.gis || (d.gis = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var m = function () {
						function c() {
							this.subtypeDomains = {};
							this.subtypeDomainInfos = {};
							this.isVisible = !0
						}
						c.fromEsriField = function (b, a, d) {
							var f = new c;
							f.name = b.name;
							f.type = b.type;
							f.alias = d ? d.displayName || b.alias : b.alias;
							f.isVisible = d ? d.visible : !0;
							f.searchable = d ? d.searchable : !0;
							f.editable = b.editable;
							f.nullable = b.nullable;
							f.length = b.length;
							f.esriField = b;
							f.isTypeField = a && a.typeIdField === b.name;
							if (a) {
								if (f.isTypeField && !b.domain) {
									var h = new esri.layers.CodedValueDomain;
									h.codedValues = [];
									h.type = "codedValue";
									a.types.forEach(function (a) {
										h.codedValues.push({
											name : a.name,
											code : a.id
										})
									});
									f.domainInfo = g.DomainInfo.create(h);
									f.domain = h
								} else
									f.domainInfo = g.DomainInfo.create(b.domain), f.domain = b.domain;
								a.types && a.types.forEach(function (a) {
									for (var c in a.domains)
										if (a.domains.hasOwnProperty(c) && c === b.name && null !== a.id) {
											c = a.domains[c];
											f.subtypeDomains[a.id.toString()] = c;
											f.subtypeDomainInfos[a.id.toString()] = g.DomainInfo.create(c);
											break
										}
								})
							}
							if (d) {
								f.format = d.format;
								if (!f.format)
									if (f._isNumericFormat()) {
										if (a =
												[d.layer.defaultNumberFormat, d.layer.mapService.defaultNumberFormat].filter(function (a) {
												return !!a
											})[0])
											f.format = "{0:" + a + "}"
									} else
										f.isDate() && (a = [d.layer.defaultDateFormat, d.layer.mapService.defaultDateFormat].filter(function (a) {
												return !!a
											})[0]) && (f.format = "{0:" + a + "}");
								f.timeZoneId || (f.timeZoneId = k.infrastructure.TimeZoneUtils.getTimeZoneFromLayer(d.layer));
								f.displayTimeZoneId || (f.displayTimeZoneId = k.infrastructure.TimeZoneUtils.getDisplayTimeZoneFromMapService(d.layer.mapService))
							}
							return f
						};
						c.fromGcxField =
						function (b) {
							var a = new esri.layers.Field;
							new c;
							a.name = b.name;
							a.type = d.essentials.Field.convertToEsriFieldType(b.dataType);
							a.alias = b.displayName;
							a.editable = !1;
							a.nullable = !0;
							return c.fromEsriField(a, null, b)
						};
						c.prototype.isNumeric = function () {
							return 0 <= dojo.indexOf([d.essentials.EsriFieldTypes.esriFieldTypeOID, d.essentials.EsriFieldTypes.esriFieldTypeSmallInteger, d.essentials.EsriFieldTypes.esriFieldTypeInteger, d.essentials.EsriFieldTypes.esriFieldTypeSingle, d.essentials.EsriFieldTypes.esriFieldTypeDouble],
								this.type) ? !0 : !1
						};
						c.prototype.isDate = function () {
							return 0 <= dojo.indexOf([d.essentials.EsriFieldTypes.esriFieldTypeDate], this.type) ? !0 : !1
						};
						c.prototype.isText = function () {
							return 0 <= dojo.indexOf([d.essentials.EsriFieldTypes.esriFieldTypeString], this.type) ? !0 : !1
						};
						c.prototype.isCodedValueDomain = function () {
							return this.domainInfo && this.domainInfo.isCodedValueDomain()
						};
						c.prototype.hasSubtypeCodedValueDomains = function () {
							for (var b in this.subtypeDomainInfos)
								if (this.subtypeDomainInfos.hasOwnProperty(b) && this.subtypeDomainInfos[b].isCodedValueDomain())
									return !0;
							return !1
						};
						c.prototype.getCodedValueDomain = function () {
							return this.domain
						};
						c.prototype.getSubtypeCodedValueDomains = function () {
							var b = {},
							a;
							for (a in this.subtypeDomainInfos)
								this.subtypeDomainInfos.hasOwnProperty(a) && this.subtypeDomainInfos[a].isCodedValueDomain() && (b[a] = this.subtypeDomainInfos[a].domain);
							return b
						};
						c.prototype.resolveCodedDomainValue = function (b, a) {
							var c = null;
							this.domainInfo && (c = this.domainInfo.getName(b));
							if (null == c) {
								var d = this.subtypeDomainInfos[a];
								d && (c = d.getName(b))
							}
							return c
						};
						c.prototype.formatValue =
						function (b, a) {
							var c = this;
							if (this.isCodedValueDomain() || this.hasSubtypeCodedValueDomains()) {
								var d = this.resolveCodedDomainValue(b, a);
								if (null != d)
									return d
							}
							return this.format ? this.format.replace(/\{0(?::([^}]*))?\}/, function (a, d) {
								if (c.isDate()) {
									var f = c._correctDatesForDisplay(h.FormatUtils.parseDate(b));
									return h.FormatUtils.formatDate(f, d)
								}
								return c._isNumericFormat() ? h.FormatUtils.formatNumber(h.FormatUtils.parseNumber(b), d) : null === b || void 0 === b ? b : b.toString()
							}) : this.isDate() ? (d = this._correctDatesForDisplay(h.FormatUtils.parseDate(b)),
								h.FormatUtils.formatDate(d)) : this._isNumericFormat() ? h.FormatUtils.formatNumber(h.FormatUtils.parseNumber(b)) : null === b || void 0 === b ? b : b.toString()
						};
						c.prototype._correctDatesForDisplay = function (b) {
							return this.timeZoneId || this.displayTimeZoneId ? this.displayTimeZoneId ? this.timeZoneId ? h.TimeZoneUtils.correctDatesForDisplayInDisplayTimeZone(b, this.timeZoneId, this.displayTimeZoneId) : h.TimeZoneUtils.correctDatesForDisplayInDisplayTimeZone(b, h.TimeZoneUtils.UTC_ZONE_ID, this.displayTimeZoneId) : h.TimeZoneUtils.correctDatesForDisplayInLocalTime(b,
								this.timeZoneId) : b
						};
						c.prototype._isNumericFormat = function () {
							return this.isNumeric() && this.type !== d.essentials.EsriFieldTypes.esriFieldTypeOID && (!this.name || "OBJECTID" !== this.name.toUpperCase())
						};
						return c
					}
					();
					g.FieldInfo = m
				})(h.gis || (h.gis = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function () {
						function c() {
							this.fields = [];
							this.isUserCreated = !1;
							this.isExpanded = this.includeInLayerList = !0;
							this._fieldsRetrieved = this._visible = !1
						}
						c.fromEsriLayerInfo = function (b, a) {
							var e = new c;
							e.esriLayerInfo = b;
							e.id = b.id + "";
							e.name = b.name;
							e.displayName = b.name;
							e.parentLayerId = b.parentLayerId ? b.parentLayerId.toString() : null;
							e.subLayerIds = b.subLayerIds ? dojo.map(b.subLayerIds, function (a) {
									return a.toString()
								}) : null;
							e.uniqueId = a.id.replace(".",
									"..") + "." + b.id;
							e.url = d.essentials.utilities.DecomposedUri.appendToPath(a.url, "/" + b.id);
							e.queryable = !0;
							e.dataProvider = "Default";
							e._visible = b.defaultVisibility;
							return e
						};
						c.fromEsriFeatureLayer = function (b) {
							var a = new c;
							a.id = b.id + "";
							a.name = b.name;
							a.displayName = b.name;
							a.uniqueId = b.id;
							a.url = b.url;
							a.queryable = !0;
							a.dataProvider = "Default";
							a._featureLayer = b;
							a._visible = b.defaultVisibility;
							a.subLayerIds = null;
							a.parentLayerId = null;
							a.relationships = b.relationships;
							return a
						};
						c.fromGcxLayer = function (b) {
							var a = new c;
							a.gcxLayer = b;
							a.id = b.id;
							a.name = b.name;
							a.displayName = b.displayName || b.name;
							a.uniqueId = b.mapService.id + "." + b.id;
							a.dataProvider = b.dataProvider || "Default";
							a.isExpanded = b.isExpanded;
							a.isUserCreated = b.isUserCreated;
							a.relationships = b.relationships;
							b.mapService.drawingBehavior == d.essentials.DrawingBehavior.FEATURE_LAYER ? a.url = b.mapService.serviceLayer.url : b.mapService.mapServiceType == d.essentials.MapServiceType.DYNAMIC || b.mapService.mapServiceType == d.essentials.MapServiceType.TILED ? a.url = d.essentials.utilities.DecomposedUri.appendToPath(b.mapService.serviceLayer.url,
									"/" + b.id) : b.mapService.serviceLayer instanceof esri.layers.WMSLayer && (a.url = b.url);
							b.parentLayerId && (a.parentLayerId = b.parentLayerId);
							a.subLayerIds = b.subLayerIds ? b.subLayerIds : null;
							a.includeInLayerList = b.includeInLayerList;
							a.queryable = b.queryable && 0 < b.fields.length && b.supportsQuery;
							a._visible = b.configuredVisible;
							return a
						};
						c.prototype.getFields = function () {
							var b = this,
							a = new dojo.Deferred;
							this._fieldsRetrieved ? a.resolve(this.fields) : this.getInitializedFeatureLayer().then(function (c) {
								for (var d = 0; d < c.fields.length; d++) {
									var h =
										c.fields[d],
									k = b.gcxLayer ? b.gcxLayer.getFieldByName(h.name) : null,
									h = g.FieldInfo.fromEsriField(h, c, k);
									b.fields.push(h)
								}
								b._fieldsRetrieved = !0;
								a.isCanceled() || a.resolve(b.fields)
							}, function (b) {
								a.errback(b)
							});
							return a
						};
						c.prototype.getInitializedFeatureLayer = function () {
							var b = this;
							return this.gcxLayer ? this.gcxLayer.getFeatureLayer() : new Promise(function (a, c) {
								b._featureLayer || (b._featureLayer = new esri.layers.FeatureLayer(b.url));
								if (b._featureLayer.loaded)
									a(b._featureLayer);
								else if (b._featureLayer.__attached_error)
									c(b._featureLayer.__attached_error);
								else
									var f = b._featureLayer.on("load", function () {
											f.remove();
											g.remove();
											if (b.gcxLayer.wmsLayerName)
												for (var c = b.gcxLayer.fields, e = b._featureLayer.fields.length - 1; 0 <= e; e--) {
													var h = b._featureLayer.fields[e];
													"gml:id" === h.name && b._featureLayer.fields.splice(e, 1);
													h.type = d.essentials.Field.convertToEsriFieldType(c[e].dataType)
												}
											a(b._featureLayer)
										}), g = b._featureLayer.on("error", function (a) {
											f.remove();
											g.remove();
											b._featureLayer.__attached_error = a;
											c(a)
										})
							})
						};
						c.prototype.setDefinitionExpression = function (b) {
							var a =
								this.serviceLayerInfo.serviceLayer;
							if (a instanceof esri.layers.ArcGISDynamicMapServiceLayer) {
								var c = a.layerDefinitions || [];
								b && "1 = 1" != b ? c[parseInt(this.id)] = b : delete c[parseInt(this.id)];
								a.setLayerDefinitions(c)
							} else
								a instanceof esri.layers.FeatureLayer && (b && "1 = 1" != b ? a.setDefinitionExpression(b) : a.setDefinitionExpression(null))
						};
						c.prototype.getDefinitionExpression = function () {
							var b = this.serviceLayerInfo.serviceLayer;
							return b instanceof esri.layers.ArcGISDynamicMapServiceLayer ? (b.layerDefinitions ||
								[])[parseInt(this.id)] : null
						};
						c.prototype.isVisible = function () {
							return this.gcxLayer ? this.gcxLayer.isVisible() : this._visible
						};
						c.prototype.areAllAncestorsVisible = function () {
							for (var b = this.serviceLayerInfo.findLayerById(this.parentLayerId); null !== b && void 0 !== b; ) {
								if (!b.isVisible())
									return !1;
								b = this.serviceLayerInfo.findLayerById(b.parentLayerId)
							}
							return !0
						};
						c.prototype.setVisibility = function (b, a, c, d) {
							void 0 === a && (a = !1);
							void 0 === c && (c = !1);
							void 0 === d && (d = 150);
							var g = !1;
							c && this.serviceLayerInfo && this.serviceLayerInfo.serviceLayer &&
							(g = this.serviceLayerInfo.supportsLayerVisibility());
							this.gcxLayer ? this.gcxLayer.setVisibility(b, a || g) : this.setEsriLayerVisibility(b, a || g);
							g && this.serviceLayerInfo.refresh(d)
						};
						c.prototype.setEsriLayerVisibility = function (b, a) {
							void 0 === a && (a = !1);
							if ((this._visible = b) || this.serviceLayerInfo.serviceLayer.visible) {
								var c = {
									mapServiceId : this.serviceLayerInfo.id,
									layerId : this.id,
									visibility : b
								},
								f,
								g;
								g = this.serviceLayerInfo.serviceLayer;
								switch (this.serviceLayerInfo.serviceType) {
								case d.essentials.MapServiceType.DYNAMIC:
									if (g instanceof
										esri.layers.FeatureLayer)
										b ? g.show() : g.hide(), dojo.publish("LayerVisibilityChange", [Array(c)]);
									else if ((f = this.serviceLayerInfo.serviceLayer.visibleLayers.slice(0)) && f.length || g.layerInfos && g.layerInfos.length) {
										1 === f.length && -1 == f[0] && f.pop();
										g = f.indexOf(parseInt(this.id));
										if (b) {
											if (-1 !== g)
												break;
											if (this.subLayerIds && this.subLayerIds.length)
												break;
											f.push(parseInt(this.id))
										} else {
											if (-1 === g)
												break;
											f.splice(g, 1)
										}
										f.length || f.push(-1);
										f.InternallyChangedLayer = c;
										this.serviceLayerInfo.serviceLayer.setVisibleLayers(f,
											a)
									} else
										g.setVisibility(b), dojo.publish("LayerVisibilityChange", [Array(c)]);
									break;
								case d.essentials.MapServiceType.WMS:
									if (null !== g) {
										var h = [];
										h.InternallyChangedLayer = c;
										for (g = f = 0; g < this.serviceLayerInfo.layers.length; g++) {
											var k = this.serviceLayerInfo.layers[g];
											k.isVisible() && (null === k.subLayerIds || 0 === k.subLayerIds.length) && k.areAllAncestorsVisible() && (k = k.gcxLayer ? k.gcxLayer.wmsLayerName : k.serviceLayerInfo.serviceLayer.id, this.gcxLayer && this.gcxLayer.wmsLayerName === k || this.serviceLayerInfo.serviceLayer.id ===
												k || null !== k && "" !== k) && (h[f] = k, f++)
										}
										a ? (this.serviceLayerInfo.serviceLayer.visibleLayers = h.slice(0), dojo.publish("LayerVisibilityChange", [Array(c)])) : this.serviceLayerInfo.serviceLayer.setVisibleLayers(h)
									}
									break;
								case d.essentials.MapServiceType.FEATURE:
								case d.essentials.MapServiceType.GEORSS:
								case d.essentials.MapServiceType.KML:
								case d.essentials.MapServiceType.BING:
								case d.essentials.MapServiceType.TILED:
								case d.essentials.MapServiceType.WMTS:
								case d.essentials.MapServiceType.IMAGE:
								case d.essentials.MapServiceType.WEBTILED:
									if (null !==
										g)
										if (1 === this.serviceLayerInfo.layers.length)
											b ? g.show() : g.hide(), dojo.publish("LayerVisibilityChange", [Array(c)]);
										else
											throw Error("Visibility of individual layers cannot be set for this Map Service: {0}".format(this.displayName));
									break;
								default:
									throw Error("Cannot set layer visibility. Unknown MapService type.");
								}
							}
						};
						c.prototype.getMinScale = function () {
							var b;
							b = this.gcxLayer ? this.gcxLayer.minScale : this._featureLayer ? this._featureLayer.minScale : this.esriLayerInfo.minScale;
							return this.serviceLayerInfo &&
							this.serviceLayerInfo.serviceLayer.minScale ? Math.min(b, this.serviceLayerInfo.serviceLayer.minScale) : b
						};
						c.prototype.getMaxScale = function () {
							var b;
							b = this.gcxLayer ? this.gcxLayer.maxScale : this._featureLayer ? this._featureLayer.maxScale : this.esriLayerInfo.maxScale;
							return this.serviceLayerInfo && this.serviceLayerInfo.serviceLayer.maxScale ? Math.max(b, this.serviceLayerInfo.serviceLayer.maxScale) : b
						};
						return c
					}
					();
					g.LayerInfo = h
				})(h.gis || (h.gis = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c() {
							this.serviceLayers = [];
							this.markupLayer = new Observable
						}
						c.fromEsriMap = function (b) {
							var a = new c;
							a.map = b;
							a.markupLayer.set(b.graphics);
							for (var e = b.layerIds.concat(b.graphicsLayerIds), f = 0; f < e.length; f++) {
								var h = b.getLayer(e[f]),
								h = d.ServiceLayerInfo.fromEsriLayer(h);
								a.serviceLayers.push(h)
							}
							return a
						};
						c.fromViewerApp = function (b) {
							var a = c.fromEssentialsMap(b.site.essentialsMap);
							a.markupLayer.sync(b.markupLayer);
							return a
						};
						c.fromEssentialsMap = function (b) {
							var a = new c;
							a.gcxMap = b;
							a.map = b.getMap();
							a.markupLayer.set(b.getMap().graphics);
							for (var e = 0; e < b.mapServices.length; e++) {
								var f = d.ServiceLayerInfo.fromGcxMapService(b.mapServices[e]);
								a.serviceLayers.push(f)
							}
							return a
						};
						c.prototype.getLayerInfos = function () {
							for (var b = [], a = 0; a < this.serviceLayers.length; a++)
								for (var c = this.serviceLayers[a].layers, d = 0; d < c.length; d++)
									b.push(c[d]);
							return b
						};
						c.prototype.getTableInfos = function () {
							for (var b = [], a = 0; a < this.serviceLayers.length; a++)
								for (var c =
										this.serviceLayers[a].tables, d = 0; d < c.length; d++)
									b.push(c[d]);
							return b
						};
						c.prototype.getGraphicsLayers = function () {
							var b = [];
							b.push(this.map.graphics);
							for (var a = 0; a < this.map.graphicsLayerIds.length; a++)
								b.push(this.map.getLayer(this.map.graphicsLayerIds[a]));
							return b
						};
						c.prototype.findMapServiceById = function (b) {
							for (var a = null, c, d = 0, g = this.serviceLayers.length; d < g; d++) {
								var h = this.serviceLayers[d];
								null == a && (a = !(!h || !h.gcxMapService));
								if ((c = a ? h.gcxMapService : h.serviceLayer) && c.id === b)
									return h
							}
							return null
						};
						return c
					}
					();
					d.MapInfo = h
				})(d.gis || (d.gis = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c() {}

						c.create = function (b) {
							var a = new c;
							a.domain = b;
							return a
						};
						c.prototype.isCodedValueDomain = function () {
							return this.domain && "codedValue" == this.domain.type
						};
						c.prototype.getCodedValueDomain = function () {
							return this.domain
						};
						c.prototype.getName = function (b) {
							if (this.isCodedValueDomain())
								for (var a = 0; a < this.getCodedValueDomain().codedValues.length; a++) {
									var c = this.getCodedValueDomain().codedValues[a];
									if (c.code + "" == b + "")
										return c.name
								}
							return null
						};
						return c
					}
					();
					d.DomainInfo = h
				})(d.gis || (d.gis = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this.app = b;
							this.libraryId = a
						}
						c.prototype.initialize = function (b) {};
						c.prototype.search = function (b, a) {};
						c.prototype.cancelSearch = function () {};
						c.prototype.getResource = function (b, a) {
							return this.app.getResource(this.libraryId, b, a)
						};
						return c
					}
					();
					d.IdentifyProviderBase = h
				})(d.identify || (d.identify = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function (c) {
						function b(a, b, d) {
							c.call(this, a, g.LayerListItemType.FOLDER, d);
							this.layerThemeSettings = [];
							this.containedMapServices = [];
							this.configuredVisible = !1;
							this.name = new Observable(b || this.layerList.appInfo.gcxApp.getResource(this.layerList._libraryId, "language-layerlist-default-folder-title"));
							this._setTooltips();
							this.layerList && this.layerList.mapInfo && this.layerList.mapInfo.gcxMap && this.layerList.mapInfo.gcxMap.layerThemesInfo && dojo.connect(this.layerList.mapInfo.gcxMap.layerThemesInfo,
								"layerThemeChangedEvent", dojo.hitch(this, this._handleLayerThemeChangedEvent));
							d._addedFolderReferences.push(this)
						}
						__extends(b, c);
						b.prototype.setVisibility = function (a) {
							c.prototype.setVisibility.call(this, a);
							void 0 == this._deferredVisibilitySetting && (this.currentUserClickOriginator = !1, this.mapService && this.mapService.setVisibility(a && this.allAncestorsVisible && (this.inActiveTheme.get() || this.mapService.isUserCreated)))
						};
						b.prototype.refreshOnDemandItemCollection = function (a) {
							c.prototype.refreshOnDemandItemCollection.call(this,
								a);
							this.displayItem.set(!!this.children.length())
						};
						b.prototype.linkWithMapService = function (a) {
							var b = this;
							a && (this.mapService = a, this.layerList._handledMapServiceReferences.push(this.mapService), -1 === this.layerList._allMapServiceReferences.indexOf(this.mapService) && this.layerList._allMapServiceReferences.push(this.mapService), this._setupOpacityBindings(), this.mapService.serviceLayer.on("visibility-change", function (a) {
									if (void 0 != b._deferredVisibilitySetting || b.isEffectivelyVisible.get() !== a.visible ||
										b.isEffectivelyVisible.get() && !b.inActiveTheme.get() && !b.mapService.isUserCreated)
										a = a.visible && (b.inActiveTheme.get() || b.mapService.isUserCreated), b.isVisible.set(a)
								}))
						};
						b.prototype._setupOpacityBindings = function () {
							var a = this;
							if (1 === this.containedMapServices.length)
								c.prototype._setupOpacityBindings.call(this);
							else if (1 < this.containedMapServices.length) {
								var b = dojo.filter(this.containedMapServices, function (a) {
										return a.serviceLayer && a.serviceLayer.setOpacity
									});
								Math.max.apply(null, b.map(function (a) {
										return a.serviceLayer.opacity
									}));
								this.canAdjustOpacity.set(!0);
								this.opacity = new Observable(1);
								this.opacity.bind(this, function (b) {
									for (var c = 0; c < a.containedMapServices.length; c++)
										a.containedMapServices[c].gcxMapService && a.containedMapServices[c].gcxMapService.setOpacityFilter(b)
								})
							}
						};
						b.prototype._handleLayerThemeChangedEvent = function (a) {
							var b = this;
							if (a.currTheme) {
								var c = a.currTheme;
								a = function () {
									b.layerList._applyDeferredItemVisibilities(b.layerList.children.get());
									b._refreshMutuallyExclusiveItemVisibilities()
								};
								if (c.isDefaultTheme)
									this.isVisible.get() !==
									this.configuredVisible && this.isVisible.set(this.configuredVisible), this._setInActiveThemeIfChildrenPresent();
								else {
									if (this.layerThemeSettings.length)
										for (var d = 0; d < this.layerThemeSettings.length; d++) {
											var g = this.layerThemeSettings[d];
											if (c.id === g.theme.id) {
												c = void 0 == g.visible ? this.configuredVisible : g.visible;
												this.isVisible.get() !== c && this.isVisible.set(c);
												this._setInActiveThemeIfChildrenPresent();
												a();
												return
											}
										}
									this.isVisible.set(!1);
									this.inActiveTheme.set(!1)
								}
								a()
							}
						};
						b.prototype._refreshMutuallyExclusiveItemVisibilities =
						function () {
							this.children.get().forEach(function (a) {
								a.isMutuallyExclusive.get() && a.isVisible.get() && a.isVisible.pulse()
							})
						};
						b.prototype._setInActiveThemeIfChildrenPresent = function () {
							var a = this._recursivelyConfirmChildrenInActiveTheme(this.children.get());
							!a && this.inActiveTheme.get() && this.inActiveTheme.set(!1);
							a && !this.inActiveTheme.get() && this.inActiveTheme.set(!0)
						};
						b.prototype._recursivelyConfirmChildrenInActiveTheme = function (a) {
							for (var b = 0; b < a.length; b++) {
								var c;
								c = a[b];
								c = c.type === d.layerList.LayerListItemType.FOLDER ?
									c.children && c.children.length() ? this._recursivelyConfirmChildrenInActiveTheme(c.children.get()) : !1 : c.inActiveTheme.get();
								if (c)
									return !0
							}
							return !1
						};
						return b
					}
					(g.LayerListItem);
					g.LayerListFolderItem = k
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function (c) {
						function b(a, b, f, k) {
							c.call(this, a, k || g.LayerListItemType.LAYER, f);
							this._themeSyncHandle = null;
							this._deferRefreshTimeoutMs = 200;
							this._forceSetAncestorVisibilityOperationActive = !1;
							if (!b)
								throw Error("LayerListLayerItem Initialization failed. Layer cannot be null");
							this.layer = b;
							this._updateVisibilityAtCurrentScale();
							this.layerList.appInfo.mapInfo.map.on("zoom-end", dojo.hitch(this, this._updateVisibilityAtCurrentScale));
							this.type ===
							d.layerList.LayerListItemType.LAYER && (a = b.gcxLayer ? b.gcxLayer.isVisible() || b.gcxLayer.configuredVisible : !0, this.canNotAssignVisibility.set(!this.layer.serviceLayerInfo.supportsLayerVisibility()), this._deferredVisibilitySetting = a, this.isVisible.set(a));
							this.name.set(b.displayName || b.name);
							this._setTooltips();
							this.mapService = b.serviceLayerInfo;
							-1 === f._allMapServiceReferences.indexOf(this.mapService) && f._allMapServiceReferences.push(this.mapService);
							this.enableLayerActions = !0;
							this._subscribeEvents();
							this._setupGcxBindingsIfAvailable()
						}
						__extends(b, c);
						b.prototype.setVisibility = function (a, b) {
							c.prototype.setVisibility.call(this, a);
							this._forceSetAncestorVisibilityOperationActive = this._forceSetAncestorVisibilityOperationActive || b;
							if (!(this.canNotAssignVisibility && this.canNotAssignVisibility.get() || void 0 === this.allAncestorsVisible || void 0 != this._deferredVisibilitySetting)) {
								if ((this._forceSetAncestorVisibilityOperationActive || this.layerList.autoActivateAncestorVisibilities && this.currentUserClickOriginator) &&
									!0 === a && !this.allAncestorsVisible) {
									this.isVisible.get() !== a && this.isVisible.set(a);
									for (var d = this.parent; d && d.id !== this.layerList.id && d.isVisible.get(); )
										d = d.parent;
									if (d && d.id !== this.layerList.id) {
										d.isVisible.set(!0);
										return
									}
								}
								d = !this.currentUserClickOriginator && this.mapService.supportsLayerVisibility();
								this._forceSetAncestorVisibilityOperationActive = this.currentUserClickOriginator = !1;
								var g = a && this.allAncestorsVisible && (this.inActiveTheme.get() || this.layer.isUserCreated);
								this.layer.isVisible() !== g &&
								this.layer.setVisibility(g, !1, d, this._deferRefreshTimeoutMs)
							}
						};
						b.prototype.updateLegendItems = function () {
							var a = this;
							d.legend.LegendItemProviderFactory.getLegendItemWhenAvailable(this.layer, dojo.hitch(this, function (b) {
									a.legendItems.clear();
									a._populateLegendItem(b)
								}))
						};
						b.prototype.bindToActiveTheme = function () {
							var a = this;
							c.prototype.bindToActiveTheme.call(this);
							this._themeSyncHandle = dojo.subscribe("LayerInActiveThemeChangedEvent", function (b) {
									b && b === a.layer.gcxLayer && a.inActiveTheme.set(b.inActiveTheme)
								})
						};
						b.prototype.unbindFromActiveTheme = function () {
							c.prototype.unbindFromActiveTheme.call(this);
							this._themeSyncHandle && dojo.unsubscribe(this._themeSyncHandle);
							this._themeSyncHandle = null
						};
						b.prototype._subscribeEvents = function () {
							dojo.subscribe("LayerVisibilityChange", dojo.hitch(this, this._handleLayerVisibilityChange))
						};
						b.prototype._onServiceLayerProcessed = function () {
							this._setupIconUri();
							this.layerList.enableLegendIntegration && !this.layer.serviceLayerInfo.serviceLayer.loadError && d.legend.LegendItemProviderFactory.getLegendItemWhenAvailable(this.layer,
								dojo.hitch(this, this._populateLegendItem))
						};
						b.prototype._handleLayerVisibilityChange = function (a) {
							if (a && a.length && a[0].mapServiceId === this.layer.serviceLayerInfo.id)
								for (var b = 0; b < a.length; b++)
									if (a[b].layerId === this.layer.id) {
										if (void 0 == this._deferredVisibilitySetting && this.isEffectivelyVisible.get() === a[b].visibility && (!this.isEffectivelyVisible.get() || this.inActiveTheme.get() || this.layer.isUserCreated))
											break;
										a = a[b].visibility && (this.inActiveTheme.get() || this.layer.isUserCreated);
										this.isVisible.set(a);
										break
									}
						};
						b.prototype._populateLegendItem = function (a) {
							"single-item" === a.templateType ? (this.legendItems.addItem(a), this.legendSwatch.set(a.swatchElement)) : (this.legendItems.addItems(a.children.get()), 1 === this.legendItems.length() ? this.legendSwatch.set(this.legendItems.getAt(0).swatchElement) : this.legendItems.length() && this.legendSwatch.set(this.layerList.multiLegendSwatchElement || this.legendItems.getAt(0).swatchElement));
							1 < this.legendItems.length() ? this.legendHasMultipleItems.set(!0) : this.legendHasMultipleItems.set(!1);
							this.legendItems.length() && (this.iconUri.set(""), this.legendTooltip.set(1 === this.legendItems.length() ? this.layerList.singleLegendIconTooltip.format(this.name.get()) : this.layerList.multiLegendIconTooltip), this.legendTooltip.set(this.legendTooltip.get().format(this.name.get())))
						};
						b.prototype._setupIconUri = function () {
							var a = this.layer.gcxLayer,
							b = a ? a.mapService : null;
							this.layer.serviceLayerInfo.serviceLayer.loadError && this.layerList.serviceLoadFailureIconUri ? (this.iconUri.set(this.layerList.serviceLoadFailureIconUri),
								this.iconTooltip.set(this.layerList.serviceLoadFailureIconTooltip ? this.layerList.serviceLoadFailureIconTooltip : "")) : this.layerList && this.layerList.enableLayerIcons && (a && a.iconUri || b && this.type === g.LayerListItemType.GRAPHICSLAYER && b.iconUri) && (this.iconUri.set(a.iconUri || b.iconUri), this.iconTooltip.set(this.name.get()))
						};
						b.prototype._setupGcxBindingsIfAvailable = function () {
							var a = this;
							if (this.layer.gcxLayer)
								if (this.bindToActiveTheme(), this.layer.serviceLayerInfo.serviceLayer.loaded || this.layer.serviceLayerInfo.serviceLayer.loadError)
									this._onServiceLayerProcessed();
								else
									var b = null, c = null, d = function () {
										b && dojo.disconnect(b);
										c && dojo.disconnect(c);
										b = c = null
									},
							b = dojo.connect(this.mapService.serviceLayer, "onLoad", function () {
									d();
									a._onServiceLayerProcessed()
								}),
							c = dojo.connect(this.mapService.serviceLayer, "onError", function () {
									d();
									a._onServiceLayerProcessed()
								})
						};
						b.prototype._updateVisibilityAtCurrentScale = function () {
							var a = !1,
							b = esri.geometry.getScale(this.layerList.appInfo.mapInfo.map);
							if (0 == this.layer.getMaxScale() && Infinity == this.layer.getMinScale() || isNaN(this.layer.getMaxScale()) &&
								isNaN(this.layer.getMinScale()))
								a = !0;
							this.inVisibleScaleRange.set(a || this.layer.getMaxScale() < b && b < this.layer.getMinScale())
						};
						return b
					}
					(g.LayerListItem);
					g.LayerListLayerItem = k
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function (c) {
						function b(a, b, f) {
							c.call(this, a, b, f, d.LayerListItemType.GRAPHICSLAYER);
							if (!b)
								throw Error("LayerListGraphicsLayerItem Initialization failed. Layer cannot be null.");
							a = b.gcxLayer ? b.gcxLayer.isVisible() || b.gcxLayer.configuredVisible : b.serviceLayerInfo.serviceLayer.defaultVisibility || b.isVisible();
							this.canNotAssignVisibility.set(!1);
							this._deferredVisibilitySetting = a;
							this.isVisible.set(a)
						}
						__extends(b, c);
						return b
					}
					(d.LayerListLayerItem);
					d.LayerListGraphicsLayerItem = h
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (g) {
					var k = function (c) {
						function b(a, b) {
							void 0 === b && (b = []);
							c.call(this, b || []);
							this._parent = a
						}
						__extends(b, c);
						b.prototype.addItem = function (a) {
							if (a)
								this._prepItemForAddition(a), c.prototype.addItem.call(this, a), this._processItemPostAddition(a);
							else
								throw Error("Layer list item not defined. Cannot insert in collection.");
						};
						b.prototype.validateAndAddItem = function (a) {
							if (!a)
								return !1;
							if (this._validateCanAdd(a))
								return this.addItem(a), !0;
							console.error("LayerListItemCollection: Cannot add item with id: {0} in collection. Validation failed.".format(a.id.get()));
							return !1
						};
						b.prototype.addItems = function (a) {
							if (a)
								this._prepItemsForAddition(a), c.prototype.addItems.call(this, a), this._processItemsPostAddition(a);
							else
								throw Error("Layer list items are not defined. Cannot insert in collection.");
						};
						b.prototype.validateAndAddItems = function (a) {
							if (!a || !a.length)
								return !1;
							for (var b = 0; b < a.length; b++)
								if (!this._validateCanAdd(a[b]))
									return console.error("LayerListItemCollection: Cannot add items in collection. Validation failed."), !1;
							this.addItems(a);
							return !0
						};
						b.prototype.insertItem =
						function (a, b) {
							if (b)
								this._prepItemForAddition(b), c.prototype.insertItem.call(this, a, b), this._processItemPostAddition(b);
							else
								throw Error("Layer list item not defined. Cannot insert at index " + a + " in collection.");
						};
						b.prototype.insertItems = function (a, b) {
							if (b)
								this._prepItemsForAddition(b), c.prototype.insertItems.call(this, a, b), this._processItemsPostAddition(b);
							else
								throw Error("Layer list items are not defined. Cannot insert at index " + a + " in collection.");
						};
						b.prototype.validateAndInsertItem = function (a,
							b) {
							if (this._validateCanAdd(b))
								return this.insertItem(a, b), !0;
							console.error("LayerListItemCollection: Could not insert item with id: {0} in collection. Validation failed.".format(b.id.get()));
							return !1
						};
						b.prototype.validateAndInsertItems = function (a, b) {
							if (!b || !b.length)
								return !1;
							for (var c = 0; c < b.length; c++)
								if (!this._validateCanAdd(b[c]))
									return console.error("Could not insert items in collection. Validation failed."), !1;
							this.insertItems(a, b);
							return !0
						};
						b.prototype.removeItem = function (a) {
							if (a)
								this._prepItemForRemoval(a),
								c.prototype.removeItem.call(this, a);
							else
								throw Error("LayerListItemCollection: Cannot remove item at index from collection.");
						};
						b.prototype.removeAt = function (a) {
							var b = this.getAt(a);
							if (b)
								this._prepItemForRemoval(b), c.prototype.removeAt.call(this, a);
							else
								throw Error("LayerListItemCollection: Cannot remove item at index " + a + " from collection.");
						};
						b.prototype.removeRange = function (a, b) {
							a = void 0 != a ? Math.max(0, a) : 0;
							b = void 0 != b ? Math.min(b, this.getLength() - 1) : this.getLength() - 1;
							this._prepItemsForRemoval(this.get().slice(a,
									b + 1));
							c.prototype.removeRange.call(this, a, b)
						};
						b.prototype.clear = function () {
							this._prepItemsForRemoval(this.get());
							c.prototype.clear.call(this)
						};
						b.prototype._prepItemForAddition = function (a) {
							var b = this;
							this._parent && (a.parent = this._parent, a.parentEffectivelyVisible.sync(a.parent.isEffectivelyVisible), a.setAncestorVisibility(this._parent.isVisible.get()), a._visibilityBindingToken = this._parent.isVisible.bind(a, function (c) {
										a.setAncestorVisibility(c && b._parent.allAncestorsVisible)
									}), this.length() && this.getAt(0).isMutuallyExclusive.get() &&
								(a.isMutuallyExclusive.set(!0), a.hasRadioToggle.set(!0), a.radioGroup.set(this.getAt(0).radioGroup.get())), a._displayItemBindingToken = a.displayItem.bind(a, function (a) {
										if (a)
											b._parent.hasDisplayedChildren.set(!0);
										else {
											a = !1;
											for (var c = 0; c < b.length(); c++)
												if (b.getAt(c).displayItem.get()) {
													a = !0;
													break
												}
											b._parent.hasDisplayedChildren.set(a)
										}
									}), a.displayItem.pulse())
						};
						b.prototype._processItemPostAddition = function (a) {
							a.type !== d.layerList.LayerListItemType.MAPSERVICE && a.type !== d.layerList.LayerListItemType.LAYER &&
							a.type !== d.layerList.LayerListItemType.GRAPHICSLAYER || a.populateMapServicesInParentFolders()
						};
						b.prototype._prepItemForRemoval = function (a) {
							a.parentEffectivelyVisible.removeSync();
							a.parent = null;
							a._visibilityBindingToken && this._parent && (this._parent.isVisible.unbind(a._visibilityBindingToken), a._visibilityBindingToken = null);
							if (a._displayItemBindingToken && this._parent && (a.displayItem.unbind(a._displayItemBindingToken), a._displayItemBindingToken = null, a.displayItem)) {
								for (var b = !1, c = 0; c < this.length(); c++)
									if (this.getAt(c) !==
										a && this.getAt(c).displayItem.get()) {
										b = !0;
										break
									}
								this._parent.hasDisplayedChildren.set(b)
							}
						};
						b.prototype._prepItemsForAddition = function (a) {
							var b = this;
							dojo.forEach(a, function (a) {
								b._prepItemForAddition(a)
							})
						};
						b.prototype._processItemsPostAddition = function (a) {
							var b = this;
							dojo.forEach(a, function (a) {
								b._processItemPostAddition(a)
							})
						};
						b.prototype._prepItemsForRemoval = function (a) {
							var b = this;
							dojo.forEach(a, function (a) {
								b._prepItemForRemoval(a)
							})
						};
						b.prototype._validateCanAdd = function (a) {
							var b = this,
							c = (this.layerList ||
								this._parent.layerList).getDescendants();
							return c.filter(function (b) {
								return b === a
							}).length ? !1 : a.type === g.LayerListItemType.FOLDER ? a.children.getItems().every(function (a) {
								return b._validateCanAdd(a)
							}) : a.type === g.LayerListItemType.MAPSERVICE ? a.mapService ? !c.some(function (b) {
								return b.mapService && (b.mapService === a.mapService || b.mapService.serviceLayer === a.mapService.serviceLayer)
							}) : !1 : a.type === g.LayerListItemType.LAYER ? a.layer ? !c.some(function (b) {
								return b.layer && b.layer === a.layer
							}) : !1 : !0
						};
						return b
					}
					(ObservableCollection);
					g.LayerListItemCollection = k
				})(d.layerList || (d.layerList = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var k = function (c) {
						function b(a, b, d) {
							var h = this;
							c.call(this, a, g.LayerListItemType.MAPSERVICE, d);
							this._themeSyncHandle = null;
							this._forceSetAncestorVisibilityOperationActive = !1;
							if (!b)
								throw Error("LayerListMapServiceItem Initialization failed. MapService cannot be null");
							a = this.layerList && this.layerList.mapInfo && this.layerList.mapInfo.gcxMap && this.layerList.mapInfo.gcxMap.layerThemesInfo && this.layerList.mapInfo.gcxMap.layerThemesInfo.layerThemesConfigured ?
								b.gcxMapService && b.gcxMapService.serviceLayer ? b.gcxMapService.serviceLayer.visible : !0 : b.gcxMapService ? b.gcxMapService.configuredVisible : !0;
							this.name.set(b.gcxMapService ? b.gcxMapService.displayName : "");
							this._setTooltips();
							this.mapService = b;
							d._handledMapServiceReferences.push(b);
							-1 === d._allMapServiceReferences.indexOf(b) && d._allMapServiceReferences.push(b);
							this._deferredVisibilitySetting = a;
							this.isVisible.set(a);
							this._setupOpacityBindings();
							this._subscribeEvents();
							this._setupBindings();
							if (b.serviceLayer instanceof
								esri.layers.KMLLayer)
								if (b = b.serviceLayer, b.loaded)
									this._kmlLayerLoadHandler(b);
								else
									b.on("load", function (a) {
										return h._kmlLayerLoadHandler(a.layer)
									})
						}
						__extends(b, c);
						b.prototype.setVisibility = function (a, b) {
							c.prototype.setVisibility.call(this, a);
							this._forceSetAncestorVisibilityOperationActive = this._forceSetAncestorVisibilityOperationActive || b;
							this._syncChildVisibilitiesIfApplicable(a);
							if (void 0 !== this.allAncestorsVisible && void 0 == this._deferredVisibilitySetting) {
								if ((this._forceSetAncestorVisibilityOperationActive ||
										this.layerList.autoActivateAncestorVisibilities && this.currentUserClickOriginator) && !0 === a && !this.allAncestorsVisible) {
									this.isVisible.get() !== a && this.isVisible.set(a);
									for (var d = this.parent; d && d.id !== this.layerList.id && d.isVisible.get(); )
										d = d.parent;
									if (d && d.id !== this.layerList.id) {
										d.isVisible.set(!0);
										return
									}
								}
								this._forceSetAncestorVisibilityOperationActive = this.currentUserClickOriginator = !1;
								this.mapService.setVisibility(a && this.allAncestorsVisible && (this.inActiveTheme.get() || this.mapService.isUserCreated))
							}
						};
						b.prototype.bindToActiveTheme = function () {
							var a = this;
							c.prototype.bindToActiveTheme.call(this);
							this._themeSyncHandle = dojo.subscribe("MapServiceInActiveThemeChangedEvent", function (b) {
									b && b === a.mapService.gcxMapService && a.inActiveTheme.set(b.inActiveTheme)
								})
						};
						b.prototype.unbindFromActiveTheme = function () {
							c.prototype.unbindFromActiveTheme.call(this);
							this._themeSyncHandle && dojo.unsubscribe(this._themeSyncHandle);
							this._themeSyncHandle = null
						};
						b.prototype._subscribeEvents = function () {
							var a = this;
							this.mapService.serviceLayer.on("visibility-change",
								function (b) {
								if (void 0 != a._deferredVisibilitySetting || a.isEffectivelyVisible.get() !== b.visible || a.isEffectivelyVisible.get() && !a.inActiveTheme.get() && !a.mapService.isUserCreated)
									b = b.visible && (a.inActiveTheme.get() || a.mapService.isUserCreated), a.isVisible.set(b)
							})
						};
						b.prototype._setupIconUri = function () {
							this.mapService.serviceLayer.loadError && this.layerList.serviceLoadFailureIconUri ? (this.iconUri.set(this.layerList.serviceLoadFailureIconUri), this.iconTooltip.set(this.layerList.serviceLoadFailureIconTooltip ?
									this.layerList.serviceLoadFailureIconTooltip : "")) : this.mapService.gcxMapService && this.mapService.gcxMapService.iconUri && (this.iconUri.set(this.mapService.gcxMapService.iconUri), this.iconTooltip.set(this.name.get()))
						};
						b.prototype._syncChildVisibilitiesIfApplicable = function (a) {
							var b = this;
							switch (this.mapService.serviceType) {
							case d.essentials.MapServiceType.BING:
							case d.essentials.MapServiceType.TILED:
							case d.essentials.MapServiceType.WMTS:
							case d.essentials.MapServiceType.IMAGE:
							case d.essentials.MapServiceType.WEBTILED:
								0 <
								this.children.length() && this.getDescendants().forEach(function (c) {
									c.type === h.layerList.LayerListItemType.LAYER && c.mapService.id === b.mapService.id && c.isVisible.get() !== a && c.isVisible.set(a)
								})
							}
						};
						b.prototype._setupBindings = function () {
							var a = this;
							this.mapService.gcxMapService && this.bindToActiveTheme();
							if (this.mapService.serviceLayer.loaded || this.mapService.serviceLayer.loadError)
								this._setupIconUri();
							else
								var b = null, c = null, d = function () {
									b && dojo.disconnect(b);
									c && dojo.disconnect(c);
									b = c = null
								},
							b = dojo.connect(this.mapService.serviceLayer,
									"onLoad", function () {
									d();
									a._setupIconUri()
								}),
							c = dojo.connect(this.mapService.serviceLayer, "onError", function () {
									d();
									a._setupIconUri()
								});
							if (!this.mapService.serviceLayer.loaded && !this.mapService.serviceLayer.loadError)
								var g = this.mapService.serviceLayer.on("load", function () {
										a._updateVisibilityAtCurrentScale();
										g.remove()
									});
							if (!this.mapService.serviceLayer.getMap())
								var h = this.layerList.appInfo.map.on("layer-add", function (b) {
										b.layer === a.mapService.serviceLayer && (a._updateVisibilityAtCurrentScale(), h.remove())
									});
							this._updateVisibilityAtCurrentScale();
							this.mapService.serviceLayer.on("scale-visibility-change", function () {
								return a._updateVisibilityAtCurrentScale()
							})
						};
						b.prototype._kmlLayerLoadHandler = function (a) {
							a.folders && 1 < a.folders.length && (this._createKmlFolders(this, a.folders[1], a), this.refreshOnDemandItemCollection())
						};
						b.prototype._createKmlFolders = function (a, b, c) {
							for (var d = c.folders, g = 0; g < b.subFolderIds.length; g++) {
								for (var k = b.subFolderIds[g], m = null, q = 0; q < d.length; q++)
									if (d[q].id === k) {
										m = d[q];
										break
									}
								if (!m)
									throw Error("Could not find KML folder with ID '{0}'.".format(k));
								k = new h.layerList.LayerListKmlFolderItem(this.mapService.id + k, this.layerList, c, m);
								this._createKmlFolders(k, m, c);
								a.children.addItem(k)
							}
						};
						b.prototype._updateVisibilityAtCurrentScale = function () {
							this.mapService.serviceLayer.loaded && this.mapService.serviceLayer.getMap() && this.inVisibleScaleRange.set(this.mapService.serviceLayer.visibleAtMapScale)
						};
						return b
					}
					(g.LayerListItem);
					g.LayerListMapServiceItem = k
				})(h.layerList || (h.layerList = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					(function (g) {
						g.getServiceLayerType = function (c) {
							return c instanceof esri.layers.DynamicMapServiceLayer ? c instanceof esri.layers.ArcGISDynamicMapServiceLayer ? d.essentials.MapServiceType.DYNAMIC : c instanceof esri.layers.ArcGISImageServiceLayer ? d.essentials.MapServiceType.IMAGE : c instanceof esri.layers.WMSLayer ? d.essentials.MapServiceType.WMS : d.essentials.MapServiceType.DYNAMIC : c instanceof esri.layers.TiledMapServiceLayer ? c instanceof esri.layers.WMTSLayer ?
							d.essentials.MapServiceType.WMTS : c instanceof esri.layers.WebTiledLayer ? d.essentials.MapServiceType.WEBTILED : c instanceof esri.virtualearth.VETiledLayer ? d.essentials.MapServiceType.BING : d.essentials.MapServiceType.TILED : c instanceof esri.layers.GraphicsLayer ? c instanceof esri.layers.FeatureLayer ? esri.layers.StreamLayer && c instanceof esri.layers.StreamLayer ? d.essentials.MapServiceType.STREAM : c instanceof esri.layers.CSVLayer ? d.essentials.MapServiceType.CSV : d.essentials.MapServiceType.FEATURE : esri.layers.LabelLayer &&
							c instanceof esri.layers.LabelLayer ? d.essentials.MapServiceType.LABEL : d.essentials.MapServiceType.GRAPHICS : c instanceof esri.layers.GeoRSSLayer ? d.essentials.MapServiceType.GEORSS : c instanceof esri.layers.KMLLayer ? d.essentials.MapServiceType.KML : c instanceof esri.layers.MapImageLayer ? d.essentials.MapServiceType.MAPIMAGE : d.essentials.MapServiceType.UNKNOWN
						}
					})(g.GisUtils || (g.GisUtils = {}))
				})(h.gis || (h.gis = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer ||
		(d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					d.defaultSymbolColor = function (d) {
						d || (d = {});
						return new dojo.Color({
							a : d.a ? d.a : 1,
							r : d.r ? d.r : 204,
							g : d.g ? d.g : 51,
							b : d.b ? d.b : 51
						})
					};
					d.defaultMarkerSymbol = function () {
						return new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, 14, null, this.defaultSymbolColor())
					};
					d.defaultLineSymbol = function () {
						return new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, this.defaultSymbolColor({
								a : 0.8
							}), 2)
					};
					d.defaultFillSymbol =
					function () {
						return new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, this.defaultLineSymbol(), this.defaultSymbolColor({
								a : 0.5
							}))
					};
					d.defaultTextSymbol = function () {
						var d = new esri.symbol.TextSymbol(""),
						c = new esri.symbol.Font;
						c.setSize("14pt");
						c.setFamily("Arial");
						d.setFont(c);
						d.setAlign(esri.symbol.TextSymbol.ALIGN_START);
						return d
					}
				})(d.SymbolUtils || (d.SymbolUtils = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (d) {
		(function (d) {
			(function (d) {
				(function (d) {
					var h = function () {
						function c(b, a) {
							this._canExecuteChangedBindingTokens = [];
							this._contextPropertyBindingTokens = {};
							if (!d.MenuViewModel || !a)
								throw Error("MenuViewModel: Could not create menu view model. Input arguments cannot be undefined.");
							this.menuViewModel = b;
							this.menuItem = a;
							this.app = a.app;
							this.text = new Observable(a.text);
							this.description = new Observable(a.description);
							this.canExecute = new Observable(this.computeCanExecute());
							this.iconUri =
								new Observable(a.iconUri);
							this._setupBindings()
						}
						c.prototype.execute = function () {
							var b = this;
							this.computeCanExecute() && (this.menuItem.command ? this.menuItem.command.execute(c._computeCommandParameter(this, this.menuItem.commandParameter)) : this.menuItem.batchItems.forEach(function (a) {
									return a.command.execute(c._computeCommandParameter(b, a.commandParameter))
								}))
						};
						c.prototype.computeCanExecute = function () {
							if (this.menuItem.batchItems && this.menuItem.batchItems.length) {
								for (var b = !!this.menuItem.batchItems.length,
									a = 0; a < this.menuItem.batchItems.length; a++) {
									var d = this.menuItem.batchItems[a];
									b && d.abortBatchOnFailure && (b = d.command && d.command.canExecute(c._computeCommandParameter(this, d.commandParameter)))
								}
								return b
							}
							return this.menuItem.command && this.menuItem.command.canExecute(c._computeCommandParameter(this, this.menuItem.commandParameter))
						};
						c.prototype.refreshCanExecute = function () {
							var b = this.computeCanExecute();
							this.canExecute.get() !== b && this.canExecute.set(b)
						};
						c.prototype.destroy = function () {
							for (var b = this._canExecuteChangedBindingTokens.length -
									1; 0 <= b; b--) {
								var a = this._canExecuteChangedBindingTokens[b];
								a.canExecuteEvent.unsubscribe(a.token);
								this._canExecuteChangedBindingTokens.pop()
							}
							for (var c in this._contextPropertyBindingTokens)
								this._contextPropertyBindingTokens.hasOwnProperty(c) && (b = this.menuViewModel.menuContext.get(), b[c] && b[c].unbind(this._contextPropertyBindingTokens[c]));
							this._canExecuteChangedBindingTokens = this._contextPropertyBindingTokens = null
						};
						c.prototype._setupBindings = function () {
							var b = this,
							a = function (a) {
								a && b._canExecuteChangedBindingTokens.push({
									canExecuteEvent : a.canExecuteChanged,
									token : a.canExecuteChanged.subscribe(b, b.refreshCanExecute)
								})
							};
							this.menuItem.batchItems && this.menuItem.batchItems.length ? this.menuItem.batchItems.forEach(function (b) {
								a(b.command)
							}) : a(this.menuItem.command)
						};
						c._computeCommandParameter = function (b, a) {
							var c = b.menuViewModel.menuContext.get(),
							f = function (a) {
								a = a.trim();
								if (0 === a.indexOf("{{") && 0 < a.indexOf("}}")) {
									a = a.replace("{{", "").replace("}}", "");
									if (a.toLowerCase() === d.MenuViewModel.DefaultParameterName.toLowerCase())
										return c;
									if (c && "undefined" !== typeof c[a])
										return c[a].isObservable &&
										(b._contextPropertyBindingTokens[a] && c[a].unbind(b._contextPropertyBindingTokens[a]), b._contextPropertyBindingTokens[a] = c[a].once(b, b.refreshCanExecute)), c[a];
									b.app.trace.warning("Could not find menu item '{0}'.".format(a));
									return null
								}
								return a
							};
							if (null === a || "undefined" === typeof a)
								return c;
							if ("string" === typeof a)
								return f(a);
							if (c && a && "object" === typeof a) {
								var h = {},
								k;
								for (k in a)
									if (a.hasOwnProperty(k)) {
										var m = a[k];
										h[k] = "string" === typeof m ? f(m) : m
									}
								return h
							}
							return a
						};
						return c
					}
					();
					d.MenuItemViewModel = h
				})(d.menus ||
					(d.menus = {}))
			})(d.infrastructure || (d.infrastructure = {}))
		})(d.mapping || (d.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
(function (d) {
	(function (k) {
		(function (k) {
			(function (h) {
				(function (g) {
					var h = function (c) {
						function b() {
							c.apply(this, arguments)
						}
						__extends(b, c);
						b.prototype.attach = function (a) {
							var b = this.configuration.libraryId || a.libraryId || this.libraryId;
							!1 === a instanceof g.MenuViewModel && (b = new g.MenuViewModel(this.app, b), b.menuContext.set(a), a = b);
							(this.viewModel = a) && !this.viewModel.menuId && (this.viewModel.menuId = this.configuration && this.configuration.menuId || null);
							this.viewModel.setupMenu();
							this.viewModel && this.viewModel.menuId ?
							(this.title.set(this.getResource("language-menu-default-title")), c.prototype.attach.call(this, a)) : this.app.trace.warning("Could not set up menu view '{0}'. View model or 'menuId' option not found.".format(this.id))
						};
						b.prototype.handleMenuItemClick = function (a, b, c) {
							c && (this.app.event("MenuItemInvokedEvent").publish({
									menuView : this,
									menuId : this.viewModel.menuId,
									menuItem : c
								}), c.execute())
						};
						b.prototype.getDescription = function (a, b, c) {
							c.description && (b.title = c.description.get())
						};
						b.prototype.onDestroy = function () {
							c.prototype.onDestroy.call(this);
							this.app.menuRegistry.destroyMenuWidget(this)
						};
						return b
					}
					(d.framework.ui.ViewBase);
					g.MenuView = h
				})(h.menus || (h.menus = {}))
			})(k.infrastructure || (k.infrastructure = {}))
		})(k.mapping || (k.mapping = {}))
	})(d.essentialsHtmlViewer || (d.essentialsHtmlViewer = {}))
})(geocortex || (geocortex = {}));
var Feature = null, FeatureSet = null, FeatureSetCollection = null;
dojo.ready(function () {
	FeatureAttribute = dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute");
	Feature = dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature");
	FeatureSet = dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet");
	FeatureSetCollection = dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection")
});
geocortex || (geocortex = {});
geocortex.essentialsHtmlViewer || (geocortex.essentialsHtmlViewer = {});
geocortex.essentialsHtmlViewer.version = "2.6.0.0927";
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/documents/GrantEditorView.html", "html", "PGRpdiBjbGFzcz0iZ3JhbnQtZWRpdG9yIj4gPGRpdiBjbGFzcz0iZ3JhbnQtZWRpdG9yLW9wdGlvbnMiPiA8ZGl2IGNsYXNzPSJncmFudC1lZGl0b3Itc2VhcmNoLW9wdGlvbnMiPiA8c2VsZWN0IGRhdGEtYmluZGluZz0ie0BlbmFibGVkOiBlbmFibGVkfXtAc291cmNlOiBtb25pa2VyS2luZHN9e0B2YWx1ZTogc2VsZWN0ZWRNb25pa2VyS2luZH0iPiA8b3B0aW9uIGRhdGEtYmluZGluZz0ie0B0ZW1wbGF0ZS1mb3I6IG1vbmlrZXJLaW5kc317QHRleHQ6IGRpc3BsYXlOYW1lfXt2YWx1ZToga2luZH0iIC8+IDwvc2VsZWN0PiA8aW5wdXQgY2xhc3M9ImdyYW50LWVkaXRvci1zZWFyY2giIHR5cGU9InRleHQiIGRhdGEtYmluZGluZz0ie0BlbmFibGVkOiBlbmFibGVkfXtAdmFsdWU6IHNlYXJjaFRleHR9e0B2YXI6IGF1dG9Db21wbGV0ZUlucHV0fXtAZXZlbnQtb25pbnB1dDogaGFuZGxlSW5wdXRDaGFuZ2VkfXtwbGFjZWhvbGRlcjogQGxhbmd1YWdlLWdyYW50LWVkaXRvci1zZWFyY2gtcGxhY2Vob2xkZXJ9e3RpdGxlOiBAbGFuZ3VhZ2UtZ3JhbnQtZWRpdG9yLXNlYXJjaC10aXRsZX17QGV2ZW50LWJsdXI6IGhhbmRsZUF1dG9Db21wbGV0ZUJsdXJ9IiAvPiA8L2Rpdj4gPGRpdiBjbGFzcz0iZm9ybS1idG5zIj4gPGJ1dHRvbiBjbGFzcz0iYnV0dG9uIGFkZC1idXR0b24iIGRhdGEtYmluZGluZz0ie0BlbmFibGVkOiBpc1ZhbGlkTW9uaWtlcn17dGl0bGU6IEBsYW5ndWFnZS1ncmFudC1lZGl0b3ItYWRkLWJ1dHRvbi10aXRsZX17QHRleHQ6IEBsYW5ndWFnZS1ncmFudC1lZGl0b3ItYWRkLWJ1dHRvbi10ZXh0fXtAZXZlbnQtb25jbGljazogaGFuZGxlQWRkTW9uaWtlckJ1dHRvbkNsaWNrfSI+PC9idXR0b24+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0iZ3JhbnQtZWRpdG9yLXRhYmxlIj4gPHRhYmxlPiA8dGhlYWQ+IDx0cj4gPHRoPjwvdGg+IDx0aCBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLWdyYW50LWVkaXRvci10YWJsZS1oZWFkZXItbm9uZX0iPjwvdGg+IDx0aCBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLWdyYW50LWVkaXRvci10YWJsZS1oZWFkZXItdmlld30iPjwvdGg+IDx0aCBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLWdyYW50LWVkaXRvci10YWJsZS1oZWFkZXItZWRpdH0iPjwvdGg+IDwvdHI+IDwvdGhlYWQ+IDx0Ym9keSBkYXRhLWJpbmRpbmc9IntAc291cmNlOiBtb25pa2Vyc30iPiA8dHIgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogbW9uaWtlcnN9e0BjbGFzcy1nbG9iYWwtZ3JhbnQ6IGlzR2xvYmFsfXtAY2xhc3MtZGlzYWJsZWQtZ3JhbnQ6IGlzUmV2b2tlZH0iPiA8dGQgY2xhc3M9ImdyYW50LW5hbWUtY29sdW1uIj4gPGltZyBkYXRhLWJpbmRpbmc9IntzcmM6IGljb25Vcml9IiAvPiA8c3BhbiBjbGFzcz0iZ3JhbnQtbmFtZS1sYWJlbCIgZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IG5hbWV9Ij48L3NwYW4+IDwvdGQ+IDx0ZD4gPGlucHV0IHR5cGU9InJhZGlvIiBkYXRhLWJpbmRpbmc9IntAZW5hYmxlZDogZW5hYmxlZH17bmFtZTogaWR9e2NoZWNrZWQ6IGlzR2xvYmFsfXtAZXZlbnQtb25jbGljazogaGFuZGxlVXBkYXRlTW9uaWtlcn0iIC8+IDwvdGQ+IDx0ZD4gPGlucHV0IHR5cGU9InJhZGlvIiB2YWx1ZT0icmVhZGVyIiBkYXRhLWJpbmRpbmc9IntAZW5hYmxlZDogZW5hYmxlZH17bmFtZTogaWR9e2NoZWNrZWQ6IGNhblJlYWR9e0BldmVudC1vbmNsaWNrOiBoYW5kbGVVcGRhdGVNb25pa2VyfSIgLz4gPC90ZD4gPHRkPiA8aW5wdXQgdHlwZT0icmFkaW8iIHZhbHVlPSJ3cml0ZXIiIGRhdGEtYmluZGluZz0ie0BlbmFibGVkOiBlbmFibGVkfXtAaGlkZGVuOiBpc1B1YmxpY317bmFtZTogaWR9e2NoZWNrZWQ6IGNhbldyaXRlfXtAZXZlbnQtb25jbGljazogaGFuZGxlVXBkYXRlTW9uaWtlcn0iIC8+IDwvdGQ+IDwvdHI+IDwvdGJvZHk+IDwvdGFibGU+IDwvZGl2PiA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/menus/IconMenuView.html", "html", "PGRpdiBjbGFzcz0ibWVudS1uby1pdGVtcyIgZGF0YS1iaW5kaW5nPSJ7QGhpZGRlbjogdmlzaWJsZU1lbnVJdGVtc317QHRleHQ6IEBsYW5ndWFnZS1tZW51LW5vLWl0ZW1zfSI+PC9kaXY+IDxkaXYgY2xhc3M9Imxpc3QtbWVudSBhY3RpdmUgaGFzLWljb24gaWNvbi1tZW51IiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogdmlzaWJsZU1lbnVJdGVtc317QHNvdXJjZTogdmlzaWJsZU1lbnVJdGVtc30iPiA8ZGl2IGNsYXNzPSJsaXN0LW1lbnUtaXRlbSIgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogdmlzaWJsZU1lbnVJdGVtc317QGVuYWJsZWQ6IGNhbkV4ZWN1dGV9e0BldmVudC1vbmNsaWNrOiBoYW5kbGVNZW51SXRlbUNsaWNrfSI+IDxidXR0b24gY2xhc3M9Imxpc3QtbWVudS1kZXRhaWxzIiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlTWVudUl0ZW1DbGlja317dGl0bGU6IGRlc2NyaXB0aW9ufSI+IDxpbWcgY2xhc3M9Imxpc3QtbWVudS1pY29uIiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogaWNvblVyaX17c3JjOiBpY29uVXJpfSIgYWx0PSIgIiAvPiA8c3Ryb25nIGNsYXNzPSJsaXN0LW1lbnUtbmFtZSIgZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IHRleHR9Ij48L3N0cm9uZz4gPC9idXR0b24+IDwvZGl2PiA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/menus/MenuHyperlinkView.html", "html", "PGRpdiBjbGFzcz0ibWVudS1oeXBlcmxpbmtzIj4gPHVsIGNsYXNzPSJsaXN0LW1lbnUgYWN0aXZlIiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogdmlzaWJsZU1lbnVJdGVtc317QHNvdXJjZTogdmlzaWJsZU1lbnVJdGVtc30iPiA8bGkgY2xhc3M9Imxpc3QtbWVudS1pdGVtIiBkYXRhLWJpbmRpbmc9IntAdGVtcGxhdGUtZm9yOiB2aXNpYmxlTWVudUl0ZW1zfSI+IDxidXR0b24gY2xhc3M9Imxpc3QtbWVudS1idXR0b24iIGRhdGEtYmluZGluZz0ie3RpdGxlOiBkZXNjcmlwdGlvbn17QHRleHQ6IHRleHR9e0BldmVudC1vbmNsaWNrOiBoYW5kbGVNZW51SXRlbUNsaWNrfXtAZW5hYmxlZDogY2FuRXhlY3V0ZX0iPjwvYnV0dG9uPiA8L2xpPiA8L3VsPiA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/menus/MenuView.html", "html", "PGRpdiBjbGFzcz0ibWVudS1uby1pdGVtcyIgZGF0YS1iaW5kaW5nPSJ7QGhpZGRlbjogdmlzaWJsZU1lbnVJdGVtc317QHRleHQ6IEBsYW5ndWFnZS1tZW51LW5vLWl0ZW1zfSI+PC9kaXY+IDxkaXYgY2xhc3M9Imxpc3QtbWVudSBhY3RpdmUgaGFzLWljb24iIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiB2aXNpYmxlTWVudUl0ZW1zfXtAc291cmNlOiB2aXNpYmxlTWVudUl0ZW1zfSI+IDxkaXYgY2xhc3M9Imxpc3QtbWVudS1pdGVtIiBkYXRhLWJpbmRpbmc9IntAdGVtcGxhdGUtZm9yOiB2aXNpYmxlTWVudUl0ZW1zfXtAZW5hYmxlZDogY2FuRXhlY3V0ZX17QGV2ZW50LW9uY2xpY2s6IGhhbmRsZU1lbnVJdGVtQ2xpY2t9Ij4gPGltZyBjbGFzcz0ibGlzdC1tZW51LWljb24iIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBpY29uVXJpfXtzcmM6IGljb25Vcml9e2FsdDogdGV4dH0iIC8+IDxidXR0b24gY2xhc3M9Imxpc3QtbWVudS1kZXRhaWxzIiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlTWVudUl0ZW1DbGlja317dGl0bGU6IGRlc2NyaXB0aW9ufSI+IDxzdHJvbmcgY2xhc3M9Imxpc3QtbWVudS1uYW1lIiBkYXRhLWJpbmRpbmc9IntAdGV4dDogdGV4dH0iPjwvc3Ryb25nPiA8c3BhbiBjbGFzcz0ibGlzdC1tZW51LWRlc2MiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBkZXNjcmlwdGlvbn17QHRleHQ6IGRlc2NyaXB0aW9ufSI+PC9zcGFuPiA8L2J1dHRvbj4gPC9kaXY+IDwvZGl2PiA=");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/results/ResultsFeatureActionsView.html", "html", "PGRpdiBjbGFzcz0ibGlzdC1tZW51IiBkYXRhLWJpbmRpbmc9IntAc291cmNlOiBmZWF0dXJlQWN0aW9uc30iPiA8ZGl2IGNsYXNzPSJsaXN0LW1lbnUtaXRlbSIgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogZmVhdHVyZUFjdGlvbnN9e0BldmVudC1vbm1vdXNlb3ZlcjogaGFuZGxlR2V0RGVzY3JpcHRpb259e0BldmVudC1vbmNsaWNrOiBoYW5kbGVNZW51SXRlbUNsaWNrfSI+IDxidXR0b24gY2xhc3M9Imxpc3QtbWVudS1kZXRhaWxzIj4gPHN0cm9uZyBjbGFzcz0ibGlzdC1tZW51LW5hbWUiIGRhdGEtYmluZGluZz0ie0B0ZXh0OiB0ZXh0fSI+PC9zdHJvbmc+IDxzcGFuIGNsYXNzPSJsaXN0LW1lbnUtZGVzYyIgZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IGRlc2NyaXB0aW9ufSI+PC9zcGFuPiA8L2J1dHRvbj4gPC9kaXY+IDwvZGl2PiA=");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/results/ResultsListView.html", "html", "PGRpdiBjbGFzcz0icmVzdWx0cy1saXN0LWFjdGlvbnMtd2lkZ2V0IiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogZmVhdHVyZVNldENvbGxlY3Rpb259e0B3aWRnZXQ6IFJlc3VsdHNMaXN0QWN0aW9uc1dpZGdldH17QHdpZGdldC1jb250ZXh0OiBmZWF0dXJlU2V0Q29sbGVjdGlvbn17QHdpZGdldC1yZXF1aXJlZDogZmFsc2V9IiBkYXRhLW1lbnUtaWQ9IlJlc3VsdHNMaXN0QWN0aW9ucyIgZGF0YS1tZW51LXRlbXBsYXRlPSJNYXBwaW5nL2luZnJhc3RydWN0dXJlL21lbnVzL01lbnVIeXBlcmxpbmtWaWV3Lmh0bWwiPjwvZGl2PiA8ZGl2IGNsYXNzPSJyZXN1bHRzIj4gIDxkaXYgY2xhc3M9Im5vLXJlc3VsdHMiIGRhdGEtYmluZGluZz0ie0BoaWRkZW46IGhhc0ZlYXR1cmVTZXRzfXtAdGV4dDogc2VhcmNoU3VnZ2VzdGlvbn0iIHRhYmluZGV4PSIwIj48L2Rpdj4gICAgPGRpdiBjbGFzcz0icmVzdWx0cy1saXN0IiBkYXRhLWJpbmRpbmc9IntAdmFyOiBzY3JvbGxDb250YWluZXJFbGVtZW50fXtAZXZlbnQtb25zY3JvbGw6IGhhbmRsZVNjcm9sbENoYW5nZX0iIHRhYmluZGV4PSItMSI+IDxkaXYgY2xhc3M9Imxpc3QtbWVudSBhY3RpdmUgaGFzLWljb24iIGRhdGEtYmluZGluZz0ie0Bzb3VyY2U6IHJlc3VsdHNQYWdlfXtAdmlzaWJsZTogcmVzdWx0c1BhZ2V9e0B2YXI6IHJlc3VsdHNMaXN0fSI+IDxkaXYgY2xhc3M9Imxpc3QtbWVudS1pdGVtIiBkYXRhLWJpbmRpbmc9IntAdGVtcGxhdGUtZm9yOiByZXN1bHRzUGFnZX17QGV2ZW50LW1vdXNlZG93bjogaGFuZGxlTW91c2VEb3dufXtAZXZlbnQtY2xpY2s6IGhhbmRsZUNsaWNrfXtAZXZlbnQtbW91c2VvdXQ6IGhhbmRsZU1vdXNlT3V0fXtAZXZlbnQtbW91c2V1cDogaGFuZGxlTW91c2VVcH17QGV2ZW50LXRvdWNoc3RhcnQ6IGhhbmRsZVRvdWNoU3RhcnR9e0BldmVudC10b3VjaG1vdmU6IGhhbmRsZVRvdWNoTW92ZX17QGV2ZW50LXRvdWNoY2FuY2VsOiBoYW5kbGVUb3VjaENhbmNlbH17QGV2ZW50LXRvdWNoZW5kOiBoYW5kbGVUb3VjaEVuZH0iIHRhYmluZGV4PSIwIj4gPGltZyBjbGFzcz0ibGlzdC1tZW51LWljb24iIGRhdGEtYmluZGluZz0ie3NyYzogaWNvblVyaX17YWx0OiBsYWJlbH17QHZpc2libGU6IGljb25Vcml9IiBhbHQ9IiAiIGFyaWEtaGlkZGVuPSJ0cnVlIiAvPiA8aW1nIGNsYXNzPSJsaXN0LW1lbnUtaWNvbiIgZGF0YS1iaW5kaW5nPSJ7YWx0OiBsYWJlbH17QGhpZGRlbjogaWNvblVyaX0iIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9tYXAtZGVmYXVsdC0yNC5wbmciIGFsdD0iICIgYXJpYS1oaWRkZW49InRydWUiIC8+IDxzcGFuIGNsYXNzPSJsaXN0LW1lbnUtZGV0YWlscyI+IDxidXR0b24gY2xhc3M9Imxpc3QtbWVudS1uYW1lIiBkYXRhLWJpbmRpbmc9IntAd2lkZ2V0OiBHZXRMYWJlbH17QHdpZGdldC1jb250ZXh0OiBAY29udGV4dH17QHZpc2libGU6IGxhYmVsfXtAZXZlbnQtbW91c2Vkb3duOiBoYW5kbGVNb3VzZURvd259e0BldmVudC1jbGljazogaGFuZGxlQ2xpY2t9e0BldmVudC1tb3VzZW91dDogaGFuZGxlTW91c2VPdXR9e0BldmVudC1tb3VzZXVwOiBoYW5kbGVNb3VzZVVwfXtAZXZlbnQtdG91Y2hzdGFydDogaGFuZGxlVG91Y2hTdGFydH17QGV2ZW50LXRvdWNobW92ZTogaGFuZGxlVG91Y2hNb3ZlfXtAZXZlbnQtdG91Y2hjYW5jZWw6IGhhbmRsZVRvdWNoQ2FuY2VsfXtAZXZlbnQtdG91Y2hlbmQ6IGhhbmRsZVRvdWNoRW5kfSI+PC9idXR0b24+IDxzcGFuIGNsYXNzPSJsaXN0LW1lbnUtZGVzYyIgZGF0YS1iaW5kaW5nPSJ7QHdpZGdldDogR2V0RGVzY3JpcHRpb259e0B3aWRnZXQtY29udGV4dDogQGNvbnRleHR9Ij48L3NwYW4+IDwvc3Bhbj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gICA8ZGl2IGNsYXNzPSJwYWdpbmctY29udHJvbCIgZGF0YS1iaW5kaW5nPSJ7QHNvdXJjZTogcHJlc2VudGFibGVSZXN1bHRzfXtjbGFzc05hbWU6IHBhZ2luZ0NvbnRyb2xDbGFzc05hbWV9Ij4gPGRpdiBjbGFzcz0icGFnaW5nLWNvbnRyb2wtaW5uZXIiIGRhdGEtYmluZGluZz0ie0B0ZW1wbGF0ZS1mb3I6IHByZXNlbnRhYmxlUmVzdWx0c30iPiA8ZGl2IGNsYXNzPSJwYWdpbmctcmVzdWx0LWluZm8iPiA8c3BhbiBjbGFzcz0icGFnaW5nLXJlc3VsdHMtdG90YWwiIGRhdGEtYmluZGluZz0ie0BoaWRkZW46IG51bWJlck9mSXRlbXN9e0B0ZXh0OiBAbGFuZ3VhZ2UtY29tbW9uLW5vLXJlc3VsdHN9Ij48L3NwYW4+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBudW1iZXJPZkl0ZW1zfSI+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcmVzdWx0cy1kaXNwbGF5aW5nfSI+PC9zcGFuPiZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJySW5kZXhTdGFydEZyb21PbmV9Ij48L3NwYW4+Jm5ic3A7LSZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJySW5kZXhFbmR9Ij48L3NwYW4+Jm5ic3A7KDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcmVzdWx0cy10b3RhbH0iPjwvc3Bhbj46Jm5ic3A7PHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IG51bWJlck9mSXRlbXN9Ij48L3NwYW4+KSA8L3NwYW4+IDwvZGl2PiA8ZGl2IGNsYXNzPSJwYWdpbmctYnV0dG9ucyIgZGF0YS1iaW5kaW5nPSJ7QHZpc2libGU6IG51bWJlck9mSXRlbXN9Ij4gPGJ1dHRvbiBjbGFzcz0iZmlyc3QiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlRmlyc3R9e3RpdGxlOiBAbGFuZ3VhZ2UtcGFnZS1maXJzdH0iPjxpbWcgc3JjPSJSZXNvdXJjZXMvSW1hZ2VzL0ljb25zL3BhZ2luZy1jb250cm9sLWZpcnN0LTQ0LnBuZyIgYWx0PSIgIi8+PC9idXR0b24+IDxidXR0b24gY2xhc3M9InByZXYiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlUHJldn17dGl0bGU6IEBsYW5ndWFnZS1wYWdlLXByZXZ9Ij48aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9wYWdpbmctY29udHJvbC1wcmV2aW91cy00NC5wbmciIGFsdD0iICIvPjwvYnV0dG9uPiA8c3BhbiBjbGFzcz0icGFnaW5nLWJ1dHRvbnMtaW5mbyIgdGFiaW5kZXg9IjAiPiA8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLXJlc3VsdHMtcGFnZX0iPjwvc3Bhbj4mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogY3VyclBhZ2VOdW1iZXJ9Ij48L3NwYW4+Jm5ic3A7PHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IEBsYW5ndWFnZS1yZXN1bHRzLXBhZ2Utb2Z9Ij48L3NwYW4+Jm5ic3A7PHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IGxhc3RQYWdlTnVtYmVyfSI+PC9zcGFuPiA8L3NwYW4+IDxidXR0b24gY2xhc3M9Im5leHQiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlTmV4dH17dGl0bGU6IEBsYW5ndWFnZS1wYWdlLW5leHR9Ij48aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9wYWdpbmctY29udHJvbC1uZXh0LTQ0LnBuZyIgYWx0PSIgIiAvPjwvYnV0dG9uPiA8YnV0dG9uIGNsYXNzPSJsYXN0IiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlUGFnZUxhc3R9e3RpdGxlOiBAbGFuZ3VhZ2UtcGFnZS1sYXN0fSI+PGltZyBzcmM9IlJlc291cmNlcy9JbWFnZXMvSWNvbnMvcGFnaW5nLWNvbnRyb2wtbGFzdC00NC5wbmciIGFsdD0iICIgLz48L2J1dHRvbj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gIDwvZGl2PiA=");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/results/ResultsTableView.html", "html", "PGRpdiBjbGFzcz0icmVzdWx0cy10YWJsZS1hY3Rpb25zLXdpZGdldCIgZGF0YS1iaW5kaW5nPSJ7QHZpc2libGU6IGZlYXR1cmVTZXRDb2xsZWN0aW9ufXtAd2lkZ2V0OiBSZXN1bHRzVGFibGVBY3Rpb25zV2lkZ2V0fXtAd2lkZ2V0LWNvbnRleHQ6IGZlYXR1cmVTZXRDb2xsZWN0aW9ufXtAd2lkZ2V0LXJlcXVpcmVkOiBmYWxzZX0iDQogICAgIGRhdGEtbWVudS1pZD0iUmVzdWx0c1RhYmxlQWN0aW9ucyIgZGF0YS1tZW51LXRlbXBsYXRlPSJNYXBwaW5nL2luZnJhc3RydWN0dXJlL21lbnVzL01lbnVIeXBlcmxpbmtWaWV3Lmh0bWwiPjwvZGl2PiA8ZGl2IGNsYXNzPSJyZXN1bHRzIj4gIDxkaXYgY2xhc3M9Im5vLXJlc3VsdHMiIGRhdGEtYmluZGluZz0ie0BoaWRkZW46IGhhc0ZlYXR1cmVTZXRzfXtAdGV4dDogc2VhcmNoU3VnZ2VzdGlvbn0iPjwvZGl2PiAgIDxkaXYgY2xhc3M9InRhYi1jb250YWluZXIiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBoYXNGZWF0dXJlU2V0c317QHZhcjogc2Nyb2xsaW5nVGFiQ29udGFpbmVyRWxlbWVudH0iPiA8dGFibGU+IDx0cj4gPHRkIGNsYXNzPSJ0YWItbGVmdC1zY3JvbGwiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiB0YWJDb250cm9sc0VuYWJsZWR9e0BjbGFzcy1kaXNhYmxlZDogbGVmdFNjcm9sbFRhYkRpc2FibGVkfXtAdmFyOiBzY3JvbGxUYWJMZWZ0RWxlbWVudH0iPiA8YnV0dG9uIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVUYWJTY3JvbGxCYWNrfXt0aXRsZTogQGxhbmd1YWdlLXRhYi1zY3JvbGwtcHJldn0iPiA8aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9jaGV2cm9uLWxlZnQtMTYucG5nIiBhbHQ9IiI+IDwvYnV0dG9uPiA8L3RkPiA8dGQgZGF0YS1iaW5kaW5nPSJ7QHNvdXJjZTogZmVhdHVyZVNldENvbGxlY3Rpb259Ij4gPGRpdiBjbGFzcz0idGFiLWNvbnRhaW5lciIgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogZmVhdHVyZVNldENvbGxlY3Rpb259e0B2YXI6IHRhYkNvbnRhaW5lckVsZW1lbnR9Ij4gPHVsIGNsYXNzPSJ0YWItY29udHJvbCIgZGF0YS1iaW5kaW5nPSJ7QHNvdXJjZTogZmVhdHVyZVNldHN9e0B2YXI6IHRhYkVsZW1lbnRzfSI+IDxsaSBkYXRhLWJpbmRpbmc9IntAdGVtcGxhdGUtZm9yOiBmZWF0dXJlU2V0c30iPiA8YnV0dG9uIGNsYXNzPSJ0YWIiIGRhdGEtYmluZGluZz0ie0BjbGFzcy10YWItYWN0aXZlOiBpc1NlbGVjdGVkSW5Db2xsZWN0aW9ufXtAbm9jbGFzcy10YWI6IGlzU2VsZWN0ZWRJbkNvbGxlY3Rpb259e0BldmVudC1vbmNsaWNrOiBoYW5kbGVUYWJDbGlja30iPiA8c3Ryb25nIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBkaXNwbGF5TmFtZX17dGl0bGU6IGRpc3BsYXlOYW1lfSI+PC9zdHJvbmc+IDwvYnV0dG9uPiA8L2xpPiA8L3VsPiA8L2Rpdj4gPC90ZD4gPHRkIGNsYXNzPSJ0YWItcmlnaHQtc2Nyb2xsIiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogdGFiQ29udHJvbHNFbmFibGVkfXtAY2xhc3MtZGlzYWJsZWQ6IHJpZ2h0U2Nyb2xsVGFiRGlzYWJsZWR9e0B2YXI6IHNjcm9sbFRhYlJpZ2h0RWxlbWVudH0iPiA8YnV0dG9uIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVUYWJTY3JvbGxGb3J3YXJkfXt0aXRsZTogQGxhbmd1YWdlLXRhYi1zY3JvbGwtbmV4dH0iPiA8aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9jaGV2cm9uLXJpZ2h0LTE2LnBuZyI+IDwvYnV0dG9uPiA8L3RkPiA8L3RyPiA8L3RhYmxlPiA8L2Rpdj4gICA8ZGl2IGNsYXNzPSJ3aWRnZXQiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBoYXNGZWF0dXJlU2V0c317QHdpZGdldDogVGFibGVWaWV3V2lkZ2V0fXtAd2lkZ2V0LWNvbnRleHQ6IEBjb250ZXh0fXtAd2lkZ2V0LXJlcXVpcmVkOiBmYWxzZX0iPjwvZGl2PiAgIDxkaXYgY2xhc3M9InBhZ2luZy1jb250cm9sIiBkYXRhLWJpbmRpbmc9IntAc291cmNlOiBwcmVzZW50YWJsZVJlc3VsdHN9Ij4gPGRpdiBjbGFzcz0icGFnaW5nLWNvbnRyb2wtaW5uZXIiIGRhdGEtYmluZGluZz0ie0B0ZW1wbGF0ZS1mb3I6IHByZXNlbnRhYmxlUmVzdWx0c30iPiA8ZGl2IGNsYXNzPSJwYWdpbmctcmVzdWx0LWluZm8iPiA8c3BhbiBkYXRhLWJpbmRpbmc9IntAaGlkZGVuOiBudW1iZXJPZkl0ZW1zfXtAdGV4dDogQGxhbmd1YWdlLWNvbW1vbi1uby1yZXN1bHRzfSI+PC9zcGFuPiA8c3BhbiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogbnVtYmVyT2ZJdGVtc30iPiA8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLXJlc3VsdHMtZGlzcGxheWluZ30iPjwvc3Bhbj4mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogY3VyckluZGV4U3RhcnRGcm9tT25lfSI+PC9zcGFuPiZuYnNwOy0mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogY3VyckluZGV4RW5kfSI+PC9zcGFuPiZuYnNwOyg8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLXJlc3VsdHMtdG90YWx9Ij48L3NwYW4+OiZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBudW1iZXJPZkl0ZW1zfSI+PC9zcGFuPikgPC9zcGFuPiA8L2Rpdj4gPGRpdiBjbGFzcz0icGFnaW5nLWJ1dHRvbnMiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBudW1iZXJPZkl0ZW1zfSI+IDxidXR0b24gY2xhc3M9ImZpcnN0IiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlUGFnZUZpcnN0fXt0aXRsZTogQGxhbmd1YWdlLXJlc3VsdHMtcGFnZS1maXJzdH0iPjxpbWcgc3JjPSJSZXNvdXJjZXMvSW1hZ2VzL0ljb25zL3BhZ2luZy1jb250cm9sLWZpcnN0LTQ0LnBuZyIgYWx0PSIgIi8+PC9idXR0b24+IDxidXR0b24gY2xhc3M9InByZXYiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlUHJldn17dGl0bGU6IEBsYW5ndWFnZS1yZXN1bHRzLXBhZ2UtcHJldn0iPjxpbWcgc3JjPSJSZXNvdXJjZXMvSW1hZ2VzL0ljb25zL3BhZ2luZy1jb250cm9sLXByZXZpb3VzLTQ0LnBuZyIgYWx0PSIgIi8+PC9idXR0b24+IDxzcGFuIGNsYXNzPSJwYWdpbmctYnV0dG9ucy1pbmZvIiB0YWJpbmRleD0iMCI+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcmVzdWx0cy1wYWdlfSI+PC9zcGFuPiZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJyUGFnZU51bWJlcn0iPjwvc3Bhbj4mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLXJlc3VsdHMtcGFnZS1vZn0iPjwvc3Bhbj4mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogbGFzdFBhZ2VOdW1iZXJ9Ij48L3NwYW4+IDwvc3Bhbj4gPGJ1dHRvbiBjbGFzcz0ibmV4dCIgZGF0YS1iaW5kaW5nPSJ7QGV2ZW50LW9uY2xpY2s6IGhhbmRsZVBhZ2VOZXh0fXt0aXRsZTogQGxhbmd1YWdlLXJlc3VsdHMtcGFnZS1uZXh0fSI+PGltZyBzcmM9IlJlc291cmNlcy9JbWFnZXMvSWNvbnMvcGFnaW5nLWNvbnRyb2wtbmV4dC00NC5wbmciIGFsdD0iICIvPjwvYnV0dG9uPiA8YnV0dG9uIGNsYXNzPSJsYXN0IiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlUGFnZUxhc3R9e3RpdGxlOiBAbGFuZ3VhZ2UtcmVzdWx0cy1wYWdlLWxhc3R9Ij48aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9wYWdpbmctY29udHJvbC1sYXN0LTQ0LnBuZyIgYWx0PSIgIi8+PC9idXR0b24+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+ICA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/ui/components/PagingControls/PagingControlsView.html", "html", "PGRpdiBjbGFzcz0icGFnaW5nLWNvbnRyb2wiIGRhdGEtYmluZGluZz0ie0Bzb3VyY2U6IHByZXNlbnRhYmxlUmVzdWx0c30iPiA8ZGl2IGNsYXNzPSJwYWdpbmctY29udHJvbC1pbm5lciIgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogcHJlc2VudGFibGVSZXN1bHRzfSI+IDxkaXYgY2xhc3M9InBhZ2luZy1yZXN1bHQtaW5mbyI+IDxzcGFuIGRhdGEtYmluZGluZz0ie0BoaWRkZW46IG51bWJlck9mSXRlbXN9e0B0ZXh0OiBAbGFuZ3VhZ2UtY29tbW9uLW5vLXJlc3VsdHN9Ij48L3NwYW4+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBudW1iZXJPZkl0ZW1zfSI+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcGFnZS1kaXNwbGF5aW5nfSI+PC9zcGFuPiZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJySW5kZXhTdGFydEZyb21PbmV9Ij48L3NwYW4+Jm5ic3A7LSZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJySW5kZXhFbmR9Ij48L3NwYW4+Jm5ic3A7KDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcGFnZS10b3RhbH0iPjwvc3Bhbj46Jm5ic3A7PHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IG51bWJlck9mSXRlbXN9Ij48L3NwYW4+KSA8L3NwYW4+IDwvZGl2PiA8ZGl2IGNsYXNzPSJwYWdpbmctYnV0dG9ucyIgZGF0YS1iaW5kaW5nPSJ7QHZpc2libGU6IG51bWJlck9mSXRlbXN9Ij4gPGJ1dHRvbiBjbGFzcz0iZmlyc3QiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlRmlyc3R9e3RpdGxlOiBAbGFuZ3VhZ2UtcGFnZS1maXJzdH0iPjxpbWcgc3JjPSJSZXNvdXJjZXMvSW1hZ2VzL0ljb25zL3BhZ2luZy1jb250cm9sLWZpcnN0LTQ0LnBuZyIgYWx0PSIgIiAvPjwvYnV0dG9uPiA8YnV0dG9uIGNsYXNzPSJwcmV2IiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlUGFnZVByZXZ9e3RpdGxlOiBAbGFuZ3VhZ2UtcGFnZS1wcmV2fSI+PGltZyBzcmM9IlJlc291cmNlcy9JbWFnZXMvSWNvbnMvcGFnaW5nLWNvbnRyb2wtcHJldmlvdXMtNDQucG5nIiBhbHQ9IiAiIC8+PC9idXR0b24+IDxzcGFuIGNsYXNzPSJwYWdpbmctYnV0dG9ucy1pbmZvIiB0YWJpbmRleD0iMCI+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBAbGFuZ3VhZ2UtcGFnZS1wYWdlfSI+PC9zcGFuPiZuYnNwOzxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBjdXJyUGFnZU51bWJlcn0iPjwvc3Bhbj4mbmJzcDs8c3BhbiBkYXRhLWJpbmRpbmc9IntAdGV4dDogQGxhbmd1YWdlLXBhZ2Utb2Z9Ij48L3NwYW4+Jm5ic3A7PHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IGxhc3RQYWdlTnVtYmVyfSI+PC9zcGFuPiA8L3NwYW4+IDxidXR0b24gY2xhc3M9Im5leHQiIGRhdGEtYmluZGluZz0ie0BldmVudC1vbmNsaWNrOiBoYW5kbGVQYWdlTmV4dH17dGl0bGU6IEBsYW5ndWFnZS1wYWdlLW5leHR9Ij48aW1nIHNyYz0iUmVzb3VyY2VzL0ltYWdlcy9JY29ucy9wYWdpbmctY29udHJvbC1uZXh0LTQ0LnBuZyIgYWx0PSIgIiAvPjwvYnV0dG9uPiA8YnV0dG9uIGNsYXNzPSJsYXN0IiBkYXRhLWJpbmRpbmc9IntAZXZlbnQtb25jbGljazogaGFuZGxlUGFnZUxhc3R9e3RpdGxlOiBAbGFuZ3VhZ2UtcGFnZS1sYXN0fSI+PGltZyBzcmM9IlJlc291cmNlcy9JbWFnZXMvSWNvbnMvcGFnaW5nLWNvbnRyb2wtbGFzdC00NC5wbmciIGFsdD0iICIgLz48L2J1dHRvbj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/ui/components/SmartPanel/SmartPanelView.html", "html", "PGRpdiBjbGFzcz0idmlldy1jb250YWluZXItdmlldyBzbWFydC1wYW5lbCIgZGF0YS1iaW5kaW5nPSJ7QHZhcjogY29udGFpbmVyRWxlbWVudH0iPiAgPGJ1dHRvbiBjbGFzcz0iYm90dG9tLXBhbmVsLXJlc2l6ZSByZXNpemUtaGFuZGxlIiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogcmVzaXplWX17QGV2ZW50LW1vdXNlZG93bjogaGFuZGxlSGVhZGVyTW91c2VEb3dufXtAZXZlbnQtdG91Y2hzdGFydDogaGFuZGxlSGVhZGVyVG91Y2hTdGFydH17dGl0bGU6IEBsYW5ndWFnZS1zbWFydC1wYW5lbC1yZXNpemV9Ij4gPHNwYW4gY2xhc3M9Imljb24tZHJhZyI+PC9zcGFuPiA8L2J1dHRvbj4gPGRpdiBjbGFzcz0icGFuZWwtaGVhZGVyIGJhbm5lci1ub3NlbGVjdCIgIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBoZWFkZXJJc1Zpc2libGV9e0B2YXI6IGhlYWRlckVsZW1lbnR9e0BldmVudC1tb3VzZWRvd246IGhhbmRsZUhlYWRlck1vdXNlRG93bn0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGV2ZW50LXRvdWNoc3RhcnQ6IGhhbmRsZUhlYWRlclRvdWNoU3RhcnR9e0BjbGFzcy1yZXNpemUtaG9yaXpvbnRhbC1oaW50OiByZXNpemVYfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtAY2xhc3MtcmVzaXplLXZlcnRpY2FsLWhpbnQ6IHJlc2l6ZVl9Ij4gPGRpdiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogdGl0bGVCYXJJc1Zpc2libGV9Ij4gPGJ1dHRvbiBjbGFzcz0icGFuZWwtaGVhZGVyLWJ1dHRvbiByaWdodCBjbG9zZS0xNiIgZGF0YS1iaW5kaW5nPSJ7QHZpc2libGU6IHNob3dpbmdYQnV0dG9ufXtAZXZlbnQtb25jbGljazogaGFuZGxlQ2xpY2tDbG9zZX17dGl0bGU6IEBsYW5ndWFnZS1zbWFydC1wYW5lbC1jbG9zZX0iPjwvYnV0dG9uPiA8YnV0dG9uIGNsYXNzPSJwYW5lbC1oZWFkZXItYnV0dG9uIHJpZ2h0IiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogc2hvd2luZ01heGltaXplQnV0dG9ufXtAY2xhc3MtbWluaW1pemUtMTY6IHBhbmVsTWF4aW1pemVkfXtAbm9jbGFzcy1tYXhpbWl6ZS0xNjogcGFuZWxNYXhpbWl6ZWR9e0BldmVudC1vbmNsaWNrOiBoYW5kbGVNYXhpbWl6ZVRvZ2dsZUNsaWNrfXt0aXRsZTogQGxhbmd1YWdlLXNtYXJ0LXBhbmVsLW1heGltaXplLXJlc3RvcmV9Ij48L2J1dHRvbj4gPGJ1dHRvbiBjbGFzcz0icGFuZWwtaGVhZGVyLWJ1dHRvbiBtZW51LWJ1dHRvbiIgZGF0YS1iaW5kaW5nPSJ7QGVuYWJsZWQ6IGhhc0V4ZWN1dGFibGVNZW51SXRlbXN9e0B2aXNpYmxlOiBoYXNIb2lzdGVkTWVudX17QGV2ZW50LW9uY2xpY2s6IGhhbmRsZVRhcE1lbnVCdXR0b259e0B2YXI6IG1lbnVCdXR0b25FbGVtZW50fXt0aXRsZTogQGxhbmd1YWdlLXNtYXJ0LXBhbmVsLW1lbnV9Ij48L2J1dHRvbj4gPGJ1dHRvbiBjbGFzcz0icGFuZWwtaGVhZGVyLWJ1dHRvbiBsZWZ0IGJhY2stMTYiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBzaG93aW5nQmFja0J1dHRvbn17QGV2ZW50LWNsaWNrOiBoYW5kbGVDbGlja0JhY2t9e3RpdGxlOiBAbGFuZ3VhZ2Utc21hcnQtcGFuZWwtYmFja30iPjwvYnV0dG9uPiA8aDIgY2xhc3M9InBhbmVsLXRpdGxlIGJhbm5lci1ub3NlbGVjdCI+IDxpbWcgc3JjPSJSZXNvdXJjZXMvSW1hZ2VzL2xvYWRlci1zbWFsbC5naWYiIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBzaG93QnVzeUluZGljYXRvcn0iIGFsdD0iICIgLz4gPHNwYW4gZGF0YS1iaW5kaW5nPSJ7QHRleHQ6IGNvbnRhaW5lclRpdGxlfXtAdmlzaWJsZTogY29udGFpbmVyVGl0bGV9Ij48L3NwYW4+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B2aXNpYmxlOiBjb250YWluZXJUaXRsZX0iPiZuYnNwOy0mbmJzcDs8L3NwYW4+IDxzcGFuIGRhdGEtYmluZGluZz0ie0B0ZXh0OiB2aWV3VGl0bGV9e0B2aXNpYmxlOiB2aWV3VGl0bGV9Ij48L3NwYW4+IDwvaDI+IDwvZGl2PiA8ZGl2IGNsYXNzPSJzbWFydC1wYW5lbC1ob2lzdGVkLW1lbnUtaW5saW5lIiBkYXRhLWJpbmRpbmc9IntAdmlzaWJsZTogaW5saW5lTWVudUlzT3Blbn17QHdpZGdldDogU21hcnRQYW5lbEhvaXN0ZWRNZW51fXtAd2lkZ2V0LXJlcXVpcmVkOiBmYWxzZX17QHdpZGdldC1jb250ZXh0OiBob2lzdGVkTWVudVZpZXdNb2RlbH0iPjwvZGl2PiA8ZGl2IGRhdGEtYmluZGluZz0ie0Bkb206IGhlYWRlckluc2VydERvbUVsZW1lbnR9Ij48L2Rpdj4gPC9kaXY+ICAgPGRpdiBjbGFzcz0icmVnaW9uIHBhbmVsLXN0YXR1cy1yZWdpb24iIGRhdGEtYmluZGluZz0ie0B2YXI6IHN0YXR1c1JlZ2lvbkVsZW1lbnR9Ij48L2Rpdj4gICA8ZGl2IGNsYXNzPSJwYW5lbC1zY3JvbGwtY29udGFpbmVyIiBkYXRhLWJpbmRpbmc9IntkYXRhLXJlZ2lvbi1uYW1lOiByZWdpb25OYW1lfXtkYXRhLXJlZ2lvbi1hZGFwdGVyOiByZWdpb25UeXBlfXtAdmFyOiBzY3JvbGxSZWdpb25FbGVtZW50fXtAZXZlbnQtb25zY3JvbGw6IGhhbmRsZVNjcm9sbENoYW5nZX0iIHRhYmluZGV4PSItMSI+PC9kaXY+ICAgPGRpdiBjbGFzcz0icGFuZWwtZm9vdGVyIiBkYXRhLWJpbmRpbmc9IntAdmFyOiBmb290ZXJFbGVtZW50fXtAdmlzaWJsZTogZm9vdGVySW5zZXJ0RG9tRWxlbWVudH0iIHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGUiPiA8ZGl2IGNsYXNzPSJwYW5lbC1mb290ZXItaW5uZXIiIGRhdGEtYmluZGluZz0ie0Bkb206IGZvb3Rlckluc2VydERvbUVsZW1lbnR9Ij48L2Rpdj4gPC9kaXY+ICA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Mapping/infrastructure/ui/components/Table/TableView.html", "html", "PGRpdiBjbGFzcz0icmVzdWx0cy10YWJsZSIgZGF0YS1iaW5kaW5nPSJ7QHZhcjogdGFibGVDb250YWluZXJFbGVtZW50fSI+IDx0YWJsZT4gPHRoZWFkPiA8dHIgZGF0YS1iaW5kaW5nPSJ7QHNvdXJjZTogY29sdW1uSGVhZGVyc30iPiA8dGggZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogY29sdW1uSGVhZGVyc317QHZpc2libGU6IHZpc2libGV9e0BldmVudC1vbmNsaWNrOiBoYW5kbGVDb2x1bW5IZWFkQ2xpY2t9IiBzY29wZT0iY29sIj4gPGJ1dHRvbiBkYXRhLWJpbmRpbmc9InthcmlhLWxhYmVsOiBjb2x1bW5EZXNjcmlwdG9yfSI+IDxzcGFuIGRhdGEtYmluZGluZz0ie2NsYXNzOiBzb3J0Q2xhc3N9e3RpdGxlOiBAbGFuZ3VhZ2UtcmVzdWx0cy1zb3J0fSI+PC9zcGFuPiA8c3BhbiBjbGFzcz0icmVzdWx0LWhlYWRpbmciIGRhdGEtYmluZGluZz0ie0B0ZXh0OiBwcmVzZW50YWJsZVZhbHVlfSI+PC9zcGFuPiA8L2J1dHRvbj4gPC90aD4gPC90cj4gPC90aGVhZD4gPHRib2R5IGRhdGEtYmluZGluZz0ie0Bzb3VyY2U6IHJlY29yZHN9Ij4gPHRyIGRhdGEtYmluZGluZz0ie0B0ZW1wbGF0ZS1mb3I6IHJlY29yZHN9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QHNvdXJjZTogYXR0cmlidXRlc30NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtAZXZlbnQtbW91c2Vkb3duOiBoYW5kbGVNb3VzZURvd259DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGV2ZW50LW1vdXNldXA6IGhhbmRsZU1vdXNlVXB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGV2ZW50LXRvdWNoc3RhcnQ6IGhhbmRsZVRvdWNoU3RhcnR9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGV2ZW50LXRvdWNobW92ZTogaGFuZGxlVG91Y2hNb3ZlfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge0BldmVudC10b3VjaGVuZDogaGFuZGxlVG91Y2hFbmR9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7QGV2ZW50LWNsaWNrOiBoYW5kbGVDbGlja30iPiA8dGQgZGF0YS1iaW5kaW5nPSJ7QHRlbXBsYXRlLWZvcjogYXR0cmlidXRlc317QHZpc2libGU6IHZpc2libGV9Ij4gPGEgZGF0YS1iaW5kaW5nPSJ7QHZpc2libGU6IGRpc3BsYXlBc1VybH17QGV2ZW50LW9uY2xpY2s6IGhhbmRsZUNsaWNrQXR0cmlidXRlbGlua317aHJlZjogdmFsdWV9e0B0ZXh0OiBwcmVzZW50YWJsZVZhbHVlfSIgdGFyZ2V0PSJfYmxhbmsiPjwvYT4gPGJ1dHRvbiBkYXRhLWJpbmRpbmc9IntAaGlkZGVuOiBkaXNwbGF5QXNVcmx9e0B0ZXh0OiBwcmVzZW50YWJsZVZhbHVlfSIgdGFiaW5kZXg9IjAiPjwvYnV0dG9uPiA8L3RkPiA8L3RyPiA8L3Rib2R5PiA8L3RhYmxlPiA8L2Rpdj4g");
geocortex.resourceManager.register("Mapping.Infrastructure", "inv", "Invariant", "json", "");
geocortex.framework.notifyLibraryDownload("Mapping.Infrastructure");
