function shim(e,i,t){if("string"==typeof e&&(t=i,i=e),"undefined"==typeof t)return void console.warn("Undefined shim for: "+i);for(var r=i.split("."),n=null,a=window,o=0,s=r.length;o<s;o++)n=r[o],o==s-1?a[n]=t:a[n]||(a[n]={}),a=a[n]}require({cache:{"Mapping/modules/LayerAddition/LayerAdditionModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,i,t){"use strict";var r=function(e){function i(i,t){return e.call(this,i,t)||this}return __extends(i,e),i.prototype.exportState=function(){return e.prototype.exportState.call(this)},i.prototype.applyState=function(i){return e.prototype.applyState.call(this,i)},i.prototype.getStateFilter=function(){return null},i}(t.ModuleBase);i.LayerAddition=r})},"Mapping/modules/LayerAddition/LayerAdditionState":function(){define(["require","exports"],function(e,i){"use strict"})},"Mapping/modules/LayerAddition/LayerAdditionViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","./Dialogs/AddLayerDialogViewModel","./Dialogs/ServiceConnectionsDialogViewModel","./Dialogs/MapServicesDialogViewModel","./Dialogs/SubLayersDialogViewModel","geocortex/essentials/serviceDiscovery/SiteServiceDiscoveryProvider","geocortex/essentials/KmlService","geocortex/infrastructure/GeometryUtils","geocortex/infrastructure/commandArgs/AddStatusArgs"],function(e,i,t,r,n,a,o,s,d,l,c){"use strict";i.ERROR_CANCELLED="LayerAdditionError/Cancelled",i.ERROR_INVALID_SERVICE_METADATA="LayerAdditionError/InvalidServiceMetadata",i.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT="LayerAdditionError/CannotZoomToLayerExtent";var u=function(e){function t(i,t){var s=e.call(this,i,t)||this;return s.initialized=!1,s.supported=!1,s.statusMessageViewId="LayerAdditionStatusMessageView",s.statusMessageRegionName="LayerListStatusMessageRegion",s.zoomToUserAddedLayers=!0,s.smartOrderUserAddedLayers=!0,s.layerDefaults={insertPosition:"top",searchable:!0,identifiable:!0,showMapTips:!0},s._wizardState={searchText:void 0,serviceConnections:void 0,selectedConnection:void 0,selectedMapServiceItem:void 0,selectedSubLayerItem:void 0,mapServices:void 0},s.searchFragment=new r.AddLayerDialogViewModel(s,i,t),s.serviceConnectionsFragment=new n.ServiceConnectionsDialogViewModel(s,i,t),s.mapServicesFragment=new a.MapServicesDialogViewModel(s,i,t),s.subLayersFragment=new o.SubLayersDialogViewModel(s,i,t),s}return __extends(t,e),t.prototype.initialize=function(i,t){var r=this;e.prototype.initialize.call(this,i),i=i||{},this.zoomToUserAddedLayers=void 0!=i.zoomToUserAddedLayers?i.zoomToUserAddedLayers:this.zoomToUserAddedLayers,this.smartOrderUserAddedLayers=void 0!=i.smartOrderUserAddedLayers?i.smartOrderUserAddedLayers:this.smartOrderUserAddedLayers;var n=i.layerDefaults;void 0!=n&&(this.layerDefaults.insertPosition=void 0!=n.insertPosition?n.insertPosition:this.layerDefaults.insertPosition,this.layerDefaults.searchable=void 0!=n.searchable?n.searchable:this.layerDefaults.searchable,this.layerDefaults.identifiable=void 0!=n.identifiable?n.identifiable:this.layerDefaults.identifiable,this.layerDefaults.showMapTips=void 0!=n.showMapTips?n.showMapTips:this.layerDefaults.showMapTips),this._registerCommandsAndEvents(),this._initProvider(t).then(function(e){return r.setServiceDiscoveryProvider(e),r.initialized=!0,r.supported=!0,e instanceof s.SiteServiceDiscoveryProvider&&(r.supported=e.supported),e}).lastly(function(){return r._raiseCanExecuteChanged()})},t.prototype._initProvider=function(e){var i=this;return e?Promise.resolve(e):this.app.waitUntilSiteInitialized().then(function(){var e=new s.SiteServiceDiscoveryProvider;return e.initialize(i.app.site),e})},t.prototype.getCurrentState=function(){return this._wizardState},t.prototype.getServiceDiscoveryProvider=function(){return this._serviceDiscovery},t.prototype.setServiceDiscoveryProvider=function(e){this._serviceDiscovery=e},t.prototype._registerCommandsAndEvents=function(){},t.prototype._raiseCanExecuteChanged=function(){this.app.command("AddMapLayerInteractive").raiseCanExecuteChanged()},t.prototype.reset=function(){this.searchFragment.reset(),this.serviceConnectionsFragment.reset(),this.mapServicesFragment.reset(),this.subLayersFragment.reset(),this._wizardState={searchText:void 0,serviceConnections:void 0,selectedConnection:void 0,selectedMapServiceItem:void 0,selectedSubLayerItem:void 0,mapServices:void 0}},t.prototype.canSaveProject=function(){var e=this;return new Promise(function(i){var t=e.app.command("SaveProject").canExecute();return i(t)})},t.prototype.zoomTo=function(e){var t=this,r=[];if(e instanceof d.KmlService){var n=e.serviceLayer.getLayers();r.push.apply(r,n)}else r.push.apply(r,e.layers);for(var a=[],o=0,s=r;o<s.length;o++){var c=s[o];c.fullExtent&&l.isValidGeometry(c.fullExtent)&&a.push(c.fullExtent)}return l.unionGeometries(a).then(function(e){return t._convertToExtent(e)}).then(function(e){return e&&t.app.command("ZoomToExtent").execute(e)})["catch"](function(e){var t=new Error(e.message);throw t.name=i.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT,t})},t.prototype._convertToExtent=function(e){var i=e?e.type:null;switch(i){case"extent":return e;case"polygon":case"polyline":var t=e;return t.getExtent();default:return null}},t.prototype.switchToLayerList=function(e,i){var t=this;return new Promise(function(e){return t.app.command("SwitchToLayerView").execute(),i&&t.addStatus(i),e()})},t.prototype.addStatus=function(e,i){if(e){var t=new c.AddStatusArgs(e);return t.id=i||this.statusMessageViewId,t.timeoutMS=0,this.statusMessageRegionName&&(t.regionName=this.statusMessageRegionName),this.app.command("AddStatus").execute(t),t.id}return null},t.prototype.removeStatus=function(e){this.app.command("RemoveStatus").execute(e||this.statusMessageViewId)},t.prototype.handleError=function(e){return e.name===i.ERROR_CANCELLED||(e.name===i.ERROR_INVALID_SERVICE_METADATA?this.app.command("Alert").execute(this.getResource("language-layer-addition-error-no-service-metadata-message"),this.getResource("language-layer-addition-error-no-service-metadata")):e.name===i.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT?this.app.trace.warning(this.getResource("language-layer-addition-error-cannot-zoom-to-layer")):/The ID .* is not the well-known ID of a supported coordinate system\./.test(e.message)?this.app.command("Alert").execute(this.getResource("language-layer-addition-error-unsupported-wkid-message"),this.getResource("language-layer-addition-error-unsupported-wkid")):(this.app.trace.error(e.message,e),this.app.command("Alert").execute(this.getResource("language-layer-addition-error-message"),this.getResource("language-layer-addition-error")))),Promise.reject(e)},t}(t.ViewModelBase);i.LayerAdditionViewModel=u})},"Mapping/modules/LayerAddition/LayerPropertiesView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,i,t){"use strict";var r=function(e){function i(i,t){var r=e.call(this,i,t)||this;return r.registerCommands(),r}return __extends(i,e),i.prototype.attach=function(i){e.prototype.attach.call(this,i),this.viewModel=i},i.prototype.registerCommands=function(){var e=this;this.app.command("ShowLayerPropertiesView").register(this,this.showLayerPropertiesView,this.canExecuteShowLayerPropertiesView),this.app.command("HideLayerPropertiesView").register(this,function(){e.isActive&&e.app.viewManager.deactivateView(e)})},i.prototype.canExecuteShowLayerPropertiesView=function(e){return e&&e.isUserCreated&&String.isNullOrEmpty(e.catalogId)},i.prototype.showLayerPropertiesView=function(e){this.viewModel.obsLayer.set(e),this.title.set(this.getResource("language-layer-addition-layer-properties")),this.app.command("ActivateView").execute(this.id)},i.prototype.handleClickButtonOK=function(e,i,t){this.viewModel.applyChanges(),this.app.viewManager.deactivateView(this)},i.prototype.handleClickButtonCancel=function(e,i,t){this.app.viewManager.deactivateView(this)},i}(t.ViewBase);i.LayerPropertiesView=r})},"Mapping/modules/LayerAddition/LayerPropertiesViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,i,t,r){"use strict";var n=function(e){function i(){var i=null!==e&&e.apply(this,arguments)||this;return i.obsLayer=new r.Observable,i.layerName=new r.Observable(""),i.layerIsSearchable=new r.Observable((!1)),i.layerIsIdentifiable=new r.Observable((!1)),i.layerIsQueryable=new r.Observable((!1)),i.layerShowsMapTips=new r.Observable((!1)),i.layerSupportsIdentify=new r.Observable((!1)),i.layerSupportsQuery=new r.Observable((!1)),i.isGroupLayer=new r.Observable((!1)),i.isHandheld=new r.Observable((!1)),i}return __extends(i,e),i.prototype.initialize=function(e){var i=this;this.obsLayer.bind(this,function(e){i.loadLayerInformation(e)})},i.prototype.loadLayerInformation=function(e){this.layer=e,this.layerName.set(this.layer.displayName),this.layerIsIdentifiable.set(this.layer.identifiable),this.layerIsSearchable.set(this.layer.searchable),this.layerShowsMapTips.set(this.layer.showMapTips),this.layerIsQueryable.set(this.layer.queryable),this.layerSupportsQuery.set(this.layer.supportsQuery),this.layerSupportsIdentify.set(this.layer.supportsIdentify),this.isHandheld.set(this.app.configuration.mobileMode),this.isGroupLayer.set(this.layer.subLayerIds&&this.layer.subLayerIds.length>0)},i.prototype.applyChanges=function(){this.layer.displayName=this.layerName.get(),this.app.event("LayerDisplayNameChanged").publish(this.layer),this.layer.identifiable=this.layerIsIdentifiable.get(),this.layer.searchable=this.layerIsSearchable.get(),this.layer.showMapTips=this.layerShowsMapTips.get(),this.layer.queryable=this.layerIsQueryable.get();var e=this.layer.mapService;!(e.layers.length<2)||e.supportsDynamicLayers||e.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer||(this.layer.mapService.displayName=this.layer.displayName),this.app.event("MapServicePropertyChangedEvent").publish(this.layer.mapService),this.app.event("MapServiceLayersChangedEvent").publish(this.layer.mapService)},i}(t.ViewModelBase);i.LayerPropertiesViewModel=n})},"Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView":function(){define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView"],function(e,i,t){"use strict";var r=function(e){function i(i,t){var r=e.call(this,i,t)||this;return r.autoCompleteMinPrefixLength=3,r.autoCompleteMinPopulateDelay=300,r.autoCompleteMaxEntries=10,r.app.command("AddMapLayerInteractive").register(r,r.show,r._canExecuteAddMapLayerInteractive),r}return __extends(i,e),i.prototype.added=function(i){e.prototype.added.call(this,i),this._setupAutoComplete()},i.prototype.show=function(){this.viewModel&&this.viewModel.reset(),this.app.viewManager.activateView(this)},i.prototype.getSuggestions=function(e,i){var t=this;return void 0===i&&(i=this.autoCompleteMaxEntries),this.viewModel.searchFragment.getSuggestions(e).then(function(e){return i>0?t._clampResults(e,i):e}).then(function(e){return e.sort()})["catch"](function(e){return[]})},i.prototype.findServices=function(e){var i=this;return this.viewModel.searchFragment.findServices(e).then(function(t){return i.saveState(e,t)}).then(function(){return i.goNext()})["catch"](function(e){return i.app.trace.error("Service Discovery - Error searching for services: "+e.message),null})},i.prototype.handleSearchClick=function(e,i,t){this._closeAutoComplete(),this.findServices(this.viewModel.searchFragment.searchText.get())},i.prototype.handleCancelClick=function(e,i,t){this.viewModel.reset(),this.app.viewManager.deactivateView(this)},i.prototype.saveState=function(e,i){var t=this.viewModel.getCurrentState();t.searchText=e,t.serviceConnections=i},i.prototype.goNext=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];this.app.command("LayerAddition_PerformSearch").execute()},i.prototype.handleKeyDown=function(e,i,t){var r=e.which?e.which:e.keyCode;return!!this._isSpecialChar(r)||(r===dojo.keys.ENTER&&(this._closeAutoComplete(),this.findServices(this.viewModel.searchFragment.searchText.get())),!0)},i.prototype._canExecuteAddMapLayerInteractive=function(){return this.viewModel&&this.viewModel.supported&&!this.app.isOffline.get()},i.prototype._setupAutoComplete=function(){var e=this,i={minLength:this.autoCompleteMinPrefixLength,delay:this.autoCompleteMinPopulateDelay,source:function(i,t){e._handleAutoCompleteSearch(i,t)},select:function(i,t){return e._handleAutoCompleteSelect(i,t),!1}};$(this.autoCompleteInput).autocomplete(i)},i.prototype._handleAutoCompleteSearch=function(e,i){this.getSuggestions(e.term,this.autoCompleteMaxEntries).then(function(e){return i(e)})["catch"](function(e){return i([])})},i.prototype._handleAutoCompleteSelect=function(e,i){this.viewModel.searchFragment.searchText.set(i.item.value)},i.prototype._closeAutoComplete=function(){$(this.autoCompleteInput).autocomplete("close")},i.prototype._clampResults=function(e,i){return e&&e.length>0?e.slice(0,i):[]},i.prototype._isSpecialChar=function(e){switch(e){case dojo.keys.TAB:case dojo.keys.SHIFT:case dojo.keys.CTRL:case dojo.keys.ALT:case dojo.keys.PAUSE:case dojo.keys.CAPS_LOCK:case dojo.keys.ESCAPE:case dojo.keys.PAGE_UP:case dojo.keys.PAGE_DOWN:case dojo.keys.END:case dojo.keys.HOME:case dojo.keys.LEFT_ARROW:case dojo.keys.UP_ARROW:case dojo.keys.RIGHT_ARROW:case dojo.keys.DOWN_ARROW:case dojo.keys.NUM_LOCK:case dojo.keys.SCROLL_LOCK:case dojo.keys.INSERT:return!0}return!1},i}(t.WizardFragmentView);i.AddLayerDialogView=r})},"Mapping/modules/LayerAddition/Dialogs/AddLayerDialogViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,i,t,r){"use strict";var n=function(e){function i(i,t,n){var a=e.call(this,t,n)||this;return a.disabled=new r.Observable((!1)),a.searchText=new r.Observable(null),a.owner=i,a}return __extends(i,e),i.prototype.reset=function(){this.disabled.set(!1),this.searchText.set(null)},i.prototype.getSuggestions=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().suggestHints(e))},i.prototype.findServices=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().findServices(e))},i}(t.ViewModelBase);i.AddLayerDialogViewModel=n})},"Mapping/modules/LayerAddition/Dialogs/MapServiceItem":function(){define(["require","exports"],function(e,i){"use strict";var t=function(){function e(e,i){this.originalItem=e,this.layers=i,this.serviceProviderName=e.serviceProviderName,this.url=e.url,this.setName(e.displayName),this.disabled=!1;var t=e.serviceType||[];t.indexOf("FeatureServer")>-1?this.supportsAddition=!1:this.supportsAddition=!0}return e.prototype.setName=function(e){this.name=e,this.displayName=e+" ("+(this.layers||[]).length+")"},e}();i.MapServiceItem=t})},"Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView":function(){define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView","./../LayerAdditionViewModel"],function(e,i,t,r){"use strict";var n=function(e){function i(i,t){var r=e.call(this,i,t)||this;return r.app.command("LayerAddition_ListMapServices").register(r,r.show),r}return __extends(i,e),i.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},i.prototype.loadState=function(){var e=this.viewModel.getCurrentState(),i=e.selectedConnection,t=this.viewModel.mapServicesFragment;t.reset(),t.process(i)},i.prototype.saveState=function(e){var i=this.viewModel.getCurrentState();i.selectedMapServiceItem=e},i.prototype.goNext=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];this.app.command("LayerAddition_ExpandMapService").execute()},i.prototype.handleItemClick=function(e,i,t){this.saveState(t),this.goNext()},i.prototype.handleAddServiceClick=function(e,i,t){var r=this;this.saveState(t);var n=this.viewModel.mapServicesFragment;this._confirmBeforeAdding(t).then(function(e){return n.realizeMapService(e)}).then(function(e){return r._verifyMapService(e)}).then(function(e){return r._addToMap(e)}).then(function(e){return r.viewModel.switchToLayerList(e,r.getResource("language-layer-addition-success"))["return"](e)}).then(function(e){return r._zoomToFullExtent(e)})["catch"](function(e){return r.viewModel.handleError(e)})["finally"](function(){return r.finishWizard()})},i.prototype._confirmBeforeAdding=function(e){var i=this;return this.viewModel.canSaveProject().then(function(t){return e.originalItem&&e.originalItem.isWhitelisted?Promise.resolve(e):new Promise(function(n,a){var o,s=i.getResource("language-layer-addition-confirm-add-layer");o=t?i.getResource("language-layer-addition-confirm-add-layer-message"):i.getResource("language-layer-addition-confirm-add-layer-message-anonymous"),i.app.command("Confirm").execute(o,s,function(i){if(i)return n(e);var t=new Error("Layer addition process was cancelled.");return t.name=r.ERROR_CANCELLED,a(t)})})})},i.prototype._addToMap=function(e){return this.app.command("AddMapService").execute(e),e},i.prototype._zoomToFullExtent=function(e){return this.viewModel.zoomToUserAddedLayers?this.viewModel.zoomTo(e)["return"](e):Promise.resolve(e)},i.prototype._verifyMapService=function(e){if(!e)throw new Error("Layer Addition: could not get metadata for service.");return e},i}(t.WizardFragmentView);i.MapServicesDialogView=n})},"Mapping/modules/LayerAddition/Dialogs/MapServicesDialogViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./MapServiceItem"],function(e,i,t,r,n){"use strict";var a=function(e){function i(i,t,n){var a=e.call(this,t,n)||this;return a.disabled=new r.Observable((!1)),a.serviceResults=new r.ObservableCollection,a.owner=i,a}return __extends(i,e),i.prototype.process=function(e){for(var i=this,t=e.services,r=function(){var e=t[o];a.getChildren(e).then(function(t){var r=new n.MapServiceItem(e,t);t||(r.disabled=!0),i.serviceResults.addItem(r)})},a=this,o=0;o<t.length;o++)r()},i.prototype.getChildren=function(e){var i=this;return Promise.resolve(this.owner.getServiceDiscoveryProvider().expandService(e)).then(function(e){var i=[];return null==e?null:(e.children.length&&e.children.forEach(function(e){/\/[0-9]+$/.test(e.url)&&(e.serviceType.some(function(e){return/GroupLayer/.test(e)})?e.children.forEach(function(e){i.push(e)}):i.push(e))}),i)})["catch"](function(e){return i.app.trace.error("Service Discovery - Error expanding map service: "+e.message),null})},i.prototype.realizeMapService=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().realizeMapService(e.originalItem,this.app.map.spatialReference.wkid.toString()))},i.prototype.reset=function(){this.serviceResults.clear(),this.disabled.set(!1)},i}(t.ViewModelBase);i.MapServicesDialogViewModel=a})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionItem":function(){define(["require","exports"],function(e,i){"use strict";var t=function(){function e(e,i){this.services=i,this.setName(e)}return e.prototype.setName=function(e){this.name=e,this.displayName=e+" ("+(this.services||[]).length+")"},e}();i.ServiceConnectionItem=t})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView":function(){define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView"],function(e,i,t){"use strict";var r=function(e){function i(i,t){var r=e.call(this,i,t)||this;return r.app.command("LayerAddition_PerformSearch").register(r,r.show),r}return __extends(i,e),i.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},i.prototype.loadState=function(){var e=this.viewModel.getCurrentState(),i=e.serviceConnections,t=this.viewModel.serviceConnectionsFragment;t.process(i)},i.prototype.saveState=function(e){var i=this.viewModel.getCurrentState();i.selectedConnection=e},i.prototype.goNext=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];this.app.command("LayerAddition_ListMapServices").execute()},i.prototype.handleItemClick=function(e,i,t){this.saveState(t),this.goNext()},i}(t.WizardFragmentView);i.ServiceConnectionsDialogView=r})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./ServiceConnectionItem"],function(e,i,t,r,n){"use strict";var a=function(e){function i(i,t,n){var a=e.call(this,t,n)||this;return a.disabled=new r.Observable((!1)),a.serviceConnections=new r.ObservableCollection,a.owner=i,a}return __extends(i,e),i.prototype.reset=function(){this.serviceConnections.clear(),this.disabled.set(!1)},i.prototype.process=function(e){this.reset();for(var i=[],t=[],r=[],n=[],a=[],o=[],s=[],d=[],l=[],c=[],u=0,p=e;u<p.length;u++){var g=p[u];g.url,g.displayName;switch(g.discoveryProviderName){case"BingMapsDiscoveryProvider":this.findMapServices(g,i);break;case"VoyagerDiscoveryProvider":this.findMapServices(g,t);break;case"ArcGisOnlineDiscoveryProvider":this.findMapServices(g,r);break;case"ArcGisPortalDiscoveryProvider":this.findMapServices(g,n);break;case"GeoRssDiscoveryProvider":this.findMapServices(g,o);break;case"WmsDiscoveryProvider":this.findMapServices(g,s);break;case"WmtsDiscoveryProvider":this.findMapServices(g,d);break;case"ArcGisServerDiscoveryProvider":this.findMapServices(g,l);break;case"WebTiledLayerDiscoveryProvider":this.findMapServices(g,a);break;default:this.findMapServices(g,c)}}this._addServiceConnection(i,this.getResource("language-layer-addition-bing-map-name")),this._addServiceConnection(t,this.getResource("language-layer-addition-voyager-search-name")),this._addServiceConnection(r,this.getResource("language-layer-addition-arcgis-online-name")),this._addServiceConnection(n,this.getResource("language-layer-addition-arcgis-portal-name")),this._addServiceConnection(d,this.getResource("language-layer-addition-wmts-name")),this._addServiceConnection(a,this.getResource("language-layer-addition-webtiled-name")),this._addServiceConnection(o,this.getResource("language-layer-addition-georss-name")),this._addServiceConnection(s,this.getResource("language-layer-addition-wms-name")),this._addServiceConnection(l,this.getResource("language-layer-addition-arcgis-server-name")),this._addServiceConnection(c,this.getResource("language-layer-addition-general-name"))},i.prototype._addServiceConnection=function(e,i){if(e&&e.length>0){var t=new n.ServiceConnectionItem(i,e);this.serviceConnections.addItem(t)}},i.prototype.findMapServices=function(e,i){var t=this;e.serviceType.some(function(e){return/Catalog/.test(e)})?e.children.forEach(function(e){t.findMapServices(e,i)}):i.push(e)},i}(t.ViewModelBase);i.ServiceConnectionsDialogViewModel=a})},"Mapping/modules/LayerAddition/Dialogs/SubLayerItem":function(){define(["require","exports"],function(e,i){"use strict";var t="...",r=100,n=function(){function e(e){this.originalItem=e,this.displayName=e.displayName,this.url=e.url,this.setDescription(e.description),this.supportsAddition=!0}return e.prototype.setDescription=function(e){this.longDescription=e,this.description=this._trunc(e,r)},e.prototype._trunc=function(e,i){return e&&e.length>i?e.substr(0,i-1)+t:e},e}();i.SubLayerItem=n})},"Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView":function(){define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView","./../LayerAdditionViewModel"],function(e,i,t,r){"use strict";var n=function(e){function i(i,t){var r=e.call(this,i,t)||this;return r.app.command("LayerAddition_ExpandMapService").register(r,r.show),r}return __extends(i,e),i.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},i.prototype.loadState=function(){var e=this.viewModel.getCurrentState(),i=e.selectedMapServiceItem,t=this.viewModel.subLayersFragment;t.reset(),t.process(i)},i.prototype.saveState=function(e){var i=this.viewModel.getCurrentState();i.selectedSubLayerItem=e},i.prototype.goNext=function(e){this.finishWizard()},i.prototype.handleAddLayerClick=function(e,i,t){var r=this;this.saveState(t);var n=this.viewModel.subLayersFragment;this._confirmBeforeAdding(t).then(function(e){return n.realizeFeatureLayer(e)}).then(function(e){return r._verifyMapService(e)}).then(function(e){return r._addToMap(e)}).then(function(e){return r.viewModel.switchToLayerList(e,r.getResource("language-layer-addition-success"))["return"](e)}).then(function(e){return r._zoomToFullExtent(e)})["catch"](function(e){return r.viewModel.handleError(e)})["finally"](function(){return r.finishWizard()})},i.prototype._confirmBeforeAdding=function(e){var i=this;return this.viewModel.canSaveProject().then(function(t){return e.originalItem&&e.originalItem.isWhitelisted?Promise.resolve(e):new Promise(function(n,a){var o,s=i.getResource("language-layer-addition-confirm-add-layer");o=t?i.getResource("language-layer-addition-confirm-add-layer-message"):i.getResource("language-layer-addition-confirm-add-layer-message-anonymous"),i.app.command("Confirm").execute(o,s,function(i){if(i)return n(e);var t=new Error("Layer addition process was cancelled.");return t.name=r.ERROR_CANCELLED,a(t)})})})},i.prototype._addToMap=function(e){return this.app.command("AddMapService").execute(e),e},i.prototype._zoomToFullExtent=function(e){return this.viewModel.zoomToUserAddedLayers?this.viewModel.zoomTo(e)["return"](e):Promise.resolve(e)},i.prototype._verifyMapService=function(e){if(!e)throw new Error("Layer Addition: could not get metadata for service.");return e},i}(t.WizardFragmentView);i.SubLayersDialogView=n})},"Mapping/modules/LayerAddition/Dialogs/SubLayersDialogViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./SubLayerItem"],function(e,i,t,r,n){"use strict";var a=function(e){function i(i,t,n){var a=e.call(this,t,n)||this;return a.disabled=new r.Observable((!1)),a.subLayers=new r.ObservableCollection,a.owner=i,a}return __extends(i,e),i.prototype.reset=function(){this.subLayers.clear(),this.disabled.set(!1)},i.prototype.process=function(e){var i=e.layers;if(i)for(var t=0;t<i.length;t++){var r=i[t],a=new n.SubLayerItem(r);this.subLayers.addItem(a)}},i.prototype.realizeFeatureLayer=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().realizeMapService(e.originalItem,this.app.map.spatialReference.wkid.toString()))},i}(t.ViewModelBase);i.SubLayersDialogViewModel=a})},"url:/Mapping/modules/LayerAddition/LayerPropertiesView.html":'<div class="layer-addition-properties panel-group-contents">\r\n    <div class="layer-addition-properties-selector form-item">\r\n        <div class="form-stacked">\r\n            <div class="form-item">\r\n                <label class="form-label" data-binding="{@text: @language-layer-addition-layer-name-desc}"></label>\r\n            </div>\r\n            <div class="form-item">\r\n                <div class="form-control">\r\n                    <label class="form-label" for="layerName" data-binding="{@text: @language-layer-addition-layer-name}"></label>\r\n                    <input id="layerName" type="text" data-binding="{@value: layerName}" />\r\n                </div>\r\n            </div>\r\n            <div class="form-item" data-binding="{@hidden: isGroupLayer}">\r\n                <div class="form-control">\r\n                    <label class="layer-addition-properties-item-ctrl" data-binding="{@visible: layerSupportsIdentify}">\r\n                        <input type="checkbox" data-binding="{@value: layerIsIdentifiable}">\r\n                        <span data-binding="{@text: @language-layer-addition-identifiable}"></span>\r\n                    </label>\r\n                    <label class="layer-addition-properties-item-ctrl">\r\n                        <input type="checkbox" data-binding="{@value: layerIsSearchable}">\r\n                        <span data-binding="{@text: @language-layer-addition-searchable}"></span>\r\n                    </label>\r\n                    <label class="layer-addition-properties-item-ctrl" data-binding="{@visible: layerSupportsQuery}">\r\n                        <input type="checkbox" data-binding="{@value: layerIsQueryable}">\r\n                        <span data-binding="{@text: @language-layer-addition-queryable}"></span>\r\n                    </label>\r\n                    <label class="layer-addition-properties-item-ctrl" data-binding="{@hidden: isHandheld}">\r\n                        <input type="checkbox" data-binding="{@value: layerShowsMapTips}">\r\n                        <span data-binding="{@text: @language-layer-addition-show-maptips}"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class="form-item">\r\n                <div class="form-btns">\r\n                    <button class="button" data-binding="{@event-onclick: handleClickButtonOK}{@text: @language-layer-addition-done}"></button>\r\n                    <button class="button" data-binding="{@event-onclick: handleClickButtonCancel}{@text: @language-layer-addition-cancel}"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>',"url:/Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView.html":'<div class="layer-addition add-layer-dialog" data-binding="{@source: searchFragment}{@class-disabled: disabled}">\r\n    <div data-binding="{@template-for: searchFragment}">\r\n        <!-- Description for this dialog. -->\r\n        <p class="add-layer-dialog-description" data-binding="{@text: @language-layer-addition-search-description}"></p>\r\n        <div>\r\n            <label for="layer-addition-search-box" data-binding="{@text: @language-layer-addition-button-search}"></label>\r\n            <input type="text" id="layer-addition-search-box" data-binding="{@value: searchText}{@var: autoCompleteInput}{@event-keydown: handleKeyDown}" tabindex="0" />\r\n        </div>\r\n        <!-- Bottom buttons. -->\r\n        <div class="form-btns">\r\n            <button class="button" data-binding="{@event-onclick: handleSearchClick}{@text: @language-layer-addition-button-search}{disabled: disabled}"></button>\r\n            <button class="button" data-binding="{@text: @language-common-cancel}{@event-onclick: handleCancelClick}"></button>\r\n        </div>\r\n    </div>\r\n</div>',"url:/Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView.html":'<div class="layer-addition map-services-dialog" data-binding="{@source: mapServicesFragment}{@class-disabled: disabled}">\r\n    <div data-binding="{@template-for: mapServicesFragment}">\r\n        <div class="panel-group no-item box-container" data-binding="{@hidden: serviceResults}">\r\n            <p data-binding="{@text: @language-common-no-results}"></p>\r\n            <p class="description" data-binding="{@text: @language-common-no-results-desc}"></p>\r\n        </div>\r\n        <div class="panel-group" data-binding="{@visible: serviceResults}">\r\n            <ul class="gcx-list-menu" data-binding="{@source: serviceResults}">\r\n                <li class="gcx-list-item" data-binding="{@template-for: serviceResults}{@class-has-action-1: supportsAddition}">\r\n                    <button class="gcx-list-button icon-right chevron-right-24" data-binding="{@event-onclick: handleItemClick}{@disabled: disabled}">\r\n                        <strong class="gcx-list-label" data-binding="{@text: displayName}"></strong>\r\n                        <span class="gcx-list-desc" data-binding="{@text: url}"></span>\r\n                    </button>\r\n                    <button class="gcx-action-button icon add-24" data-binding="{@event-onclick: handleAddServiceClick}{@disabled: disabled}{@visible: supportsAddition}"></button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>',"url:/Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView.html":'<div class="layer-addition service-connections-dialog" data-binding="{@source: serviceConnectionsFragment}{@class-disabled: disabled}">\r\n    <div data-binding="{@template-for: serviceConnectionsFragment}">\r\n        <div class="panel-group no-item box-container" data-binding="{@hidden: serviceConnections}">\r\n            <p data-binding="{@text: @language-common-no-results}"></p>\r\n            <p class="description" data-binding="{@text: @language-common-no-results-desc}"></p>\r\n        </div>\r\n        <div class="panel-group" data-binding="{@visible: serviceConnections}">\r\n            <ul class="gcx-list-menu" data-binding="{@source: serviceConnections}">\r\n                <li class="gcx-list-item" data-binding="{@template-for: serviceConnections}">\r\n                    <button class="gcx-list-button icon-right chevron-right-24" data-binding="{@event-onclick: handleItemClick}">\r\n                        <strong class="gcx-list-label" data-binding="{@text: displayName}"></strong>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- BEGIN: Paging Controls -->\r\n    <!--<div data-binding="{@visible: selections}{@widget: PagingControlsWidget}{@widget-context: @context}{@widget-required: false}"></div>-->\r\n    <!-- END: Paging Controls -->\r\n</div>',
"url:/Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView.html":'<div class="layer-addition sub-layers-dialog" data-binding="{@source: subLayersFragment}{@class-disabled: disabled}">\r\n    <div data-binding="{@template-for: subLayersFragment}">\r\n        <div class="panel-group no-item box-container" data-binding="{@hidden: subLayers}">\r\n            <p data-binding="{@text: @language-common-no-results}"></p>\r\n            <p class="description" data-binding="{@text: @language-layer-addition-no-layers-desc}"></p>\r\n        </div>\r\n        <div class="panel-group" data-binding="{@visible: subLayers}">\r\n            <ul class="gcx-list-menu" data-binding="{@source: subLayers}">\r\n                <li class="gcx-list-item has-action-1" data-binding="{@template-for: subLayers}">\r\n                    <div class="gcx-list-content">\r\n                        <strong class="gcx-list-label" data-binding="{@text: displayName}"></strong>\r\n                        <span class="gcx-list-desc" data-binding="{@text: description}"></span>\r\n                    </div>\r\n                    <button class="gcx-action-button icon add-24" data-binding="{@event-onclick: handleAddLayerClick}"></button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n        <!-- BEGIN: Paging Controls -->\r\n        <!--<div data-binding="{@visible: selections}{@widget: PagingControlsWidget}{@widget-context: @context}{@widget-required: false}"></div>-->\r\n        <!-- END: Paging Controls -->\r\n</div>\r\n'}}),define(["Mapping/modules/LayerAddition/LayerAdditionModule","Mapping/modules/LayerAddition/LayerAdditionViewModel","Mapping/modules/LayerAddition/LayerPropertiesView","Mapping/modules/LayerAddition/LayerPropertiesViewModel","Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView","Mapping/modules/LayerAddition/Dialogs/AddLayerDialogViewModel","Mapping/modules/LayerAddition/Dialogs/MapServiceItem","Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView","Mapping/modules/LayerAddition/Dialogs/MapServicesDialogViewModel","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionItem","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogViewModel","Mapping/modules/LayerAddition/Dialogs/SubLayerItem","Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView","Mapping/modules/LayerAddition/Dialogs/SubLayersDialogViewModel"],function(e,i,t,r,n,a,o,s,d,l,c,u,p,g,y){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerAddition",e.LayerAddition),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerAdditionViewModel",i.LayerAdditionViewModel),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerPropertiesView",t.LayerPropertiesView),shim(r,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerPropertiesViewModel",r.LayerPropertiesViewModel),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.AddLayerDialogView",n.AddLayerDialogView),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.AddLayerDialogViewModel",a.AddLayerDialogViewModel),shim(o,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServiceItem",o.MapServiceItem),shim(s,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServicesDialogView",s.MapServicesDialogView),shim(d,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServicesDialogViewModel",d.MapServicesDialogViewModel),shim(l,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionItem",l.ServiceConnectionItem),shim(c,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionsDialogView",c.ServiceConnectionsDialogView),shim(u,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionsDialogViewModel",u.ServiceConnectionsDialogViewModel),shim(p,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayerItem",p.SubLayerItem),shim(g,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayersDialogView",g.SubLayersDialogView),shim(y,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayersDialogViewModel",y.SubLayersDialogViewModel)});