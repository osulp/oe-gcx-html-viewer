!function(){var t="<div class='layer-addition add-layer-dialog' data-binding='{@source: searchFragment}{@class-disabled: disabled}'>    <div data-binding='{@template-for: searchFragment}'>        \x3c!-- Description for this dialog. --\x3e        <p class='add-layer-dialog-description' data-binding='{@text: @language-layer-addition-search-description}'></p>        <div>            <label for='layer-addition-search-box' data-binding='{@text: @language-layer-addition-search-title}'></label>            <input type='text' id='layer-addition-search-box' data-binding='{@value: searchText}{@var: autoCompleteInput}{@event-keydown: handleKeyDown}' tabindex='0' />        </div>        <div class='warning-label' data-binding='{@visible: isHttps}'>            <p data-binding='{@text: @language-layer-addition-search-https-warning}'></p>        </div>        \x3c!-- Bottom buttons. --\x3e        <div class='form-btns'>            <button class='button' data-binding='{@event-onclick: handleSearchClick}{@text: @language-layer-addition-button-search}{disabled: disabled}'></button>            <button class='button' data-binding='{@text: @language-common-cancel}{@event-onclick: handleCancelClick}'></button>        </div>    </div></div>",i="<div class='layer-addition map-services-dialog add-layer-results' data-binding='{@source: mapServicesFragment}{@class-disabled: disabled}'>    <div data-binding='{@template-for: mapServicesFragment}'>        <div class='panel-group no-item box-container' data-binding='{@hidden: serviceResults}'>            <p data-binding='{@text: @language-common-no-results}'></p>            <p class='description' data-binding='{@text: @language-common-no-results-desc}'></p>        </div>        <div class='panel-group' data-binding='{@visible: serviceResults}'>            <ul class='gcx-list-menu' data-binding='{@source: serviceResults}'>                <li class='gcx-list-item' data-binding='{@template-for: serviceResults}{@class-has-action-1: supportsAddition}'>                    <button class='gcx-list-button icon-right chevron-right-24' data-binding='{@event-onclick: handleItemClick}{@hidden: disabled}'>                        <strong class='gcx-list-label' data-binding='{@text: displayName}'></strong>                        <span class='gcx-list-desc' data-binding='{@text: url}'></span>                    </button>                    <button class='gcx-action-button icon add-24' data-binding='{@event-onclick: handleAddServiceClick}{@disabled: disabled}{@visible: supportsAddition}{title: @language-layer-addition-confirm-add-layer}'></button>                </li>            </ul>        </div>    </div></div>",r="<div class='layer-addition service-connections-dialog' data-binding='{@source: serviceConnectionsFragment}{@class-disabled: disabled}'>    <div data-binding='{@template-for: serviceConnectionsFragment}'>        <div class='panel-group no-item box-container' data-binding='{@hidden: serviceConnections}'>            <p data-binding='{@text: @language-common-no-results}'></p>            <p class='description' data-binding='{@text: @language-common-no-results-desc}'></p>        </div>        <div class='panel-group' data-binding='{@visible: serviceConnections}'>            <ul class='gcx-list-menu' data-binding='{@source: serviceConnections}'>                <li class='gcx-list-item' data-binding='{@template-for: serviceConnections}'>                    <button class='gcx-list-button icon-right chevron-right-24' data-binding='{@event-onclick: handleItemClick}'>                        <strong class='gcx-list-label' data-binding='{@text: displayName}'></strong>                    </button>                </li>            </ul>        </div>    </div>    \x3c!-- BEGIN: Paging Controls --\x3e    \x3c!--<div data-binding='{@visible: selections}{@widget: PagingControlsWidget}{@widget-context: @context}{@widget-required: false}'></div>--\x3e    \x3c!-- END: Paging Controls --\x3e</div>",o="<div class='layer-addition sub-layers-dialog' data-binding='{@source: subLayersFragment}{@class-disabled: disabled}'>    <div data-binding='{@template-for: subLayersFragment}'>        <div class='panel-group no-item box-container' data-binding='{@hidden: subLayers}'>            <p data-binding='{@text: @language-common-no-results}'></p>            <p class='description' data-binding='{@text: @language-layer-addition-no-layers-desc}'></p>        </div>        <div class='panel-group' data-binding='{@visible: subLayers}'>            <ul class='gcx-list-menu' data-binding='{@source: subLayers}'>                <li class='gcx-list-item has-action-1' data-binding='{@template-for: subLayers}'>                    <div class='gcx-list-content'>                        <strong class='gcx-list-label' data-binding='{@text: displayName}'></strong>                        <span class='gcx-list-desc' data-binding='{@text: description}'></span>                    </div>                    <button class='gcx-action-button icon add-24' data-binding='{@event-onclick: handleAddLayerClick}{aria-label: @language-layer-addition-confirm-add-layer}'></button>                </li>            </ul>        </div>    </div>        \x3c!-- BEGIN: Paging Controls --\x3e        \x3c!--<div data-binding='{@visible: selections}{@widget: PagingControlsWidget}{@widget-context: @context}{@widget-required: false}'></div>--\x3e        \x3c!-- END: Paging Controls --\x3e</div>",a="<div class='layer-addition-properties panel-group-contents'>    <div class='layer-addition-properties-selector form-item'>        <div class='form-stacked'>            <div class='form-item'>                <label class='form-label' data-binding='{@text: @language-layer-addition-layer-name-desc}'></label>            </div>            <div class='form-item'>                <div class='form-control'>                    <label class='form-label' for='layerName' data-binding='{@text: @language-layer-addition-layer-name}'></label>                    <input id='layerName' type='text' data-binding='{@value: layerName}' />                </div>            </div>            <div class='form-item' data-binding='{@hidden: isGroupLayer}'>                <div class='form-control'>                    <label class='layer-addition-properties-item-ctrl' data-binding='{@visible: layerSupportsIdentify}'>                        <input type='checkbox' data-binding='{@value: layerIsIdentifiable}'>                        <span data-binding='{@text: @language-layer-addition-identifiable}'></span>                    </label>                    <label class='layer-addition-properties-item-ctrl'>                        <input type='checkbox' data-binding='{@value: layerIsSearchable}'>                        <span data-binding='{@text: @language-layer-addition-searchable}'></span>                    </label>                    <label class='layer-addition-properties-item-ctrl' data-binding='{@visible: layerSupportsQuery}'>                        <input type='checkbox' data-binding='{@value: layerIsQueryable}'>                        <span data-binding='{@text: @language-layer-addition-queryable}'></span>                    </label>                    <label class='layer-addition-properties-item-ctrl' data-binding='{@hidden: isHandheld}'>                        <input type='checkbox' data-binding='{@value: layerShowsMapTips}'>                        <span data-binding='{@text: @language-layer-addition-show-maptips}'></span>                    </label>                </div>            </div>            <div class='form-item'>                <div class='form-btns'>                    <button class='button' data-binding='{@event-onclick: handleClickButtonOK}{@text: @language-layer-addition-done}'></button>                    <button class='button' data-binding='{@event-onclick: handleClickButtonCancel}{@text: @language-layer-addition-cancel}'></button>                </div>            </div>        </div>    </div></div>";function h(e,t,i){if("string"==typeof e&&(i=t,t=e),void 0!==i)for(var r=t.split("."),o=null,a=window,n=0,s=r.length;n<s;n++)o=r[n],n==s-1?a[o]=i:a[o]||(a[o]={}),a=a[o];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/LayerAddition/LayerAdditionModule":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.ModuleBase,n(a,r),a.prototype.exportState=function(){return r.prototype.exportState.call(this)},a.prototype.applyState=function(e){return r.prototype.applyState.call(this,e)},a.prototype.getStateFilter=function(){return null},a);function a(e,t){return r.call(this,e,t)||this}t.LayerAddition=o})},"Mapping/modules/LayerAddition/LayerAdditionState":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/LayerAddition/LayerAdditionViewModel":function(){var r,h=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","./Dialogs/AddLayerDialogViewModel","./Dialogs/ServiceConnectionsDialogViewModel","./Dialogs/MapServicesDialogViewModel","./Dialogs/SubLayersDialogViewModel","geocortex/essentials/serviceDiscovery/SiteServiceDiscoveryProvider","geocortex/essentials/KmlService","geocortex/infrastructure/GeometryUtils","geocortex/infrastructure/commandArgs/AddStatusArgs","geocortex/framework/utils/utils"],function(e,d,t,r,o,a,n,s,l,c,u,p){"use strict";Object.defineProperty(d,"__esModule",{value:!0}),d.ERROR_CANCELLED="LayerAdditionError/Cancelled",d.ERROR_INVALID_SERVICE_METADATA="LayerAdditionError/InvalidServiceMetadata",d.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT="LayerAdditionError/CannotZoomToLayerExtent";var g,i=(g=t.ViewModelBase,h(y,g),y.prototype.initialize=function(e,t){var i=this;g.prototype.initialize.call(this,e),e=e||{},this.zoomToUserAddedLayers=p.isNullOrUndefined(e.zoomToUserAddedLayers)?this.zoomToUserAddedLayers:e.zoomToUserAddedLayers,this.smartOrderUserAddedLayers=p.isNullOrUndefined(e.smartOrderUserAddedLayers)?this.smartOrderUserAddedLayers:e.smartOrderUserAddedLayers,this.whitelistPortalResults=!!p.isNullOrUndefined(e.whitelistPortalResults)||e.whitelistPortalResults,this.whitelistAgolResults=!!p.isNullOrUndefined(e.whitelistAgolResults)||e.whitelistAgolResults;var r=e.layerDefaults;p.isNullOrUndefined(r)||(this.layerDefaults.insertPosition=p.isNullOrUndefined(r.insertPosition)?this.layerDefaults.insertPosition:r.insertPosition,this.layerDefaults.searchable=p.isNullOrUndefined(r.searchable)?this.layerDefaults.searchable:r.searchable,this.layerDefaults.identifiable=p.isNullOrUndefined(r.identifiable)?this.layerDefaults.identifiable:r.identifiable,this.layerDefaults.showMapTips=p.isNullOrUndefined(r.showMapTips)?this.layerDefaults.showMapTips:r.showMapTips),this._registerCommandsAndEvents(),this._initProvider(t).then(function(e){return i.setServiceDiscoveryProvider(e),i.initialized=!0,i.supported=!0,e instanceof s.SiteServiceDiscoveryProvider&&(i.supported=e.supported),e}).lastly(function(){return i._raiseCanExecuteChanged()})},y.prototype._initProvider=function(e){var t=this;return e?Promise.resolve(e):this.app.waitUntilSiteInitialized().then(function(){var e=new s.SiteServiceDiscoveryProvider(t.whitelistAgolResults,t.whitelistPortalResults);return e.initialize(t.app.site),e})},y.prototype.getCurrentState=function(){return this._wizardState},y.prototype.getServiceDiscoveryProvider=function(){return this._serviceDiscovery},y.prototype.setServiceDiscoveryProvider=function(e){this._serviceDiscovery=e},y.prototype._registerCommandsAndEvents=function(){},y.prototype._raiseCanExecuteChanged=function(){this.app.command("AddMapLayerInteractive").raiseCanExecuteChanged()},y.prototype.reset=function(){this.searchFragment.reset(),this.serviceConnectionsFragment.reset(),this.mapServicesFragment.reset(),this.subLayersFragment.reset(),this._wizardState={searchText:void 0,serviceConnections:void 0,selectedConnection:void 0,selectedMapServiceItem:void 0,selectedSubLayerItem:void 0,mapServices:void 0}},y.prototype.canSaveProject=function(){var t=this;return new Promise(function(e){return e(t.app.command("SaveProject").canExecute())})},y.prototype.zoomTo=function(e){var t=this,i=[];if(e instanceof l.KmlService){var r=e.serviceLayer.getLayers();i.push.apply(i,r)}else i.push.apply(i,e.layers);for(var o=[],a=0,n=i;a<n.length;a++){var s=n[a];s.fullExtent&&c.isValidGeometry(s.fullExtent)&&o.push(s.fullExtent)}return c.unionGeometries(o,this.app).then(function(e){return t._convertToExtent(e)}).then(function(e){return e&&t.app.command("ZoomToExtent").execute(e)}).catch(function(e){var t=new Error(e.message);throw t.name=d.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT,t})},y.prototype._convertToExtent=function(e){switch(e?e.type:null){case"extent":return e;case"polygon":case"polyline":return e.getExtent();default:return null}},y.prototype.switchToLayerList=function(e,t){var i=this;return new Promise(function(e){return i.app.command("SwitchToLayerView").execute(),t&&i.addStatus(t),e()})},y.prototype.addStatus=function(e,t){if(e){var i=new u.AddStatusArgs(e);return i.id=t||this.statusMessageViewId,i.timeoutMS=0,this.statusMessageRegionName&&(i.regionName=this.statusMessageRegionName),this.app.command("AddStatus").execute(i),i.id}return null},y.prototype.removeStatus=function(e){this.app.command("RemoveStatus").execute(e||this.statusMessageViewId)},y.prototype.handleError=function(e){return e.name===d.ERROR_CANCELLED||(e.name===d.ERROR_INVALID_SERVICE_METADATA?this.app.command("Alert").execute(this.getResource("language-layer-addition-error-no-service-metadata-message"),this.getResource("language-layer-addition-error-no-service-metadata")):e.name===d.ERROR_CANNOT_ZOOM_TO_LAYER_EXTENT?this.app.trace.warning(this.getResource("language-layer-addition-error-cannot-zoom-to-layer")):/The ID .* is not the well-known ID of a supported coordinate system\./.test(e.message)?this.app.command("Alert").execute(this.getResource("language-layer-addition-error-unsupported-wkid-message"),this.getResource("language-layer-addition-error-unsupported-wkid")):(this.app.trace.error(e.message,e),this.app.command("Alert").execute(this.getResource("language-layer-addition-error-message"),this.getResource("language-layer-addition-error")))),Promise.reject(e)},y);function y(e,t){var i=g.call(this,e,t)||this;return i.initialized=!1,i.supported=!1,i.statusMessageViewId="LayerAdditionStatusMessageView",i.statusMessageRegionName="LayerListStatusMessageRegion",i.zoomToUserAddedLayers=!0,i.smartOrderUserAddedLayers=!0,i.whitelistPortalResults=!0,i.whitelistAgolResults=!0,i.layerDefaults={insertPosition:"top",searchable:!0,identifiable:!0,showMapTips:!0},i._wizardState={searchText:void 0,serviceConnections:void 0,selectedConnection:void 0,selectedMapServiceItem:void 0,selectedSubLayerItem:void 0,mapServices:void 0},i.searchFragment=new r.AddLayerDialogViewModel(i,e,t),i.serviceConnectionsFragment=new o.ServiceConnectionsDialogViewModel(i,e,t),i.mapServicesFragment=new a.MapServicesDialogViewModel(i,e,t),i.subLayersFragment=new n.SubLayersDialogViewModel(i,e,t),i}d.LayerAdditionViewModel=i})},"Mapping/modules/LayerAddition/LayerPropertiesView":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.ViewBase,n(a,r),a.prototype.attach=function(e){r.prototype.attach.call(this,e),this.viewModel=e},a.prototype.registerCommands=function(){var e=this;this.app.command("ShowLayerPropertiesView").register(this,this.showLayerPropertiesView,this.canExecuteShowLayerPropertiesView),this.app.command("HideLayerPropertiesView").register(this,function(){e.isActive&&e.app.viewManager.deactivateView(e)})},a.prototype.canExecuteShowLayerPropertiesView=function(e){return e&&e.isUserCreated&&String.isNullOrEmpty(e.catalogId)},a.prototype.showLayerPropertiesView=function(e){this.viewModel.obsLayer.set(e),this.title.set(this.getResource("language-layer-addition-layer-properties")),this.app.command("ActivateView").execute(this.id)},a.prototype.handleClickButtonOK=function(e,t,i){this.viewModel.applyChanges(),this.app.viewManager.deactivateView(this)},a.prototype.handleClickButtonCancel=function(e,t,i){this.app.viewManager.deactivateView(this)},a);function a(e,t){var i=r.call(this,e,t)||this;return i.registerCommands(),i}t.LayerPropertiesView=o})},"Mapping/modules/LayerAddition/LayerPropertiesViewModel":function(){var r,s=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,t,i,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,a=(o=i.ViewModelBase,s(n,o),n.prototype.initialize=function(e){var t=this;this.obsLayer.bind(this,function(e){t.loadLayerInformation(e)})},n.prototype.loadLayerInformation=function(e){this.layer=e,this.layerName.set(this.layer.displayName),this.layerIsIdentifiable.set(this.layer.identifiable),this.layerIsSearchable.set(this.layer.searchable),this.layerShowsMapTips.set(this.layer.showMapTips),this.layerIsQueryable.set(this.layer.queryable),this.layerSupportsQuery.set(this.layer.supportsQuery),this.layerSupportsIdentify.set(this.layer.supportsIdentify),this.isHandheld.set(this.app.configuration.mobileMode),this.isGroupLayer.set(this.layer.subLayerIds&&0<this.layer.subLayerIds.length)},n.prototype.applyChanges=function(){this.layer.displayName=this.layerName.get(),this.app.event("LayerDisplayNameChanged").publish(this.layer),this.layer.identifiable=this.layerIsIdentifiable.get(),this.layer.searchable=this.layerIsSearchable.get(),this.layer.showMapTips=this.layerShowsMapTips.get(),this.layer.queryable=this.layerIsQueryable.get();var e=this.layer.mapService;!(e.layers.length<2)||e.supportsDynamicLayers||e.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer||(this.layer.mapService.displayName=this.layer.displayName),this.app.event("MapServicePropertyChangedEvent").publish(this.layer.mapService),this.app.event("MapServiceLayersChangedEvent").publish(this.layer.mapService)},n);function n(){var e=null!==o&&o.apply(this,arguments)||this;return e.obsLayer=new r.Observable,e.layerName=new r.Observable(""),e.layerIsSearchable=new r.Observable(!1),e.layerIsIdentifiable=new r.Observable(!1),e.layerIsQueryable=new r.Observable(!1),e.layerShowsMapTips=new r.Observable(!1),e.layerSupportsIdentify=new r.Observable(!1),e.layerSupportsQuery=new r.Observable(!1),e.isGroupLayer=new r.Observable(!1),e.isHandheld=new r.Observable(!1),e}t.LayerPropertiesViewModel=a})},"Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.WizardFragmentView,n(a,r),a.prototype.added=function(e){var t=this;r.prototype.added.call(this,e),this.app.waitUntilApplicationReady().then(function(){t._setupAutoComplete()})},a.prototype.show=function(){this.viewModel&&this.viewModel.reset(),this.app.viewManager.activateView(this)},a.prototype.getSuggestions=function(e,t){var i=this;return void 0===t&&(t=this.autoCompleteMaxEntries),this.viewModel.searchFragment.getSuggestions(e).then(function(e){return 0<t?i._clampResults(e,t):e}).then(function(e){return e.sort()}).catch(function(e){return[]})},a.prototype.findServices=function(t){var i=this;return this.isBusy.set(!0),this.viewModel.searchFragment.findServices(t).then(function(e){return i.saveState(t,e)}).then(function(){return i.goNext()}).catch(function(e){return i.app.trace.error("Service Discovery - Error searching for services: "+e.message),null}).finally(function(){return i.isBusy.set(!1)})},a.prototype.handleSearchClick=function(e,t,i){this._closeAutoComplete(),this.findServices(this.viewModel.searchFragment.searchText.get())},a.prototype.handleCancelClick=function(e,t,i){this.isBusy.set(!1),this.viewModel.reset(),this.app.viewManager.deactivateView(this)},a.prototype.saveState=function(e,t){var i=this.viewModel.getCurrentState();i.searchText=e,i.serviceConnections=t},a.prototype.goNext=function(){this.app.command("LayerAddition_PerformSearch").execute()},a.prototype.handleKeyDown=function(e,t,i){var r=e.which?e.which:e.keyCode;return this._isSpecialChar(r)||r===dojo.keys.ENTER&&(this._closeAutoComplete(),this.findServices(this.viewModel.searchFragment.searchText.get())),!0},a.prototype._canExecuteAddMapLayerInteractive=function(){return this.viewModel&&this.viewModel.supported&&!this.app.isOffline.get()},a.prototype._setupAutoComplete=function(){var i=this,e={minLength:this.autoCompleteMinPrefixLength,delay:this.autoCompleteMinPopulateDelay,source:function(e,t){i._handleAutoCompleteSearch(e,t)},select:function(e,t){return i._handleAutoCompleteSelect(e,t),!1}};$(this.autoCompleteInput).autocomplete(e)},a.prototype._handleAutoCompleteSearch=function(e,t){this.getSuggestions(e.term,this.autoCompleteMaxEntries).then(function(e){return t(e)}).catch(function(e){return t([])})},a.prototype._handleAutoCompleteSelect=function(e,t){this.viewModel.searchFragment.searchText.set(t.item.value)},a.prototype._closeAutoComplete=function(){$(this.autoCompleteInput).autocomplete("close")},a.prototype._clampResults=function(e,t){return e&&0<e.length?e.slice(0,t):[]},a.prototype._isSpecialChar=function(e){switch(e){case dojo.keys.TAB:case dojo.keys.SHIFT:case dojo.keys.CTRL:case dojo.keys.ALT:case dojo.keys.PAUSE:case dojo.keys.CAPS_LOCK:case dojo.keys.ESCAPE:case dojo.keys.PAGE_UP:case dojo.keys.PAGE_DOWN:case dojo.keys.END:case dojo.keys.HOME:case dojo.keys.LEFT_ARROW:case dojo.keys.UP_ARROW:case dojo.keys.RIGHT_ARROW:case dojo.keys.DOWN_ARROW:case dojo.keys.NUM_LOCK:case dojo.keys.SCROLL_LOCK:case dojo.keys.INSERT:return!0}return!1},a);function a(e,t){var i=r.call(this,e,t)||this;return i.autoCompleteMinPrefixLength=3,i.autoCompleteMinPopulateDelay=300,i.autoCompleteMaxEntries=10,i.app.command("AddMapLayerInteractive").register(i,i.show,i._canExecuteAddMapLayerInteractive),i}t.AddLayerDialogView=o})},"Mapping/modules/LayerAddition/Dialogs/AddLayerDialogViewModel":function(){var r,d=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/framework/utils/HttpsUtils"],function(e,t,i,o,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,r=(n=i.ViewModelBase,d(s,n),s.prototype.reset=function(){this.disabled.set(!1),this.searchText.set("")},s.prototype.getSuggestions=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().suggestHints(e))},s.prototype.findServices=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().findServices(e))},s);function s(e,t,i){var r=n.call(this,t,i)||this;return r.disabled=new o.Observable(!1),r.searchText=new o.Observable(null),r.isHttps=new o.Observable(!1),r.owner=e,r.searchText.set(""),r.isHttps.set(a.isHttpsMode()),r}t.AddLayerDialogViewModel=r})},"Mapping/modules/LayerAddition/Dialogs/MapServiceItem":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=(r.prototype.setName=function(e){this.name=e,this.displayName=e+" ("+(this.layers||[]).length+")"},r);function r(e,t){this.originalItem=e,this.layers=t,this.serviceProviderName=e.serviceProviderName,this.url=e.url,this.setName(e.displayName),this.disabled=!1,-1<(e.serviceType||[]).indexOf("FeatureServer")?this.supportsAddition=!1:this.supportsAddition=!0}t.MapServiceItem=i})},"Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView","./../LayerAdditionViewModel"],function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.WizardFragmentView,n(a,r),a.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},a.prototype.loadState=function(){var e=this.viewModel.getCurrentState().selectedConnection,t=this.viewModel.mapServicesFragment;t.reset(),t.process(e)},a.prototype.saveState=function(e){this.viewModel.getCurrentState().selectedMapServiceItem=e},a.prototype.goNext=function(){this.app.command("LayerAddition_ExpandMapService").execute()},a.prototype.handleItemClick=function(e,t,i){this.saveState(i),this.goNext()},a.prototype.handleAddServiceClick=function(e,t,i){var r=this;this.saveState(i);var o=this.viewModel.mapServicesFragment;this._confirmBeforeAdding(i).then(function(e){return o.realizeMapService(e)}).then(function(e){return r._verifyMapService(e)}).then(function(e){return r._addToMap(e)}).then(function(e){return r.viewModel.switchToLayerList(e,r.getResource("language-layer-addition-success")).return(e)}).then(function(e){return r._zoomToFullExtent(e)}).catch(function(e){return r.viewModel.handleError(e)}).finally(function(){return r.finishWizard()})},a.prototype._confirmBeforeAdding=function(a){var n=this;return this.viewModel.canSaveProject().then(function(o){return a.originalItem&&a.originalItem.isWhitelisted?Promise.resolve(a):new Promise(function(i,r){var e,t=n.getResource("language-layer-addition-confirm-add-layer");e=o?n.getResource("language-layer-addition-confirm-add-layer-message"):n.getResource("language-layer-addition-confirm-add-layer-message-anonymous"),n.app.command("Confirm").execute(e,t,function(e){if(e)return i(a);var t=new Error("Layer addition process was cancelled.");return t.name=s.ERROR_CANCELLED,r(t)})})})},a.prototype._addToMap=function(e){return this.app.command("AddMapService").execute(e),e},a.prototype._zoomToFullExtent=function(e){return this.viewModel.zoomToUserAddedLayers?this.viewModel.zoomTo(e).return(e):Promise.resolve(e)},a.prototype._verifyMapService=function(e){if(!e)throw new Error("Layer Addition: could not get metadata for service.");return e},a);function a(e,t){var i=r.call(this,e,t)||this;return i.app.command("LayerAddition_ListMapServices").register(i,i.show),i}t.MapServicesDialogView=o})},"Mapping/modules/LayerAddition/Dialogs/MapServicesDialogViewModel":function(){var r,d=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./MapServiceItem"],function(e,t,i,o,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=(a=i.ViewModelBase,d(n,a),n.prototype.process=function(e){for(var r=this,t=e.services,i=function(i){if(!i.isWhitelisted)return"continue";o.getChildren(i).then(function(e){var t=new s.MapServiceItem(i,e);e||(!0===t.supportsAddition&&(t.supportsAddition=!1),t.disabled=!0),r.serviceResults.addItem(t)})},o=this,a=0,n=t;a<n.length;a++)i(n[a])},n.prototype.getChildren=function(e){var t=this;return e.hasChildren?Promise.resolve(this.owner.getServiceDiscoveryProvider().expandService(e)).then(function(e){var t=[];return null==e?null:(e.children.length&&e.children.forEach(function(e){/\/[0-9]+$/.test(e.url)&&(e.serviceType.some(function(e){return/GroupLayer/.test(e)})?e.children.forEach(function(e){t.push(e)}):t.push(e))}),t)}).catch(function(e){return t.app.trace.error("Service Discovery - Error expanding map service: "+e.message),null}):Promise.resolve([])},n.prototype.realizeMapService=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().realizeMapService(e.originalItem,this.app.map.spatialReference.wkid.toString()))},n.prototype.reset=function(){this.serviceResults.clear(),this.disabled.set(!1)},n);function n(e,t,i){var r=a.call(this,t,i)||this;return r.disabled=new o.Observable(!1),r.serviceResults=new o.ObservableCollection,r.owner=e,r}t.MapServicesDialogViewModel=r})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionItem":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=(r.prototype.setName=function(e){this.name=e,this.displayName=e+" ("+(this.services||[]).length+")"},r);function r(e,t){this.services=t,this.setName(e)}t.ServiceConnectionItem=i})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.WizardFragmentView,n(a,r),a.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},a.prototype.loadState=function(){var e=this.viewModel.getCurrentState().serviceConnections;this.viewModel.serviceConnectionsFragment.process(e)},a.prototype.saveState=function(e){this.viewModel.getCurrentState().selectedConnection=e},a.prototype.goNext=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.app.command("LayerAddition_ListMapServices").execute()},a.prototype.handleItemClick=function(e,t,i){this.saveState(i),this.goNext()},a);function a(e,t){var i=r.call(this,e,t)||this;return i.app.command("LayerAddition_PerformSearch").register(i,i.show),i}t.ServiceConnectionsDialogView=o})},"Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogViewModel":function(){var r,d=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./ServiceConnectionItem"],function(e,t,i,o,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,n=(a=i.ViewModelBase,d(s,a),s.prototype.reset=function(){this.serviceConnections.clear(),this.disabled.set(!1)},s.prototype.process=function(e){this.reset();for(var t=[],i=[],r=[],o=[],a=[],n=[],s=[],d=[],l=[],c=[],u=[],p=0,g=e;p<g.length;p++){var y=g[p];switch(y.discoveryProviderName){case"BingMapsDiscoveryProvider":this.findMapServices(y,t);break;case"VoyagerDiscoveryProvider":this.findMapServices(y,i);break;case"ArcGisOnlineDiscoveryProvider":this.findMapServices(y,r);break;case"ArcGisPortalDiscoveryProvider":this.findMapServices(y,o);break;case"GeoRssDiscoveryProvider":this.findMapServices(y,n);break;case"WmsDiscoveryProvider":this.findMapServices(y,s);break;case"WfsDiscoveryProvider":this.findMapServices(y,d);break;case"WmtsDiscoveryProvider":this.findMapServices(y,l);break;case"ArcGisServerDiscoveryProvider":this.findMapServices(y,c);break;case"WebTiledLayerDiscoveryProvider":this.findMapServices(y,a);break;default:this.findMapServices(y,u)}}this._addServiceConnection(t,this.getResource("language-layer-addition-bing-map-name")),this._addServiceConnection(i,this.getResource("language-layer-addition-voyager-search-name")),this._addServiceConnection(r,this.getResource("language-layer-addition-arcgis-online-name")),this._addServiceConnection(o,this.getResource("language-layer-addition-arcgis-portal-name")),this._addServiceConnection(l,this.getResource("language-layer-addition-wmts-name")),this._addServiceConnection(a,this.getResource("language-layer-addition-webtiled-name")),this._addServiceConnection(n,this.getResource("language-layer-addition-georss-name")),this._addServiceConnection(s,this.getResource("language-layer-addition-wms-name")),this._addServiceConnection(d,this.getResource("language-layer-addition-wfs-name")),this._addServiceConnection(c,this.getResource("language-layer-addition-arcgis-server-name")),this._addServiceConnection(u,this.getResource("language-layer-addition-general-name"))},s.prototype._addServiceConnection=function(e,t){if(e&&0<e.length){var i=new r.ServiceConnectionItem(t,e);this.serviceConnections.addItem(i)}},s.prototype.findMapServices=function(e,t){var i=this;e.serviceType.some(function(e){return/Catalog/.test(e)})||e.isContainerForRealResult?e.children.forEach(function(e){i.findMapServices(e,t)}):t.push(e)},s);function s(e,t,i){var r=a.call(this,t,i)||this;return r.disabled=new o.Observable(!1),r.serviceConnections=new o.ObservableCollection,r.owner=e,r}t.ServiceConnectionsDialogViewModel=n})},"Mapping/modules/LayerAddition/Dialogs/SubLayerItem":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=(r.prototype.setDescription=function(e){this.longDescription=e,this.description=this._trunc(e,100)},r.prototype._trunc=function(e,t){return e&&e.length>t?e.substr(0,t-1)+"...":e},r);function r(e){this.originalItem=e,this.displayName=e.displayName,this.url=e.url,this.setDescription(e.description),this.supportsAddition=!0}t.SubLayerItem=i})},"Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView":function(){var r,n=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/ui/components/WizardPanel/WizardFragmentView","./../LayerAdditionViewModel"],function(e,t,i,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=i.WizardFragmentView,n(a,r),a.prototype.show=function(){this.loadState(),this.app.viewManager.activateView(this)},a.prototype.loadState=function(){var e=this.viewModel.getCurrentState().selectedMapServiceItem,t=this.viewModel.subLayersFragment;t.reset(),t.process(e)},a.prototype.saveState=function(e){this.viewModel.getCurrentState().selectedSubLayerItem=e},a.prototype.goNext=function(e){this.finishWizard()},a.prototype.handleAddLayerClick=function(e,t,i){var r=this;this.saveState(i);var o=this.viewModel.subLayersFragment;this._confirmBeforeAdding(i).then(function(e){return o.realizeFeatureLayer(e)}).then(function(e){return r._verifyMapService(e)}).then(function(e){return r._addToMap(e)}).then(function(e){return r.viewModel.switchToLayerList(e,r.getResource("language-layer-addition-success")).return(e)}).then(function(e){return r._zoomToFullExtent(e)}).catch(function(e){return r.viewModel.handleError(e)}).finally(function(){return r.finishWizard()})},a.prototype._confirmBeforeAdding=function(a){var n=this;return this.viewModel.canSaveProject().then(function(o){return a.originalItem&&a.originalItem.isWhitelisted?Promise.resolve(a):new Promise(function(i,r){var e,t=n.getResource("language-layer-addition-confirm-add-layer");e=o?n.getResource("language-layer-addition-confirm-add-layer-message"):n.getResource("language-layer-addition-confirm-add-layer-message-anonymous"),n.app.command("Confirm").execute(e,t,function(e){if(e)return i(a);var t=new Error("Layer addition process was cancelled.");return t.name=s.ERROR_CANCELLED,r(t)})})})},a.prototype._addToMap=function(e){return this.app.command("AddMapService").execute(e),e},a.prototype._zoomToFullExtent=function(e){return this.viewModel.zoomToUserAddedLayers?this.viewModel.zoomTo(e).return(e):Promise.resolve(e)},a.prototype._verifyMapService=function(e){if(!e)throw new Error("Layer Addition: could not get metadata for service.");return e},a);function a(e,t){var i=r.call(this,e,t)||this;return i.app.command("LayerAddition_ExpandMapService").register(i,i.show),i}t.SubLayersDialogView=o})},"Mapping/modules/LayerAddition/Dialogs/SubLayersDialogViewModel":function(){var r,d=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","./SubLayerItem"],function(e,t,i,o,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,r=(n=i.ViewModelBase,d(s,n),s.prototype.reset=function(){this.subLayers.clear(),this.disabled.set(!1)},s.prototype.process=function(e){var t=e.layers;if(t)for(var i=0;i<t.length;i++){var r=t[i],o=new a.SubLayerItem(r);this.subLayers.addItem(o)}},s.prototype.realizeFeatureLayer=function(e){return Promise.resolve(this.owner.getServiceDiscoveryProvider().realizeMapService(e.originalItem,this.app.map.spatialReference.wkid.toString()))},s);function s(e,t,i){var r=n.call(this,t,i)||this;return r.disabled=new o.Observable(!1),r.subLayers=new o.ObservableCollection,r.owner=e,r}t.SubLayersDialogViewModel=r})},"url:/Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView.html":t,"url:/Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView.html":i,"url:/Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView.html":r,"url:/Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView.html":o,"url:/Mapping/modules/LayerAddition/LayerPropertiesView.html":a}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/CSS/common.css","css","LyotLS1MYXllciBBZGRpdGlvbjogQ29tbW9uLS0tKi8NCi5sYXllci1hZGRpdGlvbiAuZm9ybS1idG5zLA0KLmxheWVyLWFkZGl0aW9uLmFkZC1sYXllci1kaWFsb2cgew0KICAgIHBhZGRpbmc6IDFlbTsNCn0NCi5sYXllci1hZGRpdGlvbi5hZGQtbGF5ZXItZGlhbG9nIC5mb3JtLWJ0bnMgew0KICAgIHBhZGRpbmc6IDA7DQp9DQoubGF5ZXItYWRkaXRpb24tcHJvcGVydGllcyB7DQogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsNCn0NCi5sYXllci1hZGRpdGlvbi1wcm9wZXJ0aWVzLXNlbGVjdG9yew0KICAgIG1hcmdpbi1ib3R0b206IDJlbTsgDQp9DQoubGF5ZXItYWRkaXRpb24tcHJvcGVydGllcy1pdGVtLWN0cmwgew0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgIHBhZGRpbmctcmlnaHQ6IDAuNWVtOw0KfQ0KLmxheWVyLWFkZGl0aW9uLXByb3BlcnRpZXMtaXRlbS1jdHJsIGlucHV0W3R5cGU9ImNoZWNrYm94Il0sDQoubGF5ZXItYWRkaXRpb24taXRlbS1jdHJsIGlucHV0W3R5cGU9InJhZGlvIl0gew0KICAgIG1hcmdpbjogMC4yNWVtICAwLjM3NWVtIDBlbSAwLjM3NWVtOw0KfQ0KLmxheWVyLWFkZGl0aW9uLXByb3BlcnRpZXMtc2VsZWN0b3IgLnJhZGlvLWNvbnRhaW5lciB7DQogICAgbWFyZ2luOiAwOw0KICAgIHBhZGRpbmc6IDA7DQogICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsNCn0NCg0KLmxheWVyLWFkZGl0aW9uIC5nY3gtbGlzdC1kZXNjIHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgbWFyZ2luLXRvcDogMC41ZW07DQp9DQoNCi5hZGQtbGF5ZXItcmVzdWx0cyAuZ2N4LWxpc3QtbGFiZWwgew0KICAgIG1hcmdpbi1yaWdodDogM2VtOw0KICAgIG1hcmdpbi1sZWZ0OiAwLjVlbTsNCn0NCg0KLmFkZC1sYXllci1yZXN1bHRzIC5nY3gtbGlzdC1kZXNjIHsNCiAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7DQp9DQoNCi8qLS0tTGF5ZXIgQWRkaXRpb246IEFkZCBMYXllciBEaWFsb2ctLS0qLw=="),e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView.html","html",t),e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView.html","html",i),e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView.html","html",r),e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView.html","html",o),e.resourceManager.register("Mapping","inv","Mapping/modules/LayerAddition/LayerPropertiesView.html","html",a)}),require({cache:{}}),define(["Mapping/modules/LayerAddition/LayerAdditionModule","Mapping/modules/LayerAddition/LayerAdditionViewModel","Mapping/modules/LayerAddition/LayerPropertiesView","Mapping/modules/LayerAddition/LayerPropertiesViewModel","Mapping/modules/LayerAddition/Dialogs/AddLayerDialogView","Mapping/modules/LayerAddition/Dialogs/AddLayerDialogViewModel","Mapping/modules/LayerAddition/Dialogs/MapServiceItem","Mapping/modules/LayerAddition/Dialogs/MapServicesDialogView","Mapping/modules/LayerAddition/Dialogs/MapServicesDialogViewModel","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionItem","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogView","Mapping/modules/LayerAddition/Dialogs/ServiceConnectionsDialogViewModel","Mapping/modules/LayerAddition/Dialogs/SubLayerItem","Mapping/modules/LayerAddition/Dialogs/SubLayersDialogView","Mapping/modules/LayerAddition/Dialogs/SubLayersDialogViewModel"],function(e,t,i,r,o,a,n,s,d,l,c,u,p,g,y){h(e,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerAddition",e.LayerAddition),h(t,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerAdditionViewModel",t.LayerAdditionViewModel),h(i,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerPropertiesView",i.LayerPropertiesView),h(r,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.LayerPropertiesViewModel",r.LayerPropertiesViewModel),h(o,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.AddLayerDialogView",o.AddLayerDialogView),h(a,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.AddLayerDialogViewModel",a.AddLayerDialogViewModel),h(n,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServiceItem",n.MapServiceItem),h(s,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServicesDialogView",s.MapServicesDialogView),h(d,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.MapServicesDialogViewModel",d.MapServicesDialogViewModel),h(l,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionItem",l.ServiceConnectionItem),h(c,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionsDialogView",c.ServiceConnectionsDialogView),h(u,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.ServiceConnectionsDialogViewModel",u.ServiceConnectionsDialogViewModel),h(p,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayerItem",p.SubLayerItem),h(g,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayersDialogView",g.SubLayersDialogView),h(y,"geocortex.essentialsHtmlViewer.mapping.modules.layerAddition.SubLayersDialogViewModel",y.SubLayersDialogViewModel)})}();