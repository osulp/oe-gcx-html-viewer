function shim(e,t,i){if("string"==typeof e&&(i=t,t=e),"undefined"==typeof i)return void console.warn("Undefined shim for: "+t);for(var n=t.split("."),r=null,a=window,o=0,l=n.length;o<l;o++)r=n[o],o==l-1?a[r]=i:a[r]||(a[r]={}),a=a[r]}require({cache:{"Mapping/modules/Alert/AlertModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,t,i){"use strict";var n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.alertRegion="ModalWindowRegion",t.overrideNativeAlert=!0,t.nativeImplementation=null,t}return __extends(t,e),t.prototype.initialize=function(t){var i=this;e.prototype.initialize.call(this,t),this.nativeImplementation=window.alert,this.alertRegion=t.alertRegion,this.overrideNativeAlert=t.overrideNativeAlert;var n=function(e,t,n){if(n)try{var r=i.app.viewManager.createView({typeName:"geocortex.essentialsHtmlViewer.mapping.modules.alert.AlertView",markupResource:"Mapping/modules/Alert/AlertView.html",isVisible:!0,regionName:i.alertRegion,libraryId:i.libraryId});t||(t=i.app.getResource(i.libraryId,"language-alert-default-title"));var a={alertTitle:t,alertBody:e,callback:n,isOpen:!0,pending:[]};r.title.set(t),r.attach(a),i.app.viewManager.activateView(r),i.app.command("ScreenReaderNarrate").execute(e)}catch(o){i.app.trace.error("Error: Could not display alert: "+o)}else try{i.nativeImplementation.apply(window,[e])}catch(l){i.nativeImplementation(e)}};this.overrideNativeAlert&&(window.alert=n),this.app.command("Alert").register(this,function(e,t,i){i||(i=function(){}),n(e,t,i)})},t}(i.ModuleBase);t.AlertModule=n})},"Mapping/modules/Alert/AlertView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.userInitiatedDA=!1,t}return __extends(t,e),t.prototype.attach=function(t){if(e.prototype.attach.call(this,t),this.title.set(t.alertTitle),this.okButtonElement)try{this.okButtonElement.focus()}catch(i){}this.viewContainerViewClosedEventToken||(this.viewContainerViewClosedEventToken=this.app.event("ViewContainerViewClosedEvent").subscribe(this,function(e){e&&e.viewId==this.id&&this._deactivateForUser()}))},t.prototype.destroyBindings=function(){e.prototype.destroyBindings.call(this),this.viewContainerViewClosedEventToken&&(this.app.event("ViewContainerViewClosedEvent").unsubscribe(this.viewContainerViewClosedEventToken),this.viewContainerViewClosedEventToken=null)},t.prototype.handleClickOk=function(e,t,i){return this._deactivateForUser(),!1},t.prototype._deactivateForUser=function(){this.userInitiatedDA=!0,this.app.viewManager.deactivateView(this),this.app.viewManager.destroyView(this),this.viewModel.callback&&this.userInitiatedDA&&this.viewModel.callback()},t}(i.ViewBase);t.AlertView=n})},"url:/Mapping/modules/Alert/AlertView.html":'<div class="module notification alert">\r\n    <p class="desc" data-binding="{@text: alertBody}"></p>\r\n    <div class="form-btns">\r\n        <button class="button" data-binding="{@var: okButtonElement}{@event-onclick: handleClickOk}{@text: @language-common-ok}" />\r\n    </div>\r\n</div>'}}),define(["Mapping/modules/Alert/AlertModule","Mapping/modules/Alert/AlertView"],function(e,t){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.alert.AlertModule",e.AlertModule),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.alert.AlertView",t.AlertView)});