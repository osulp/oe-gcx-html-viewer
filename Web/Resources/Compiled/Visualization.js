function shim(i,e,t){if("string"==typeof i&&(t=e,e=i),"undefined"==typeof t)return void console.warn("Undefined shim for: "+e);for(var a=e.split("."),n=null,o=window,s=0,r=a.length;s<r;s++)n=a[s],s==r-1?o[n]=t:o[n]||(o[n]={}),o=o[n]}require({cache:{"Mapping/modules/Visualization/SimpleVisualizationProvider":function(){define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase"],function(i,e,t){"use strict";var a=function(i){function e(e,t){var a=i.call(this,e,t)||this;a.displayName=a.app.getResource(t,"language-visualization-none");var n={provider:a,name:name,id:name};return a.enabledVisualization=n,a.visualizations.push(n),a}return __extends(e,i),e.prototype.initialize=function(e){i.prototype.initialize.call(this,e),this.isEnabled.set(!0),this.isSupported.set(!0)},e.prototype.canSupport=function(i){return!0},e.prototype.handleCurrentLayerChanged=function(i){},e.prototype.handleActivate=function(){this.app.command("RemoveVisualization").execute({gcxLayer:this.currentLayer.get()})},e.prototype.handleApply=function(){this.app.command("RemoveVisualization").execute({gcxLayer:this.currentLayer.get()})},e}(t.VisualizationProviderBase);e.SimpleVisualizationProvider=a})},"Mapping/modules/Visualization/VisualizationModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase"],function(i,e,t){"use strict";var a=function(i){function e(){return null!==i&&i.apply(this,arguments)||this}return __extends(e,i),e.prototype.initialize=function(e){i.prototype.initialize.call(this,e),this._registerCommandsAndEvents()},e.prototype._registerCommandsAndEvents=function(){this.app.command("RemoveVisualization").register(this,this._executeRemoveVisualization,this._canExecuteRemoveVisualization)},e.prototype._executeRemoveVisualization=function(i){var e=this._getGeocortexLayer(i);this.app.command("RemoveHeatMap").execute({gcxLayer:e}),this.app.command("RemoveClusterLayer").execute({gcxLayer:e}),this.app.command("RemoveSymbolization").execute({gcxLayer:e})},e.prototype._canExecuteRemoveVisualization=function(i){var e=this._getGeocortexLayer(i);return e&&!!e.mapService},e.prototype._getGeocortexLayer=function(i){if("string"==typeof i){if(!this.app.site||!this.app.site.essentialsMap)return null;var e=this.app.site.essentialsMap.allLayers();return e.filter(function(e){return i===e.mapService.id})[0]}return i.gcxLayer},e}(t.ModuleBase);e.VisualizationModule=a})},"Mapping/modules/Visualization/VisualizationView":function(){define(["require","exports","geocortex/infrastructure/ui/components/SmartPanel/SmartPanelView"],function(i,e,t){"use strict";var a=function(i){function e(e,t){var a=i.call(this,e,t)||this;return a._registerCommandsAndEvents(),a}return __extends(e,i),e.prototype._registerCommandsAndEvents=function(){this.app.command("ShowVisualizationView").register(this,this._executeShowVisualizationView,this._canExecuteShowVisualizationView)},e.prototype._executeShowVisualizationView=function(i){var e=this._getGeocortexLayer(i);this.viewModel.selectedLayer.set(e),this.app.command("ActivateView").execute(this.id),this.app.event("VisualizationViewActivatedEvent").publish(e)},e.prototype._canExecuteShowVisualizationView=function(i){var e=this,t=this._getGeocortexLayer(i);return t?this.viewModel&&this.viewModel.supportsVisualization(t):(this.app.site&&this.app.site.serviceLayersLoaded||this.app.event("SiteServiceLayersLoadedEvent").once(this,function(i){e.app.command("ShowVisualizationView").raiseCanExecuteChanged()}),!1)},e.prototype.handleApplyButtonClick=function(i,e,t){this.viewModel.updateVisualization()},e.prototype.handleDoneButtonClick=function(i,e,t){this.viewModel.updateVisualization(),this.app.command("DeactivateView").execute(this.id)},e.prototype._getGeocortexLayer=function(i){if("string"==typeof i){if(!this.app.site||!this.app.site.essentialsMap)return null;var e=this.app.site.essentialsMap.allLayers();return e.filter(function(e){return i===e.mapService.id})[0]}return i},e}(t.SmartPanelView);e.VisualizationView=a})},"Mapping/modules/Visualization/VisualizationViewModel":function(){define(["require","exports","geocortex/infrastructure/ui/components/SmartPanel/SmartPanelViewModel","geocortex/framework/observables","./SimpleVisualizationProvider"],function(i,e,t,a,n){"use strict";var o=function(i){function e(){var e=null!==i&&i.apply(this,arguments)||this;return e._activeProvider=null,e._providers=[],e._simpleViewProvider=null,e._simpleVisualizationInfo=null,e.selectedLayer=new a.Observable(null),e.supportedProviders=new a.ObservableCollection([]),e.visualizationInfos=new a.ObservableCollection([]),e.selectedVisualization=new a.Observable(null),e.hasOptionsView=new a.Observable((!1)),e}return __extends(e,i),e.prototype.initialize=function(e){i.prototype.initialize.call(this,e),this._simpleViewProvider=new n.SimpleVisualizationProvider(this.app,this.libraryId),this._simpleViewProvider.initialize({type:"geocortex.essentialsHtmlViewer.mapping.modules.visualization.SimpleVisualizationProvider",displayName:e.defaultDisplayName}),this._simpleVisualizationInfo={provider:this._simpleViewProvider,name:this._simpleViewProvider.displayName,id:this._simpleViewProvider.displayName},e.visualizationProviders&&this._loadProviders(e.visualizationProviders),this.selectedLayer.bind(this,this._handleLayerChange),this.selectedVisualization.bind(this,this._handleVisualizationChanged)},e.prototype.supportsVisualization=function(i){for(var e=0;e<this._providers.length;e++){var t=this._providers[e];if(this._isVisualization(t)&&t.canSupport(i))return!0}return!1},e.prototype.updateVisualization=function(){this._activeProvider&&this._activeProvider.handleApply()},e.prototype._isVisualization=function(i){return!(i instanceof n.SimpleVisualizationProvider)},e.prototype._handleLayerChange=function(i){var e;this._simpleViewProvider.currentLayer.set(i),this.supportedProviders.clear();for(var t=0;t<this._providers.length;t++){var a=this._providers[t];a.currentLayer.set(i),a.isSupported.get()&&this.supportedProviders.addItem(a)}this.visualizationInfos.clear(),this.visualizationInfos.addItem(this._simpleVisualizationInfo),e=this._simpleVisualizationInfo;for(var t=this.supportedProviders.getLength()-1;t>=0;t--){var n=this.supportedProviders.getAt(t);n.isEnabled.get()&&n.enabledVisualization&&(e=n.enabledVisualization);for(var o=n.visualizations.length-1;o>=0;o--){var s=n.visualizations[o];this.visualizationInfos.addItem(s)}}this.selectedVisualization.set(this.visualizationInfos.getItems().filter(function(i){return i.id===e.id&&i.provider===e.provider})[0])},e.prototype._handleVisualizationChanged=function(i){for(var e=0,t=this.supportedProviders.getItems();e<t.length;e++){var a=t[e];a.enabledVisualization=null}if(this._activeProvider=i.provider,this._activeProvider.handleActivate(i),this.hasOptionsView.set(!1),!this._activeProvider.isSupported.get())return void(this._activeProvider=this._simpleViewProvider);if(i.provider.viewId){var n=this.app.viewManager.getViewById(i.provider.viewId);n&&(this.hasOptionsView.set(!0),this.app.viewManager.activateView(n))}},e.prototype._loadProviders=function(i){for(var e=this,t=0;t<i.length;t++){var a=i[t];a.libraryId&&!this.app.allLibrariesLoaded?this.app.event("ViewerLibrariesDownloadedEvent").once(this,function(){e._loadProvider(a)}):this._loadProvider(a)}},e.prototype._loadProvider=function(i){var e;if(e=dojo.getObject(i.type),!e)return void this.app.trace.error("{0} can't find visualization provider typed {1}".format(this.id,i.type));var t=new e(this.app,i.libraryId||this.libraryId);return t.initialize(i),this._providers.push(t),t},e}(t.SmartPanelViewModel);e.VisualizationViewModel=o})},"Mapping/modules/Visualization/VisualizationViewModelConfig":function(){define(["require","exports"],function(i,e){"use strict"})},"url:/Mapping/modules/Visualization/VisualizationView.html":'<div class="region panel-status-region visualization-status" data-region-name="VisualizationStatusRegion" data-region-adapter="geocortex.framework.ui.DivRegionAdapter" ></div>\r\n<div class="visualization panel-group-contents">\r\n    <div class="visualization-selector form-item">\r\n        <label for="visualization" data-binding="{@text: @language-visualization-select}"></label>\r\n        <select id="visualization" data-binding="{@source: visualizationInfos}{@value: selectedVisualization}">\r\n            <option data-binding="{@template-for: visualizationInfos}{@source: @context}{@text: name}{@attached: @context}"></option>\r\n        </select>\r\n    </div>\r\n    <!-- BEGIN: Content region -->\r\n    <div class="visualization-options" data-binding="{data-region-name: regionName}{data-region-adapter: regionType}{@var: scrollRegionElement}{@event-onscroll: handleScrollChange}{@visible: hasOptionsView}"></div>\r\n    <!-- END: Content region -->\r\n\r\n    <div class="form-btns">\r\n        <button class="button" data-binding="{@event-click: handleApplyButtonClick}{@text: @language-common-apply}{@visible: hasOptionsView}"></button>\r\n        <button class="button" data-binding="{@event-click: handleDoneButtonClick}{@text: @language-common-done}"></button>\r\n    </div>\r\n</div>\r\n'}}),define(["Mapping/modules/Visualization/SimpleVisualizationProvider","Mapping/modules/Visualization/VisualizationModule","Mapping/modules/Visualization/VisualizationView","Mapping/modules/Visualization/VisualizationViewModel"],function(i,e,t,a){shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.visualization.SimpleVisualizationProvider",i.SimpleVisualizationProvider),shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.visualization.VisualizationModule",e.VisualizationModule),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.visualization.VisualizationView",t.VisualizationView),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.visualization.VisualizationViewModel",a.VisualizationViewModel)});