function shim(e,t,i){if("string"==typeof e&&(i=t,t=e),"undefined"==typeof i)return void console.warn("Undefined shim for: "+t);for(var o=t.split("."),r=null,n=window,a=0,s=o.length;a<s;a++)r=o[a],a==s-1?n[r]=i:n[r]||(n[r]={}),n=n[r]}require({cache:{"Mapping/modules/Workflow/DisplayCaptureGeometryCaptureType":function(){define(["require","exports"],function(e,t){"use strict"})},"Mapping/modules/Workflow/DisplayCaptureGeometryView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.activityContext=null,o.workflowFormContent=null,o.token=null,o.token=o.app.event("Submit").subscribe(o,o.submitRequest),o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t),this.title.set(this.viewModel.title.get()),this.app.event("ViewActivatedEvent").publish(this),this.app.viewManager.notifyDimensionsChanged(this)},t.prototype.deactivated=function(){e.prototype.deactivated.call(this),this._deactivated()},t.prototype.handleClickButton=function(e,t,i){this.viewModel.clearGraphics(),this.finishFormWithButton(i)},t.prototype.handleCaptureTypeSelection=function(e,t,i){this.viewModel.clearGraphics(),this.viewModel.setDrawMode(this.app.map,i,t&&"CurrentExtent"===t.id),this.viewModel.setCaptureTypeSelection(i)},t.prototype.submitRequest=function(){null!=this.viewModel.defaultButton&&this.finishFormWithButton(this.viewModel.defaultButton)},t.prototype.finishFormWithButton=function(e){var t=this._processForm(this.activityContext,e);t&&(this.workflowContainer&&this.workflowContainer.view&&(this.workflowContainer.hasContent.set(!1),this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view)),this.app.event("Submit").unsubscribe(this.token),this.app.viewManager.destroyView(this))},t.prototype._processForm=function(e,t){var i=null,o=null;if(t&&t.causesValidation&&t.causesValidation.get()){i=this.viewModel.validate(),o=[];for(var r=0;r<i.length;++r)0==i[r].isValid&&o.push(i[r]);if(o&&o.length>0)return this.viewModel.validationResults.set(o),!1;this.viewModel.validationResults.clear()}return e.setValue("ButtonResultValue",t.value.get()),e.completeActivity(),!0},t.prototype._deactivated=function(){this.viewModel.clearGraphics()},t}(i.ViewBase);t.DisplayCaptureGeometryView=o})},"Mapping/modules/Workflow/DisplayCaptureGeometryViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/forms/FormButton","geocortex/forms/items/validation/ValidationResult","./WorkflowModule","geocortex/essentials/GeometryUtilities","geocortex/infrastructure/GeometryUtils","geocortex/infrastructure/accessibility/Draw"],function(e,t,i,o,r,n,a,s,l,u){"use strict";var p=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r._inputMethodChangeHandle=null,r.activityContext=null,r.geometryTypeCssDictionary=null,r.graphicsLayer=null,r.showCapturedMessage=null,r.currentExtentImage=null,r.defaultButton=null,r.drawType=null,r.toolbar=null,r.defaultFormWidth=800,r.defaultFormHeight=600,r.statusMessageID="DisplayCaptureGeometryMessage",r.showCaptureStatusMessages=!0,r.workflowFormContent=new o.Observable(null),r.title=new o.Observable(null),r.showTitleInFormBody=new o.Observable((!1)),r.buttons=new o.ObservableCollection([]),r.formWidth=new o.Observable(r.defaultFormWidth),r.formHeight=new o.Observable(r.defaultFormHeight),r.showRequiredValidationMessage=new o.Observable((!0)),r.capturedMessageVisible=new o.Observable((!1)),r.showCapturedGeometry=!1,r.showCurrentExtentOption=new o.Observable((!1)),r.geometryRequired=!1,r.requiredMessage=null,r.currentExtentLabel=null,r.inputGeometry=null,r.instructionMessage=null,r.captureTypes=new o.ObservableCollection([]),r.activeCaptureType=null,r.defaultCaptureType=new o.Observable(null),r.validationResults=new o.ObservableCollection([]),r.customGeometryInstructions=null,r.autoSubmit=!1,r.app.event("ViewUnhostedEvent").subscribe(r,r.viewUnhostedHandler),r.app.command("SetActiveTool").preExecute.subscribe(r,r.cleanUp),r.app.command("ClearActiveTool").preExecute.subscribe(r,r.cleanUp),r.app.trace.debug("DisplayCaptureGeometryViewModel: object constructed."),r}return __extends(t,e),t.prototype.initialize=function(e){var t=this,i=[],n=null,a=null,s=this.activityContext.getValue("CaptureTypes");e&&e.hasOwnProperty("showTitleInFormBody")&&this.showTitleInFormBody.set(e.showTitleInFormBody||!1);for(var l=this.activityContext.getValue("DefaultCaptureType"),u=0;u<s.length;u++)n=s[u],"CurrentExtent"===n&&(this.showCurrentExtentOption=new o.Observable((!0))),a={typeName:null,tooltip:null,isSelected:new o.Observable((!1))},a.typeName=n,a.tooltip=this.getCaptureGeometryTooltip(n),this.geometryTypeCssDictionary&&(a.className=this.geometryTypeCssDictionary[n]),n==l&&(this.activeCaptureType=a,this.setDrawMode(this.app.map,a,!1),a.isSelected.set(!0)),i.push(a);this.captureTypes.addItems(i),this.defaultCaptureType=this.activityContext.getValue("DefaultCaptureType"),this.inputGeometry=this.activityContext.getValue("InputGeometry"),this.instructionMessage=this.activityContext.getValue("Message"),this.requiredMessage=this.activityContext.getValue("RequiredMessage")||this.app.getResource(this.libraryId,"language-capture-geometry-required-message"),this.currentExtentLabel=this.activityContext.getValue("CurrentExtentLabel")||this.app.getResource(this.libraryId,"language-current_extent"),this.showCapturedGeometry=this.activityContext.getValue("ShowCapturedGeometry"),this.geometryRequired=this.activityContext.getValue("GeometryRequired"),this.customGeometryInstructions=this.activityContext.getValue("CustomGeometryInstructions"),this.autoSubmit=this.activityContext.getValue("AutoSubmit"),this.showCapturedGeometry&&(this.graphicsLayer=this.app.map.graphics),"CurrentExtent"===l&&this.setDrawMode(this.app.map,a,!0),this.inputGeometry&&(this.addGraphic(this.inputGeometry,null,this.app.map),this.setCaptureResult(this.inputGeometry));var p=this.activityContext.getValue("Buttons"),c=[];if(p)for(var d=0;d<p.length;d++){var f=new r.FormButton(p[d].Label,p[d].Value,p[d].CausesValidation,p[d].IsDefault);p[d].IsDefault&&(this.defaultButton=f),c.push(f)}else{var w=this.defaultButton=new r.FormButton("OK","OK",(!0),(!0));c.push(w),c.push(new r.FormButton("Cancel","Cancel",(!1),(!1)))}this.buttons=new o.ObservableCollection(c),this.app.trace.debug("DisplayCaptureGeometryViewModel: object initialized."),this.app.event("MapMouseDownEvent").subscribe(this,function(e){3===e.which&&t.toolbar&&t.cleanUp()})},t.prototype.clearGraphics=function(){this.graphicsLayer&&this.graphicsLayer.clear()},t.prototype.addGraphic=function(e,t,i){var o=null,r=null;this.showCapturedGeometry&&e&&i&&(t||(t=this._getDrawTool(i)),r=e.type,o="point"===r||"multipoint"===r?t.markerSymbol:"line"===r||"polyline"===r?t.lineSymbol:t.fillSymbol,this.graphicsLayer.add(new esri.Graphic(e,o)))},t.prototype.setCaptureResult=function(e){return!e&&this.geometryRequired?void this.showRequiredValidationMessage.set(!0):(this.capturedMessageVisible.set(this.activityContext.getValue("ShowCapturedMessage")),this.showRequiredValidationMessage.set(!1),"extent"===e.type&&(e=s.envelopeToPolygon(e)),void this.activityContext.setValue("Result",e))},t.prototype._getDrawTool=function(e){return null==this.toolbar&&(this.toolbar=this.app.accessibilityManager.createComponent("geocortex.accessibility.draw",e,{showTooltips:!1}),dojo.connect(this.toolbar,"onDrawEnd",dojo.hitch(this,this.drawEnd))),this.toolbar},t.prototype.setDrawMode=function(e,t,i){if(e){if(i)return this.cleanUp(),this.addGraphic(e.extent,null,e),void this.setCaptureResult(e.extent);if(esri.toolbars&&esri.toolbars.Draw){this.app.command("ShowMap").execute(),this.app.command("ClearActiveTool").execute(),this.app.configuration.mobileMode&&!i&&this.app.command("CloseDataFrame").execute();var o=this._getDrawTool(e);if(this.drawType=l.getEsriGeometryType(t.typeName),this.app.trace.debug("DisplayCaptureGeometryViewModel: setDrawMode :: Draw mode set."),!this._inputMethodChangeHandle&&o instanceof u.Draw&&(this._inputMethodChangeHandle=dojo.aspect.after(o,"onInputMethodChange",dojo.hitch(this,"_onInputMethodChange"),!0)),o.deactivate(),o.activate(this.drawType),this.app.trace.debug("DisplayCaptureGeometryViewModel: setDrawMode :: Toolbar activated."),this.showCaptureStatusMessages){var r=a.WorkflowModule.getCaptureGeometryStatusMessage(this.app,this.libraryId,this.drawType,!0),n={id:this.statusMessageID,text:r,closeButton:{callback:dojo.hitch(this,this.userCancelled)}};this.app.command("DisplayNotification").execute(n),this.app.trace.debug("DisplayCaptureGeometryViewModel: setDrawMode :: Status Message assigned and displayed.")}}}},t.prototype.setCaptureTypeSelection=function(e){null!=this.activeCaptureType&&this.activeCaptureType.isSelected.set(!1),this.activeCaptureType=e,e.isSelected.set(!0)},t.prototype.drawEnd=function(e){var t=this.app.map,i=this._getDrawTool(t);("multipoint"!=e.type||e.points.length>0)&&(this.setCaptureResult(e),this.addGraphic(e,i,t)),this.app.command("ActivateContainersForWorkflow").execute({workflowId:this.activityContext.workflow().id,containerNames:[this.containerName]}),this.cleanUp(),this.app.trace.debug("DisplayCaptureGeometryViewModel: drawEnd :: draw ended."),this.autoSubmit&&this.app.event("Submit").publish(this)},t.prototype.cleanUp=function(){this.showCaptureStatusMessages&&this.app.command("RemoveNotification").execute(this.statusMessageID),null!=this.activeCaptureType&&(this.activeCaptureType.isSelected.set(!1),this.activeCaptureType=null),this._inputMethodChangeHandle&&(this._inputMethodChangeHandle.remove(),this._inputMethodChangeHandle=null),this.toolbar&&(this.toolbar.deactivate(),this.toolbar=null),this.app.trace.debug("DisplayCaptureGeometryViewModel: cleanUp :: clean up finished.")},t.prototype.userCancelled=function(){var e=this.app.map,t=this._getDrawTool(e);t.finishDrawing(),this.cleanUp()},t.prototype.validate=function(){var e=[];return this.geometryRequired&&this.showRequiredValidationMessage&&this.showRequiredValidationMessage.get()&&e.push(new n.ValidationResult((!1),this.requiredMessage)),e},t.prototype.viewUnhostedHandler=function(e){e.view.viewModel==this&&this.cleanUp()},t.prototype.getCaptureGeometryTooltip=function(e){switch(e){case"MapPoint":return this.getResource("language-capture-geometry-point_tooltip");case"MultiPoint":return this.getResource("language-capture-geometry-multi-point_tooltip");case"Polyline":return this.getResource("language-capture-geometry-polyline_tooltip");case"FreehandPolyline":return this.getResource("language-capture-geometry-freehand-polyline_tooltip");case"Polygon":return this.getResource("language-capture-geometry-polygon_tooltip");case"Extent":return this.getResource("language-capture-geometry-rectangle_tooltip")}return this.getResource("language-current_extent_tooltip")},t.prototype._onInputMethodChange=function(e){if(this.showCaptureStatusMessages){var t=e?e.newMethod:null,i=a.WorkflowModule.getCaptureGeometryStatusMessage(this.app,this.libraryId,this.drawType,!0,t),o={id:this.statusMessageID,text:i,closeButton:{}};this.app.command("DisplayNotification").execute(o),this.app.trace.debug("DisplayCaptureGeometryViewModel: _onInputMethodChange :: Status message updated.")}},t}(i.ViewModelBase);t.DisplayCaptureGeometryViewModel=p})},"Mapping/modules/Workflow/DisplayHyperlinkView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){return e.call(this,t,i)||this}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t),this.title.set(this.viewModel.title.get()),this.workflowContainer&&this.workflowContainer.view&&this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view)},t.prototype.handleClickButton=function(e,t,i){this.activityContext&&(this.activityContext.setValue("ButtonResultValue",i.value.get()),this.activityContext.completeActivity()),this.workflowContainer&&(this.workflowContainer.hasContent.set(!1),this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view)),this.app.viewManager.destroyView(this)},t}(i.ViewBase);t.DisplayHyperlinkView=o})},"Mapping/modules/Workflow/DisplayHyperlinkViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/forms/FormButton","geocortex/framework/observables"],function(e,t,i,o,r){"use strict";var n=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.activityContext=null,o.workflowContainer=null,o.buttons=null,o.message=null,o.uri=null,o.hyperlinkText=null,o.target=null,o.title=new r.Observable(""),o.showTitleInFormBody=new r.Observable((!1)),o}return __extends(t,e),t.prototype.initialize=function(e){if(this.activityContext&&e){var t=this.activityContext.getValue("Buttons"),i=[];t&&0!==t.length||(t=[{Label:this.app.getResource(this.libraryId,"language-common-close"),Value:"Close",CausesValidation:!1,IsDefault:!1}]);for(var n=0;n<t.length;n++){var a=new o.FormButton(t[n].Label,t[n].Value,t[n].CausesValidation,t[n].IsDefault);t[n].IsDefault&&(this.defaultButton=a),i.push(a)}this.buttons=r.Observable.makeBindableProxy(i),this.message=new r.Observable(this.activityContext.getValue("Message")),this.uri=new r.Observable(this.activityContext.getValue("Uri")),this.hyperlinkText=new r.Observable(this.activityContext.getValue("HyperlinkText")),null==this.hyperlinkText.get()&&this.hyperlinkText.set(this.uri.get()),this.target=new r.Observable(this.activityContext.getValue("Target")),e&&e.hasOwnProperty("showTitleInFormBody")&&this.showTitleInFormBody.set(e.showTitleInFormBody||!1)}},t}(i.ViewModelBase);t.DisplayHyperlinkViewModel=n})},"Mapping/modules/Workflow/DisplayReportUrlView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.activityContext=null,o.activityContextCompleteActivity=null,o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t)},t.prototype.handleClickButton=function(e,t,i){this.app.viewManager.destroyView(this)},t.prototype.destroy=function(){e.prototype.destroy.call(this),this._completeActivity()},t.prototype._completeActivity=function(){if(this.activityContext&&this.activityContextCompleteActivity){var e=this.activityContext;this.activityContext=null,this.activityContextCompleteActivity.apply(e)}},t}(i.ViewBase);t.DisplayReportUrlView=o})},"Mapping/modules/Workflow/DisplayReportUrlViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/forms/FormButton","geocortex/framework/observables"],function(e,t,i,o,r){"use strict";var n=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.workflowContainer=null,o.buttons=null,o.url=null,o.target="_blank",o}return __extends(t,e),t.prototype.initialize=function(e){e&&(this.defaultButton=new o.FormButton(this.app.getResource(this.libraryId,"language-common-close"),"Close",(!1),(!0)),this.buttons=r.Observable.makeBindableProxy([this.defaultButton]),this.url=new r.Observable(e))},t}(i.ViewModelBase);t.DisplayReportUrlViewModel=n})},"Mapping/modules/Workflow/DisplayResultPickerFeature":function(){define(["require","exports","geocortex/infrastructure/Feature","geocortex/framework/observables"],function(e,t,i,o){"use strict";function r(e){return e.isSelected=new o.Observable((!1)),e.cssClass=new o.Observable(""),e.isFiltered=new o.Observable((!1)),e.showIcon=!0,e.showCheckbox=!0,e}var n=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(i.Feature);t.DisplayResultPickerFeature=n,t.generateDisplayResultPickerFeaturefromFeature=r})},"Mapping/modules/Workflow/DisplayResultPickerView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/ShellUtils","geocortex/infrastructure/FeatureDescriptionPresenterView"],function(e,t,i,o,r){"use strict";var n=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.activityContext=null,o.onKeyDownHandle=[],o.onKeyUpHandle=[],o.itemClass="list-menu-item",o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t),this.app.event("ViewActivatedEvent").subscribe(this,this.setDisplayResultPickerListOffset),this.title.set(this.viewModel.title.get()),this.workflowContainer&&this.workflowContainer.view&&this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view),window&&(this.onKeyDownHandle.push(dojo.connect(window,"onkeydown",this,this.handleKeyDown)),this.onKeyUpHandle.push(dojo.connect(window,"onkeyup",this,this.handleKeyUp)))},t.prototype.setDisplayResultPickerListOffset=function(){if(this.topContainer){var e=this.topContainer.clientHeight;this.viewModel.topOffset.set(e)}if(this.bottomContainer){var t=this.bottomContainer.clientHeight;this.viewModel.bottomOffset.set(t)}},t.prototype.makeUnselectableNode=function(e,t){1==e.nodeType&&e.setAttribute("unselectable",t);for(var i=e.firstChild;i;)this.makeUnselectableNode(i,t),i=i.nextSibling},t.prototype.handleKeyDown=function(e,t,i){return e.ctrlKey===!0&&(this.viewModel.ctrlPressed=!0),e.shiftKey===!0&&(this.viewModel.shiftPressed=!0),e.ctrlKey!==!0&&e.shiftKey!==!0||this.viewModel.cssClass.get().indexOf("unselectable")!=-1||(this.viewModel.cssClass.set(this.viewModel.cssClass.get()+" unselectable"),this.makeUnselectableNode(this["display-result-picker-list"],"on")),!1},t.prototype.handleKeyUp=function(e,t,i){return e.ctrlKey===!1&&(this.viewModel.ctrlPressed=!1),e.shiftKey===!1&&(this.viewModel.shiftPressed=!1),e.ctrlKey!==!0&&e.shiftKey!==!0||(this.viewModel.cssClass.set(this.viewModel.cssClass.get().replace(" unselectable","")),this.makeUnselectableNode(this["display-result-picker-list"],"off")),!1},t.prototype.handleClick=function(e,t,i){return this._firstEvent&&this._cancelLongPress&&(this._firstEvent=null,this._cancelLongPress()),"A"===e.target.tagName||(this.viewModel.featureClicked(i),!0)},t.prototype.handleMouseOver=function(e,t,i){(o.hasClass(e.currentTarget,this.itemClass)||e instanceof FocusEvent)&&this.app.command("FocusFeature").execute(i)},t.prototype.handleMouseOut=function(e,t,i){(o.hasClass(e.currentTarget,this.itemClass)||e instanceof FocusEvent)&&this.app.command("ClearFeatureFocus").execute(i)},t.prototype.handleClearTextBox=function(e,t,i){this.viewModel.clearTextBox()},t.prototype.handleSelectAll=function(e,t,i){this.viewModel.selectAll()},t.prototype.handleSelectNone=function(e,t,i){this.viewModel.selectNone()},t.prototype.getDescription=function(e,t,i){t.title=i.description.get()},t.prototype.resolveWidget=function(t,i){e.prototype.resolveWidget.call(this,t,i);var o;return"GetLabel"===t?(o=new r.FeatureDescriptionPresenterView(this.app,this.libraryId),o.contentField="label",o.root=dojo.create("div"),o.root.className="feature-label",o.attach(i),o):"GetDescription"===t?(o=new r.FeatureDescriptionPresenterView(this.app,this.libraryId),o.root=dojo.create("div"),o.root.className="feature-description",o.attach(i),o):"RenderComplexResultTemplate"===t&&"complex"===this.viewModel.resultTemplateComplexity?(o=this.app.viewManager.createView({markupResource:"Mapping/modules/Workflow/Templates/DisplayResultPickerComplexResultTemplateView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.templates.DisplayResultPickerResultTemplateView"}),o.app=this.app,o.libraryId=this.libraryId,o.parentView=this,o.attach(i),o):"RenderSimpleResultTemplate"===t&&"simple"===this.viewModel.resultTemplateComplexity?(o=this.app.viewManager.createView({markupResource:"Mapping/modules/Workflow/Templates/DisplayResultPickerSimpleResultTemplateView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.templates.DisplayResultPickerResultTemplateView"}),o.app=this.app,o.libraryId=this.libraryId,o.parentView=this,o.attach(i),o):void 0},t.prototype.handleClickButton=function(e,t,i){i.causesValidation.get()&&this.viewModel.selectedFeatures.get().length>0||i.causesValidation.get()&&0==this.viewModel.features.get().length||!i.causesValidation.get()?(this.activityContext&&(this.activityContext.setValue("ButtonResultValue",i.value.get()),this.activityContext.setValue("SelectedIndices",this.viewModel.getSelectedIndices()),this.activityContext.completeActivity()),this.workflowContainer&&(this.workflowContainer.hasContent.set(!1),this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view)),this.app.viewManager.destroyView(this)):this.viewModel.showError()},t.prototype.deactivated=function(){e.prototype.deactivated.call(this),this._deactivated()},t.prototype._deactivated=function(){dojo.forEach(this.onKeyDownHandle,dojo.disconnect),dojo.forEach(this.onKeyUpHandle,dojo.disconnect),this.onKeyDownHandle=[],this.onKeyUpHandle=[],this.app.command("ClearHighlights").execute()},t}(i.ViewBase);t.DisplayResultPickerView=n})},"Mapping/modules/Workflow/DisplayResultPickerViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/forms/FormButton"],function(e,t,i,o,r){"use strict";var n=function(e){function t(t,i,r){var n=e.call(this,t,i)||this;return n.activityContext=null,n.workflowContainer=null,n.message=null,n.buttons=null,n.defaultButton=null,n.startingIndex=null,n.selectionMode=null,n.selectionModes=null,n.isSingleSelectionMode=null,n.resultTemplateComplexity=null,n.featureSet=r,n.title=new o.Observable(""),n.showTitleInFormBody=new o.Observable((!1)),n.filterText=new o.Observable(""),n.selectedFeatures=new o.ObservableCollection([]),n.ctrlPressed=!1,n.shiftPressed=!1,n.selectionModes=["single","multiple","extended"],n.disabledLinkCssClass=new o.Observable(""),n.requiredValueErrorMessage=new o.Observable(""),n.cssClass=new o.Observable("display-result-picker-list"),n.features=new o.ObservableCollection(r.features.get()),n.resultsList=new o.ObservableCollection(n.features.get()),n.topOffset=new o.Observable("0px"),n.bottomOffset=new o.Observable("0px"),n.filterSectionVisible=new o.Observable((!0)),n.filterText.bind(n,function(e){this.filterResults(e)}),n}return __extends(t,e),t.prototype.initialize=function(e){if(this.activityContext&&e){var t=this.activityContext.getValue("Buttons"),i=[];t&&0!==t.length||(t=[{Label:this.app.getResource(this.libraryId,"language-common-close"),Value:"Close",CausesValidation:!1,IsDefault:!1}]);for(var n=0;n<t.length;n++){var a=new r.FormButton(t[n].Label,t[n].Value,t[n].CausesValidation,t[n].IsDefault);t[n].IsDefault&&(this.defaultButton=a),i.push(a)}this.buttons=o.Observable.makeBindableProxy(i),this.message=new o.Observable(this.activityContext.getValue("Message")),this.showFilterTextBox=new o.Observable(this.activityContext.getValue("ShowFilterTextBox")),this.isSingleSelectionMode="single"==this.selectionMode,("single"!=this.selectionMode||null!=this.message.get()||this.showFilterTextBox.get())&&this.features.length()>0?this.filterSectionVisible.set(!0):this.filterSectionVisible.set(!1)}},t.prototype.filterResults=function(e){if(e){e.length>0&&!this.isSingleSelectionMode?this.disabledLinkCssClass.set("bound-visible-inline disabled-link"):this.isSingleSelectionMode?this.disabledLinkCssClass.set("bound-invisible"):this.disabledLinkCssClass.set("bound-visible-inline");for(var t,i,o,r={},n=new Array,a=new Array,s=[],l=!1,u=0;u<this.resultsList.length();u++){t=this.resultsList.getAt(u),i=t.descriptionFormat,o=t.labelFormat,n=this.getTokens(i.get()),a=this.getTokens(o.get());var p=[];if(n&&a?p=n.concat(a):(n||a)&&(p=n||a),p.length>0)for(var c=0;c<p.length;c++)s.indexOf(p[c])==-1&&s.push(p[c]);var d=void 0!=e?e.toLowerCase():"";if(s.length>0){r=t.esriFeature.get().attributes;for(var f=0;f<s.length;f++){var w=r[s[f]];if(w&&("string"==typeof w||w instanceof String||(w=w.toString()),w=w.toLowerCase(),w.indexOf(d)!==-1)){l=!0;break}}}else l=!0;l?this.resultsList.getAt(u).isFiltered.set(!1):this.resultsList.getAt(u).isFiltered.set(!0),l=!1}}else{for(var h=0;h<this.resultsList.length();h++)this.resultsList.getAt(h).isFiltered.set(!1);this.isSingleSelectionMode?this.disabledLinkCssClass.set("bound-invisible"):this.disabledLinkCssClass.set("bound-visible-inline")}},t.prototype.featureClicked=function(e){if(void 0!=e)if(!this.ctrlPressed&&"multiple"!=this.selectionMode||"single"==this.selectionMode)if(this.shiftPressed&&"extended"==this.selectionMode)if(0===this.selectedFeatures.length())this.addFeatureToSelection(e,!0);else{var t=this.features.indexOf(e);if(t>this.startingIndex){this.clearSelection();for(var i=this.startingIndex;i<=t;i++)this.addFeatureToSelection(this.features.getAt(i),!1)}else{this.clearSelection();for(var i=t;i<=this.startingIndex;i++)this.addFeatureToSelection(this.features.getAt(i),!1)}}else this.clearSelection(),this.addFeatureToSelection(e,!0);else{var o=this.selectedFeatures.indexOf(e);o!=-1?this.removeFeatureFromSelection(e):this.addFeatureToSelection(e,!0)}return!1},t.prototype.getTokens=function(e){if(!e)return null;var t=e.match(/{{.+?}}|{(.+?)}/g),i=new Array;if(t)for(var o=0;o<t.length;o++)t[o].match(/{(.+?)}/g)&&!t[o].match(/{{.+?}}/g)&&i.push(t[o].match("{(.+?)}")[1]);return i},t.prototype.addFeatureToSelection=function(e,t){if(void 0!=e.isFiltered.get()&&!e.isFiltered.get()){e.isSelected.set(!0),e.cssClass.set("selected");for(var i=!1,o=0;o<this.selectedFeatures.getItems().length;o++)if(this.selectedFeatures.getItems()[o]===e){i=!0;break}i||this.selectedFeatures.addItem(e);var r=this.features.indexOf(e);t&&r!=-1&&(this.startingIndex=r),this.app.command("HighlightFeature").execute(this.selectedFeatures.getItems())}},t.prototype.removeFeatureFromSelection=function(e){e.isSelected.set(!1),e.cssClass.set(""),this.selectedFeatures.removeItem(e);var t=this.features.indexOf(e);this.startingIndex=t,this.app.command("HighlightFeature").execute(this.selectedFeatures.getItems())},t.prototype.clearSelection=function(){if(this.selectedFeatures.length()){for(var e=0;e<this.selectedFeatures.length();e++)this.selectedFeatures.getAt(e).isSelected.set(!1),this.selectedFeatures.getAt(e).cssClass.set("");this.selectedFeatures.clear()}this.app.command("ClearHighlights").execute()},t.prototype.clearTextBox=function(){this.filterText.set("")},t.prototype.selectAll=function(){this.addFeatureToSelection(this.features.getAt(0),!0);for(var e=1;e<this.features.get().length;e++)this.addFeatureToSelection(this.features.getAt(e),!1)},t.prototype.selectNone=function(){this.clearSelection()},t.prototype.getSelectedIndices=function(){for(var e=[],t=0;t<this.selectedFeatures.length();t++)e.push(this.features.indexOf(this.selectedFeatures.getAt(t)));return e},t.prototype.showError=function(){var e=this.activityContext.getValue("RequiredValueErrorMessage");null===e&&(e=this.app.getResource(this.libraryId,"language-display-result-picker-no-results-selected")),this.requiredValueErrorMessage.set(e),this.cssClass.set("display-result-picker-list error")},t}(i.ViewModelBase);t.DisplayResultPickerViewModel=n})},"Mapping/modules/Workflow/FormRenderer":function(){define(["require","exports","geocortex/framework/config/ViewConfig","./WorkflowFormViewModel","geocortex/framework/utils/utils"],function(e,t,i,o,r){"use strict";function n(e,t){e.attached_application=t;var i={typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowFormView",markupResource:"Mapping/modules/Workflow/WorkflowFormView.html",isVisible:!0,regionName:null,libraryId:"Mapping"},r=t.viewManager.createView(i),n=new o.WorkflowFormViewModel(t);return n.initialize({}),r.attach(n),r.configuration={},r}function a(e,t,o){var n=function(i,o){var r=e.viewManager.createView({typeName:o,markupResource:i,isVisible:!0,regionName:null,libraryId:"Mapping.Infrastructure"});return r.attach(t),r};if(o&&o.hasOwnProperty(t.declaredClass)){var a=o[t.declaredClass];return n(a.markup,a.codebehind)}var s=e.configModel.widgetConfigs.filter(function(e){return e.id===t.formItemType});if(s.length>0){var l=s[0],u="WidgetView-{0}-{1}".format(l.id,r.alphaNumericToken()),p=new i.ViewConfig(u,null,l.type);p.libraryId=l.libraryId,p.markupResource=l.markup,p.configuration=l.configuration;var c=e.viewManager.createView(p);return c.attach(t),c}return n("Mapping/infrastructure/ui/components/Forms/FormItemView.html","geocortex.essentialsHtmlViewer.mapping.infrastructure.ui.components.Forms.FormItemViewBase")}t.render=n,t.getItemView=a})},"Mapping/modules/Workflow/WorkflowContainerConfig":function(){define(["require","exports","geocortex/framework/observables","geocortex/infrastructure/FilterUtils"],function(e,t,i,o){"use strict";var r=function(){function e(e){this.name=null,this.regionName=null,this.internalRegionName=null,this.resourceName=null,this.isManaged=!1,this.hideForMapInteraction=!1,this.allowClose=!0,this.view=null,this.activityContext=null,e&&dojo.safeMixin(this,e),this.showOverlay=new i.Observable((!1)),this.displayHeader=new i.Observable(e.displayHeader||!1),this.busy=new i.Observable((!1)),this.hasContent=new i.Observable((!1)),this.iconUri=new i.Observable(""),this.title=new i.Observable(""),this.visible=new i.Observable((!0)),this.message=new i.Observable(""),this.safeMessage=new i.Observable(""),this.safeMessage.syncTransform(this.message,function(e){var t={allowFrames:!0,uriTransformer:function(e){return e}};return o.sanitize(e,t)})}return e}();t.WorkflowContainerConfig=r})},"Mapping/modules/Workflow/WorkflowContainerView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","./WorkflowUtils"],function(e,t,i,o){"use strict";var r=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.hasSubscribed=!1,t&&(o.hasSubscribed||(o.hasSubscribed=!0,t.event("ViewContainerViewClosedEvent").subscribe(o,function(e){e&&(e.xButtonClicked||e.backButtonClicked)&&e.viewId===o.id&&o.viewModel&&o.viewModel.activityContext&&o.viewModel.activityContext.workflow&&(o.app.event("WorkflowAbort").publish(o.viewModel.activityContext.workflow()),o.app.event("WorkflowAbortedEvent").publish(o.viewModel.activityContext.workflow()))}))),o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t),o.WorkflowUtils.convertToHTMLSyntax(t.message),this.title.sync(t.title),this.iconUri.sync(t.iconUri)},t}(i.ViewBase);t.WorkflowContainerView=r})},"Mapping/modules/Workflow/WorkflowFormView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.activityContext=null,o.workflowContainer=null,o.formDefinition=null,o.workflowFormContent=null,o.token=null,o.token=o.app.command("SubmitWorkflowForm").register(o,o.submitRequest),o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));this.workflowFormContent=t.workflowFormContent,this.workflowFormContent.bind(this,function(){this.app.viewManager.notifyDimensionsChanged(this)}),this.activityContext=this.configuration.activityContext,this.workflowContainer=this.configuration.workflowContainer,e.prototype.attach.call(this,t),Modernizr&&!Modernizr.touch&&this._focusFirstItem(),t.title.bind(this,function(e){this.title.set(e)}),t.title.pulse(),this.app.viewManager.notifyDimensionsChanged(this)},t.prototype._focusFirstItem=function(){this.app.command("FocusOnFirstInputInView").execute(this)},t.prototype.submitRequest=function(e){this.viewModel.formDefinition===e&&this.handleSubmit(null);
},t.prototype.handleSubmit=function(e){var t=this.viewModel.getDefaultButton();if(t)this.finishFormWithButton(t);else if(e)return e.preventDefault(),!1},t.prototype.handleClickButton=function(e,t,i){this.finishFormWithButton(i)},t.prototype.finishFormWithButton=function(e){var t=this._processForm(this.viewModel.formDefinition,this.activityContext,e);1==t&&(null!=this.workflowContainer&&null!=this.workflowContainer.view&&(this.workflowContainer.hasContent.set(!1),this.app.viewManager.notifyDimensionsChanged(this.workflowContainer.view)),this.app.command("SubmitWorkflowForm").unregister(this.token),this.app.viewManager.destroyView(this))},t.prototype._processForm=function(e,t,i,o){if(null!=e&&null!=i&&i.causesValidation&&i.causesValidation.get()){for(var r=e.validate(),n=[],a=0;a<r.length;++a)0==r[a].isValid&&n.push(r[a]);if(null!=n&&n.length>0){this.viewModel.validationResults.set(n);for(var s="",l=0;l<n.length;l++)s.length>0&&(s+=" "),s+=this.app.getResource(this.libraryId,"language-accessibility-form-validation-summary").format(l+1,n.length,n[l].errorMessage);return this.app.command("ScreenReaderNarrate").execute(s),!1}this.viewModel.validationResults.clear()}for(var u=e.getResults(),p=0;p<u.length;p++){var c=u[p];c&&c.argumentName&&""!=dojo.trim(c.argumentName)&&t.setValue(c.argumentName,c.value,!0)}return t.setValue("ButtonResultValue",i.value.get()),e.destroy(),t.completeActivity(),!0},t.prototype.deactivated=function(){null!=this.formDefinition&&this.formDefinition.destroy(),this.formDefinition=null},t}(i.ViewBase);t.WorkflowFormView=o})},"Mapping/modules/Workflow/WorkflowFormViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/forms"],function(e,t,i,o,r){"use strict";var n=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.activityContext=null,r.formDefinition=null,r.validationResults=null,r.workflowFormContent=null,r.buttons=null,r.title=null,r.showTitleInFormBody=null,r.formHeight=null,r.formWidth=null,r.defaultFormWidth=800,r.defaultFormHeight=600,r.workflowFormContent=new o.Observable(null),r.buttons=new o.ObservableCollection([]),r.title=new o.Observable("Workflow form"),r.formWidth=new o.Observable(r.defaultFormWidth),r.formHeight=new o.Observable(r.defaultFormHeight),r.showTitleInFormBody=new o.Observable((!1)),r.validationResults=new o.ObservableCollection,r}return __extends(t,e),t.prototype.initialize=function(e){if(e&&e.hasOwnProperty("showTitleInFormBody")&&this.showTitleInFormBody.set(e.showTitleInFormBody||!1),e&&e.hasOwnProperty("buttons")?this.buttons=new o.ObservableCollection(e.buttons):this.buttons=new o.ObservableCollection([]),e&&e.hasOwnProperty("formDefinition")&&(this.formDefinition=e.formDefinition),null!=this.formDefinition){this.formDefinition.attached_application=this.app,this.formWidth.set(this.formDefinition.maxWidth.get()),this.formHeight.set(this.formDefinition.maxHeight.get()),this.formWidth.get()<1&&this.formWidth.set(this.defaultFormWidth),this.title.set(this.formDefinition.title.get());var t=r.renderFormItem(this.formDefinition.containerFormItem);this.workflowFormContent.set(t)}},t.prototype.getDefaultButton=function(){for(var e=null,t=null,i=0;i<this.buttons.getLength();i++)if(t=this.buttons.getAt(i),t.isDefault.get()){e=t;break}return e},t}(i.ViewModelBase);t.WorkflowFormViewModel=n})},"Mapping/modules/Workflow/WorkflowListView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o._hideViewOnClickWorkflow=null,o}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t),this.title.set(this.app.getResource(this.libraryId,"language-workflow-available-workflows"))},t.prototype.handleButtonClick=function(e,t,i){},t.prototype.handleClickWorkflow=function(e,t,i){return this.configuration.hideOnClickWorkflow&&this.app.command("DeactivateView").execute(this.id),this.app.command("RunWorkflowById").execute(i.id),!1},t}(i.ViewBase);t.WorkflowListView=o})},"Mapping/modules/Workflow/WorkflowModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/workflow/DefaultActivityDispatcher","./WorkflowContainerConfig","geocortex/infrastructure/FeatureSetCollection","./FormRenderer","geocortex/workflow/ActivityContext","./WorkflowFormViewModel","geocortex/forms/FormButton","./DisplayReportUrlViewModel","geocortex/framework/observables","geocortex/framework/resourceManager","geocortex/framework/utils/utils","geocortex/essentials/EssentialsLayerInfo","geocortex/essentials/EssentialsFeatureSet","geocortex/infrastructure/selection/CombineMode","./Handlers/ListenForExternalEvent","./Handlers/CollectExternalEventArgs","./Handlers/Alert","geocortex/workflow/MapActivityHandlers","./Handlers/ConfigureWorkflowContainer","./Handlers/Confirm","./Handlers/DisplayForm","./Handlers/DisplayHyperlink","./Handlers/DisplayCaptureGeometry","geocortex/workflow/DefaultActivityHandlers","./Handlers/Prompt","./Handlers/RunExternalCommand","./Handlers/SelectFeatures","./Handlers/GetSelectedFeatures","./Handlers/DisplayResultPicker","./Handlers/ExternalLog","./Handlers/ShowMapTip","./Handlers/CaptureGeometry","geocortex/workflow/WorkflowControllerProxy","geocortex/infrastructure/accessibility/InputMethod"],function(require,exports,ModuleBase_1,DefaultActivityDispatcher_1,WorkflowContainerConfig_1,FeatureSetCollection_1,FormRenderer_1,ActivityContext_1,WorkflowFormViewModel_1,FormButton_1,DisplayReportUrlViewModel_1,observables_1,resourceManager_1,utils_1,EssentialsLayerInfo_1,EssentialsFeatureSet_1,CombineMode_1,ListenForExternalEvent_1,CollectExternalEventArgs_1,Alert_1,MapActivityHandlers_1,ConfigureWorkflowContainer_1,Confirm_1,DisplayForm_1,DisplayHyperlink_1,DisplayCaptureGeometry_1,DefaultActivityHandlers_1,Prompt_1,RunExternalCommand_1,SelectFeatures_1,GetSelectedFeatures_1,DisplayResultPicker_1,ExternalLog_1,ShowMapTip_1,CaptureGeometry_1,WorkflowControllerProxy_1,InputMethod_1){"use strict";var WorkflowModule=function(_super){function WorkflowModule(e,t){var i=_super.call(this,e,t)||this;return i.dispatcher=null,i.configuration=null,i._eventListenersResults=null,i._eventListenersToken=null,i._containerConfigs=null,i._defaultContainerTitle=null,i._defaultContainerIconUri=null,i.defaultContainerName=null,i._startupWorkflowIds=null,i._lastOpenedCollectionId=null,i._workflowContainers=null,i._iconMap=null,i._defaultContainerRegionName=null,i._defaultFeatureSetCollection=null,i}return __extends(WorkflowModule,_super),WorkflowModule.prototype.initialize=function(config){var _this=this;this._eventListenersResults={},this._eventListenersToken=[],this.configuration=config,_super.prototype.initialize.call(this,arguments),this.defaultContainerName="Default",config&&void 0==config.showCaptureStatusMessages&&(config.showCaptureStatusMessages=!0),this._defaultFeatureSetCollection||(this._defaultFeatureSetCollection=new FeatureSetCollection_1.FeatureSetCollection,this._defaultFeatureSetCollection.sourceName="Workflow",this._defaultFeatureSetCollection.displayName.set(config.defaultContainerTitle||this.getResource("@language-workflow-title")),this.app.featureSetManager.addCollection(this._defaultFeatureSetCollection)),this._iconMap=config.icons?config.icons:{},this._workflowContainers={},this._defaultContainerTitle=config.defaultContainerTitle||this.getResource("@language-workflow-title"),this._defaultContainerRegionName=config.defaultContainerRegionName||"ModalWindowRegion",this._defaultContainerIconUri=config.defaultContainerIconUri||"Resources/Images/workflow-24.png",this._containerConfigs={};for(var containerIndex=0;containerIndex<config.containers.length;++containerIndex){var containerEntry=config.containers[containerIndex],containerConfig=new WorkflowContainerConfig_1.WorkflowContainerConfig(containerEntry);containerConfig.iconUri.set(containerEntry.iconUri||this._defaultContainerIconUri),containerConfig.title.set(containerEntry.title),this._containerConfigs[containerConfig.name]=containerConfig}if(this._startupWorkflowIds=[],config.startupWorkflows&&config.startupWorkflows.length)for(var startupWorkflowIndex=0;startupWorkflowIndex<config.startupWorkflows.length;startupWorkflowIndex++){var startupWorkflowEntry=config.startupWorkflows[startupWorkflowIndex];startupWorkflowEntry&&(startupWorkflowEntry.id?this._startupWorkflowIds.push(startupWorkflowEntry.id):this._startupWorkflowIds.push(startupWorkflowEntry))}var workflowUrlParam=this._getUrlParameterIgnoreCase("run")||this._getUrlParameterIgnoreCase("runWorkflow")||this._getUrlParameterIgnoreCase("runWorkflowById");if(this.app.urlParameters&&workflowUrlParam){var runWorkflowEntries;this.app.urlParameters[workflowUrlParam]&&(runWorkflowEntries=this.app.urlParameters[workflowUrlParam].split(","));for(var runWorkflowEntryIndex=0;runWorkflowEntryIndex<runWorkflowEntries.length;runWorkflowEntryIndex++){var runWorkflowEntry=runWorkflowEntries[runWorkflowEntryIndex];dojo.indexOf(this._startupWorkflowIds,runWorkflowEntry)<0&&this._startupWorkflowIds.push(runWorkflowEntry)}}this.dispatcher=new DefaultActivityDispatcher_1.DefaultActivityDispatcher(function(e,t){_this.app.event("WorkflowActivityDispatchError").publish({error:e,context:t}),_this.app.event("WorkflowActivityDispatchErrorEvent").publish({error:e,context:t})},function(e){_this.app.event("WorkflowActivityBegin").publish(e.workflow()),_this.app.event("WorkflowActivityStartedEvent").publish(e.workflow())},function(e){_this.app.event("WorkflowActivityComplete").publish(e.workflow()),_this.app.event("WorkflowActivityCompletedEvent").publish(e.workflow())},function(e,t){_this.app.event("WorkflowCompletedEvent").publish(t,e),_this.app.event("WorkflowComplete").publish(t,e)},function(e,t){var i=t||e.workflow();i&&(_this.app.event("WorkflowAbortedEvent").publish(i),_this.app.trace.debug("Workflow '{0}' with id '{1}' aborted by the '{2}' activity.".format(i.displayName,i.id,e.getDisplayName())))},function(e,t){_this.app.event("WorkflowWebRequestStartedEvent").publish(e,t)},function(e,t){_this.app.event("WorkflowWebRequestCompletedEvent").publish(e,t)}),this.dispatcher.handleUnhandledActivityErrorFunction=function(e,t){_this.app.trace.error(e.toString())},this.dispatcher._showDebugHandler=function(e,t){_this._showDebugHandler(_this,e,t)},this.dispatcher.handleOpenReportUrlFunction=function(e,t){_this._handleOpenReportUrl(_this,e,t)},this.app.event("WorkflowCompletedEvent").subscribe(this,function(e){_this.cleanupViewsForWorkflow(e)}),this.app.event("WorkflowAbortedEvent").subscribe(this,function(e){_this.cleanupViewsForWorkflow(e)}),this.app.event("ActiveToolChanged").subscribe(this,function(e){_this.dispatcher.abortMapBasedActivity()}),this.app.event("WorkflowActivityDispatchErrorEvent").subscribe(this,function(e){var t=e.error,i=e.context,o=_this.app.getResource(_this.libraryId,"language-workflow-error").format(t.message);_this.app.command("Alert").execute(o),_this.app.trace.error(o),i&&i.workflow&&_this.cleanupViewsForWorkflow(i.workflow())}),this.app.event("FSMCollectionOpenedEvent").subscribe(this,function(e){e&&e.featureSetCollection&&(_this._lastOpenedCollectionId=e.featureSetCollection.id)});var renderFormItem=function(e){var t=null;_this.configuration&&_this.configuration.hasOwnProperty("formItems")&&(t=_this.configuration.formItems);var i=null;e&&e.formDefinition&&(i=e.formDefinition.attached_application);var o=FormRenderer_1.getItemView(i,e,t);return o.root};eval("geocortex.forms.renderFormItem = renderFormItem"),this.registerActivityHandlers(),this.registerCommands(),this.app.site&&this.app.site.isInitialized?this._onSiteInitialized(this.app.site):this.app.event("SiteInitializedEvent").once(this,this._onSiteInitialized),config&&config.tools&&this.app&&this.app.toolRegistry&&this.app.toolRegistry.createTools(config.tools,!0)},WorkflowModule.prototype._getUrlParameterIgnoreCase=function(e){if(this.app.urlParameters)for(var t in this.app.urlParameters)if(this.app.urlParameters.hasOwnProperty(t)&&!String.isNullOrEmpty(t)&&!String.isNullOrEmpty(e)&&t.toLowerCase()===String(e).toLowerCase())return t;return null},WorkflowModule.prototype.remapWorkflowContainerIconUri=function(e){var t=null;return t=this._iconMap&&this._iconMap[e]?this._iconMap[e]:String.isNullOrEmpty(e)?this._defaultContainerIconUri:e},WorkflowModule.prototype.shutdown=function(e){if(this._eventListenersToken)for(var t=0;t<this._eventListenersToken.length;t++)this._eventListenersToken[t]()},WorkflowModule.prototype._showDebugHandler=function(e,t,i){var o=this,r={typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowFormView",markupResource:"Mapping/modules/Workflow/WorkflowFormView.html",isVisible:!0,regionName:e._defaultContainerRegionName,libraryId:e.libraryId,iconUri:e.configuration.defaultContainerIconUri,configuration:{activityContext:null}},n=new ActivityContext_1.ActivityContext(this.dispatcher,0,null,null);r.configuration.activityContext=n;var a=new WorkflowFormViewModel_1.WorkflowFormViewModel(e.app);a.activityContext=n;var s=null!=e.configuration&&(e.configuration.showTitleInFormBody||!1);a.initialize({showTitleInFormBody:s,formDefinition:t,buttons:[new FormButton_1.FormButton("OK","OK",(!1),(!0))]});var l=e.app.viewManager.createView(r);l.attach(a),l.configuration={},n.completeActivity=function(){o.app.viewManager.destroyView(l),dojo.isFunction(i)&&i()},e.app.viewManager.activateView(l)},WorkflowModule.prototype._handleOpenReportUrl=function(e,t,i){var o=e.app.viewManager.createView({markupResource:"Mapping/modules/Workflow/DisplayReportUrlView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayReportUrlView",isVisible:!0,libraryId:e.libraryId,iconUri:e._defaultContainerIconUri}),r=new DisplayReportUrlViewModel_1.DisplayReportUrlViewModel(this.app,this.libraryId);r.app=e.app,r.libraryId=e.libraryId,r.initialize(t),o.attach(r),o.activityContext=i,o.activityContextCompleteActivity=i.completeActivity,i.completeActivity=function(){e.app.trace.debug("activityContext.completeActivity ignored because the report url view is open")};var n=new observables_1.Observable(this.app.getResource(this.libraryId,"language-workflow-report-url-title")),a=e.getOrCreateContainer("Default");e.displayContainerContent(o,a,n,i)},WorkflowModule.prototype.getOrCreateContainer=function(e){var t=this._containerConfigs[e];return null==t&&(t=new WorkflowContainerConfig_1.WorkflowContainerConfig({name:e,regionName:this._defaultContainerRegionName,view:null}),t.iconUri.set(this._defaultContainerIconUri),t.title.set(this._defaultContainerTitle)),t},WorkflowModule.prototype.cleanupViewsForWorkflow=function(e){var t=this._workflowContainers[e.id];null==t&&(t=this._workflowContainers[e.id]=[]);for(var i=0;i<t.length;++i){var o=t[i];resourceManager_1.resourceManager.remove(this.libraryId,o.resourceName,"inv"),this.app.viewManager.destroyView(o.view),o.view=null}this._workflowContainers[e.id]=[]},WorkflowModule.prototype.createContainerView=function(e,t){var i=t.workflow(),o="Mapping/modules/Workflow/WorkflowContainerView.html",r=resourceManager_1.resourceManager.fetch(o,this.libraryId,"inv");if(null==r)return this.app.trace.warning("Could not create container '{0}' - markup resource '{1}' could not be found.".format(e.name,o)),!1;var n="WorkflowContainerRegion-{0}".format(utils_1.alphaNumericToken());r=r.replace("!region-name-placeholder!",n);var a="DynamicView-{0}-{1}".format(n,i.id);resourceManager_1.resourceManager.register(this.libraryId,"inv",a,"html",utils_1.base64Encode(r));var s={typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowContainerView",isVisible:!0,regionName:e.regionName,configuration:{internalRegionName:n,showXButton:e.allowClose},libraryId:this.libraryId,isManaged:null,iconUri:null,markupResource:null};s.isManaged=e.isManaged,s.iconUri=e&&e.iconUri?e.iconUri.get():this._defaultContainerIconUri,s.markupResource=a,e.view=this.app.viewManager.createView(s),e.view.activityContext=t,e.internalRegionName=n,e.activityContext=t,e.resourceName=a,e.view.attach(e);var l=this._workflowContainers[i.id];return null==l&&(l=this._workflowContainers[i.id]=[]),Array.contains(l,e)||l.push(e),!0},WorkflowModule.prototype.displayContainerContent=function(e,t,i,o){var r=o.workflow();null==t.view&&this.createContainerView(t,o),e.regionName=t.internalRegionName,null!=i&&t.view.viewModel.title.set(i.get()),t.showOverlay.set(!1),t.hasContent.set(!0),t.view.activityContext=o,this.app.viewManager.activateView(t.view),this.app.viewManager.activateView(e),this.app.command("FocusOnFirstInputInView").execute(e),this.app.viewManager.notifyDimensionsChanged(t.view);var n=this._workflowContainers[r.id];null==n&&(n=this._workflowContainers[r.id]=[]),Array.contains(n,t)||n.push(t)},WorkflowModule.prototype.getEssentialsLayerInfoFromLayer=function(e){if(!e)return null;var t=new EssentialsLayerInfo_1.EssentialsLayerInfo;if(t.mapServiceUrl=e.mapService.serviceUrl,t.mapServiceId=e.mapService.id,t.token=e.mapService.serviceToken,t.isVisible=e.isVisible(),t.isDynamic=e.isDynamic,t.id=e.id,t.name=e.name,t.displayName=e.displayName,t.layerUrl=t.mapServiceUrl+"/"+(t.isDynamic?"dynamicLayer":t.id),t.isDynamic){var i=e.mapService.serviceLayer;if(i&&i.dynamicLayerInfos)for(var o=0;o<i.dynamicLayerInfos.length;o++){var r=i.dynamicLayerInfos[o];if(r&&r.id.toString()===t.id){r.source&&(t.layerSourceJson=JSON.stringify(r.source.toJson()));break}}}return t},WorkflowModule.prototype.getEssentialsFeatureSetFromFeatureSet=function(e){var t=new EssentialsFeatureSet_1.EssentialsFeatureSet;return t.featureSetId=e.id,t.featureSetDisplayName=e.displayName.get(),t.esriFeatureSet=null,t.layerInfo=null,e.esriFeatureSet&&(e.esriFeatureSet.features=e.esriFeatureSet.features||[],t.esriFeatureSet=e.esriFeatureSet.toJson()),e.layer&&(t.layerInfo=this.getEssentialsLayerInfoFromLayer(e.layer)),t},WorkflowModule.prototype.getFeaturesInCollection=function(e,t){var i=[],o=null;if(e?e&&(o="Active"==e?this.app.featureSetManager.getCollectionById(this._lastOpenedCollectionId):this.app.featureSetManager.getCollectionById(e)):o=this.app.featureSetManager.getCollectionById(this._lastOpenedCollectionId),o&&o.featureSets&&o.featureSets.getLength()>0)if(t){var r=o.getFeatureSetById(t);r&&i.push(this.getEssentialsFeatureSetFromFeatureSet(r))}else for(var n=0;n<o.featureSets.getLength();n++){var r=o.featureSets.getAt(n);r&&i.push(this.getEssentialsFeatureSetFromFeatureSet(r))}return i},WorkflowModule.prototype.getFeaturesInCollectionAsync=function(e,t){var i=this;return this._findCollectionForGetSelectedFeaturesActivity(e).then(function(e){var o=[];if(e&&e.featureSets&&e.featureSets.getLength()>0)if(t){var r=e.getFeatureSetById(t);r&&o.push(i.getEssentialsFeatureSetFromFeatureSet(r))}else for(var n=0;n<e.featureSets.getLength();n++){var r=e.featureSets.getAt(n);r&&o.push(i.getEssentialsFeatureSetFromFeatureSet(r))}return o})},WorkflowModule.prototype._findCollectionForGetSelectedFeaturesActivity=function(e){var t=this;if(!e){var i=this.app.featureSetManager.getCollectionById(this._lastOpenedCollectionId);return Promise.resolve(i)}if(e.toLowerCase()=="Active".toLowerCase()){var i=this.app.featureSetManager.getCollectionById(this._lastOpenedCollectionId);return Promise.resolve(i)}return this._findResultsByName(e).then(function(i){return i||(i=t.app.featureSetManager.getCollectionById(e)),i})},WorkflowModule.prototype._findResultsByName=function(e){var t=this;return new Promise(function(i,o){return e?void t.app.command("FindSelection").execute({name:e,successCallback:i,errorCallback:o}):void i(null)})["catch"](function(e){return null})},WorkflowModule.prototype.prepFeatureSetInCollection=function(e){var t=this;e=e||{},this._findCollectionForSelectFeaturesActivity(e.collectionId).then(function(i){return t._combineFeatureSetWithCollection(i,e)}).then(function(i){e.showNotification&&t._displayNotification(i,e.featureSet,e.combineMode)})["catch"](function(i){e.showNotification&&t._handleError(i)})["finally"](function(){e.callback&&"function"==typeof e.callback&&e.callback()})},WorkflowModule.prototype._findCollectionForSelectFeaturesActivity=function(e){var t=this;return Promise["try"](function(){return t._getDefaultCollectionForEmptyId(e)}).then(function(i){return t._findCollectionInSavedResults(i,e)}).then(function(i){return t._findCollectionById(i,e)}).then(function(i){return t._createNewCollection(i,e)})},WorkflowModule.prototype._getDefaultCollectionForEmptyId=function(e){var t;return e||(t=this.app.featureSetManager.getCollectionById(this._defaultFeatureSetCollection.id),t||(t=this._defaultFeatureSetCollection,this.app.featureSetManager.addCollection(t))),t},WorkflowModule.prototype._findCollectionInSavedResults=function(e,t){return!e&&t?this._findResultsByName(t):Promise.resolve(e)},WorkflowModule.prototype._findCollectionById=function(e,t){return!e&&t&&(e=this.app.featureSetManager.getCollectionById(t),e&&e.displayName.set(t)),e},WorkflowModule.prototype._createNewCollection=function(e,t){return!e&&t&&(e=new FeatureSetCollection_1.FeatureSetCollection,e.id=t,e.sourceName="Workflow",e.displayName.set(t),this.app.featureSetManager.addCollection(e)),e},WorkflowModule.prototype._combineFeatureSetWithCollection=function(e,t){var i=this,o=null,r=t.featureSet,n=t.layer,a=t.clearCollectionFirst,s=t.showPushpins,l=t.combineMode;e.setExtendedProperty("ShowPushpins",s),a&&(l=CombineMode_1.CombineMode.REPLACE),String.isNullOrEmpty(r.displayName.get())&&n&&r.displayName.set(n.displayName?n.displayName:n.name),this.app.featureSetManager.openCollection(e.id);var u=new FeatureSetCollection_1.FeatureSetCollection;return u.featureSets.addItem(r),e.featureSets.getLength()>0&&(o=e.getFeatureSetById(r.id)),o&&l!==CombineMode_1.CombineMode.REPLACE?(String.isNullOrEmpty(r.displayName.get())?o.displayName.set(r.id):o.displayName.set(r.displayName.get()),this._combineCollections(e,u,l),o.resolveDataLinks(function(e){i.app.event("FeatureChangedEvent").publish(e)})):(this._combineCollections(e,u,l),r.resolveDataLinks(function(e){i.app.event("FeatureChangedEvent").publish(e)})),this.app.featureSetManager.closeCollection(e.id),e},WorkflowModule.prototype._combineCollections=function(e,t,i){switch(i){case CombineMode_1.CombineMode.REPLACE:e.clear(),e.featureSets.addItems(t.featureSets.getItems());break;case CombineMode_1.CombineMode.INTERSECT:e.intersectInPlace(t),e.featureSets.pulse();break;case CombineMode_1.CombineMode.SUBTRACT:e.subtractInPlace(t),e.featureSets.pulse();break;case CombineMode_1.CombineMode.UNION:e.unionInPlace(t),e.featureSets.pulse();break;default:e.unionInPlace(t),e.featureSets.pulse()}},WorkflowModule.prototype._displayNotification=function(e,t,i){var o,r=t.features.length(),n=e.displayName.get();switch(i){case CombineMode_1.CombineMode.UNION:o=this.getResource("language-select-features-union-confirmation");break;case CombineMode_1.CombineMode.INTERSECT:o=this.getResource("language-select-features-intersect-confirmation");break;case CombineMode_1.CombineMode.SUBTRACT:o=this.getResource("language-select-features-subtract-confirmation");break;case CombineMode_1.CombineMode.REPLACE:o=this.getResource("language-select-features-replace-confirmation")}o&&(o=o.format(n,r),this.app.command("AddResultsStatus").execute(o))},WorkflowModule.prototype._handleError=function(e){var t=e&&"UiError"==e.name?e.message:this.getResource("language-saved-results-error-message");return this.app.command("AddResultsStatus").execute(t),this.app.trace.error(e.message,e),e},WorkflowModule.prototype.registerActivityHandlers=function(){var e=this;this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.ListenForExternalEvent",function(t){ListenForExternalEvent_1.handleListenForExternalEvent(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.CollectExternalEventArgs",function(t){CollectExternalEventArgs_1.handleCollectExternalEventArgs(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.Alert",function(t){Alert_1.handleAlert(e,t)}),this.dispatcher.registerExternalIdHandler("IntersectLayers",MapActivityHandlers_1.MapActivityHandlers.handleIntersectLayers),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.ConfigureWorkflowContainer",function(t){ConfigureWorkflowContainer_1.handleConfigureWorkflowContainer(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.Confirm",function(t){Confirm_1.handleConfirm(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.DisplayForm",function(t){DisplayForm_1.handleDisplayForm(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.DisplayHyperlink",function(t){DisplayHyperlink_1.handleDisplayHyperlink(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.DisplayCaptureGeometry",function(t){DisplayCaptureGeometry_1.handleDisplayCaptureGeometry(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.Report",function(t){var i=t.getValue("MapServiceId"),o=t.getValue("LayerName"),r=t.getValue("ReportId");e.app.event("ReportTemplateStartedEvent").publish(r,i,o),DefaultActivityHandlers_1.handleReport(t),e.app.event("ReportTemplateCompletedEvent").publish(r,i,o)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.Prompt",function(t){Prompt_1.handlePrompt(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.RunExternalCommand",function(t){RunExternalCommand_1.handleRunExternalCommand(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.SelectFeatures",function(t){SelectFeatures_1.handleSelectFeatures(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.GetSelectedFeatures",function(t){GetSelectedFeatures_1.handleGetSelectedFeatures(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.DisplayResultPicker",function(t){DisplayResultPicker_1.handleDisplayResultPicker(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.ExternalLog",function(t){ExternalLog_1.handleExternalLog(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.ShowMapTip",function(t){ShowMapTip_1.handleShowMapTip(e,t)}),this.dispatcher.registerActivityHandler("Geocortex.Workflow.Activities.CaptureGeometry",function(t){CaptureGeometry_1.handleCaptureGeometry(e,t)}),this.app.setWorkflowActivityDispatcher(this.dispatcher)},WorkflowModule.prototype._getContainersForWorkflowId=function(e){return this._workflowContainers&&this._workflowContainers.hasOwnProperty(e)?this._workflowContainers[e]:null},WorkflowModule.prototype._activateContainersForWorkflow=function(e){if(e){var t=this._getContainersForWorkflowId(e.workflowId);if(t&&t.length>0){e.containerNames&&(t=t.filter(function(t){return e.containerNames.indexOf(t.name)>=0}));for(var i=0;i<t.length;++i)this.app.command("ActivateView").execute(t[i].view.id)}}},WorkflowModule.prototype._deactivateContainersForWorkflow=function(e){var t=this._getContainersForWorkflowId(e);if(t&&t.length>0)for(var i=0;i<t.length;++i)this.app.command("DeactivateView").execute(t[i].view.id)},WorkflowModule.prototype.registerCommands=function(){var e=this;this.app.command("RunWorkflowById").register(this,function(t){if(!e.app.site||!e.app.site.isInitialized)return void e.app.trace.error("Error running workflow '{0}' - Site was not initialized.".format(t));if(e.app&&e.app.isOffline&&e.app.isOffline.get())return e.app.command("Alert").execute(e.app.getResource(e.libraryId,"language-workflow-offline"),e.app.getResource(e.libraryId,"language-workflow-offline-title")),void e.app.trace.error("Error running workflow '{0}' - Unable to run workflows in an offline state".format(t));var i=e.app.site.findWorkflowById(t);return i?(WorkflowControllerProxy_1.startWorkflow(i,e.dispatcher,null),void e.app.command("LogOptimizerEvent").execute("RunWorkflow",i.id)):void e.app.trace.error("Error running workflow '{0}' - workflow not found in site.".format(t))},function(t){if(!e.app||!e.app.site||!e.app.site.isInitialized||e.app.isOffline&&e.app.isOffline.get())return!1;var i=e.app.site.findWorkflowById(t);return!!i}),this.app.command("RunWorkflowWithGeometry").register(this,function(t){if(!e.app.site||!e.app.site.isInitialized)return void e.app.trace.error("Error running workflow '{0}' - Site was not initialized.".format(t.workflowId));if(e.app&&e.app.isOffline&&e.app.isOffline.get())return e.app.command("Alert").execute(e.app.getResource(e.libraryId,"language-workflow-offline"),e.app.getResource(e.libraryId,"language-workflow-offline-title")),void e.app.trace.error("Error running workflow '{0}' - Unable to run workflows in an offline state".format(t.workflowId));var i=e.app.site.findWorkflowById(t.workflowId);if(!i)return void e.app.trace.error("Error running workflow '{0}' - workflow not found in site.".format(t.workflowId));var o=i.getInputs();if(t.geometry&&o)for(var r=0;r<o.length;r++){var n=o[r];null!=n&&null!=n.typeName&&("ESRI.ArcGIS.Client.Geometry.Geometry, ESRI.ArcGIS.Client"==n.typeName||"point"==t.geometry.type&&"ESRI.ArcGIS.Client.Geometry.Point, ESRI.ArcGIS.Client"==n.typeName||"multipoint"==t.geometry.type&&"ESRI.ArcGIS.Client.Geometry.MultiPoint, ESRI.ArcGIS.Client"==n.typeName||"polyline"==t.geometry.type&&"ESRI.ArcGIS.Client.Geometry.Polyline, ESRI.ArcGIS.Client"==n.typeName||"polygon"==t.geometry.type&&"ESRI.ArcGIS.Client.Geometry.Polygon, ESRI.ArcGIS.Client"==n.typeName||"extent"==t.geometry.type&&"ESRI.ArcGIS.Client.Geometry.Envelope, ESRI.ArcGIS.Client"==n.typeName)&&(n.value=t.geometry)}WorkflowControllerProxy_1.startWorkflow(i,e.dispatcher,o),e.app.command("LogOptimizerEvent").execute("RunWorkflow",i.id)},function(t){return!!(t&&t.workflowId&&t.geometry&&e.app.site&&e.app.site.isInitialized&&e.app.site.findWorkflowById(t.workflowId))}),this.app.command("RunWorkflowWithArguments").register(this,function(t){if(!e.app.site||!e.app.site.isInitialized)return void e.app.trace.error("Error running workflow '{0}' - Site was not initialized.".format(t.workflowId));if(e.app&&e.app.isOffline&&e.app.isOffline.get())return e.app.command("Alert").execute(e.app.getResource(e.libraryId,"language-workflow-offline"),e.app.getResource(e.libraryId,"language-workflow-offline-title")),void e.app.trace.error("Error running workflow '{0}' - Unable to run workflows in an offline state".format(t.workflowId));var i=e.app.site.findWorkflowById(t.workflowId);if(!i)return void e.app.trace.error("Error running workflow '{0}' - workflow not found in site.".format(t.workflowId));var o=i.getInputs();if(o)for(var r=0;r<o.length;r++)o[r].value=t[o[r].name];WorkflowControllerProxy_1.startWorkflow(i,e.dispatcher,o),e.app.command("LogOptimizerEvent").execute("RunWorkflow",i.id)},function(t){return!!(t&&t.workflowId&&e.app.site&&e.app.site.isInitialized&&e.app.site.findWorkflowById(t.workflowId))}),this.app.command("DisplayWorkflowContainerContent").register(this,function(t){var i=t.containerName,o=t.view,r=t.activityContext;if(null==i)throw new Error("Missing container name in DisplayWorkflowContainerContent.");var n=e.getOrCreateContainer(i);n.internalRegionName;e.displayContainerContent(o,n,n.title,r)}),this.app.command("ActivateContainersForWorkflow").register(this,this._activateContainersForWorkflow),this.app.command("DeactivateContainersForWorkflow").register(this,this._deactivateContainersForWorkflow)},WorkflowModule.prototype._onSiteInitialized=function(e){if(!e||!e.isInitialized)return void this.app.trace.error("Error processing startup workflows. - site was not initialized.");for(var t=this.app.site.workflows,i=0;i<t.length;i++){var o=t[i];o.runOnStartup&&this._startupWorkflowIds.indexOf(o.id)<0&&this._startupWorkflowIds.push(o.id),0===i&&(this.app.command("RunWorkflowById").raiseCanExecuteChanged(),
this.app.command("RunWorkflowWithArguments").raiseCanExecuteChanged(),this.app.command("RunWorkflowWithGeometry").raiseCanExecuteChanged())}if(null!=this._startupWorkflowIds&&0!=this._startupWorkflowIds.length)for(var i=0;i<this._startupWorkflowIds.length;i++){var r=this._startupWorkflowIds[i];if(null!=r){var o=e.findWorkflowById(r);if(!o){this.app.trace.error("Error running startup workflow '{0}' - workflow not found in site.".format(r));continue}var n=o.getInputs();if(null!=n&&this.app.urlParameters)for(var a=0;a<n.length;a++){var s=n[a];if(null!=s&&null!=s.name){var l=this.app.urlParameters[s.name];l&&(s.value=l)}}WorkflowControllerProxy_1.startWorkflow(o,this.dispatcher,n),this.app.command("LogOptimizerEvent").execute("RunWorkflow",o.id)}}},WorkflowModule.getCaptureGeometryStatusMessage=function(e,t,i,o,r){void 0===r&&(r=InputMethod_1.InputMethod.MOUSE);var n;switch(i){case esri.toolbars.Draw.POINT:return n=r==InputMethod_1.InputMethod.KEYBOARD?e.getResource(t,"language-capture-geometry-point-keyboard"):e.getResource(t,"language-capture-geometry-point");case esri.toolbars.Draw.MULTI_POINT:return o?e.getResource(t,"language-capture-geometry-multi-point"):e.getResource(t,"language-capture-geometry-point");case esri.toolbars.Draw.POLYLINE:return n=r==InputMethod_1.InputMethod.KEYBOARD?e.getResource(t,"language-capture-geometry-polyline-keyboard"):e.getResource(t,"language-capture-geometry-polyline");case esri.toolbars.Draw.POLYGON:return n=r==InputMethod_1.InputMethod.KEYBOARD?e.getResource(t,"language-capture-geometry-polygon-keyboard"):e.getResource(t,"language-capture-geometry-polygon");case esri.toolbars.Draw.FREEHAND_POLYLINE:return e.getResource(t,"language-capture-geometry-freehand-polyline");case esri.toolbars.Draw.FREEHAND_POLYGON:return e.getResource(t,"language-capture-geometry-freehand-polygon");case esri.toolbars.Draw.EXTENT:return e.getResource(t,"language-capture-geometry-rectangle")}return e.getResource(t,"language-capture-geometry-default")},WorkflowModule}(ModuleBase_1.ModuleBase);exports.WorkflowModule=WorkflowModule})},"Mapping/modules/Workflow/WorkflowTool":function(){define(["require","exports","geocortex/infrastructure/tools/MapTool"],function(e,t,i){"use strict";var o=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.workflowId=null,o.command=null,o}return __extends(t,e),t.prototype.onDrawEnd=function(t){if(this.workflowId){var i={geometry:t,workflowId:this.workflowId};this.app.command("RunWorkflowWithGeometry").execute(i)}e.prototype.onDrawEnd.call(this,t)},t}(i.MapTool);t.WorkflowTool=o})},"Mapping/modules/Workflow/WorkflowUtils":function(){define(["require","exports","geocortex/essentials/Field","geocortex/infrastructure/FormatUtils"],function(e,t,i,o){"use strict";var r=function(){function e(){}return e.convertToHTMLSyntax=function(t){if(null===t.get()||void 0===t.get())return null;for(var i in e.patterns){if(!i||void 0===i||null===i)break;var o=new RegExp(i,"g");t.set(t.get().replace(o,e.patterns[i]))}},e.formatListItem=function(e,t){switch(t){case i.EsriFieldTypes.esriFieldTypeDate:return o.formatDate(o.parseDate(e));case i.EsriFieldTypes.esriFieldTypeOID:case i.EsriFieldTypes.esriFieldTypeSmallInteger:case i.EsriFieldTypes.esriFieldTypeInteger:case i.EsriFieldTypes.esriFieldTypeSingle:case i.EsriFieldTypes.esriFieldTypeDouble:return o.formatNumber(o.parseNumber(e));default:return e}},e}();r.patterns={"\\n":"<br />","\\t":"&nbsp; &nbsp; &nbsp; &nbsp;"},t.WorkflowUtils=r})},"Mapping/modules/Workflow/WorkflowViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,t,i,o){"use strict";var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isActive=null,t.workflows=null,t}return __extends(t,e),t.prototype.initialize=function(e){this.isActive=new o.Observable((!1)),this.workflows=new o.ObservableCollection([]),null!=this.app.site&&this.app.site.isInitialized?this.getWorkflows():this.app.event("SiteInitializedEvent").subscribe(this,this.getWorkflows)},t.prototype.getWorkflows=function(){this.workflows.set(this.app.site.workflows)},t}(i.ViewModelBase);t.WorkflowViewModel=r})},"Mapping/modules/Workflow/Handlers/Alert":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("Title"),o=t.getValue("Text");e.app.command("Alert").execute(o,i,function(){t.completeActivity()})}t.handleAlert=i})},"Mapping/modules/Workflow/Handlers/CaptureGeometry":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){function i(e,i,o){o.deactivate(),dojo.disconnect(i),r.setDrawObjectContext(null),t.setValue("Result",e),t.completeActivity()}function o(e){var t;switch(e){case 0:t=esri.toolbars.Draw.EXTENT;break;case 1:t=esri.toolbars.Draw.FREEHAND_POLYGON;break;case 2:t=esri.toolbars.Draw.FREEHAND_POLYLINE;break;case 3:t=esri.toolbars.Draw.LINE;break;case 4:t=esri.toolbars.Draw.POINT;break;case 5:t=esri.toolbars.Draw.MULTI_POINT;break;case 6:t=esri.toolbars.Draw.POLYGON;break;case 7:t=esri.toolbars.Draw.POLYLINE;break;case 8:i(a.extent,l,s),u=!1;break;default:t=esri.toolbars.Draw.EXTENT}return t}var r=t.dispatcher();if(!r.abortMapBasedActivity())throw new Error("Could not deactivate current map based activity.");e.app.command("ClearActiveTool").execute();var n=t.getValue("CaptureType"),a=t.getEsriMap();if(null==a)throw new Error("Capture Geometry: No map available.");if("function"!=typeof esri.toolbars.Draw)throw new Error('dojo.require("esri.toolbars.draw") must be added to your client code to use CaptureGeometry activity.');var s=e.app.accessibilityManager.createComponent("geocortex.accessibility.draw",a),l=dojo.connect(s,"onDrawEnd",dojo.hitch(l,function(e){i(e,l,s)})),u=!0,p=o(n);u&&s.activate(p),r.setDrawObjectContext({activityContext:t,toolbar:s,drawEvent:l})}t.handleCaptureGeometry=i})},"Mapping/modules/Workflow/Handlers/CollectExternalEventArgs":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("EventName"),o=t.getValue("WaitForEvent"),r=t.getValue("WaitTimeout");if(!e._eventListenersResults.hasOwnProperty(i))return void t.completeActivity();if(e._eventListenersResults[i])return t.setValue("EventArgs",e._eventListenersResults[i]),void t.completeActivity();if(o)if(r>0)window.setTimeout(function(){t.setValue("EventArgs",e._eventListenersResults[i]),t.completeActivity()},r);else{var n=function(){return e._eventListenersResults[i]?(t.setValue("EventArgs",e._eventListenersResults[i]),void t.completeActivity()):void window.setTimeout(n,2e3)};n()}else t.completeActivity()}t.handleCollectExternalEventArgs=i})},"Mapping/modules/Workflow/Handlers/ConfigureWorkflowContainer":function(){define(["require","exports","geocortex/essentials/RestHelper"],function(e,t,i){"use strict";function o(e,t){var o=t.getValue("WorkflowContainerName"),r=t.getValue("ShowContainer"),n=t.getValue("IsBusy"),a=t.getValue("Message"),s=t.getValue("Title"),l=t.getValue("IconUri");l&&(l=i.RestHelper.processClientSideTokens(t.getSite(),l),0==l.indexOf("/")&&(l=l.substring(1)));var u=e.getOrCreateContainer(o);e._containerConfigs[o]=u,null!=s&&u.title.set(s),null!=n&&u.busy.set(n),null!=a&&(u.message.set(a),u.hasContent.set(!1),u.view&&e.app.viewManager.notifyDimensionsChanged(u.view)),l&&u.iconUri.set(e.remapWorkflowContainerIconUri(l)),u.view||e.createContainerView(u,t),r?e.app.viewManager.activateView(u.view):r===!1&&e.app.viewManager.deactivateView(u.view),t.completeActivity()}t.handleConfigureWorkflowContainer=o})},"Mapping/modules/Workflow/Handlers/Confirm":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("Title"),o=t.getValue("Text");e.app.command("Confirm").execute(o,i,function(e){t.setValue("Result",e||!1),t.completeActivity()})}t.handleConfirm=i})},"Mapping/modules/Workflow/Handlers/DisplayCaptureGeometry":function(){define(["require","exports","./../DisplayCaptureGeometryViewModel","geocortex/framework/observables"],function(e,t,i,o){"use strict";function r(e,t){var r=null,n=null,a=null,s=null,l=null,u=(t.workflow(),t.getValue("Title")),p=t.getValue("WorkflowContainerName"),c=e.configuration&&e.configuration.showTitleInFormBody,d=new o.Observable(e._defaultContainerTitle);if(!p)return void e.app.trace.error("Error parsing activity context. WorkflowContainerName is a required value and is not supplied.");e.app.command("ClearActiveTool").execute(),n=e.getOrCreateContainer(p),u?d.set(u):n.title&&d.set(n.title.get());for(var f=["MapPoint","MultiPoint","FreehandPolyline","Polygon","Polyline","Extent","CurrentExtent"],w={},h=0;h<f.length;h++){var m=f[h];w[m]="geometry-type-"+m.toLowerCase()}a={typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayCaptureGeometryView",markupResource:"Mapping/modules/Workflow/DisplayCaptureGeometryView.html",isVisible:!0,regionName:r,libraryId:e.libraryId,iconUri:e._defaultContainerIconUri},s=new i.DisplayCaptureGeometryViewModel(e.app,e.libraryId),s.activityContext=t,s.libraryId=e.libraryId,s.hideShowContainer=n.hideForMapInteraction||!1,s.containerName=n.name,s.geometryTypeCssDictionary=w,s.title.set(d.get()),s.initialize({showTitleInFormBody:c}),void 0!=e.configuration.showCaptureStatusMessages&&(s.showCaptureStatusMessages=e.configuration.showCaptureStatusMessages),l=e.app.viewManager.createView(a),l.activityContext=t,l.workflowContainer=n,l.viewModel=s,e.displayContainerContent(l,n,d,t)}t.handleDisplayCaptureGeometry=r})},"Mapping/modules/Workflow/Handlers/DisplayForm":function(){define(["require","exports","geocortex/framework/observables","geocortex/forms/DataItem","geocortex/forms/FormDefinition","geocortex/forms/FormButton","./../WorkflowFormViewModel"],function(e,t,i,o,r,n,a){"use strict";function s(e,t){var s=t.workflow(),l=t.getValue("RegionName"),u=t.getValue("WorkflowContainerName"),p=new i.Observable(e._defaultContainerTitle),c=null,d=t.getInputNamesByType("System.Collections.Generic.IEnumerable`1[[Geocortex.Forms.Client.DataItem"),f={};if(null!=d&&d.length>0)for(var w=0;w<d.length;++w){var h=t.getValue(d[w]);if(null!=h){for(var m=[],g=0;g<h.length;++g)m.push(new o.DataItem(h[g].Display,h[g].Value,h[g].TypeName));f[d[w]]=m}}var y=t.getValue("InputGeometry"),v=t.getValue("FormDefinition"),k=new r.FormDefinition(v,f,y),b=t.getValue("Buttons"),C=[];if(null!=b)for(var w=0;w<b.length;w++)C.push(new n.FormButton(b[w].Label,b[w].Value,b[w].CausesValidation,b[w].IsDefault));else String.isNullOrEmpty(l)&&String.isNullOrEmpty(u)&&(C.push(new n.FormButton("OK","OK",(!0),(!0))),C.push(new n.FormButton("Cancel","Cancel",(!1),(!1))));null!=u?(c=e.getOrCreateContainer(u),l=c.internalRegionName,p=c.title):l&&e.app.viewManager.getExistingRegionByName(l)||(l="ModalWindowRegion");var x={typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowFormView",markupResource:"Mapping/modules/Workflow/WorkflowFormView.html",isVisible:!0,regionName:null,libraryId:e.libraryId,iconUri:c&&c.iconUri?c.iconUri.get():e._defaultContainerIconUri};x.configuration={},x.configuration.activityContext=t,x.configuration.workflowContainer=c;var M=new a.WorkflowFormViewModel(e.app,e.libraryId);M.activityContext=t;var V=null!=e.configuration&&(e.configuration.showTitleInFormBody||!1);if(M.initialize({showTitleInFormBody:V,formDefinition:k,buttons:C}),c){var W=e.app.viewManager.createView(x);W.attach(M),p=M.title&&!String.isNullOrEmpty(M.title.get())?M.title:p,e.displayContainerContent(W,c,p,t)}else{e.cleanupViewsForWorkflow(s),x.regionName=l;var W=e.app.viewManager.createView(x);W.attach(M),W.configuration={},e.app.viewManager.activateView(W)}}t.handleDisplayForm=s})},"Mapping/modules/Workflow/Handlers/DisplayHyperlink":function(){define(["require","exports","geocortex/framework/observables","./../DisplayHyperlinkViewModel"],function(e,t,i,o){"use strict";function r(e,t){var r=(t.workflow(),t.getValue("WorkflowContainerName")),n=t.getValue("Buttons"),a=t.getValue("Title"),s=new i.Observable(e._defaultContainerTitle),l=null;!r&&e&&(r=e.defaultContainerName),null!=r&&(l=e.getOrCreateContainer(r)),s.set(a);var u=e.app.viewManager.createView({markupResource:"Mapping/modules/Workflow/DisplayHyperlinkView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayHyperlinkView",isVisible:!0,libraryId:e.libraryId,iconUri:e._defaultContainerIconUri});u.activityContext=t,u.workflowContainer=l;var p=new o.DisplayHyperlinkViewModel(e.app,e.libraryId);p.activityContext=t,p.app=e.app,p.libraryId=e.libraryId;var c=e.configuration&&e.configuration.showTitleInFormBody;p.title.set(s.get()),p.initialize({buttons:n,showTitleInBody:c}),u.attach(p),e.displayContainerContent(u,l,s,t)}t.handleDisplayHyperlink=r})},"Mapping/modules/Workflow/Handlers/DisplayResultPicker":function(){define(["require","exports","geocortex/framework/observables","geocortex/infrastructure/FormatUtils","geocortex/infrastructure/FeatureSet","./../DisplayResultPickerFeature","./../DisplayResultPickerViewModel"],function(e,t,i,o,r,n,a){"use strict";function s(e,t){var s=(t.workflow(),t.getValue("WorkflowContainerName")),l=t.getValue("Buttons"),u=t.getValue("FeatureSet"),p=t.getValue("MapServiceId"),c=t.getValue("LayerId"),d=t.getValue("LayerName"),f=t.getValue("DescriptionFormat"),w=t.getValue("LabelFormat"),h=t.getValue("SelectionMode"),m="extended";switch(h){case 0:m="single";break;case 1:m="multiple";break;case 2:m="extended"}var g=t.getValue("ShowIcons"),y=t.getValue("Title"),v=new i.Observable(e._defaultContainerTitle),k=null,b=null;if(!s&&e&&(s=e.defaultContainerName),null!=s&&(k=e.getOrCreateContainer(s)),y?v.set(y):k.title&&v.set(k.title.get()),p){var C=t.getSite().essentialsMap.findMapServiceById(p);C&&(c?b=C.findLayerOrTableById(c):d&&(b=C.findLayerOrTableByName(d)))}if(u&&u.fields)for(var x=0;x<u.fields.length;x++){var M=u.fields[x];if("esriFieldTypeDate"===M.type)for(var V=0;V<u.features.length;V++){var W=u.features[V];W.attributes[M.alias]?W.attributes[M.alias]=o.parseDate(W.attributes[M.alias]):W.attributes[M.name]&&(W.attributes[M.name]=o.parseDate(W.attributes[M.name]))}}for(var I=new r.FeatureSet({esriFeatureSet:u,layer:b}),F="extended"===m||"multiple"===m,_=0;_<I.features.length();_++){var S=n.generateDisplayResultPickerFeaturefromFeature(I.features.getAt(_));S.showCheckbox=F,g||(S.showIcon=g),f&&S.descriptionFormat.set(f),w&&S.labelFormat.set(w)}var D=e.app.viewManager.createView({markupResource:"Mapping/modules/Workflow/DisplayResultPickerView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayResultPickerView",isVisible:!0,libraryId:e.libraryId,iconUri:e._defaultContainerIconUri});D.activityContext=t,D.workflowContainer=k;var R=new a.DisplayResultPickerViewModel(e.app,e.libraryId,I);R.activityContext=t,R.selectionMode=m,R.app=e.app,R.libraryId=e.libraryId;var E=e.configuration&&!!e.configuration.showTitleInFormBody;R.title.set(v.get());var T=e.configuration.displayResultPickerTemplateComplexity;void 0===T||"complex"!=T&&"simple"!=T?R.resultTemplateComplexity="complex":R.resultTemplateComplexity=T.toLowerCase(),R.initialize({buttons:l,showTitleInBody:E}),D.attach(R),e.displayContainerContent(D,k,v,t)}t.handleDisplayResultPicker=s})},"Mapping/modules/Workflow/Handlers/ExternalLog":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("Message");e.app.trace.info(i),t.completeActivity()}t.handleExternalLog=i})},"Mapping/modules/Workflow/Handlers/GetSelectedFeatures":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("FeatureSetId"),o=t.getValue("FeatureSetCollectionId");e.getFeaturesInCollectionAsync(o,i).then(function(e){e&&e.length>0?t.setValue("SelectedFeatures",e):t.setValue("SelectedFeatures",null)}).lastly(function(){return t.completeActivity()})}t.handleGetSelectedFeatures=i})},"Mapping/modules/Workflow/Handlers/IntersectLayers":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){}t.handleIntersectLayers=i})},"Mapping/modules/Workflow/Handlers/ListenForExternalEvent":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("EventName");if(e._eventListenersResults.hasOwnProperty(i))e._eventListenersResults[i]=null;else{e._eventListenersResults[i]=null;var o=e.app.event(i).subscribe(e,function(){e._eventListenersResults[i]=arguments});e._eventListenersToken.push(function(){e.app.event(i).unsubscribe(o)})}t.completeActivity()}t.handleListenForExternalEvent=i})},"Mapping/modules/Workflow/Handlers/Prompt":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("Title"),o=t.getValue("Description"),r=t.getValue("DefaultText"),n=function(e){t.setValue("Result",e),t.completeActivity()};e.app.command("Prompt").execute(i,o,r,n)}t.handlePrompt=i})},"Mapping/modules/Workflow/Handlers/RunExternalCommand":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("CommandName"),o=t.getValue("CommandParameter");e.app.command(i).execute(o),t.completeActivity()}t.handleRunExternalCommand=i})},"Mapping/modules/Workflow/Handlers/SelectFeatures":function(){define(["require","exports","geocortex/infrastructure/FeatureSet","geocortex/essentials/RestHelper","geocortex/framework/utils/utils","geocortex/infrastructure/FormatUtils","geocortex/infrastructure/selection/CombineMode"],function(e,t,i,o,r,n,a){"use strict";function s(e,t){if(e){var i=t.getValue("LabelFormat"),r=t.getValue("DescriptionFormat"),n=t.getValue("LongDescriptionFormat"),a=t.getValue("IconUri"),s=t.getValue("FeatureSetDisplayName");if(s&&e.displayName.set(s),(i||r||n||a)&&e.features)for(var l=0;l<e.features.length();++l){var u=e.features.getAt(l);if(u){if(a){var p=t.getSite();p&&u.iconUri.set(o.RestHelper.processClientSideTokens(p,a))}i&&u.labelFormat.set(i),r&&u.descriptionFormat.set(r),n&&u.longDescriptionFormat.set(n)}}}}function l(e,t){var o=t.getValue("FeatureSet"),a=t.getValue("MapServiceId"),l=t.getValue("LayerId"),c=t.getValue("LayerName"),d=t.getValue("CollectionName"),f=t.getValue("ClearCollectionFirst"),w=t.getValue("ShowPushpins"),h=t.getValue("ShowNotification"),m=t.getValue("FeatureSetId"),g=t.getValue("CombineMode"),y=!r.isNullOrUndefined(g),v=null;if(f||(f=!1),w||(w=!1),h||(h=!1),y?f=g==p.Replace:g=f?p.Replace:p.Union,a){var k=null,b=t.getSite();b&&(k=b.getResourceById(b.essentialsMap.mapServices,a)),k&&(l?v=k.findLayerOrTableById(l):c&&(v=k.findLayerOrTableByName(c)))}if(o&&o.fields)for(var C=0;C<o.fields.length;C++){var x=o.fields[C];if("esriFieldTypeDate"===x.type&&o.features&&o.features.length)for(var M=0;M<o.features.length;M++){var V=o.features[M];V.attributes[x.alias]?V.attributes[x.alias]=n.parseDate(V.attributes[x.alias]):V.attributes[x.name]&&(V.attributes[x.name]=n.parseDate(V.attributes[x.name]))}}var W=u(g),I=new i.FeatureSet({esriFeatureSet:o,layer:v,app:this.app});m&&(I.id=m),s(I,t);var F={featureSet:I,collectionId:d,clearCollectionFirst:f,layer:v,showPushpins:w,showNotification:h,combineMode:W,callback:function(){return t.completeActivity()}};null!=I&&null!=I.features&&I.features.length()>0&&null!=v&&!I.features.getAt(0).hasGeometry.get()?I.loadGeometries(null).then(function(){return e.prepFeatureSetInCollection(F)},function(t){return e.prepFeatureSetInCollection(F)}):e.prepFeatureSetInCollection(F)}function u(e){switch(e){case p.Union:return a.CombineMode.UNION;case p.Replace:return a.CombineMode.REPLACE;case p.Intersect:return a.CombineMode.INTERSECT;case p.Subtract:return a.CombineMode.SUBTRACT;default:return a.CombineMode.UNION}}var p;!function(e){e[e.Union=0]="Union",e[e.Replace=1]="Replace",e[e.Intersect=2]="Intersect",e[e.Subtract=3]="Subtract"}(p||(p={})),t.setFeatureProperties=s,t.handleSelectFeatures=l})},"Mapping/modules/Workflow/Handlers/ShowMapTip":function(){define(["require","exports"],function(e,t){"use strict";function i(e,t){var i=t.getValue("FeatureSetCollectionId"),o=t.getValue("FeatureSetId"),r=t.getValue("FeatureId"),n=null,a=[];if(i?i&&(n="Active"==i?e.app.featureSetManager.getCollectionById(e._lastOpenedCollectionId):e.app.featureSetManager.getCollectionById(i)):n=e.app.featureSetManager.getCollectionById(e._lastOpenedCollectionId),n&&n.featureSets&&n.featureSets.getLength()>0)if(o){var s=n.getFeatureSetById(o);if(s)for(var l=0;l<s.features.getLength();l++){var u=s.features.getAt(l);if(u){if(!r){a.push(u);break}u.id.get()==r&&a.push(u)}}}else for(var p=0;p<n.featureSets.getLength();p++){var s=n.featureSets.getAt(p);if(s)for(var l=0;l<s.features.getLength();l++){var u=s.features.getAt(l);if(u){if(!r){a.push(u);break}u&&u.id.get()==r&&a.push(u)}}}a.length>0&&e.app.command("ShowMapTip").execute(a[0]),t.completeActivity()}t.handleShowMapTip=i})},"Mapping/modules/Workflow/Templates/DisplayResultPickerResultTemplateView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var o=function(e){function t(t,i){return e.call(this,t,i)||this}return __extends(t,e),t.prototype.attach=function(t){if(!t)throw new Error("{0}: A view model must be specified to attach to.".format(this.id));e.prototype.attach.call(this,t)},t.prototype.handleCheckboxChecked=function(e,t,i){this.parentView.viewModel.featureChecked(i)},t}(i.ViewBase);t.DisplayResultPickerResultTemplateView=o})},"url:/Mapping/modules/Workflow/DisplayCaptureGeometryView.html":'<div class="module display-capture-geometry">\r\n    \r\n    <div class="form-title" data-binding="{@text: title}{@visible: showTitleInFormBody}"></div>\r\n        \r\n    <!-- Workflow Activity Description -->\r\n    <div class="workflow-instruction-msg" data-binding="{@text: instructionMessage}"></div>\r\n    \r\n    <!-- Capture Types -->\r\n    <span class="workflow-form-desc" data-binding="{@text: customGeometryInstructions}"></span>\r\n    <span class="workflow-form-desc" data-binding="{@hidden: customGeometryInstructions}{@text: @language-geometry-toolbar-instructions}"></span>\r\n\r\n    <!-- Buttons -->\r\n    <div class="form-btns geometry" data-binding="{@source: captureTypes}">\r\n        <button class="button" data-binding="{@template-for: captureTypes}{@event-onclick: handleCaptureTypeSelection}{id: typeName}{title: tooltip}{@class-highlight: isSelected}">\r\n            <span data-binding="{class: className}"></span>\r\n        </button>\r\n    </div>\r\n    \r\n    <!-- Validation results -->\r\n    <div data-binding="{@visible: showRequiredValidationMessage}">\r\n        <div class="workflow-status-msg invalid" data-binding="{@visible: validationResults}">\r\n            <table>\r\n                <tr>\r\n                    <td><img src="Resources/Images/Icons/error-white-24.png" data-binding="{alt: @language-geometry-captured}"/></td>\r\n                    <td data-binding="{@source: validationResults}"><span data-binding="{@template-for: validationResults}{@text: errorMessage}" /></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Message to indicate that a geometry is captured -->\r\n    <div class="workflow-status-msg" data-binding="{@visible: capturedMessageVisible}" >\r\n        <table>\r\n            <tr>\r\n                <td><img src="Resources/Images/Icons/check-24.png" data-binding="{alt: @language-geometry-captured}"/></td>\r\n                <td valign="middle"><span data-binding="{@text: @language-geometry-captured}" /></td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n\r\n    <!-- Buttons -->\r\n    <div class="form-btns" data-binding="{@source: buttons}">\r\n        <button class="button" data-binding="{@template-for: buttons}{@text: label}{@event-onclick: handleClickButton}"></button>\r\n    </div>\r\n\r\n</div>',"url:/Mapping/modules/Workflow/DisplayHyperlinkView.html":'\r\n<div class="module display-hyperlink">\r\n    <h2 class="form-title" data-binding="{@text: title}{@visible: showTitleInFormBody}"></h2>\r\n    <p class="form-item form-desc" data-binding="{@text: message}"></p>\r\n    <a class="form-item" data-binding="{href: uri}{target: target}{@text: hyperlinkText}"></a>\r\n    <div class="form-btns" data-binding="{@source: buttons}">\r\n        <button class="button" data-binding="{@template-for: buttons}{@text: label}{@event-onclick: handleClickButton}"></button>\r\n    </div>\r\n</div>',"url:/Mapping/modules/Workflow/DisplayReportUrlView.html":'<div class="module display-hyperlink">\r\n    <p class="form-item form-desc" data-binding="{@text: @language-workflow-report-url}"></p>\r\n    <a class="form-item" data-binding="{href: url}{target: target}{@text: @language-workflow-report-url-text}"></a>\r\n    <div class="form-btns" data-binding="{@source: buttons}">\r\n        <button class="button" data-binding="{@template-for: buttons}{@text: label}{@event-onclick: handleClickButton}"></button>\r\n    </div>\r\n</div>',"url:/Mapping/modules/Workflow/DisplayResultPickerView.html":'<div class="module display-result-picker">\r\n\r\n    <!-- BEGIN: No Results -->\r\n    <div class="no-results" data-binding="{@hidden: features}">\r\n        <p data-binding="{@text: @language-common-no-results}"><!-- "No results to display." --></p>\r\n        <p data-binding="{@text: @language-common-no-results-desc}"><!-- "Items will appear once you perform a valid search or other task that returns results. --></p>\r\n    </div>\r\n    <!-- END: No Results -->\r\n\r\n    <div class="filter-section" data-binding="{@visible: filterSectionVisible}{@var: topContainer}">\r\n        <!-- BEGIN: Custom Message -->\r\n        <div class="display-result-picker-message" data-binding="{@visible: message}">\r\n            <p class="form-item form-desc" data-binding="{@text: message}"></p>\r\n        </div>\r\n        <!-- END: Custom Message -->\r\n\r\n        <div class="filter-text-box" data-binding="{@visible: showFilterTextBox}">\r\n            <input type="text" data-binding="{@visible: featureSet}{@value: filterText}{placeholder: @language-display-result-picker-filter-text-box-watermark}">\r\n            <a href="javascript:void(0)" data-binding="{@event-onclick: handleClearTextBox}{@visible: filterText}">Clear</a>\r\n        </div>\r\n        <div class="filter-selection-mode" data-binding="{@hidden: isSingleSelectionMode}">\r\n            <a href="javascript:void(0)" data-binding="{className: disabledLinkCssClass}{@event-onclick: handleSelectAll}">\r\n                <span data-binding="{@text: @language-display-result-picker-select-all}"></span>\r\n            </a>\r\n            <a href="javascript:void(0)" data-binding="{@event-onclick: handleSelectNone}">\r\n                <span data-binding="{@text: @language-display-result-picker-select-none}"></span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- BEGIN: Results List -->\r\n    <div data-binding="{@visible: features}">\r\n        <div data-binding="{className: cssClass}{@var: display-result-picker-list}{@style-top: topOffset}{@style-bottom: bottomOffset}">\r\n            <!-- BEGIN: Error Message -->\r\n            <p class="error-message" data-binding="{@text: requiredValueErrorMessage}{@visible: requiredValueErrorMessage}"></p>\r\n            <!-- END: Error Message -->\r\n            <ul class="list-menu active" data-binding="{@source: resultsList}{@visible: resultsList}">\r\n                <li class="list-menu-item" data-binding="{@template-for: resultsList}{@hidden: isFiltered}{@event-mouseenter: handleMouseOver}{@event-mouseleave: handleMouseOut}{@event-click: handleClick}">\r\n                    <div data-binding="{className: cssClass}">\r\n                        <!-- Renders one of the two available templates based on the DisplayResultPickerTemplateComplexity value found in the configuration file -->\r\n                        <div data-binding="{@widget: RenderComplexResultTemplate}{@widget-replace: true}{@widget-required: false}{@widget-context: @context}"></div>\r\n                        <div data-binding="{@widget: RenderSimpleResultTemplate}{@widget-replace: true}{@widget-required: false}{@widget-context: @context}"></div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <!-- END: Results List -->\r\n\r\n    <!-- BEGIN: Buttons -->\r\n    <div class="form-btns" data-binding="{@source: buttons}{@var: bottomContainer}">\r\n        <button class="button" data-binding="{@template-for: buttons}{@text: label}{@event-onclick: handleClickButton}"></button>\r\n    </div>\r\n    <!-- END: Buttons -->\r\n</div>\r\n',"url:/Mapping/modules/Workflow/WorkflowContainerView.html":'\r\n<div class="workflow-container">\r\n\r\n    <div class="panel-header" data-binding="{@visible: displayHeader}">\r\n        <h2 class="panel-title" data-binding="{@text: title}"></h2>\r\n    </div>\r\n\r\n\r\n    <div class="loading-container" data-binding="{@hidden: hasContent}">\r\n        <div class="loading-img" data-binding="{@visible: busy}"></div>\r\n        <div class="loading-msg" data-binding="{innerHTML: safeMessage}"></div>\r\n    </div>\r\n\r\n    <div class="workflow-container-region-holder" data-binding="{@visible: hasContent}">\r\n        <!-- This div will be used as a region to host workflow views. However, since there may be more than one\r\n            workflow container, the region must be uniquely named. This will be done by modifying the region name\r\n            attribute directly in the markup string before creating this container view. -->\r\n        <div class="region" data-region-name="!region-name-placeholder!"></div>\r\n    </div>\r\n\r\n</div>',"url:/Mapping/modules/Workflow/WorkflowFormView.html":'\r\n<div class="module workflow-form">\r\n\r\n    <h2 class="form-title" data-binding="{@text: title}{@visible: showTitleInFormBody}"></h2>  \r\n    <form data-binding="{@style-maxWidth: formWidth}{@event-onsubmit: handleSubmit}">\r\n            \r\n        <!-- The form body will be bound from a DOM node generated by the view model. -->\r\n        <div class="workflow-form-inner" data-binding="{@dom: workflowFormContent}"></div>\r\n            \r\n        <!-- Validation results -->\r\n        <ul class="form-validation" data-binding="{@visible: validationResults}{@source: validationResults}">\r\n            <li data-binding="{@template-for: validationResults}">\r\n                <span data-binding="{@text: @language-common-validation-symbol}"></span>\r\n                <span data-binding="{@text: errorMessage}"></span>\r\n            </li>\r\n        </ul>\r\n\r\n        <!-- If we set the class to bound-invisible the css will apply the "display: none" rule and\r\n            the browser decide that these fields should not be posted. \r\n            The trick is to leave the element visible but out of the screen.\r\n            Also need to set tabindex to -1 so it\'s not tabbable. -->\r\n        <input type="submit" style="position: absolute; left: -999px; width: 1px; height: 1px;" tabindex="-1"/>\r\n\r\n        <!-- Buttons -->\r\n        <div class="form-btns" data-binding="{@source: buttons}">\r\n            <button class="button" data-binding="{@template-for: buttons}{@text: label}{@event-onclick: handleClickButton}"></button>\r\n        </div>\r\n    </form>\r\n</div>',"url:/Mapping/modules/Workflow/WorkflowListView.html":'<div class="workflow-list">\r\n\r\n    <!-- No workflows are available -->\r\n    <div class="no-results" data-binding="{@hidden: workflows}{@text: @language-workflow-none-available}"></div>\r\n\r\n    <!-- Workflow Items -->\r\n    <div class="list-menu active" data-binding="{@source: workflows}{@visible: workflows}">\r\n        <div class="list-menu-item" data-binding="{@template-for: workflows}{@event-onclick: handleClickWorkflow}">\r\n            <button class="list-menu-name" data-binding="{@text: displayName}"></button>\r\n        </div>\r\n    </div>\r\n\r\n</div>',"url:/Mapping/modules/Workflow/Templates/DisplayResultPickerComplexResultTemplateView.html":'<div class="list-menu-checkbox" data-binding="{@visible: showCheckbox}">  \r\n    <input class="feature-checkbox" type="checkbox" data-binding="{@visible: showCheckbox}{@value: isSelected}" />\r\n</div>  \r\n<div class="list-menu-icons" data-binding="{@visible: showIcon}">\r\n    <img class="list-menu-icon" data-binding="{src: iconUri}{alt: label}{@visible: iconUri}" />\r\n    <img class="list-menu-icon" data-binding="{alt: label}{@hidden: iconUri}" src="Resources/Images/Icons/map-default-24.png" />\r\n</div>\r\n<div class="list-menu-details">\r\n    <strong class="list-menu-name" data-binding="{@widget: GetLabel}{@widget-context: @context}{@visible: label}"></strong>\r\n    <div class="list-menu-desc" data-binding="{@widget: GetDescription}{@widget-context: @context}"></div>\r\n</div>\r\n',
"url:/Mapping/modules/Workflow/Templates/DisplayResultPickerSimpleResultTemplateView.html":'<input class="feature-checkbox" type="checkbox" data-binding="{@visible: showCheckbox}{@value: isSelected}" />\r\n<div class="list-menu-details">\r\n    <strong class="list-menu-name" data-binding="{@widget: GetLabel}{@widget-context: @context}{@visible: label}"></strong>\r\n</div>\r\n'}}),define(["Mapping/modules/Workflow/DisplayCaptureGeometryView","Mapping/modules/Workflow/DisplayCaptureGeometryViewModel","Mapping/modules/Workflow/DisplayHyperlinkView","Mapping/modules/Workflow/DisplayHyperlinkViewModel","Mapping/modules/Workflow/DisplayReportUrlView","Mapping/modules/Workflow/DisplayReportUrlViewModel","Mapping/modules/Workflow/DisplayResultPickerFeature","Mapping/modules/Workflow/DisplayResultPickerView","Mapping/modules/Workflow/DisplayResultPickerViewModel","Mapping/modules/Workflow/WorkflowContainerConfig","Mapping/modules/Workflow/WorkflowContainerView","Mapping/modules/Workflow/WorkflowFormView","Mapping/modules/Workflow/WorkflowFormViewModel","Mapping/modules/Workflow/WorkflowListView","Mapping/modules/Workflow/WorkflowModule","Mapping/modules/Workflow/WorkflowTool","Mapping/modules/Workflow/WorkflowUtils","Mapping/modules/Workflow/WorkflowViewModel","Mapping/modules/Workflow/FormRenderer","Mapping/modules/Workflow/Handlers/Alert","Mapping/modules/Workflow/Handlers/CaptureGeometry","Mapping/modules/Workflow/Handlers/CollectExternalEventArgs","Mapping/modules/Workflow/Handlers/ConfigureWorkflowContainer","Mapping/modules/Workflow/Handlers/Confirm","Mapping/modules/Workflow/Handlers/DisplayCaptureGeometry","Mapping/modules/Workflow/Handlers/DisplayForm","Mapping/modules/Workflow/Handlers/DisplayHyperlink","Mapping/modules/Workflow/Handlers/DisplayResultPicker","Mapping/modules/Workflow/Handlers/ExternalLog","Mapping/modules/Workflow/Handlers/GetSelectedFeatures","Mapping/modules/Workflow/Handlers/IntersectLayers","Mapping/modules/Workflow/Handlers/ListenForExternalEvent","Mapping/modules/Workflow/Handlers/Prompt","Mapping/modules/Workflow/Handlers/RunExternalCommand","Mapping/modules/Workflow/Handlers/SelectFeatures","Mapping/modules/Workflow/Handlers/ShowMapTip","Mapping/modules/Workflow/Templates/DisplayResultPickerResultTemplateView"],function(e,t,i,o,r,n,a,s,l,u,p,c,d,f,w,h,m,g,y,v,k,b,C,x,M,V,W,I,F,_,S,D,R,E,T,H,A){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayCaptureGeometryView",e.DisplayCaptureGeometryView),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayCaptureGeometryViewModel",t.DisplayCaptureGeometryViewModel),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayHyperlinkView",i.DisplayHyperlinkView),shim(o,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayHyperlinkViewModel",o.DisplayHyperlinkViewModel),shim(r,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayReportUrlView",r.DisplayReportUrlView),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayReportUrlViewModel",n.DisplayReportUrlViewModel),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayResultPickerFeature",a.DisplayResultPickerFeature),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.generateDisplayResultPickerFeaturefromFeature",a.generateDisplayResultPickerFeaturefromFeature),shim(s,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayResultPickerView",s.DisplayResultPickerView),shim(l,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.DisplayResultPickerViewModel",l.DisplayResultPickerViewModel),shim(u,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowContainerConfig",u.WorkflowContainerConfig),shim(p,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowContainerView",p.WorkflowContainerView),shim(c,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowFormView",c.WorkflowFormView),shim(d,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowFormViewModel",d.WorkflowFormViewModel),shim(f,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowListView",f.WorkflowListView),shim(w,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowModule",w.WorkflowModule),shim(h,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowTool",h.WorkflowTool),shim(m,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowUtils",m.WorkflowUtils),shim(g,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowViewModel",g.WorkflowViewModel),shim(y,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.forms.FormRenderer.render",y.render),shim(y,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.forms.FormRenderer.getItemView",y.getItemView),shim(v,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleAlert",v.handleAlert),shim(k,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleCaptureGeometry",k.handleCaptureGeometry),shim(b,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleCollectExternalEventArgs",b.handleCollectExternalEventArgs),shim(C,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleConfigureWorkflowContainer",C.handleConfigureWorkflowContainer),shim(x,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleConfirm",x.handleConfirm),shim(M,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleDisplayCaptureGeometry",M.handleDisplayCaptureGeometry),shim(V,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleDisplayForm",V.handleDisplayForm),shim(W,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleDisplayHyperlink",W.handleDisplayHyperlink),shim(I,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleDisplayResultPicker",I.handleDisplayResultPicker),shim(F,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleExternalLog",F.handleExternalLog),shim(_,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleGetSelectedFeatures",_.handleGetSelectedFeatures),shim(S,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleIntersectLayers",S.handleIntersectLayers),shim(D,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleListenForExternalEvent",D.handleListenForExternalEvent),shim(R,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handlePrompt",R.handlePrompt),shim(E,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleRunExternalCommand",E.handleRunExternalCommand),shim(T,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.setFeatureProperties",T.setFeatureProperties),shim(T,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleSelectFeatures",T.handleSelectFeatures),shim(H,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.WorkflowHandlers.handleShowMapTip",H.handleShowMapTip),shim(A,"geocortex.essentialsHtmlViewer.mapping.modules.workflow.templates.DisplayResultPickerResultTemplateView",A.DisplayResultPickerResultTemplateView)});