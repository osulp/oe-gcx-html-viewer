!function(){function e(e,t,r){if("string"==typeof e&&(r=t,t=e),void 0!==r)for(var o=t.split("."),i=null,n=window,s=0,a=o.length;s<a;s++)i=o[s],s==a-1?n[i]=r:n[i]||(n[i]={}),n=n[i];else console.warn("Undefined shim for: "+t)}var t="<div class='list-reports-view'>    <div class='list-reports-header' tabindex='0'>        <p data-binding='{@text: @language-list-reports-explanation}'></p>    </div>    <ul class='list-of-reports' data-binding='{@source: availableReportListings}'>        <li data-binding='{@template-for: availableReportListings}'>            <button class='list-of-reports-link' data-binding='{@event-onclick: handleClickReport}'>                <strong class='list-of-reports-link-title' data-binding='{@text: displayName}'></strong>                <span class='list-of-reports-link-description' data-binding='{@text: description}'></span>                <span class='list-of-reports-link-details' data-binding='{@visible: isMoreThanOneFeatureSelected}{@text: details}'></span>            </button>        </li>    </ul></div>",r="<div class='run-report-view'>    \x3c!-- Report is in progress. --\x3e    <div class='run-report-progress' data-binding='{@hidden: complete}'>        \x3c!-- Sync report. --\x3e        <div data-binding='{@hidden: isAsync}'>            <h2 data-binding='{@text: @language-run-report-progress-heading-sync}'></h2>            <p data-binding='{@text: @language-run-report-progress-message-sync}'></p>        </div>        \x3c!-- Async report. --\x3e        <div data-binding='{@visible: isAsync}'>            <h2 data-binding='{@text: @language-run-report-progress-heading-async}'></h2>            <p data-binding='{@text: @language-run-report-progress-message-async}'></p>        </div>    </div>    \x3c!-- Report is complete. --\x3e    <div class='run-report-complete' data-binding='{@visible: complete}'>        \x3c!-- Sync report: direct link to download file. --\x3e        <div data-binding='{@hidden: isAsync}'>            <h2 data-binding='{@text: @language-run-report-complete-heading-sync}'></h2>            <a class='run-report-complete-link' data-binding='{@visible: downloadTag}{href: href}{@text: @language-run-report-complete-link-sync}' href='' target='_blank' download></a>            \x3c!-- Browser in GMAF cannot handle the download nor the target tahs. The download tag disables the download fir all  platforms, target breaks iOS. Therefore, in GMAF, they are removed. --\x3e            <a class='run-report-complete-link' data-binding='{@hidden: downloadTag}{href: href}{@text: @language-run-report-complete-link-sync}' href=''></a>        </div>        \x3c!-- Async report: embedded print job iframe. --\x3e        <div data-binding='{@visible: isAsync}'>            <h2 data-binding='{@text: @language-run-report-complete-heading-async}'></h2>            <a class='run-report-complete-link' data-binding='{href: href}{@text: @language-run-report-complete-link-async}' href='' target='_blank'></a>        </div>        <button class='run-report-complete-done-button' data-binding='{@text: @language-run-report-complete-done-button}{@event-onclick: handleClickDoneButton}'></button>    </div></div>";require({cache:{"Mapping/modules/Reporting/ListReportsView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,r,o){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=function(t){function r(e,r){var o=t.call(this,e,r)||this;return o.app.command("ListReports").postExecute.subscribe(o,function(){o.app.viewManager.activateView(o)}),o.app.command("RunFeatureReport").postExecute.subscribe(o,function(){o.app.viewManager.activateView(o)}),o.app.command("RunFeaturesReport").postExecute.subscribe(o,function(){o.app.viewManager.activateView(o)}),o}return e(r,t),r.prototype.handleClickReport=function(e,t,r){this.viewModel.engageReport(r)},r}(o.ViewBase);r.ListReportsView=i})},"Mapping/modules/Reporting/ListReportsViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/Reporting"],function(t,r,o,i,n){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var s=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.features=new i.ObservableCollection,e.availableReportListings=new i.ObservableCollection,e}return e(r,t),r.prototype.initialize=function(e){void 0===e&&(e={}),t.prototype.initialize.apply(this,arguments),this.warnUserWhenReportExcludesFeatures="warnUserWhenReportExcludesFeatures"in e&&e.warnUserWhenReportExcludesFeatures,this.app.command("ListReports").register(this,this._executeListReports,this._canExecuteListReports),this.app.command("RunFeatureReport").register(this,this._executeListReports,this._canExecuteListReports),this.app.command("RunFeaturesReport").register(this,this._executeListReports,this._canExecuteListReports)},r.prototype._executeListReports=function(e){var t=this,r=n.getAllFeaturesFromReportable(e);this.features.set(r),this.availableReportListings.set(this._getVisibleReportsFromFeatures(r).map(function(e){var o=r.filter(function(t){return!t||!t.layer||!t.layer.mapService||t.layer.mapService.id!==e.layer.mapService.id||t.layer.id!==e.layer.id}),i=t.features.get().filter(function(e){return-1===o.indexOf(e)});return{report:e,displayName:e.displayName,description:e.description,excludedFeatures:o,includedFeatures:i,details:t.getResource("language-list-reports-details").format(i.length,r.length),isMoreThanOneFeatureSelected:t.features.getLength()>1}}))},r.prototype._canExecuteListReports=function(e){var t=n.getAllFeaturesFromReportable(e);return this._getVisibleReportsFromFeatures(t).length>0},r.prototype._getVisibleReportsFromFeatures=function(e){var t=[];e.forEach(function(e){e.layer&&-1===t.indexOf(e.layer)&&t.push(e.layer)});var r=[];return t.forEach(function(e){e.reports&&e.reports.forEach(function(e){-1===r.indexOf(e)&&e.visible&&r.push(e)})}),r},r.prototype.engageReport=function(e){var t=this,r=e.report,o=e.excludedFeatures,i=e.includedFeatures,n={report:r,reportable:i};this.warnUserWhenReportExcludesFeatures&&o.length>0?this.app.command("Confirm").execute(this.getResource("language-list-reports-exclusion-warning-message").format(r.displayName,o.length,this.features.getLength(),i.length),this.getResource("language-list-reports-exclusion-warning-title"),function(e){e&&t.app.command("RunReport").execute(n)}):this.app.command("RunReport").execute(n)},r}(o.ViewModelBase);r.ListReportsViewModel=s})},"Mapping/modules/Reporting/ReportingModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();define(["require","exports","geocortex/framework/application/ModuleBase"],function(t,r,o){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return e(r,t),r}(o.ModuleBase);r.ReportingModule=i})},"Mapping/modules/Reporting/RunReportView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/commandArgs/AddStatusArgs"],function(t,r,o,i){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=function(t){function r(e,r){var o=t.call(this,e,r)||this;return o.app.command("RunReport").preExecute.subscribe(o,o._displayReportProgressUI),o.app.event("ReportResultEvent").subscribe(o,o._handleReportResultUI),o.app.event("ReportErrorEvent").subscribe(o,o._handleReportErrorUI),o}return e(r,t),r.prototype.handleClickDoneButton=function(){this.app.viewManager.deactivateView(this)},r.prototype._displayReportProgressUI=function(e){this.isBusy.set(!0),this.app.viewManager.activateView(this);var t=new i.AddStatusArgs(this.getResource("language-run-report-progress-status").format(e.report.displayName||e.report.id));t.id="RunningReport",t.imageProperties={uri:"Resources/Images/Icons/Toolbar/reports-24.png",altText:this.getResource("language-run-report-progress-image-alt")},t.showBusyIcon=!0,t.timeoutMS=0,this.app.command("AddStatus").execute(t)},r.prototype._cleanupReportProgressUI=function(){this.isBusy.set(!1),this.app.command("RemoveStatus").execute("RunningReport")},r.prototype._handleReportResultUI=function(e){this._cleanupReportProgressUI(),this.isBusy.set(!1),this.app.viewManager.activateView(this)},r.prototype._handleReportErrorUI=function(e){this.isBusy.set(!1),this.app.viewManager.deactivateView(this);var t,r=this.getResource("language-run-report-error-title");t="ReportAlreadyRunning"===e.name?this.getResource("language-run-report-error-message-already-running"):"RequestTimeoutError"===e.name?this.getResource("language-run-report-error-message-timeout"):"OfflineReportImpossible"===e.name?this.getResource("language-run-report-error-message-offline"):/outputFormat parameter invalid/.test(e.message)?this.getResource("language-run-report-error-message-output-format-unavailable"):this.getResource("language-run-report-error-message-generic"),"ReportAlreadyRunning"!==e.name&&this._cleanupReportProgressUI(),this.app.command("Alert").execute(t,r)},r}(o.ViewBase);r.RunReportView=n})},"Mapping/modules/Reporting/RunReportViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/essentials/ReportParameters","geocortex/infrastructure/Reporting"],function(t,r,o,i,n,s){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var a=function(t){function r(){var e=null!==t&&t.apply(this,arguments)||this;return e.complete=new i.Observable(!1),e.isAsync=new i.Observable(!1),e.href=new i.Observable(""),e.downloadTag=new i.Observable(!0),e}return e(r,t),r.prototype.initialize=function(e){void 0===e&&(e={}),t.prototype.initialize.apply(this,arguments),this.app.command("RunReport").register(this,this._executeRunReport)},r.prototype._executeRunReport=function(e){var t=this;if(e)try{if(this.complete.set(!1),e.reportParameters=e.reportParameters||new n.ReportParameters,e.reportParameters.featureIds=[],e.reportParameters.outputFormat=e.reportParameters.outputFormat||"PDF",!e.report.supportedOutputFormats.some(function(t){return t.toLowerCase()===e.reportParameters.outputFormat.toLowerCase()})){var r=e.report.supportedOutputFormats.length?e.report.supportedOutputFormats[0]:null;if(!r)throw(o=new Error("Selected report has no available output formats configured.")).name="ReportHasNoSupportedOutputFormats",o;e.reportParameters.outputFormat=r}if(s.getAllFeaturesFromReportable(e.reportable).forEach(function(t){var r=t.getPrimaryKeyValue();r&&e.reportParameters.featureIds.push(r)}),this.app.isNative.get()&&(this.downloadTag.set(!1),this.app.isOffline.get())){var o=new Error("Reports cannot be run while offline.");throw o.name="OfflineReportImpossible",o}null!=e.report.layer&&null!=e.report.layer.mapService&&this.app.event("ReportStartedEvent").publish(e.report.id,e.report.layer.mapService.id,e.report.layer.id),e.report.run(null,e.reportParameters,function(e){t.isAsync.set(e.isAsync),t.href.set(e.href),t.complete.set(!0),t.app.event("ReportResultEvent").publish(e)},function(e){t.app.event("ReportErrorEvent").publish(e)})}catch(o){this.app.event("ReportErrorEvent").publish(o)}},r}(o.ViewModelBase);r.RunReportViewModel=a})},"url:/Mapping/modules/Reporting/ListReportsView.html":t,"url:/Mapping/modules/Reporting/RunReportView.html":r}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Reporting/CSS/common.css","css","DQovKioNCiAqIFJlcG9ydHNMaXN0Vmlldw0KICovDQoNCi5saXN0LXJlcG9ydHMtdmlldyB7fQ0KLmxpc3QtcmVwb3J0cy12aWV3ICogew0KICAgIG1hcmdpbjogMDsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KDQoubGlzdC1yZXBvcnRzLWhlYWRlciB7DQogICAgcGFkZGluZzogMWVtIDIwcHg7DQp9DQoNCi5saXN0LW9mLXJlcG9ydHMgew0KICAgIGxpc3Qtc3R5bGU6IG5vbmU7DQogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFNEU4RUM7DQp9DQoNCi5saXN0LW9mLXJlcG9ydHMtbGluayB7DQogICAgZGlzcGxheTogYmxvY2s7DQogICAgd2lkdGg6IDEwMCU7DQogICAgZm9udC1zaXplOiAxLjJlbTsNCiAgICBwYWRkaW5nOiAxZW0gMjBweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICMyRDVGQjU7DQp9DQoNCi5saXN0LW9mLXJlcG9ydHMtbGluazpob3ZlciB7DQogICAgYmFja2dyb3VuZDogcmdiYSgwLCAxNDgsIDI1NSwgMC4xKTsNCn0NCi5saXN0LW9mLXJlcG9ydHMtbGluazphY3RpdmUgew0KICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMTQ4LCAyNTUsIDAuMyk7DQp9DQoNCi5saXN0LW9mLXJlcG9ydHMtbGluay10aXRsZSB7DQogICAgZGlzcGxheTogYmxvY2s7DQp9DQoNCi5saXN0LW9mLXJlcG9ydHMtbGluay1kZXNjcmlwdGlvbiB7DQogICAgZGlzcGxheTogYmxvY2s7DQogICAgZm9udC1zaXplOiAwLjhlbTsNCn0NCg0KLmxpc3Qtb2YtcmVwb3J0cy1saW5rLWRldGFpbHMgew0KICAgIGZvbnQtc2l6ZTogMC44ZW07DQogICAgb3BhY2l0eTogMC42Ow0KICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICBjb2xvcjogYmxhY2s7DQogICAgcGFkZGluZy1sZWZ0OiAxZW07DQp9DQoNCg0KLyoqDQogKiBSZXBvcnRSZXN1bHRWaWV3DQogKi8NCg0KLnJ1bi1yZXBvcnQtdmlldyB7DQogICAgcGFkZGluZzogMWVtIDJlbTsNCn0NCi5ydW4tcmVwb3J0LXZpZXcgKiB7DQogICAgbWFyZ2luOiAwOw0KICAgIHBhZGRpbmc6IDA7DQp9DQoNCi5ydW4tcmVwb3J0LWNvbXBsZXRlLWxpbmsgew0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgIGZvbnQtc2l6ZTogMS4yZW07DQogICAgbWFyZ2luLXRvcDogMS41ZW07DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCi5ydW4tcmVwb3J0LWNvbXBsZXRlLWxpbms6aG92ZXIgew0KICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOw0KfQ0KDQoucnVuLXJlcG9ydC12aWV3IGlmcmFtZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgbWluLWhlaWdodDogMjQwcHg7DQogICAgbWFyZ2luOiAxZW0gYXV0bzsNCiAgICBib3JkZXI6IDA7DQp9DQoNCi5ydW4tcmVwb3J0LWNvbXBsZXRlLWRvbmUtYnV0dG9uIHsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgICBtYXJnaW4tdG9wOiA0ZW07DQogICAgbWFyZ2luLWxlZnQ6IGF1dG87DQogICAgcGFkZGluZzogMC41ZW0gMWVtOw0KICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsIDAuMDgpOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0="),e.resourceManager.register("Mapping","inv","Mapping/modules/Reporting/ListReportsView.html","html",t),e.resourceManager.register("Mapping","inv","Mapping/modules/Reporting/RunReportView.html","html",r)}),require({cache:{}}),define(["Mapping/modules/Reporting/ListReportsView","Mapping/modules/Reporting/ListReportsViewModel","Mapping/modules/Reporting/ReportingModule","Mapping/modules/Reporting/RunReportView","Mapping/modules/Reporting/RunReportViewModel"],function(t,r,o,i,n){e(t,"geocortex.essentialsHtmlViewer.mapping.modules.reporting.ListReportsView",t.ListReportsView),e(r,"geocortex.essentialsHtmlViewer.mapping.modules.reporting.ListReportsViewModel",r.ListReportsViewModel),e(o,"geocortex.essentialsHtmlViewer.mapping.modules.reporting.ReportingModule",o.ReportingModule),e(i,"geocortex.essentialsHtmlViewer.mapping.modules.reporting.RunReportView",i.RunReportView),e(n,"geocortex.essentialsHtmlViewer.mapping.modules.reporting.RunReportViewModel",n.RunReportViewModel)})}();