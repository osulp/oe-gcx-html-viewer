function shim(e,t,i){if("string"==typeof e&&(i=t,t=e),"undefined"==typeof i)return void console.warn("Undefined shim for: "+t);for(var a=t.split("."),n=null,s=window,o=0,r=a.length;o<r;o++)n=a[o],o==r-1?s[n]=i:s[n]||(s[n]={}),s=s[n]}require({cache:{"Mapping/modules/MapTips/MapCallout":function(){define(["require","exports"],function(e,t){"use strict";var i=function(){function e(e){this.id=null,this.position=null,this.lockWidth=!0,this._lastScreenPointX=0,this._lastScreenPointY=0,this._node=null,this._map=null,this._mapPoint=null,this._isVisible=!1,this._connections=[],this._lastUpdateTime=null,this._makeVisibleAfterDelay=!1,this.app=e}return e.prototype.attachToMap=function(e,t,i,a,n,s){void 0===s&&(s=null),this.destroy(),this.id=e,this._map=i,this._node=t,this._nodeView=s,this._mapPoint=a,this._isVisible=!1,dojo.style(t,{position:"absolute",left:"0px",bottom:"0px",display:"none"}),dojo.place(t,dojo.byId("map_root")),this.show(a,n)},e.prototype.show=function(e,t){return t||(t=0),this._mapPoint=e,this._isVisible=!0,t>0?(this._makeVisibleAfterDelay=!0,void setTimeout(dojo.hitch(this,this.doDelayedShow),t)):(dojo.style(this._node,"width","auto"),this._mapPoint=e,this._makeVisibleAfterDelay=!1,this._doResetPosition(),this._disconnectEventHandlers(),this._subscribeToMapEvent("onPanStart",this._onPanStart),this._subscribeToMapEvent("onPanEnd",this._onPanEnd),this._subscribeToMapEvent("onPan",this._onPan),this._subscribeToMapEvent("onZoomStart",this._onZoomStart),this._subscribeToMapEvent("onZoomEnd",this._onZoomEnd),this.notifyContentChanged(),void(this._nodeView&&(this._nodeView.isActive=!0,this._nodeView.activated())))},e.prototype.doDelayedShow=function(){this._makeVisibleAfterDelay&&this.show(this._mapPoint)},e.prototype.hide=function(){this._makeNotVisible(),this._disconnectEventHandlers(),this._isVisible=!1,this._makeVisibleAfterDelay=!1,this._nodeView&&(this._nodeView.isActive=!1,this._nodeView.deactivated())},e.prototype._disconnectEventHandlers=function(){for(var e=0;e<this._connections.length;e++)dojo.disconnect(this._connections[e]);this._connections.length=0},e.prototype._makeNotVisible=function(){null!=this._node&&dojo.style(this._node,"display","none")},e.prototype._makeVisible=function(){null!=this._node&&dojo.style(this._node,"display","block")},e.prototype.destroy=function(){this.hide(),this._node&&this._node.parentNode&&this._node.parentNode.removeChild(this._node)},e.prototype.getNode=function(){return this._node},e.prototype.getMapPoint=function(){return this._mapPoint},e.prototype._subscribeToMapEvent=function(e,t){this._connections.push(dojo.connect(this._map,e,this,t))},e.prototype._onPanStart=function(e,t){this._setPositionByMapPoint(this._mapPoint),this._lastUpdateTime=(new Date).getTime()},e.prototype._onPan=function(e,t){this._getEllapsedMilliseconds()>=0&&(void 0===this._node.style.WebkitTransform?this._setPositionByScreenPoint(this._lastScreenPointX+t.x,this._lastScreenPointY+t.y):this._node.style.WebkitTransform="translate({0}px, {1}px)".format(t.x,t.y),this._lastUpdateTime=(new Date).getTime())},e.prototype._onPanEnd=function(e,t){if(this._map.wrapAround180&&e.spatialReference._isWrappable()){if(e.spatialReference._isWebMercator()){for(var i=111319.4917;this._mapPoint.x*i+i<e.xmin;)this._mapPoint.x+=360;for(;this._mapPoint.x*i-i>e.xmax;)this._mapPoint.x-=360}else if(4326==e.spatialReference.wkid){for(;this._mapPoint.x<e.xmin;)this._mapPoint.x+=360;for(;this._mapPoint.x>e.xmax;)this._mapPoint.x-=360}this._setPositionByMapPoint(this._mapPoint)}},e.prototype._getEllapsedMilliseconds=function(){null==this._lastUpdateTime&&(this._lastUpdateTime=(new Date).getTime());var e=(new Date).getTime();return e-this._lastUpdateTime},e.prototype.fixPosition=function(){this._isVisible&&this._doResetPosition()},e.prototype.fixPositionDelayed=function(e){var t=this;void 0===e&&(e=0),this._isVisible&&(this._makeNotVisible(),setTimeout(function(){t._doResetPosition()},e))},e.prototype.notifyContentChanged=function(){var e=this;$(this._node).find("img").each(function(){if(!this.complete&&!this.naturalWidth){this.attached_calloutConnection&&(dojo.disconnect(this.attached_calloutConnection),delete this.attached_calloutConnection),Object.prototype.hasOwnProperty.call(this,"attached_originalDisplayValue")||(this.attached_originalDisplayValue=dojo.style(this,"display")),dojo.style(this,"display","none");var t=dojo.connect(this,"load",e,function(e){this._contentLoaded(e)});this.attached_calloutConnection=t}})},e.prototype._contentLoaded=function(e){if(this._isVisible){var t=e.target;dojo.style(t,"display",t.attached_originalDisplayValue),t.attached_calloutConnection&&(dojo.disconnect(t.attached_calloutConnection),delete t.attached_calloutConnection),this._doResetPosition()}},e.prototype._doResetPosition=function(){var e=dojo.style(this._node,"opacity");dojo.style(this._node,"opacity",0),this._makeVisible();var t=dojo.position(this._node);return t.w<=0?void dojo.style(this._node,"opacity",e):(dojo.style(this._node,"width","auto"),this._setPositionByMapPoint(this._mapPoint,this.lockWidth),void dojo.style(this._node,"opacity",e))},e.prototype._setPositionByMapPoint=function(e,t){var i=this._map.toScreen(e),a=dojo.position(this._node);a&&i&&(this.position&&0===a.w&&0===a.h?(this._lastScreenPointX=i.x-this.position.w/2,this._lastScreenPointY=i.y):(this._lastScreenPointX=i.x-a.w/2,this._lastScreenPointY=i.y,this.position=a),t&&dojo.style(this._node,"width",a.w+3+"px"),this._setPositionByScreenPoint(this._lastScreenPointX,this._lastScreenPointY))},e.prototype._setPositionByScreenPoint=function(e,t){t=this._map&&this._map.height?this._map.height-t:t,void 0!==this._node.style.WebkitTransform&&(this._node.style.WebkitTransform="translate(0px, 0px)"),dojo.style(this._node,{left:e+"px",bottom:t+"px"})},e.prototype._onZoomStart=function(e,t,i,a){this._makeNotVisible()},e.prototype._onZoomEnd=function(e,t,i,a){this._isVisible&&(this._makeVisible(),this._setPositionByMapPoint(this._mapPoint))},e}();t.MapCallout=i})},"Mapping/modules/MapTips/MapCalloutView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/framework/observables"],function(e,t,i,a){"use strict";var n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.innerContent=new a.Observable(null),t.titleContent=new a.Observable(null),t.destroyContentView=!1,t}return __extends(t,e),t.prototype.activated=function(){this.innerContentView&&(this.innerContentView.isActive=!0,this.innerContentView.activated()),this.titleView&&(this.titleView.isActive=!0,this.titleView.activated())},t.prototype.deactivated=function(){this.innerContentView&&(this.innerContentView.isActive=!1,this.innerContentView.deactivated()),this.titleView&&(this.titleView.isActive=!1,this.titleView.deactivated())},t.prototype.destroy=function(){e.prototype.destroy.call(this),this.innerContentView&&this.destroyContentView&&this.innerContentView.destroy(),this.titleView&&this.destroyContentView&&this.titleView.destroy()},t.prototype.handleClose=function(e,t,i){dojo.style(this.root,"display","none");var a=this.attached_calloutID;a&&this.app.command("HideMapElement").execute(a),this.app.event("MapCalloutClosedEvent").publish(a)},t}(i.ViewBase);t.MapCalloutView=n})},"Mapping/modules/MapTips/MapTipContent":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/FeatureDescriptionPresenterView"],function(e,t,i,a){"use strict";var n=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._featureChangedSubscriptionToken=null,t._view=null,t._currentFeatureChangedToken=null,t._descriptionChangedToken=null,t}return __extends(t,e),t.prototype.attach=function(t){var i=this;e.prototype.attach.call(this,t),this._featureChangedSubscriptionToken&&this.app.event("FeatureChangedEvent").unsubscribe(this._featureChangedSubscriptionToken),this._featureChangedSubscriptionToken=this.app.event("FeatureChangedEvent").subscribe(this,this.handleFeatureChanged),this._currentFeatureChangedToken&&t.currentFeature.unbind(this._currentFeatureChangedToken),this._currentFeatureChangedToken=t.currentFeature.bind(this,function(e){i._currentFeature&&i._descriptionChangedToken&&i._currentFeature.description.unbind(i._descriptionChangedToken),i._currentFeature=e,e&&(i._descriptionChangedToken=e.description.bind(i,function(t){i.handleFeatureChanged(e)}))}),this.viewModel.currentFeature.pulse()},t.prototype.destroy=function(){e.prototype.destroy.call(this),this._featureChangedSubscriptionToken&&(this.app.event("FeatureChangedEvent").unsubscribe(this._featureChangedSubscriptionToken),this._featureChangedSubscriptionToken=null),this._currentFeature&&this._descriptionChangedToken&&this._currentFeature.description.unbind(this._descriptionChangedToken),this.viewModel&&this._currentFeatureChangedToken&&this.viewModel.currentFeature.unbind(this._currentFeatureChangedToken)},t.prototype.resolveWidget=function(t,i,n){var s=this;if(e.prototype.resolveWidget.call(this,t,i),i)switch(t){case"GetDescription":var o=new a.FeatureDescriptionPresenterView(this.app,this.libraryId);return o.app=this.app,o.libraryId=this.libraryId,o.contentField=this.viewModel.contentField,o.root=dojo.create("div"),o.root.className="feature-description",o.root.setAttribute("tabindex","0"),o.attach(i).then(function(){return s.viewModel.resetCalloutPosition()}),this.viewModel.showNoResults.set(!1),this.viewModel.showLoading.set(!1),this._view=o,o.handleImgLoad=function(e){return s.viewModel.resetCalloutPosition()},this.viewModel.resetCalloutPosition(),o;case"MapTipActionsWidget":var r=this.app.menuRegistry.createMenuWidget(this,i,n);return this.viewModel.resetCalloutPosition(),r;default:return null}},t.prototype.setFeatureSetCollection=function(e){this.viewModel&&this.viewModel.setFeatureSetCollection(e)},t.prototype.handleFeatureChanged=function(e){var t=this;if(e&&this._view&&this.viewModel.currentFeature.get()&&this.viewModel.currentFeature.get().token===e.token){var i=this._view;i.destroyBindings(),i.attach(e).then(function(){t.viewModel.resetCalloutPosition()})}},t}(i.ViewBase);t.MapTipContent=n})},"Mapping/modules/MapTips/MapTipContentViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/framework-ui/PresentableCollection","geocortex/infrastructure/commandArgs/AddStatusArgs","geocortex/infrastructure/GraphicUtils"],function(e,t,i,a,n,s,o){"use strict";var r=function(e){function t(t,i){var o=e.call(this,t,i)||this;return o.fsc=null,o.currentFeature=new a.Observable(null),o.title=null,o.searchSuggestion=null,o.showNoResults=new a.Observable((!1)),o.showLoading=new a.Observable((!0)),o.showNoResultMapTips=!1,o.calloutID=null,o.contentField=null,o.containerView=null,o.features=new a.ObservableCollection,o.presentableFeatures=new n.PresentableCollection(o.features),o.hasMultipleFeatures=new a.Observable((!1)),o.hasNullGeometry=new a.Observable((!1)),o._fscBindHandle=null,o._fsBindingHandles={},o._boundEsriFeature=null,o._esriFeatureBindToken=null,o._featureTag="isShownInMaptip",o._lastTaggedCurrentFeature=null,o._mapTipLoadTimer=0,o._mapTipLoadingMessageDelay=300,o._mapTipsHighlightLayer="mapTipsHighlightLayer",o._lastMapTipFeature=null,o.currentFeature.bind(o,o.currentFeatureChanged),o.features.bind(o,o.featuresCollectionChanged),o.title=new a.Observable(o.app.getResource(o.libraryId,"language-common-results")),o.app.event("FSMCollectionClosedEvent").subscribe(o,o.fsmCollectionClosed),o.hasMultipleFeatures.syncTransform(o.presentableFeatures.numberOfItems,function(e){return e>1}),o.searchSuggestion=new a.Observable(o.app.getResource(o.libraryId,"language-common-no-results-short")),o._addStatusArgs=new s.AddStatusArgs(o.app.getResource(o.libraryId,"language-common-loading")),o._addStatusArgs.id="identifyInProgress_StatusMessage",o._addStatusArgs.showBusyIcon=!0,o.app.event("GraphicRemovedEvent").subscribe(o,o._pulseFeatureSetsInCollection),o.app.event("_mapTipIdentifyTaskStartedEvent").subscribe(o,function(){o._mapTipLoadTimer||(o._mapTipLoadTimer=setTimeout(function(){o.app.command("AddStatus").execute(o._addStatusArgs)},o._mapTipLoadingMessageDelay))}),o.app.event("MapTipClosedEvent").subscribe(o,function(){if(o._clearCurrentEmphasis(),o._boundEsriFeature&&o._boundEsriFeature.unbind(o._esriFeatureBindToken),o.fsc)for(var e=o.fsc.featureSets,t=0;t<e.length();t++)for(var i=e.getAt(t),a=i.features,n=0;n<a.length();n++){var s=a.getAt(n);o._setMaptipDisplayFeatureTag(s,!1)}}),o}return __extends(t,e),t.prototype._pulseFeatureSetsInCollection=function(){this.fsc&&this.fsc.featureSets&&this.fsc.featureSets.get()&&this.fsc.featureSets.get().length>0&&this.fsc.featureSets.pulse()},t.prototype.setFeatureSetCollection=function(e){var t=this;if(this.fsc&&this._fscBindHandle&&(this.fsc.featureSets.unbind(this._fscBindHandle),this.fsc.featureSets.get().forEach(function(e){return t._unbindFeatures(e)}),this._fsBindingHandles={},this._fscBindHandle=null),this.fsc=e,this.updateFeatures(),this.updateCurrentFeature(),e){var i=this.app.featureSetManager.getSearchSuggestion(e.sourceName);this.searchSuggestion.set(i?i:this.app.getResource(this.libraryId,"language-common-no-results-short")),this._fscBindHandle=e.featureSets.bind(this,function(e){switch(e.type){case"append":case"insert":case"set":t.fsc.featureSets.getRange(e.rangeStart,e.rangeEnd).forEach(function(e){return t._bindFeatures(e)});break;case"remove":case"clear":t.fsc.featureSets.getRange(e.rangeStart,e.rangeEnd).forEach(function(e){return t._unbindFeatures(e)})}t._onFeatureSetChanged(e)}),e.featureSets.get().forEach(function(e){return t._bindFeatures(e)})}},t.prototype._onFeatureSetChanged=function(e,t){var i=this;switch(void 0===t&&(t=!0),e.type){case"remove":case"clear":setTimeout(function(){i.updateFeatures(t),i.updateCurrentFeature()},0);break;default:this.updateFeatures(t),this.updateCurrentFeature()}},t.prototype._bindFeatures=function(e){var t=this;this._fsBindingHandles[e.uniqueId]||(this._fsBindingHandles[e.uniqueId]=e.features.bind(this,function(e){return t._onFeatureSetChanged(e,!1)}))},t.prototype._unbindFeatures=function(e){this._fsBindingHandles[e.uniqueId]&&(e.features.unbind(this._fsBindingHandles[e.uniqueId]),delete this._fsBindingHandles[e.uniqueId])},t.prototype.updateCurrentFeature=function(){var e=this,t=[];if(this.fsc&&this.fsc.featureSets&&this.fsc.featureSets.length()>0&&(t=this.fsc.featureSets.get().filter(function(e){return!e.layer||e.layer&&e.layer.showMapTips})),t.length&&t[0].features.length()>0){var i=t[0].features.getAt(0);i&&this.currentFeature.get()!==i&&this.currentFeature.set(i)}else this.app.configuration.mobileMode&&!this.showNoResultMapTips?this.app.event("_identifyTaskCompleteEvent").once(this,function(){e.features.length()||e.currentFeature.set(null)}):this.currentFeature.set(null)},t.prototype.updateFeatures=function(e){var t=this;void 0===e&&(e=!0);var i=[];if(this.fsc&&this.fsc.featureSets)for(var a=0;a<this.fsc.featureSets.length();a++){var n=this.fsc.featureSets.getAt(a);if((!n.layer||n.layer.showMapTips)&&n.features)for(var s=0;s<n.features.length();s++)i.push(n.features.getAt(s))}else this.currentFeature.get()&&(i=[this.currentFeature.get()]);this.features.set(i),this.app.viewManager.getViewById("MapTipView").initiallyBound?this._showHideMaptip(this.app.viewManager.getViewById("MapTipView"),i,e):this.app.waitUntilViewInitialized("MapTipView").then(function(a){t._showHideMaptip(t.app.viewManager.getViewById("MapTipView"),i,e)})},t.prototype._showHideMaptip=function(e,t,i){var a=this;t.length>0||this.showNoResultMapTips?(0==t.length&&(this.title.removeSync(),this.title.set(this.app.getResource(this.libraryId,"language-common-results"))),!e.isActive&&i?(this.app.viewManager.activateView(e),this._mapTipLoadTimer&&(clearTimeout(this._mapTipLoadTimer),this._mapTipLoadTimer=0)):e.isActive&&this.app.configuration.mobileMode&&this.app.command("ResizeShell").execute(!0)):e.isActive&&!this.app.configuration.mobileMode&&this.app.viewManager.deactivateView(e),this._identifyTaskCompleteToken||this.showNoResultMapTips||(this._identifyTaskCompleteToken=this.app.event("_identifyTaskCompleteEvent").once(this,function(){a._mapTipLoadTimer&&(clearTimeout(a._mapTipLoadTimer),a._mapTipLoadTimer=0),a._identifyTaskCompleteToken=null,a.app.configuration.mobileMode&&!a.features.length()&&e.isActive&&(a.app.command("CloseDataFrame").execute(),setTimeout(function(){a.app.command("_SetDataFrameAutoOpenClose").execute(!1),a.app.viewManager.deactivateView(e),a.app.command("_SetDataFrameAutoOpenClose").execute(!0)},300)),a.app.command("RemoveStatus").execute(a._addStatusArgs.id)}))},t.prototype.clearCurrentFeature=function(){this.title.removeSync(),this.title.set(this.app.getResource(this.libraryId,"language-common-results")),this.isFscOpen()?(this.showNoResults.set(!1),this.showLoading.set(!0)):(this.showNoResults.set(!0),this.showLoading.set(!1)),this._removeLastTaggedCurrentFeature()},t.prototype.currentFeatureChanged=function(e){var t=this;if(this.hasNullGeometry.set(!1),this._clearCurrentEmphasis(),e){var i=o.isAutoEditableClickableFeature(this.app,e);i?this._lastMapTipFeature=null:(this.app.command("FocusFeature").execute({feature:e,layer:this._mapTipsHighlightLayer}),this._lastMapTipFeature=e),this._esriFeatureBindToken&&this._boundEsriFeature&&(this._boundEsriFeature.unbind(this._esriFeatureBindToken),this._esriFeatureBindToken=this._boundEsriFeature=null),this._boundEsriFeature=e.esriFeature,this._esriFeatureBindToken=this._boundEsriFeature.bind(this,function(e){return t.currentFeature.pulse()});for(var a=0;a<this.features.length();a++)if(this.features.getAt(a)===this.currentFeature.get()){this.presentableFeatures.currIndexStart.set(a),this.presentableFeatures.currIndexEnd.set(a);break}this.title.sync(e.label),e&&e.esriFeature.get()&&!e.esriFeature.get().geometry&&this.hasNullGeometry.set(!0),this._tagCurrentFeatureForDisplayInMaptip(),this.showNoResults.set(!1),this.showLoading.set(!1)}else this.clearCurrentFeature();this.calloutID&&this.app.viewManager.notifyDimensionsChanged(this.containerView)},t.prototype.featuresCollectionChanged=function(e){var t=this,i=e.sender.getRange(e.rangeStart,e.rangeEnd);switch(e.type){case"insert":case"append":i.forEach(function(e){return t._setMaptipDisplayFeatureTag(e,!0)});break;case"clear":case"remove":i.forEach(function(e){return t._setMaptipDisplayFeatureTag(e,!1)})}},t.prototype.isFscOpen=function(){return!!this.fsc&&this.app.featureSetManager.isCollectionOpen(this.fsc.id)},t.prototype.fsmCollectionClosed=function(e){this.fsc&&e.featureSetCollectionId==this.fsc.id&&this.updateCurrentFeature()},t.prototype.resetCalloutPosition=function(){void 0!=this.calloutID&&this.app.event("Internal.ResetCalloutPosition").publish(this.calloutID)},t.prototype._clearCurrentEmphasis=function(){this._lastMapTipFeature&&(this.app.command("ClearFeatureFocus").execute({feature:this._lastMapTipFeature,layer:this._mapTipsHighlightLayer}),this.app.highlightManager.redrawHighlights())},t.prototype._setMaptipDisplayFeatureTag=function(e,t){e&&dojo.isFunction(e.setExtendedProperty)&&e.setExtendedProperty(this._featureTag,!!t)},t.prototype._removeLastTaggedCurrentFeature=function(){this._lastTaggedCurrentFeature&&(this.features.contains(this._lastTaggedCurrentFeature)||this._setMaptipDisplayFeatureTag(this._lastTaggedCurrentFeature,!1),this._lastTaggedCurrentFeature=null)},t.prototype._tagCurrentFeatureForDisplayInMaptip=function(){this._removeLastTaggedCurrentFeature(),this._setMaptipDisplayFeatureTag(this.currentFeature.get(),!0),this._lastTaggedCurrentFeature=this.currentFeature.get()},t}(i.ViewModelBase);t.MapTipContentViewModel=r})},"Mapping/modules/MapTips/MapTipHeaderView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/FeatureDescriptionPresenterView"],function(e,t,i,a){"use strict";var n=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.attach=function(t){var i=this;e.prototype.attach.call(this,t),this._fdpv=new a.FeatureDescriptionPresenterView(this.app,this.libraryId),this._fdpv.contentField="label";t.title.bind(this,function(e){var t=i.viewModel.currentFeature.get();i._fdpv.destroyBindings(),i._fdpv.root=i.titleElement,t||(i._fdpv.root.innerHTML=null,i._fdpv.root.innerText=e),t!==i._fdpv.viewModel&&i._fdpv.attach(t)})},t.prototype.handleMoveNext=function(){var e=this.viewModel.presentableFeatures.currIndexStart.get(),t=this.viewModel.presentableFeatures;e<t.numberOfItems.get()-1?this.selectFeature(t.getAt(e+1)):t.numberOfItems.get()&&this.selectFeature(t.getAt(0))},t.prototype.handleMovePrev=function(){var e=this.viewModel.presentableFeatures.currIndexStart.get(),t=this.viewModel.presentableFeatures;e>0?this.selectFeature(t.getAt(e-1)):t.numberOfItems.get()&&this.selectFeature(t.getAt(t.numberOfItems.get()-1))},t.prototype.handleSelect=function(){this.viewModel.calloutID&&this.app.viewManager.notifyDimensionsChanged(this.viewModel.containerView)},t.prototype.selectFeature=function(e){this.viewModel.currentFeature.set(e),this.viewModel.calloutID&&this.app.viewManager.notifyDimensionsChanged(this.viewModel.containerView)},t}(i.ViewBase);t.MapTipHeaderView=n})},"Mapping/modules/MapTips/MapTipsModule":function(){define(["require","exports","geocortex/infrastructure/Feature","geocortex/framework/application/ModuleBase","./MapCallout","geocortex/infrastructure/commandArgs/AddStatusArgs","geocortex/infrastructure/MapUtils","geocortex/framework/utils/utils","geocortex/infrastructure/GeometryUtils","geocortex/infrastructure/commandArgs/ShowMapElementArgs","geocortex/framework/ui/ViewBase","geocortex/framework/observables","geocortex/infrastructure/FilterUtils","./MapTipContentViewModel"],function(e,t,i,a,n,s,o,r,p,l,u,d,h,c){"use strict";var g=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._calloutMap={},t._calloutViewMap={},t._count=0,t._mapTipContentView=null,t._mapTipHeaderView=null,t._allowMultiple=!1,t._lockWidth=!0,t._contentField=null,t._isPanning=!1,t._isZooming=!1,t._pendingCommands=[],t._mapTipSuspended=!1,t._mapTipEnabled=!0,t._nullGeometryStatusMessageEnabled=!0,t._nullGeometryStatusMessageArgs=null,t._nullGeometry=!1,t}return __extends(t,e),t.prototype.initialize=function(t){if(e.prototype.initialize.call(this,t),t){if(t.lockWidth===!1&&(this._lockWidth=t.lockWidth),t.allowMultiple&&(this._allowMultiple=!!t.allowMultiple),t.contentField&&(this._contentField=t.contentField),t.customSearchSuggestions&&this.app.featureSetManager.addSearchSuggestions(t.customSearchSuggestions),null!=t.nullGeometryStatusMessageEnabled&&(this._nullGeometryStatusMessageEnabled=t.nullGeometryStatusMessageEnabled),t.nullGeometryStatusMessageArgs&&t.nullGeometryStatusMessageEnabled){var i=this.app.getResource(this.libraryId,"language-map-tip-null-geometry-status-message-text");this._nullGeometryStatusMessageArgs=new s.AddStatusArgs(i),this._nullGeometryStatusMessageArgs.id=this.app.getResource(this.libraryId,"language-map-tip-null-geometry-status-message-view"),t.nullGeometryStatusMessageArgs.imageUri&&(this._nullGeometryStatusMessageArgs.imageProperties={uri:t.nullGeometryStatusMessageArgs.imageUri,altText:this.app.getResource(this.libraryId,"language-map-tip-null-geometry-status-message-image-alt")}),t.nullGeometryStatusMessageArgs.timeoutMS&&(this._nullGeometryStatusMessageArgs.timeoutMS=t.nullGeometryStatusMessageArgs.timeoutMS)}t.showNoResultMapTips&&this.app.waitUntilViewInitialized("MapTipView").then(function(e){e.viewModel.showNoResultMapTips=!0})}this.registerCommands(),this.subscribeEvents()},t.prototype._canExecuteMapTips=function(){return this._mapTipEnabled&&!this._mapTipSuspended},t.prototype.getStateFilter=function(){return{results:this.app.project.filter.featureSetCollection,currentFeature:this.app.project.filter.feature}},t.prototype.exportState=function(){var e=this;return Promise["try"](function(){var t=e.app.project.convert,i=e.app.viewManager.getViewById("MapTipView"),a=i.isActive?t.fromGcxFeatureSetCollection(e._currentMapTipFeatureSetCollection):null,n=i.isActive?t.fromGcxFeature(e._currentMapTipFeature):null;return{results:a,currentFeature:n}})},t.prototype.applyState=function(e){var t=this;return Promise.props({results:this.app.project.convert.toGcxFeatureSetCollection(e.results),currentFeature:this.app.project.convert.toGcxFeature(e.currentFeature)}).then(function(e){return e.results?t._showMapTipResultsInFixedView(e.results).then(function(){e.currentFeature&&t._showMapTipInFixedView(e.currentFeature)}):e.currentFeature?t._showMapTipInFixedView(e.currentFeature):void t._hideAll()})},t.prototype.subscribeEvents=function(){var e=this;this.app.event("MapPanStartedEvent").subscribe(this,function(t,i){e._isPanning=!0}),this.app.event("MapPanEndedEvent").subscribe(this,function(t,i){e._isPanning=!1,e._isZooming||e.flushPendingCommands()}),this.app.event("MapZoomStartedEvent").subscribe(this,function(){e._isZooming=!0}),this.app.event("MapZoomEndedEvent").subscribe(this,function(){e._isZooming=!1,e._isPanning||e.flushPendingCommands()}),this.app.event("MapTipClosedEvent").subscribe(this,function(){e._clearCurrentMapTipFeature(),e._currentMapTipFeatureSetCollection=null,e.app.viewManager.getViewById("MapTipView")&&e.app.viewManager.getViewById("MapTipView").viewModel&&e.app.viewManager.getViewById("MapTipView").viewModel.currentFeature&&e.app.viewManager.getViewById("MapTipView").viewModel.currentFeature.unbind(e._currentMapTipFeatureBindingToken)}),this.app.event("ViewDimensionsChangedEvent").subscribe(this,this._onViewDimensionsChangedEvent),this.app.event("FeatureDeletedEvent").subscribe(this,function(t){e._currentMapTipFeature&&t&&o.esriFeaturesEqual(e._currentMapTipFeature.esriFeature.get(),t)&&e.app.command("DeactivateView").execute("MapTipView")}),this.app.event("Internal.ResetCalloutPosition").subscribe(this,function(t){var i=e._calloutMap[t];i&&i.fixPositionDelayed&&i.fixPositionDelayed()}),this.app.event("GraphicAttributesChangedEvent").subscribe(this,this.handleGraphicAttributesUpdated)},t.prototype.handleGraphicAttributesUpdated=function(e){var t=e.graphic;this._currentMapTipFeature&&this._currentMapTipFeature.esriFeature&&this._currentMapTipFeature.esriFeature.get()==t&&(this._currentMapTipFeature.esriFeature.pulse(),this.app.event("FeatureChangedEvent").publish(this._currentMapTipFeature))},t.prototype.presentFeature=function(e){if(e&&this.configuration&&this.configuration.webMapFeaturePresenter){if(!this.app.allLibrariesLoaded)return void this.app.trace.warning("Aborting map tip because not all libraries are loaded.");var t=this.configuration.webMapFeaturePresenter;if(t.view&&t.viewModel){var a=t.view,n=t.viewModel,s=e instanceof i.Feature?e:new i.Feature(e),o=this.app.viewManager.createView({typeName:a.type,markupResource:a.markup,isVisible:!0,libraryId:a.libraryId});"object"==typeof a.configuration&&(o.configuration=a.configuration);var u=this.app.instantiateFrameworkObject(n.type,n.libraryId);u.id=n.viewModelId||r.alphaNumericToken(),u.initialize(n.configuration||{});var d=t.featurePropertyName||"currentFeature";if(u[d]){u[d].set(s),o.attach(u),o.title.sync(u.title);var h=this.getMapTipCalloutId();this._allowMultiple&&(h+=s.layer.id);var c=e.mapPoint;!c&&s.esriFeature.get()&&(c=p.getMiddle(s.esriFeature.get().geometry));var g=new l.ShowMapElementArgs(h,c,o);g.destroyContentView=!0,this.app.command("ShowMapCallout").execute(g)}}}},t.prototype.flushPendingCommands=function(){for(var e=0;e<this._pendingCommands.length;e++){var t=this._pendingCommands[e];this.app.command(t.commandName).execute(t.commandArgs)}this._pendingCommands.length=0},t.prototype.registerCommands=function(){var e=this;this.app.command("SuspendMapTips").register(this,function(){e._mapTipSuspended=!0}),this.app.command("ResumeMapTips").register(this,function(){e._mapTipSuspended=!1}),this.app.command("InvokeMapTip").register(this,this._onInvokeMapTip,this._canExecuteMapTips),this.app.command("ShowMapTip").register(this,this._onShowMapTip,this._canExecuteMapTips),this.app.command("ShowMapTipInCallout").register(this,this._onShowMapTipInCallout,this._canExecuteMapTips),this.app.command("ShowMapTipResults").register(this,this._onShowMapTipResults,this._canExecuteMapTips),this.app.command("ShowMapTipResultsInCallout").register(this,this._onShowMapTipResultsInCallout,this._canExecuteMapTips),this.app.command("ShowMapCallout").register(this,this._onShowMapCallout),this.app.command("ShowMapElement").register(this,this._onShowMapElement),this.app.command("HideMapElement").register(this,this._onHideMapElement),this.app.command("FixMapElementPosition").register(this,this._onFixMapElementPosition),this.app.command("DisableMapTips").register(this,this._executeDisableMapTips),this.app.command("EnableMapTips").register(this,this._executeEnableMapTips),this.app.command("HideAllMapTips").register(this,this._executeHideAllMapTips),this.app.command("RestoreAllMapTips").register(this,this._executeRestoreAllMapTips),this.app.command("HideMapTips").register(this,this._executeHideMapTips),this.app.command("ShowMapTips").register(this,this._executeShowMapTips)},t.prototype._onInvokeMapTip=function(e){this.app.command("Identify").execute({geometry:e,source:"MapTip",delayFSCOpen:!0,layerRestriction:function(e){return e.showMapTips}})},t.prototype._onShowMapTip=function(e){this._showMapTip(e,"ShowMapTip")},t.prototype._onShowMapTipInCallout=function(e){this._showMapTip(e,"ShowMapTipInCallout")},t.prototype._showMapTip=function(e,t){if(e){if(e&&(this.configuration.webMapFeaturePresenter&&this.configuration.webMapFeaturePresenter.force||e.useFeaturePresenter))return void this.presentFeature(e);if("string"==typeof e)return void("ShowMapTipInCallout"===t?this.app.command("ShowMapTipResultsInCallout").execute(e):this.app.command("ShowMapTipResults").execute(e));if(!this.tryQueueCommand(t,e)){if(e.length&&e.length>0&&e[0]&&(e=e[0]),!e||e&&e.layer&&!e.layer.showMapTips)return void this.app.command("DeactivateView").execute("MapTipView");var i=p.getMiddle(e.esriFeature.get().geometry);null==i&&(i=this.app.map.extent.getCenter(),this._nullGeometry=!0),"ShowMapTipInCallout"===t?this._showMapTipInCallout(e,i):this._showMapTipInFixedView(e),this._nullGeometry&&this._nullGeometryStatusMessageArgs&&this._nullGeometryMessage(),this._nullGeometry=!1}}},t.prototype._showMapTipInCallout=function(e,t){(null==this._mapTipContentView||this._allowMultiple)&&this.createMapTipViews(),this._mapTipContentView.viewModel.currentFeature.set(e),this._mapTipHeaderView.viewModel.hasMultipleFeatures.set(!1);var i=this.getMapTipCalloutId();this.showMapTipInCallout(i,t,0)},t.prototype._showMapTipInFixedView=function(e){var t=this;return e?this.app.waitUntilViewInitialized("MapTipView").then(function(i){if(t.app.viewManager.activateView(i),e!=t._currentMapTipFeature){i.viewModel.contentField=t._contentField,i.viewModel.currentFeature.set(e);for(var a=!1,n=0;n<i.viewModel.features.length();n++)if(i.viewModel.features.getAt(n)===e){a=!0;break}a||(i.viewModel.features.clear(),t._currentMapTipFeatureBindingToken&&i.viewModel.currentFeature.unbind(t._currentMapTipFeatureBindingToken),t._setCurrentMapTipFeature(e))}}):Promise.resolve()},t.prototype._onShowMapTipResults=function(e){this._showMapTipResults(e,"ShowMapTipResults")},t.prototype._onShowMapTipResultsInCallout=function(e){this._showMapTipResults(e,"ShowMapTipResultsInCallout")},t.prototype._showMapTipResults=function(e,t){if("object"==typeof e&&e instanceof i.Feature)return void this.app.command("ShowMapTip").execute(e);if(!this.tryQueueCommand(t,e)){var a=this.app.featureSetManager.getCollectionById(e);if("ShowMapTipResultsInCallout"===t){var n=p.getMiddle(a.tag);if(null==n){var s=a.firstFeature();if(null==s){var o,r=a;return void(o=a.featureSets.bind(this,function(e){this.tryRerunShowMapTipResults(e,r,o)}))}if(n=p.getMiddle(s.esriFeature.get().geometry),null==n){
var l=this.app.getResource(this.libraryId,"language-identify-no-geometry-for-map-tip-results");return this.app.command("Alert").execute(l),void this.app.trace.error(l)}}this._showMapTipResultsInCallout(a,n)}else this._showMapTipResultsInFixedView(a)}},t.prototype._showMapTipResultsInFixedView=function(e){var t=this;return this.app.waitUntilViewInitialized("MapTipView").then(function(i){t._currentMapTipFeatureSetCollection=e,i.viewModel.contentField=t._contentField,t._currentMapTipFeatureBindingToken&&i.viewModel.currentFeature.unbind(t._currentMapTipFeatureBindingToken),i.viewModel.setFeatureSetCollection(e),t._setCurrentMapTipFeature(i.viewModel.currentFeature.get()),t._currentMapTipFeatureBindingToken=i.viewModel.currentFeature.bind(t,function(e){t._currentMapTipFeature!==e&&t._setCurrentMapTipFeature(e)})})},t.prototype._showMapTipResultsInCallout=function(e,t){(null==this._mapTipContentView||this._allowMultiple)&&this.createMapTipViews(),this._mapTipContentView.setFeatureSetCollection(e);var i=this.getMapTipCalloutId();this.showMapTipInCallout(i,t,1e3)},t.prototype._onShowMapCallout=function(e){var t=this;if(!this.tryQueueCommand("ShowMapCallout",e)){var i;this._calloutViewMap.hasOwnProperty(e.elementID)?i=this._calloutViewMap[e.elementID]:(i=this.createView("MapCalloutView"),this._calloutViewMap[e.elementID]=i,dojo.addClass(i.root,"map-callout-wrapper")),e.title?i.titleContent.set(e.getTitleNode()):e.contentIsView()&&e.content.title?i.titleContent.syncTransform(e.content.title,function(e){return t._toHtmlElement(e)}):i.titleContent=new d.Observable(null),i.innerContent.set(e.getNode()),i.titleView=e.titleIsView()?e.title:null,i.innerContentView=e.contentIsView()?e.content:null,i.buildTree(),i.pulseAll();var a=new l.ShowMapElementArgs(e.elementID,e.mapPoint,i);a.delay=e.delay,i.destroyContentView=e.destroyContentView,this.app.command("ShowMapElement").execute(a)}},t.prototype._onShowMapElement=function(e){if(!this.tryQueueCommand("ShowMapElement",e)){var t;this._calloutMap[e.elementID]?(t=this._calloutMap[e.elementID],t.getNode()==e.getNode()?t.show(e.mapPoint,e.delay):null!=e.getNode()?(t.attachToMap(e.elementID,e.getNode(),this.app.map,e.mapPoint,e.delay,e.contentIsView()?e.content:null),this._calloutMap[e.elementID]=t):t.doDelayedShow()):(t=new n.MapCallout(this.app),t.lockWidth=this._lockWidth,t.attachToMap(e.elementID,e.getNode(),this.app.map,e.mapPoint,e.delay,e.contentIsView()?e.content:null),this._calloutMap[e.elementID]=t),e.contentIsView()&&(e.content.attached_calloutID=t.id)}},t.prototype._onHideMapElement=function(e){this.tryQueueCommand("HideMapElement",e)||(this._calloutMap[e]&&(this._calloutMap[e].destroy(),delete this._calloutMap[e]),this._calloutViewMap[e]&&(this.app.viewManager.destroyView(this._calloutViewMap[e]),delete this._calloutViewMap[e]))},t.prototype._onFixMapElementPosition=function(e){this.tryQueueCommand("FixMapElementPosition",e)||this._calloutMap[e]&&(this._calloutMap[e].notifyContentChanged(),this._calloutMap[e].fixPosition())},t.prototype._onViewDimensionsChangedEvent=function(e){var t=e.view.attached_calloutID;if(t&&this._calloutMap[t]){this.app.command("FixMapElementPosition").execute(t);var i=new l.ShowMapElementArgs(t);this.app.command("ShowMapElement").execute(i)}},t.prototype._executeDisableMapTips=function(){this._destroyAll(),this._mapTipEnabled=!1},t.prototype._executeEnableMapTips=function(){this._mapTipEnabled=!0,this._mapTipSuspended=!1},t.prototype._executeHideAllMapTips=function(){this._hideAll()},t.prototype._executeRestoreAllMapTips=function(){this._showAll()},t.prototype._executeHideMapTips=function(){this._hideAll(),this.app.command("SuspendMapTips").execute()},t.prototype._executeShowMapTips=function(){this._showAll(),this.app.command("ResumeMapTips").execute()},t.prototype._hideAll=function(){for(var e in this._calloutMap)e&&this._calloutMap.hasOwnProperty(e)&&this._calloutMap[e]&&this._calloutMap[e].hide();this.app.command("DeactivateView").execute("MapTipView")},t.prototype._showAll=function(){for(var e in this._calloutMap)if(e&&this._calloutMap.hasOwnProperty(e)&&this._calloutMap[e]){var t=this._calloutMap[e];t.show(t.getMapPoint())}this.app.command("ActivateView").execute("MapTipView")},t.prototype._destroyAll=function(){var e=this,t=[];for(var i in this._calloutMap)i&&this._calloutMap.hasOwnProperty(i)&&t.push(i);dojo.forEach(t,function(t){e.app.command("HideMapElement").execute(t)})},t.prototype._toHtmlElement=function(e){if(!e)return null;if(e instanceof u.ViewBase)return e.root;if(e.nodeName)return e;if("string"==typeof e){var t=document.createElement("div");return this.app.configuration.allowUnsafeContent||(e=String.escapeHtmlEncode(e)),t.innerHTML=new h.UnsafeHtml(e).safeHtml,t}},t.prototype._nullGeometryMessage=function(){this.app.command("RemoveStatus").execute(this._nullGeometryStatusMessageArgs.id),this.app.command("AddStatus").execute(this._nullGeometryStatusMessageArgs),this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-map-tip-null-geometry-status-message-text"))},t.prototype._clearCurrentMapTipFeature=function(){this._currentMapTipFeature&&(this._currentMapTipFeature=null)},t.prototype._setCurrentMapTipFeature=function(e){e&&e!==this._currentMapTipFeature&&(this._clearCurrentMapTipFeature(),this._currentMapTipFeature=e,this.app.project.isLoading||this.app.behavior("MapTipFeatureChangedBehavior").run(e))},t.prototype._onCurrentMapCalloutFeatureChanged=function(e){e&&this._mapTipContentView&&(this.app.project.isLoading||this.app.behavior("MapCalloutFeatureChangedBehavior").run(e))},t.prototype.createMapTipViews=function(){this._mapTipContentView=this.createView("MapTipContent"),this._mapTipHeaderView=this.createView("MapTipHeaderView");var e=new c.MapTipContentViewModel(this.app,this.libraryId);e.initialize({}),e.contentField=this._contentField,this._mapTipContentView.attach(e),this._mapTipHeaderView.attach(e),this._mapTipContentView.viewModel.currentFeature.bind(this,this._onCurrentMapCalloutFeatureChanged)},t.prototype.getMapTipCalloutId=function(){var e="MapTipResultsCallout";return this._allowMultiple?e+=this._count++:this.app.command("HideMapElement").execute(e),e},t.prototype.showMapTipInCallout=function(e,t,i){var a=new l.ShowMapElementArgs(e,t,this._mapTipContentView,this._mapTipHeaderView);a.delay=i,this.app.command("ShowMapCallout").execute(a),this._mapTipContentView.viewModel.containerView=this._calloutViewMap[e],this._mapTipContentView.viewModel.calloutID=e},t.prototype.tryQueueCommand=function(e,t){return!(!this._isPanning&&!this._isZooming)&&(this._pendingCommands.push({commandName:e,commandArgs:t}),!0)},t.prototype.tryRerunShowMapTipResults=function(e,t,i){t.featureSets.unbind(i),this.app.command("ShowMapTipResults").execute(t.id)},t.prototype.createView=function(e,t){var i=this.app.viewManager.createView({viewId:t,typeName:"geocortex.essentialsHtmlViewer.mapping.modules.maptips."+e,markupResource:this.libraryId+"/modules/MapTips/"+e+".html",isVisible:!0,libraryId:this.libraryId});return i},t}(a.ModuleBase);t.MapTipsModule=g})},"Mapping/modules/MapTips/MapTipsState":function(){define(["require","exports"],function(e,t){"use strict"})},"Mapping/modules/MapTips/MapTipView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,i){"use strict";var a=function(e){function t(t,i){var a=e.call(this,t,i)||this;return a.shellPanelWidgetId="mapTipHeader",a.shellPanelWidgetTemplate="Mapping/modules/MapTips/Widgets/MapTipHeaderWidgetView.html",a.shellPanelWidgetType="geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipHeaderWidgetView",a.shellPanelWidgetContext="",a}return __extends(t,e),t.prototype.deactivated=function(){this.app.event("MapTipClosedEvent").publish()},t.prototype.handleClose=function(e,t,i){this.app.viewManager.deactivateView(this)},t.prototype.createWidgetView=function(){var e=this.shellPanelWidgetId,t=this.shellPanelWidgetTemplate,i=this.shellPanelWidgetType||"geocortex/framework/ui/ViewBase",a=this.shellPanelWidgetContext&&this.viewModel[this.shellPanelWidgetContext]||this.viewModel,n="Mapping";if(!t)return console.log("Warning: Could not create widget view. No data-widget-template was defined"),null;var s=this.app.viewManager.createView({viewId:"ShellPanelHeaderWidget",typeName:i,markupResource:t,isVisible:!0,libraryId:n});return s?(s.app=this.app,s.attach(a),s):(console.warn("Warning: It wasn't possible to create widget with id "+(e||"not defined")),null)},t}(i.ViewBase);t.MapTipView=a})},"Mapping/modules/MapTips/Widgets/MapTipHeaderWidgetView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/FeatureDescriptionPresenterView"],function(e,t,i,a){"use strict";var n=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.attach=function(t){e.prototype.attach.call(this,t),this._fdpv=new a.FeatureDescriptionPresenterView(this.app,this.libraryId),this._fdpv.contentField="label"},t.prototype.resolveWidget=function(t,i,a){if(e.prototype.resolveWidget.call(this,t,i),i)switch(t){case"MapTipActionsWidget":var n=this.app.menuRegistry.createMenuWidget(this,i,a);return this.viewModel.resetCalloutPosition(),n;default:return null}},t.prototype.handleMoveNext=function(){var e=this.viewModel.presentableFeatures.currIndexStart.get(),t=this.viewModel.presentableFeatures;e<t.numberOfItems.get()-1?this.selectFeature(t.getAt(e+1)):t.numberOfItems.get()&&this.selectFeature(t.getAt(0))},t.prototype.handleMovePrev=function(){var e=this.viewModel.presentableFeatures.currIndexStart.get(),t=this.viewModel.presentableFeatures;e>0?this.selectFeature(t.getAt(e-1)):t.numberOfItems.get()&&this.selectFeature(t.getAt(t.numberOfItems.get()-1))},t.prototype.handleSelect=function(){this.viewModel.calloutID&&this.app.viewManager.notifyDimensionsChanged(this.viewModel.containerView)},t.prototype.selectFeature=function(e){this.viewModel.currentFeature.set(e),this.viewModel.calloutID&&this.app.viewManager.notifyDimensionsChanged(this.viewModel.containerView)},t}(i.ViewBase);t.MapTipHeaderWidgetView=n})},"url:/Mapping/modules/MapTips/MapCalloutView.html":'\r\n<div class="map-callout">\r\n    <div class="map-callout-header">\r\n        <button class="panel-header-button right close-16" data-binding="{@event-onclick: handleClose}{title: @language-common-close}"></button>\r\n        <div class="map-callout-title" data-binding="{@dom: titleContent}"></div>\r\n    </div>\r\n    <div class="map-callout-contents">\r\n        <div data-binding="{@dom: innerContent}"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class="map-callout-pointer unselectable">\r\n    <div class="map-callout-pointer-image"></div>\r\n</div>\r\n',"url:/Mapping/modules/MapTips/MapTipContent.html":'<div class="map-tip-contents">\r\n    <div class="widget" data-binding="{@widget: GetDescription}{@widget-context: currentFeature}{@widget-required: false}{@hidden: showNoResults}"></div>\r\n    <div class="none" data-binding="{@text: searchSuggestion}{@visible: showNoResults}"></div>\r\n    <div class="busy" data-binding="{@text: @language-common-loading}{@visible: showLoading}"></div>\r\n    <div class="map-tip-contents-actions" data-region-name="MapTipContentActionRegion" data-region-adapter="geocortex.framework.ui.DivRegionAdapter"></div>\r\n</div>\r\n',"url:/Mapping/modules/MapTips/MapTipHeaderView.html":'<div class="map-tip-header" tab-index="0">\r\n    <div class="map-tip-nav" data-binding="{@visible: hasMultipleFeatures}">\r\n        <div class="map-tip-nav-inner">\r\n            <div class="feature-select-wrapper">\r\n                <select data-binding="{@source: features}{@value: currentFeature}{@event-onchange: handleSelect}{title: @language-map-tip-select}">\r\n                    <option data-binding="{@template-for: features}{innerHTML: plainLabel}{@attach: @context}" />\r\n                </select>\r\n            </div>\r\n            <div class="paging-control" data-binding="{@source: presentableFeatures}">\r\n                <div class="paging-buttons" data-binding="{@template-for: presentableFeatures}">\r\n                    <button class="prev" data-binding="{@event-onclick: handleMovePrev}{title: @language-map-tip-feature-prev}"><img src="Resources/Images/Icons/paging-control-previous-44.png" alt=" "/></button>\r\n                    <span class="paging-buttons-info" tabindex="0">\r\n                        <span data-binding="{@text: currIndexStartFromOne}"></span>&nbsp;<span data-binding="{@text: @language-map-tip-features-of}"></span>&nbsp;<span data-binding="{@text: numberOfItems}"></span>\r\n                    </span>\r\n                    <button class="next" data-binding="{@event-onclick: handleMoveNext}{title: @language-map-tip-feature-next}"><img src="Resources/Images/Icons/paging-control-next-44.png" alt=" " /></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="map-tip-title" data-binding="{@var: titleElement}" tabindex="0"></div>\r\n    <div class="map-tip-null-geometry">\r\n        <span data-binding="{@text: @language-map-tip-null-geometry}{@visible: hasNullGeometry}" tabindex="0"></span>\r\n    </div>\r\n</div>',"url:/Mapping/modules/MapTips/MapTipsContentActions.html":'<div class="widget" data-binding="{@widget: MapTipActionsWidget}{@widget-context: currentFeature}{@widget-required: false}{@hidden: showNoResults}" data-menu-id="MapTipActions" data-menu-template="Mapping/infrastructure/menus/MenuHyperlinkView.html"></div>\r\n',"url:/Mapping/modules/MapTips/MapTipView.html":'<div class="map-tip-view">\r\n    <div class="map-tip-view-header">\r\n        <div data-region-name="MapTipHeaderRegion" data-region-adapter="geocortex.framework.ui.DivRegionAdapter" tab-index="0"></div>\r\n        <button class="panel-header-button right close-16" data-binding="{@event-onclick: handleClose}{title:@language-map-tip-close}"></button>\r\n    </div>\r\n    <div class="map-tip-view-contents" data-region-name="MapTipContentRegion" data-region-adapter="geocortex.framework.ui.DivRegionAdapter"></div>\r\n</div>\r\n',"url:/Mapping/modules/MapTips/Widgets/MapTipHeaderWidgetView.html":'<div class="map-tip-widget-header" tab-index="0">\r\n    <div data-binding="{@visible: features}">\r\n        <div class="map-tip-widget-nav" data-binding="{@visible: hasMultipleFeatures}">\r\n            <button class="panel-header-button panel-header-paging-prev" data-binding="{@event-onclick: handleMovePrev}{title: @language-map-tip-feature-prev}"><img src="Resources/Images/Icons/arrow-left-small-24.png" data-binding="{alt: @language-map-tip-feature-prev}" /></button>\r\n            <select data-binding="{@source: features}{@value: currentFeature}{@event-onchange: handleSelect}{title: @language-map-tip-select}">\r\n                <option data-binding="{@template-for: features}{innerHTML: plainLabel}{@attach: @context}" />\r\n            </select>\r\n            <button class="panel-header-button panel-header-paging-next" data-binding="{@event-onclick: handleMoveNext}{title: @language-map-tip-feature-next}"><img src="Resources/Images/Icons/arrow-right-small-24.png" data-binding="{alt: @language-map-tip-feature-next}" /></button>\r\n        </div>\r\n    </div>\r\n\r\n    <h2 class="panel-title" data-binding="{@hidden: hasMultipleFeatures}">\r\n        <span data-binding="{@source: currentFeature}{@visible:currentFeature}">\r\n            <span data-binding="{@template-for: currentFeature}{@text: plainLabel}"></span>\r\n        </span>\r\n        <span class="map-tip-noresult-header-title" data-binding="{@hidden: currentFeature}{@text: @language-common-no-results}"></span>\r\n    </h2>\r\n    <div class="map-tip-actions" data-binding="{@widget: MapTipActionsWidget}{@widget-context: currentFeature}{@widget-required: false}{@hidden: showNoResults}" data-menu-id="MapTipActions" data-menu-template="Mapping/infrastructure/menus/MenuHyperlinkView.html"></div>\r\n</div>'}}),define(["Mapping/modules/MapTips/MapCallout","Mapping/modules/MapTips/MapCalloutView","Mapping/modules/MapTips/MapTipContent","Mapping/modules/MapTips/MapTipContentViewModel","Mapping/modules/MapTips/MapTipHeaderView","Mapping/modules/MapTips/MapTipsModule","Mapping/modules/MapTips/MapTipView","Mapping/modules/MapTips/Widgets/MapTipHeaderWidgetView"],function(e,t,i,a,n,s,o,r){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapCallout",e.MapCallout),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapCalloutView",t.MapCalloutView),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipContent",i.MapTipContent),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipContentViewModel",a.MapTipContentViewModel),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipHeaderView",n.MapTipHeaderView),shim(s,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipsModule",s.MapTipsModule),shim(o,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipView",o.MapTipView),shim(r,"geocortex.essentialsHtmlViewer.mapping.modules.maptips.MapTipHeaderWidgetView",r.MapTipHeaderWidgetView)});