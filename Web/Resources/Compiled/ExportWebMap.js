!function(){var t="<div class='export-webmap'>    <div data-binding='{@hidden: exportComplete}'>        <div data-binding='{@visible: isExporting}'>            <p data-binding='{@text: @language-export-web-map-is-exporting}'></p>        </div>        <div data-binding='{@hidden: isExporting}'>            <label for='exportWebMapTitle' data-binding='{@text: @language-export-web-map-title-label}'></label>            <input id='exportWebMapTitle' type ='text' data-binding='{@value: title}' />            <div class='form-btns'>                <button class='button' data-binding='{@event-click: handleExportWebMapClick}{@text: @language-export-web-map-export-button}'></button>            </div>        </div>    </div>    <div data-binding='{@visible: exportComplete}'>        <p data-binding='{@text: @language-export-web-map-complete-description}'></p>        <div class='form-btns'>            <button class='button' data-binding='{@event-click: handleOpenPortalItem}{@text: @language-export-web-map-open-portal}'></button>        </div>    </div></div>";function i(e,t,o){if("string"==typeof e&&(o=t,t=e),void 0!==o)for(var i=t.split("."),r=null,a=window,n=0,p=i.length;n<p;n++)r=i[n],n==p-1?a[r]=o:a[r]||(a[r]={}),a=a[r];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/ExportWebMap/ExportWebMapModule":function(){var i,n=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,r=(i=o.ModuleBase,n(a,i),a);function a(){return null!==i&&i.apply(this,arguments)||this}t.ExportWebMapModule=r})},"Mapping/modules/ExportWebMap/ExportWebMapView":function(){var i,p=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/PortalUtils"],function(e,t,o,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i,a=(i=o.ViewBase,p(n,i),n.prototype.attach=function(e){var t=this;i.prototype.attach.call(this,e),this.app.command("ShowExportWebMapDialog").register(this,function(){t.app.viewManager.activateView(t),t.app.command("ScreenReaderNarrate").execute(t.app.getResource(t.libraryId,"language-export-web-map-narrate-view-activated"))},function(){return!!t.viewModel&&r.hasCreateContentPrivilege(t.app)})},n.prototype.activated=function(){i.prototype.activated.call(this),this.viewModel&&this.viewModel.clearFields()},n.prototype.handleExportWebMapClick=function(e,t,o){this.viewModel.exportWebMap()},n.prototype.handleOpenPortalItem=function(e,t,o){var i=r.getPortalItemUrl(this.viewModel.itemId,this.app);window.open(i),this.app.viewManager.deactivateView(this)},n);function n(e,t){return i.call(this,e,t)||this}t.ExportWebMapView=a})},"Mapping/modules/ExportWebMap/ExportWebMapViewModel":function(){var i,c=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/PortalUtils","geocortex/infrastructure/GeometryUtils","geocortex/geocortex"],function(e,t,o,i,r,a,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var p,s=(p=o.ViewModelBase,c(l,p),l.prototype.initialize=function(e){var t=this;this.app.command("OpenPortalMyContentWindow").register(this,function(){var e=r.getPortalMyContentUrl(t.app);window.open(e)},function(){return r.hasAccessToPortal(t.app)}),this.app.site&&this.app.site.isInitialized?this.siteInitialized():this.app.event("SiteInitializingEvent").once(this,this.siteInitialized)},l.prototype.siteInitialized=function(){this.app.command("ShowExportWebMapDialog").raiseCanExecuteChanged(),this.app.command("OpenPortalMyContentWindow").raiseCanExecuteChanged()},l.prototype.exportWebMap=function(){var i=this;if(!this.title.get())return this.app.command("Alert").execute(this.app.getResource(this.libraryId,"language-export-web-map-invalid-title")),void this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-export-web-map-invalid-title"));this.isExporting.set(!0),this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-export-web-map-is-exporting")),this.app.webMap.create().then(function(t){var e=i.app.site.essentialsMap.getMap().extent,o=new esri.SpatialReference(4326);a.projectGeometry(e,o,function(e){i._uploadWebmapToPortal(i.title.get(),t,e)},function(e){i._handleError(e)},i.app)},function(e){i._handleError(e)})},l.prototype._uploadWebmapToPortal=function(e,t,o){var i=this,r=String.format("{0}, {1}, {2}, {3}",o.xmin,o.ymin,o.xmax,o.ymax);n.request({url:this.app.site.url+"/additem",content:{f:"json",extent:r,text:JSON.stringify(t),title:e,type:"Web Map"},load:function(e){i.itemId=e.id,i.app.command("ScreenReaderNarrate").execute(i.app.getResource(i.libraryId,"language-export-web-map-complete-description")),i.isExporting.set(!1),i.exportComplete.set(!0)},error:function(e){i._handleError(e)}},{usePost:!0})},l.prototype._handleError=function(e){this.app.trace.error("Error exporting web map to Portal.",e),this.app.command("Alert").execute(this.app.getResource(this.libraryId,"language-export-web-map-error")),this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-export-web-map-error")),this.clearFields()},l.prototype.clearFields=function(){this.itemId="",this.title.set(null),this.isExporting.set(!1),this.exportComplete.set(!1)},l);function l(e,t){var o=p.call(this,e,t)||this;return o.itemId="",o.title=new i.Observable(null),o.isExporting=new i.Observable(!1),o.exportComplete=new i.Observable(!1),o}t.ExportWebMapViewModel=s})},"url:/Mapping/modules/ExportWebMap/ExportWebMapView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/ExportWebMap/CSS/common.css","css","LmV4cG9ydC13ZWJtYXANCnsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgcGFkZGluZzogMTBweDsNCn0NCg0KLmV4cG9ydC13ZWJtYXAgbGFiZWwNCnsNCiAgICBjb2xvcjogIzY2NzU4MDsNCiAgICBmb250LXNpemU6IDEuMmVtOw0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgIG1hcmdpbjogLjc1ZW0gMCAwLjI1ZW0gMDsNCn0NCg=="),e.resourceManager.register("Mapping","inv","Mapping/modules/ExportWebMap/ExportWebMapView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/ExportWebMap/ExportWebMapModule","Mapping/modules/ExportWebMap/ExportWebMapView","Mapping/modules/ExportWebMap/ExportWebMapViewModel"],function(e,t,o){i(e,"geocortex.essentialsHtmlViewer.mapping.modules.exportWebMap.ExportWebMapModule",e.ExportWebMapModule),i(t,"geocortex.essentialsHtmlViewer.mapping.modules.exportWebMap.ExportWebMapView",t.ExportWebMapView),i(o,"geocortex.essentialsHtmlViewer.mapping.modules.exportWebMap.ExportWebMapViewModel",o.ExportWebMapViewModel)})}();