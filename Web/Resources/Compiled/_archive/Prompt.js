!function(){function t(t,e,o){if("string"==typeof t&&(o=e,e=t),void 0!==o)for(var i=e.split("."),r=null,n=window,a=0,p=i.length;a<p;a++)r=i[a],a==p-1?n[r]=o:n[r]||(n[r]={}),n=n[r];else console.warn("Undefined shim for: "+e)}var e="<div class='module notification prompt'>    <p class='desc' data-binding='{@text: description}'></p>    <form data-binding='{@event-onsubmit: handleClickOk}'>        <div class='form-item'>            <input type='text' data-binding='{@value: promptText}{aria-label: @language-prompt-accessibility-input-label}' />        </div>        <input type='submit' class='bound-invisible' data-binding='{@event-onclick: handleClickOk}' />    </form>    <div class='form-btns'>        <button class='button' data-binding='{@var: okButtonElement}{@event-onclick: handleClickOk}{@text: @language-common-ok}' />        <button class='button' data-binding='{@event-onclick: handleClickCancel}{@text: @language-common-cancel}' />    </div></div>";require({cache:{"Mapping/modules/Prompt/PromptModule":function(){var t=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])};return function(e,o){function i(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/framework/observables"],function(e,o,i,r){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var n=function(e){function o(){var t=null!==e&&e.apply(this,arguments)||this;return t.promptRegion="ModalWindowRegion",t.oldPrompt=null,t.overrideNativePrompt=!0,t}return t(o,e),o.prototype.initialize=function(t){var o=this;e.prototype.initialize.call(this,t),this.promptRegion=t.promptRegion,this.oldPrompt=window.prompt,this.overrideNativePrompt=t.overrideNativePrompt;var i=function(t,e,i,n){if(!n)return o.oldPrompt(t,i);try{var a=o.app.viewManager.createView({typeName:"geocortex.essentialsHtmlViewer.mapping.modules.prompt.PromptView",markupResource:"Mapping/modules/Prompt/PromptView.html",isVisible:!1,regionName:o.promptRegion,libraryId:o.libraryId}),p={title:t,description:e,defaultText:i,callback:n,promptText:new r.Observable(i)};a.attach(p),a.title.set(t),o.app.viewManager.activateView(a)}catch(t){o.app.trace.error("Error: Could not display prompt: "+t)}};this.overrideNativePrompt&&(window.prompt=i),this.app.command("Prompt").register(this,function(t,e,r,n){t||(t=o.app.getResource(o.libraryId,"language-prompt-default-title")),n||(n=function(){}),i(t,e,r,n)})},o}(i.ModuleBase);o.PromptModule=n})},"Mapping/modules/Prompt/PromptView":function(){var t=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])};return function(e,o){function i(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,o,i){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(e){function o(){var t=null!==e&&e.apply(this,arguments)||this;return t.promptResult=null,t}return t(o,e),o.prototype.attach=function(t){var o=this;if(e.prototype.attach.call(this,t),this.promptResult=null,this.title.set(t.promptTitle),this.okButtonElement)try{this.okButtonElement.focus()}catch(t){}this.viewContainerViewClosedEventToken||(this.viewContainerViewClosedEventToken=this.app.event("ViewContainerViewClosedEvent").subscribe(this,function(t){t&&t.viewId===o.id&&o._deactivateForUser()}))},o.prototype.destroyBindings=function(){e.prototype.destroyBindings.call(this),this.viewContainerViewClosedEventToken&&(this.app.event("ViewContainerViewClosedEvent").unsubscribe(this.viewContainerViewClosedEventToken),this.viewContainerViewClosedEventToken=null)},o.prototype.handleClickOk=function(t,e,o){return this.viewModel&&(this.promptResult=this.viewModel.promptText.get()),this._deactivateForUser(),!1},o.prototype.handleClickCancel=function(t,e,o){return this.promptResult=null,this._deactivateForUser(),!1},o.prototype._deactivateForUser=function(){this.app.viewManager.deactivateView(this),this.app.viewManager.destroyView(this),this.viewModel&&this.viewModel.callback&&this.viewModel.callback(this.promptResult)},o}(i.ViewBase);o.PromptView=r})},"url:/Mapping/modules/Prompt/PromptView.html":e}}),require(["geocortex/framework/resourceManager"],function(t){t.resourceManager.register("Mapping","inv","Mapping/modules/Prompt/PromptView.html","html",e)}),require({cache:{}}),define(["Mapping/modules/Prompt/PromptModule","Mapping/modules/Prompt/PromptView"],function(e,o){t(e,"geocortex.essentialsHtmlViewer.mapping.modules.prompt.PromptModule",e.PromptModule),t(o,"geocortex.essentialsHtmlViewer.mapping.modules.prompt.PromptView",o.PromptView)})}();