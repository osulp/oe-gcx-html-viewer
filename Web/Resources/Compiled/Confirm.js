!function(){var i="<div class='module notification confirm'>    <p class='desc' data-binding='{@text: confirmBody}'></p>    <div class='form-btns'>        <button class='button' data-binding='{@event-onclick: handleClickOk}{@text: okLabel}' />        <button class='button' data-binding='{@var: cancelButtonElement}{@event-onclick: handleClickCancel}{@text: cancelLabel}' />    </div></div>";function t(e,i,t){if("string"==typeof e&&(t=i,i=e),void 0!==t)for(var n=i.split("."),o=null,r=window,a=0,c=n.length;a<c;a++)o=n[a],a==c-1?r[o]=t:r[o]||(r[o]={}),r=r[o];else console.warn("Undefined shim for: "+i)}require({cache:{"Mapping/modules/Confirm/ConfirmModule":function(){var n,a=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,o=(n=t.ModuleBase,a(r,n),r.prototype.initialize=function(e){var a=this;function o(e,i,t,n){if(!t)return a.nativeImplementation.apply(window,[e]);(n=n||{}).okLabel=n.okLabel||a.app.getResource(a.libraryId,"language-common-ok"),n.cancelLabel=n.cancelLabel||a.app.getResource(a.libraryId,"language-common-cancel");try{var o=a.app.viewManager.createView({typeName:"geocortex.essentialsHtmlViewer.mapping.modules.confirm.ConfirmView",markupResource:"Mapping/modules/Confirm/ConfirmView.html",isVisible:!0,regionName:a.confirmRegion,libraryId:a.libraryId,configuration:{sticky:!!n.sticky||null}}),r={title:i=i||a.app.getResource(a.libraryId,"language-confirm-default-title"),confirmBody:e,callback:t,isOpen:!0,pending:[],okLabel:n.okLabel,cancelLabel:n.cancelLabel};o.title.set(i),o.attach(r),a.app.viewManager.activateView(o)}catch(e){a.app.trace.error("Error: Could not display confirm: "+e)}}n.prototype.initialize.call(this,e),this.nativeImplementation=window.confirm,this.confirmRegion=e.confirmRegion,this.overrideNativeConfirm=e.overrideNativeConfirm,this.overrideNativeConfirm&&(window.confirm=o),this.app.command("Confirm").register(this,function(e,i,t,n){i=i||this.app.getResource(this.libraryId,"language-confirm-default-title"),o(e,i,t=t||function(){},n)})},r);function r(){var e=null!==n&&n.apply(this,arguments)||this;return e.confirmRegion="ModalWindowRegion",e.nativeImplementation=null,e.overrideNativeConfirm=!1,e}i.ConfirmModule=o})},"Mapping/modules/Confirm/ConfirmView":function(){var n,a=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,o=(n=t.ViewBase,a(r,n),r.prototype.attach=function(e){if(n.prototype.attach.call(this,e),this.title.set(e.title),this.cancelButtonElement)try{this.cancelButtonElement.focus()}catch(e){}this.viewContainerViewClosedEventToken||(this.viewContainerViewClosedEventToken=this.app.event("ViewContainerViewClosedEvent").subscribe(this,function(e){e&&e.viewId===this.id&&this._deactivateForUser(!0)}))},r.prototype.destroyBindings=function(){n.prototype.destroyBindings.call(this),this.viewContainerViewClosedEventToken&&(this.app.event("ViewContainerViewClosedEvent").unsubscribe(this.viewContainerViewClosedEventToken),this.viewContainerViewClosedEventToken=null)},r.prototype.handleClickOk=function(e,i,t){return this._deactivateForUser(!1),!1},r.prototype.handleClickCancel=function(e,i,t){return this._deactivateForUser(!0),!1},r.prototype._deactivateForUser=function(e){this.userCanceled=e,this.userHasClicked=!0,this.app.viewManager.deactivateView(this),this.app.viewManager.destroyView(this),this.userHasClicked&&this.viewModel&&this.viewModel.callback&&this.viewModel.callback(!this.userCanceled)},r);function r(){var e=null!==n&&n.apply(this,arguments)||this;return e.userHasClicked=!1,e.userCanceled=!1,e}i.ConfirmView=o})},"url:/Mapping/modules/Confirm/ConfirmView.html":i}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Confirm/ConfirmView.html","html",i)}),require({cache:{}}),define(["Mapping/modules/Confirm/ConfirmModule","Mapping/modules/Confirm/ConfirmView"],function(e,i){t(e,"geocortex.essentialsHtmlViewer.mapping.modules.confirm.ConfirmModule",e.ConfirmModule),t(i,"geocortex.essentialsHtmlViewer.mapping.modules.confirm.ConfirmView",i.ConfirmView)})}();