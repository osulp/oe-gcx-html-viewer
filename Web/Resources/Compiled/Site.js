!function(){var i="<div class='module service-layers-failure'>    <p data-binding='{@text: @language-site-service-layers-failure-view-warning}{@hidden: hasError}'></p>    <p data-binding='{@text: @language-site-service-layers-failure-view-error}{@visible: hasError}'></p>    <ul data-binding='{@source: failedServices}'>        <li data-binding='{@template-for: failedServices}'>            <span data-binding='{@text: name}'></span>        </li>    </ul>    <div class='form-btns' data-binding='{@hidden: hasError}'>        <button class='button' data-binding='{@var: okButtonElement}{@event-onclick: handleClickOk}{@text: @language-common-ok}'/>    </div></div>",t="<div class='module sign-on-error'>    <p data-binding='{@text: @language-site-log-on-required-error}'></p>    <div class='form-btns'>        <button class='button' data-binding='{@event-onclick: handleClickTryAgain}{@text: @language-site-try-log-on-again}' />    </div></div>";function r(e,i,t){if("string"==typeof e&&(t=i,i=e),void 0!==t)for(var n=i.split("."),r=null,a=window,o=0,s=n.length;o<s;o++)r=n[o],o==s-1?a[r]=t:a[r]||(a[r]={}),a=a[r];else console.warn("Undefined shim for: "+i)}require({cache:{"Mapping/modules/Site/ServiceLayersFailureView":function(){var n,s=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/essentials/MapServiceConstants"],function(e,i,t,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var r,a=(r=t.ViewBase,s(o,r),o.prototype._serviceLayersFailed=function(e){this.viewModel.failedServices.clear(),this.viewModel.hasError.set(!1);for(var i=0;i<e.length;i++){var t=e[i];t.failureAction!==n.FailureAction.WARN&&t.failureAction!==n.FailureAction.ERROR||(t.failureAction===n.FailureAction.ERROR&&this.viewModel.hasError.set(!0),this.viewModel.failedServices.addItem({name:e[i].displayName}))}0<this.viewModel.failedServices.length()&&(this.title.set(this.app.getResource(this.libraryId,"language-site-service-layers-failure-view-title")),this.app.viewManager.activateView(this))},o.prototype.handleClickOk=function(e,i,t){this.app.viewManager.deactivateView(this)},o);function o(e,i){var t=r.call(this,e,i)||this;return e.event("SiteServiceLayersFailedEvent").subscribe(t,t._serviceLayersFailed),t}i.ServiceLayersFailureView=a})},"Mapping/modules/Site/ServiceLayersFailureViewModel":function(){var n,s=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,i,t,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var r,a=(r=t.ViewModelBase,s(o,r),o);function o(){var e=null!==r&&r.apply(this,arguments)||this;return e.failedServices=new n.ObservableCollection,e.hasError=new n.Observable(!1),e}i.ServiceLayersFailureViewModel=a})},"Mapping/modules/Site/SignInErrorView":function(){var n,o=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,i,t){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,r=(n=t.ViewBase,o(a,n),a.prototype._signInCancelled=function(e){this.title.set(this.app.getResource(this.libraryId,"language-site-log-on-required-title")),this.tryAgainAction=e.tryAgainAction,this.configuration.sticky=!0,this.app.viewManager.activateView(this)},a.prototype.handleClickTryAgain=function(e,i,t){this.tryAgainAction&&this.tryAgainAction()},a);function a(e,i){var t=n.call(this,e,i)||this;return t.tryAgainAction=null,e.event("UserSignInCancelledEvent").subscribe(t,t._signInCancelled),t}i.SignInErrorView=r})},"Mapping/modules/Site/SiteModule":function(){var n,c=this&&this.__extends||(n=function(e,i){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])})(e,i)},function(e,i){function t(){this.constructor=e}n(e,i),e.prototype=null===i?Object.create(i):(t.prototype=i.prototype,new t)});define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/essentials/Site","geocortex/framework/utils/utils","geocortex/infrastructure/GeometryUtils","geocortex/framework/utils/ArrayUtils"],function(e,i,t,n,r,a,o){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var s,p=(s=t.ModuleBase,c(l,s),l.prototype.initialize=function(e){var i=this;function t(){(i.app.nativeManager.isNative()?i.app.waitUntilOfflineManagerLoaded():Promise.resolve()).then(function(){return i._initializeSite()})}s.prototype.initialize.call(this,e),this.siteUri=e.siteUri,this.proxyUri=this.app.configuration.proxyUri||null,this.app.event("SiteInitializedEvent").once(this,this._handleSiteInitializedEvent),this.app.event("SignInEvent").subscribe(this,this._onSignIn),this.app.map?t():this.app.event("MapInitializedEvent").once(this,t)},l.prototype._initializeSite=function(){var t=this,e=this.app.makeAbsolute(this.siteUri);this.app.site=new n.Site(e,this.app.map),this.app.site.useSiteFullExtentForWMTSServices=this.configuration.useSiteFullExtentForWMTSServices,this.app.event("SiteInitializingEvent").publish(this.app.site),this.app.nativeManager.isNative()?this._setNativeProperties():this.app.isNative.bind(this,function(e){e&&t._setNativeProperties()}),this.app.isOffline.get()&&(this.app.site.url=e),this.proxyUri&&(esri.config.defaults.io.proxyUrl=this.proxyUri),dojo.connect(this.app.site,"onInitializationFailed",function(e){var i=t.getResource("language-site-initialization-failure");e.message&&(i+=t.getResource("language-site-initialization-failure-explanation").format(e.message)),t.app.nativeManager.nativeInitialized&&0===t.app.offlineManager.getOfflineMaps().length&&(i+=t.getResource("language-site-initialization-failure-native-available")),t.app.trace.error(i),e&&403===e.code?t.app.event("SiteAuthorizationFailedEvent").publish(e):(t.app.event("SiteInitializationFailedEvent").publish(e),t.app.command("Alert").execute(i))}),this.app.event("MapLoadedEvent").once(this,function(e){t.app.debugModeActive("time")&&t.app._debug.timers.determineTimeToESRIMapLoad(t.app),t._overrideGeometryService(),t.app.event("SiteInitializedEvent").publish(t.app.site),t.app.debugModeActive("time")&&t.app._debug.timers.determineTimeToSiteInitializedEvent(t.app),o.firstOrDefault(t.app.site.workflows,function(e){return e.runOnStartup})&&t.app.awaitModules(["Workflow"]),setTimeout(function(){t.app.event("_shellStabilizedEvent").publish(),setTimeout(function(){t.app.applicationReady=!0,t.app.event("ApplicationReadyEvent").publish(),t.app.viewerReadyTime=(new Date).getTime(),t.app.event("ApplicationResizedEvent").publish(),t.app.debugModeActive("time")&&t.app._debug.timers.determineTimeToInteraction(t.app)}),t.app.debugModeActive("time")&&t.app._debug.timers.determineTimeToShellStabilization(t.app)})}),dojo.connect(this.app.site,"onLayerLoad",function(e){t.app.event("SiteLayerLoad").publish(e),t.app.event("SiteLayerLoadedEvent").publish(e)}),dojo.connect(this.app.site,"onLayerLoadError",function(e){t.app.event("SiteLayerLoadError").publish(e),t.app.event("SiteLayerLoadFailedEvent").publish(e)}),dojo.connect(this.app.site,"onServiceLayersLoaded",function(e){t.app.event("SiteServiceLayersLoaded").publish(e),t.app.event("SiteServiceLayersLoadedEvent").publish(e),t._checkForFailedServices(e)}),dojo.connect(this.app.site,"onSignIn",function(e){t.app.event("SignInEvent").publish(e)}),dojo.connect(this.app.site,"onSignOut",function(){t.app.event("SignOutEvent").publish()}),dojo.connect(this.app.site,"onUserSignInCancelled",function(e){t.app.event("UserSignInCancelledEvent").publish(e)}),dojo.connect(this.app.site,"onPrincipalUpdated",function(){t.app.event("SitePrincipalUpdated").publish(),t.app.event("SitePrincipalUpdatedEvent").publish(t.app.site.principal)}),this.app.site.configPreprocessor=function(e){return t._processSiteConfig(e)},this.app.trace.info("Loading site {0}.".format(this.app.site.url)),this.app.waitUntilSiteDownloaded().then(function(e){t.app.site.deepInitialize=!0,t.app.site.initialize(e)})},l.prototype._handleSiteInitializedEvent=function(){this.app.trace.info("Essentials REST API version {0}.".format(this.app.site.currentVersion));for(var e=0,i=this.app.site.essentialsMap.mapServices;e<i.length;e++)if(i[e]._needsProxy){this.app.trace.info("Essentials security detected. The proxy page will be used.");break}},l.prototype._onSignIn=function(){var e=this,i=this.getResource("language-site-signing-in"),t={id:r.alphaNumericToken(),text:i,closeButton:{}};this.app.command("DisplayNotification").execute(t),this.app.event("SiteInitializingEvent").once(this,function(){e.app.command("RemoveNotification").execute(t.id)})},l.prototype._checkForFailedServices=function(e){if(e.essentialsMap&&e.essentialsMap.mapServices){for(var i=[],t=0,n=this.app.site.essentialsMap.mapServices;t<n.length;t++){var r=n[t];r.initializationFailure&&i.push(r)}0<i.length&&this.app.event("SiteServiceLayersFailedEvent").publish(i)}},l.prototype._setNativeProperties=function(){var e=window.location.toString(),i=e.indexOf("#");-1!==i&&(e=e.substring(0,i)),e=encodeURIComponent(e),this.app.site.signInRedirectUri="gcx://viewer?url="+e,this.app.site.signOutRedirectUri="gcx://viewer?url="+e},l.prototype._processSiteConfig=function(e){if(e&&!(e.geometryEndpoints&&0<e.geometryEndpoints.length)){var i=this.app.configuration.geometryServiceUrl||a.DEFAULT_GEOMETRY_SERVICE_URI;e.hasGeometryEndpoints=!0,e.geometryEndpoints=[{id:"0",displayName:null,serviceType:"ArcGisGeometry",connectionString:"url={0}".format(i),properties:[],extensions:[]}]}},l.prototype._overrideGeometryService=function(){var e=o.firstOrDefault(this.app.site.geometryEndpoints),i=e?e.geometryServiceUrl:null;this.app.configuration&&(this.app.configuration.geometryServiceUrl=i||this.app.configuration.geometryServiceUrl||a.DEFAULT_GEOMETRY_SERVICE_URI,esri.config.defaults.geometryService=new esri.tasks.GeometryService(this.app.configuration.geometryServiceUrl),e&&e.geometryServiceToken&&(this.app.configuration.geometryServiceToken=e.geometryServiceToken))},l);function l(){var e=null!==s&&s.apply(this,arguments)||this;return e.siteUri="",e.proxyUri="",e.essentialsSite=null,e}i.SiteModule=p})},"url:/Mapping/modules/Site/ServiceLayersFailureView.html":i,"url:/Mapping/modules/Site/SignInErrorView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Site/CSS/large.css","css","LnNlcnZpY2UtbGF5ZXJzLWZhaWx1cmUgew0KICAgIHdpZHRoOiA1MDBweDsNCn0NCg=="),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/CSS/medium.css","css","LnNlcnZpY2UtbGF5ZXJzLWZhaWx1cmUgew0KICAgIHdpZHRoOiA1MDBweDsNCn0NCg=="),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/ServiceLayersFailureView.html","html",i),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/SignInErrorView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/Site/ServiceLayersFailureView","Mapping/modules/Site/ServiceLayersFailureViewModel","Mapping/modules/Site/SignInErrorView","Mapping/modules/Site/SiteModule"],function(e,i,t,n){r(e,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureView",e.ServiceLayersFailureView),r(i,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureViewModel",i.ServiceLayersFailureViewModel),r(t,"geocortex.essentialsHtmlViewer.mapping.modules.site.SignInErrorView",t.SignInErrorView),r(n,"geocortex.essentialsHtmlViewer.mapping.modules.site.SiteModule",n.SiteModule)})}();