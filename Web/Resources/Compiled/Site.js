function shim(e,i,t){if("string"==typeof e&&(t=i,i=e),"undefined"==typeof t)return void console.warn("Undefined shim for: "+i);for(var n=i.split("."),a=null,r=window,s=0,o=n.length;s<o;s++)a=n[s],s==o-1?r[a]=t:r[a]||(r[a]={}),r=r[a]}require({cache:{"Mapping/modules/Site/ServiceLayersFailureView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/essentials/MapServiceConstants"],function(e,i,t,n){"use strict";var a=function(e){function i(i,t){var n=e.call(this,i,t)||this;return i.event("SiteServiceLayersFailedEvent").subscribe(n,n._serviceLayersFailed),n}return __extends(i,e),i.prototype._serviceLayersFailed=function(e){this.viewModel.failedServices.clear(),this.viewModel.hasError.set(!1);for(var i=0;i<e.length;i++){var t=e[i];t.failureAction!==n.FailureAction.WARN&&t.failureAction!==n.FailureAction.ERROR||(t.failureAction===n.FailureAction.ERROR&&this.viewModel.hasError.set(!0),this.viewModel.failedServices.addItem({name:e[i].displayName}))}this.viewModel.failedServices.length()>0&&(this.title.set(this.app.getResource(this.libraryId,"language-site-service-layers-failure-view-title")),this.app.viewManager.activateView(this))},i.prototype.handleClickOk=function(e,i,t){this.app.viewManager.deactivateView(this)},i}(t.ViewBase);i.ServiceLayersFailureView=a})},"Mapping/modules/Site/ServiceLayersFailureViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,i,t,n){"use strict";var a=function(e){function i(){var i=null!==e&&e.apply(this,arguments)||this;return i.failedServices=new n.ObservableCollection,i.hasError=new n.Observable((!1)),i}return __extends(i,e),i}(t.ViewModelBase);i.ServiceLayersFailureViewModel=a})},"Mapping/modules/Site/SignInErrorView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,i,t){"use strict";var n=function(e){function i(i,t){var n=e.call(this,i,t)||this;return n.tryAgainAction=null,i.event("UserSignInCancelledEvent").subscribe(n,n._signInCancelled),n}return __extends(i,e),i.prototype._signInCancelled=function(e){this.title.set(this.app.getResource(this.libraryId,"language-site-log-on-required-title")),this.tryAgainAction=e.tryAgainAction,this.app.viewManager.activateView(this)},i.prototype.handleClickTryAgain=function(e,i,t){this.tryAgainAction&&this.tryAgainAction()},i}(t.ViewBase);i.SignInErrorView=n})},"Mapping/modules/Site/SiteModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/essentials/Site","geocortex/framework/utils/utils","geocortex/infrastructure/GeometryUtils","geocortex/framework/utils/ArrayUtils"],function(e,i,t,n,a,r,s){"use strict";var o=function(e){function i(){var i=null!==e&&e.apply(this,arguments)||this;return i.siteUri="",i.proxyUri="",i.essentialsSite=null,i}return __extends(i,e),i.prototype.initialize=function(i){var t=this;e.prototype.initialize.call(this,i),this.siteUri=i.siteUri,this.proxyUri=this.app.configuration.proxyUri||null,this.app.event("SiteInitializedEvent").once(this,this._handleSiteInitializedEvent),this.app.event("SignInEvent").subscribe(this,this._onSignIn);var n=function(){var e=t.app.nativeManager.isNative()?t.app.waitUntilOfflineManagerLoaded():Promise.resolve();e.then(function(){return t._initializeSite()})};this.app.map?n():this.app.event("MapInitializedEvent").once(this,n)},i.prototype._initializeSite=function(){var e=this,i="initializeSiteMsg",t={text:this.app.getResource(this.libraryId,"language-common-loading"),id:i,showBusyIcon:!0};this.app.command("AddStatus").execute(t);var a=this.app.makeAbsolute(this.siteUri);this.app.site=new n.Site(a,this.app.map),this.app.event("SiteInitializingEvent").publish(this.app.site),this.app.nativeManager.isNative()?this._setNativeProperties():this.app.isNative.bind(this,function(i){i&&e._setNativeProperties()}),this.app.isOffline.get()&&(this.app.site.url=a),this.proxyUri&&(esri.config.defaults.io.proxyUrl=this.proxyUri),dojo.connect(this.app.site,"onInitializationFailed",function(i){var t=e.getResource("language-site-initialization-failure");i.message&&(t+=e.getResource("language-site-initialization-failure-explanation").format(i.message)),e.app.nativeManager.nativeInitialized&&0===e.app.offlineManager.getOfflineMaps().length&&(t+=e.getResource("language-site-initialization-failure-native-available")),e.app.trace.error(t),i&&403===i.code?e.app.event("SiteAuthorizationFailedEvent").publish(i):(e.app.event("SiteInitializationFailedEvent").publish(i),e.app.command("Alert").execute(t))}),dojo.connect(this.app.map,"onLoad",function(t){e._overrideGeometryService(),setTimeout(function(){e.app.event("SiteInitializedEvent").publish(e.app.site),setTimeout(function(){e.app.event("ApplicationResizedEvent").publish(),setTimeout(function(){e.app.command("RemoveStatus").execute(i),e.app.event("_shellStabilizedEvent").publish(),e.app.site.essentialsMap.resumeSuspendedLayers()})})})}),dojo.connect(this.app.site,"onLayerLoad",function(i){e.app.event("SiteLayerLoad").publish(i),e.app.event("SiteLayerLoadedEvent").publish(i)}),dojo.connect(this.app.site,"onLayerLoadError",function(i){e.app.event("SiteLayerLoadError").publish(i),e.app.event("SiteLayerLoadFailedEvent").publish(i)}),dojo.connect(this.app.site,"onServiceLayersLoaded",function(i){e.app.event("SiteServiceLayersLoaded").publish(i),e.app.event("SiteServiceLayersLoadedEvent").publish(i),e._checkForFailedServices(i)}),dojo.connect(this.app.site,"onSignIn",function(i){e.app.event("SignInEvent").publish(i)}),dojo.connect(this.app.site,"onSignOut",function(){e.app.event("SignOutEvent").publish()}),dojo.connect(this.app.site,"onUserSignInCancelled",function(i){e.app.event("UserSignInCancelledEvent").publish(i)}),this.app.site.configPreprocessor=function(i){return e._processSiteConfig(i)},this.app.trace.info("Loading site {0}.".format(this.app.site.url)),this.app.site.deepInitialize=!0,this.app.site.initialize()},i.prototype._handleSiteInitializedEvent=function(){this.app.trace.info("Essentials REST API version {0}.".format(this.app.site.currentVersion));for(var e=0;e<this.app.site.essentialsMap.mapServices.length;e++){var i=this.app.site.essentialsMap.mapServices[e];if(i._needsProxy){this.app.trace.info("Essentials security detected. The proxy page will be used.");break}}},i.prototype._onSignIn=function(){var e=this,i=this.getResource("language-site-signing-in"),t={id:a.alphaNumericToken(),text:i,closeButton:{}};this.app.command("DisplayNotification").execute(t),this.app.event("SiteInitializedEvent").once(this,function(){e.app.command("RemoveNotification").execute(t.id)})},i.prototype._checkForFailedServices=function(e){if(e.essentialsMap&&e.essentialsMap.mapServices){for(var i=[],t=0;t<e.essentialsMap.mapServices.length;t++){var n=e.essentialsMap.mapServices[t];n.initializationFailure&&i.push(n)}i.length>0&&this.app.event("SiteServiceLayersFailedEvent").publish(i)}},i.prototype._setNativeProperties=function(){var e=window.location.toString(),i=e.indexOf("#");i!==-1&&(e=e.substring(0,i)),e=encodeURIComponent(e),this.app.site.signInRedirectUri="gcx://viewer?url="+e,this.app.site.signOutRedirectUri="gcx://viewer?url="+e},i.prototype._processSiteConfig=function(e){if(e&&!(e.geometryEndpoints&&e.geometryEndpoints.length>0)){var i=this.app.configuration.geometryServiceUrl||r.DEFAULT_GEOMETRY_SERVICE_URI;e.hasGeometryEndpoints=!0,e.geometryEndpoints=[{id:"0",displayName:null,serviceType:"ArcGisGeometry",connectionString:"url={0}".format(i),properties:[],extensions:[]}]}},i.prototype._overrideGeometryService=function(){var e=s.firstOrDefault(this.app.site.geometryEndpoints),i=e?e.geometryServiceUrl:null;this.app.configuration&&(this.app.configuration.geometryServiceUrl=i||this.app.configuration.geometryServiceUrl||r.DEFAULT_GEOMETRY_SERVICE_URI,esri.config.defaults.geometryService=new esri.tasks.GeometryService(this.app.configuration.geometryServiceUrl),e&&e.geometryServiceToken&&(this.app.configuration.geometryServiceToken=e.geometryServiceToken))},i}(t.ModuleBase);i.SiteModule=o})},"url:/Mapping/modules/Site/ServiceLayersFailureView.html":'<div class="module service-layers-failure">\r\n    <p data-binding="{@text: @language-site-service-layers-failure-view-warning}{@hidden: hasError}"></p>\r\n    <p data-binding="{@text: @language-site-service-layers-failure-view-error}{@visible: hasError}"></p>\r\n    <ul data-binding="{@source: failedServices}">\r\n        <li data-binding="{@template-for: failedServices}">\r\n            <span data-binding="{@text: name}"></span>\r\n        </li>\r\n    </ul>\r\n    <div class="form-btns" data-binding="{@hidden: hasError}">\r\n        <button class="button" data-binding="{@var: okButtonElement}{@event-onclick: handleClickOk}{@text: @language-common-ok}"/>\r\n    </div>\r\n</div>',"url:/Mapping/modules/Site/SignInErrorView.html":'<div class="module sign-on-error">\r\n    <p data-binding="{@text: @language-site-log-on-required-error}"></p>\r\n    <div class="form-btns">\r\n        <button class="button" data-binding="{@event-onclick: handleClickTryAgain}{@text: @language-site-try-log-on-again}" />\r\n    </div>\r\n</div>'}}),define(["Mapping/modules/Site/ServiceLayersFailureView","Mapping/modules/Site/ServiceLayersFailureViewModel","Mapping/modules/Site/SignInErrorView","Mapping/modules/Site/SiteModule"],function(e,i,t,n){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureView",e.ServiceLayersFailureView),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureViewModel",i.ServiceLayersFailureViewModel),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.site.SignInErrorView",t.SignInErrorView),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.site.SiteModule",n.SiteModule)});