!function(){function e(e,i,t){if("string"==typeof e&&(t=i,i=e),void 0!==t)for(var n=i.split("."),r=null,a=window,o=0,s=n.length;o<s;o++)r=n[o],o==s-1?a[r]=t:a[r]||(a[r]={}),a=a[r];else console.warn("Undefined shim for: "+i)}var i="<div class='module service-layers-failure'>    <p data-binding='{@text: @language-site-service-layers-failure-view-warning}{@hidden: hasError}'></p>    <p data-binding='{@text: @language-site-service-layers-failure-view-error}{@visible: hasError}'></p>    <ul data-binding='{@source: failedServices}'>        <li data-binding='{@template-for: failedServices}'>            <span data-binding='{@text: name}'></span>        </li>    </ul>    <div class='form-btns' data-binding='{@hidden: hasError}'>        <button class='button' data-binding='{@var: okButtonElement}{@event-onclick: handleClickOk}{@text: @language-common-ok}'/>    </div></div>",t="<div class='module sign-on-error'>    <p data-binding='{@text: @language-site-log-on-required-error}'></p>    <div class='form-btns'>        <button class='button' data-binding='{@event-onclick: handleClickTryAgain}{@text: @language-site-try-log-on-again}' />    </div></div>";require({cache:{"Mapping/modules/Site/ServiceLayersFailureView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])};return function(i,t){function n(){this.constructor=i}e(i,t),i.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/essentials/MapServiceConstants"],function(i,t,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(i){function t(e,t){var n=i.call(this,e,t)||this;return e.event("SiteServiceLayersFailedEvent").subscribe(n,n._serviceLayersFailed),n}return e(t,i),t.prototype._serviceLayersFailed=function(e){this.viewModel.failedServices.clear(),this.viewModel.hasError.set(!1);for(var i=0;i<e.length;i++){var t=e[i];t.failureAction!==r.FailureAction.WARN&&t.failureAction!==r.FailureAction.ERROR||(t.failureAction===r.FailureAction.ERROR&&this.viewModel.hasError.set(!0),this.viewModel.failedServices.addItem({name:e[i].displayName}))}this.viewModel.failedServices.length()>0&&(this.title.set(this.app.getResource(this.libraryId,"language-site-service-layers-failure-view-title")),this.app.viewManager.activateView(this))},t.prototype.handleClickOk=function(e,i,t){this.app.viewManager.deactivateView(this)},t}(n.ViewBase);t.ServiceLayersFailureView=a})},"Mapping/modules/Site/ServiceLayersFailureViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])};return function(i,t){function n(){this.constructor=i}e(i,t),i.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(i,t,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(i){function t(){var e=null!==i&&i.apply(this,arguments)||this;return e.failedServices=new r.ObservableCollection,e.hasError=new r.Observable(!1),e}return e(t,i),t}(n.ViewModelBase);t.ServiceLayersFailureViewModel=a})},"Mapping/modules/Site/SignInErrorView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])};return function(i,t){function n(){this.constructor=i}e(i,t),i.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(i,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(i){function t(e,t){var n=i.call(this,e,t)||this;return n.tryAgainAction=null,e.event("UserSignInCancelledEvent").subscribe(n,n._signInCancelled),n}return e(t,i),t.prototype._signInCancelled=function(e){this.title.set(this.app.getResource(this.libraryId,"language-site-log-on-required-title")),this.tryAgainAction=e.tryAgainAction,this.configuration.sticky=!0,this.app.viewManager.activateView(this)},t.prototype.handleClickTryAgain=function(e,i,t){this.tryAgainAction&&this.tryAgainAction()},t}(n.ViewBase);t.SignInErrorView=r})},"Mapping/modules/Site/SiteModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,i){e.__proto__=i}||function(e,i){for(var t in i)i.hasOwnProperty(t)&&(e[t]=i[t])};return function(i,t){function n(){this.constructor=i}e(i,t),i.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/essentials/Site","geocortex/framework/utils/utils","geocortex/infrastructure/GeometryUtils","geocortex/framework/utils/ArrayUtils"],function(i,t,n,r,a,o,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var p=function(i){function t(){var e=null!==i&&i.apply(this,arguments)||this;return e.siteUri="",e.proxyUri="",e.essentialsSite=null,e}return e(t,i),t.prototype.initialize=function(e){var t=this;i.prototype.initialize.call(this,e),this.siteUri=e.siteUri,this.proxyUri=this.app.configuration.proxyUri||null,this.app.event("SiteInitializedEvent").once(this,this._handleSiteInitializedEvent),this.app.event("SignInEvent").subscribe(this,this._onSignIn);var n=function(){(t.app.nativeManager.isNative()?t.app.waitUntilOfflineManagerLoaded():Promise.resolve()).then(function(){return t._initializeSite()})};this.app.map?n():this.app.event("MapInitializedEvent").once(this,n)},t.prototype._initializeSite=function(){var e=this,i=this.app.makeAbsolute(this.siteUri);this.app.site=new r.Site(i,this.app.map),this.app.event("SiteInitializingEvent").publish(this.app.site),this.app.nativeManager.isNative()?this._setNativeProperties():this.app.isNative.bind(this,function(i){i&&e._setNativeProperties()}),this.app.isOffline.get()&&(this.app.site.url=i),this.proxyUri&&(esri.config.defaults.io.proxyUrl=this.proxyUri),dojo.connect(this.app.site,"onInitializationFailed",function(i){var t=e.getResource("language-site-initialization-failure");i.message&&(t+=e.getResource("language-site-initialization-failure-explanation").format(i.message)),e.app.nativeManager.nativeInitialized&&0===e.app.offlineManager.getOfflineMaps().length&&(t+=e.getResource("language-site-initialization-failure-native-available")),e.app.trace.error(t),i&&403===i.code?e.app.event("SiteAuthorizationFailedEvent").publish(i):(e.app.event("SiteInitializationFailedEvent").publish(i),e.app.command("Alert").execute(t))}),dojo.connect(this.app.map,"onLoad",function(i){e._overrideGeometryService(),setTimeout(function(){e.app.event("SiteInitializedEvent").publish(e.app.site),setTimeout(function(){e.app.event("ApplicationResizedEvent").publish(),setTimeout(function(){e.app.site.essentialsMap.extentManager._setInitialExtentImplWithPromise(e.app.site.essentialsMap.initialExtent).then(function(){e.app.event("_managerInitialExtentAppliedEvent").publish(),e.app.event("_shellStabilizedEvent").publish(),e.app.site.essentialsMap.resumeSuspendedLayers()})})})})}),dojo.connect(this.app.site,"onLayerLoad",function(i){e.app.event("SiteLayerLoad").publish(i),e.app.event("SiteLayerLoadedEvent").publish(i)}),dojo.connect(this.app.site,"onLayerLoadError",function(i){e.app.event("SiteLayerLoadError").publish(i),e.app.event("SiteLayerLoadFailedEvent").publish(i)}),dojo.connect(this.app.site,"onServiceLayersLoaded",function(i){e.app.event("SiteServiceLayersLoaded").publish(i),e.app.event("SiteServiceLayersLoadedEvent").publish(i),e._checkForFailedServices(i)}),dojo.connect(this.app.site,"onSignIn",function(i){e.app.event("SignInEvent").publish(i)}),dojo.connect(this.app.site,"onSignOut",function(){e.app.event("SignOutEvent").publish()}),dojo.connect(this.app.site,"onUserSignInCancelled",function(i){e.app.event("UserSignInCancelledEvent").publish(i)}),dojo.connect(this.app.site,"onPrincipalUpdated",function(){e.app.event("SitePrincipalUpdated").publish()}),this.app.site.configPreprocessor=function(i){return e._processSiteConfig(i)},this.app.trace.info("Loading site {0}.".format(this.app.site.url)),this.app.site.deepInitialize=!0,this.app.site.initialize()},t.prototype._handleSiteInitializedEvent=function(){this.app.trace.info("Essentials REST API version {0}.".format(this.app.site.currentVersion));for(var e=0;e<this.app.site.essentialsMap.mapServices.length;e++)if(this.app.site.essentialsMap.mapServices[e]._needsProxy){this.app.trace.info("Essentials security detected. The proxy page will be used.");break}},t.prototype._onSignIn=function(){var e=this,i=this.getResource("language-site-signing-in"),t={id:a.alphaNumericToken(),text:i,closeButton:{}};this.app.command("DisplayNotification").execute(t),this.app.event("SiteInitializedEvent").once(this,function(){e.app.command("RemoveNotification").execute(t.id)})},t.prototype._checkForFailedServices=function(e){if(e.essentialsMap&&e.essentialsMap.mapServices){for(var i=[],t=0;t<e.essentialsMap.mapServices.length;t++){var n=e.essentialsMap.mapServices[t];n.initializationFailure&&i.push(n)}i.length>0&&this.app.event("SiteServiceLayersFailedEvent").publish(i)}},t.prototype._setNativeProperties=function(){var e=window.location.toString(),i=e.indexOf("#");-1!==i&&(e=e.substring(0,i)),e=encodeURIComponent(e),this.app.site.signInRedirectUri="gcx://viewer?url="+e,this.app.site.signOutRedirectUri="gcx://viewer?url="+e},t.prototype._processSiteConfig=function(e){if(e&&!(e.geometryEndpoints&&e.geometryEndpoints.length>0)){var i=this.app.configuration.geometryServiceUrl||o.DEFAULT_GEOMETRY_SERVICE_URI;e.hasGeometryEndpoints=!0,e.geometryEndpoints=[{id:"0",displayName:null,serviceType:"ArcGisGeometry",connectionString:"url={0}".format(i),properties:[],extensions:[]}]}},t.prototype._overrideGeometryService=function(){var e=s.firstOrDefault(this.app.site.geometryEndpoints),i=e?e.geometryServiceUrl:null;this.app.configuration&&(this.app.configuration.geometryServiceUrl=i||this.app.configuration.geometryServiceUrl||o.DEFAULT_GEOMETRY_SERVICE_URI,esri.config.defaults.geometryService=new esri.tasks.GeometryService(this.app.configuration.geometryServiceUrl),e&&e.geometryServiceToken&&(this.app.configuration.geometryServiceToken=e.geometryServiceToken))},t}(n.ModuleBase);t.SiteModule=p})},"url:/Mapping/modules/Site/ServiceLayersFailureView.html":i,"url:/Mapping/modules/Site/SignInErrorView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/Site/CSS/large.css","css","LnNlcnZpY2UtbGF5ZXJzLWZhaWx1cmUgew0KICAgIHdpZHRoOiA1MDBweDsNCn0NCg=="),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/CSS/medium.css","css","LnNlcnZpY2UtbGF5ZXJzLWZhaWx1cmUgew0KICAgIHdpZHRoOiA1MDBweDsNCn0NCg=="),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/ServiceLayersFailureView.html","html",i),e.resourceManager.register("Mapping","inv","Mapping/modules/Site/SignInErrorView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/Site/ServiceLayersFailureView","Mapping/modules/Site/ServiceLayersFailureViewModel","Mapping/modules/Site/SignInErrorView","Mapping/modules/Site/SiteModule"],function(i,t,n,r){e(i,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureView",i.ServiceLayersFailureView),e(t,"geocortex.essentialsHtmlViewer.mapping.modules.site.ServiceLayersFailureViewModel",t.ServiceLayersFailureViewModel),e(n,"geocortex.essentialsHtmlViewer.mapping.modules.site.SignInErrorView",n.SignInErrorView),e(r,"geocortex.essentialsHtmlViewer.mapping.modules.site.SiteModule",r.SiteModule)})}();