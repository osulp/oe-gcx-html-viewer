function shim(e,t,a){if("string"==typeof e&&(a=t,t=e),"undefined"==typeof a)return void console.warn("Undefined shim for: "+t);for(var i=t.split("."),n=null,s=window,l=0,o=i.length;l<o;l++)n=i[l],l==o-1?s[n]=a:s[n]||(s[n]={}),s=s[n]}require({cache:{"Mapping/modules/Scalebar/ScalebarModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase"],function(e,t,a){"use strict";var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(a.ModuleBase);t.ScalebarModule=i})},"Mapping/modules/Scalebar/ScalebarView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,a){"use strict";var i=function(t){function a(){var e=null!==t&&t.apply(this,arguments)||this;return e.scalebarHost=null,e.scalebarContainer=null,e}return __extends(a,t),a.prototype.attach=function(a){var i=this;t.prototype.attach.call(this,a);var n=this.configuration;n.scalebarStyle?"line"!=n.scalebarStyle&&"ruler"!=n.scalebarStyle&&this.app.trace.warning("Configured value of '{0}' for scalebarStyle in ScalebarView is not known to be supported.".format(n.scalebarStyle)):n.scalebarStyle="line",n.scalebarUnit?"english"!=n.scalebarUnit&&"metric"!=n.scalebarUnit&&"dual"!=n.scalebarUnit&&this.app.trace.warning("Configured value of '{0}' for scalebarUnit in ScalebarView is not known to be supported.".format(n.scalebarUnit)):n.scalebarUnit="dual",n.showBackground=!!n.showBackground,n.showBackground&&$(this.scalebarContainer).addClass("scalebar-standout"),"line"==n.scalebarStyle?$(this.scalebarContainer).addClass("scalebar-line-style"):"ruler"==n.scalebarStyle&&$(this.scalebarContainer).addClass("scalebar-ruler-style"),e(["esri/dijit/Scalebar"],function(e){new e({map:i.app.map,scalebarStyle:n.scalebarStyle,scalebarUnit:n.scalebarUnit},i.scalebarHost)})},a.prototype.toggleScaleInputBoxActive=function(){this.app.command("ToggleScaleInputBox").execute()},a}(a.ViewBase);t.ScalebarView=i})},"Mapping/modules/Scalebar/ScalebarViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/essentials/Scale","geocortex/infrastructure/FormatUtils","geocortex/infrastructure/NumberFormat"],function(e,t,a,i,n,s,l){"use strict";var o=function(e){function t(t,a){var n=e.call(this,t,a)||this;return n.selectedScale=new i.Observable,n.inputScale=new i.Observable,n.scales=new i.ObservableCollection,n.label=new i.Observable(n.getResource("language-scale-label")),n.mobileMode=new i.Observable(n.app.configuration.mobileMode),n.isLeft=new i.Observable((!1)),n.isRight=new i.Observable((!1)),n.isScaleInputBoxEnabled=new i.Observable((!1)),n.scaleInputBoxIsVisible=new i.Observable((!1)),n.app.site&&n.app.site.isInitialized?n._onSiteInitialized(n.app.site):n.app.event("SiteInitializedEvent").once(n,n._onSiteInitialized),n.app.event("MapExtentChangedEvent").subscribe(n,n.mapExtentChanged),n}return __extends(t,e),t.prototype._onSiteInitialized=function(e){var t=this.app.map.__tileInfo&&this.app.map.__tileInfo.lods;t&&t.length&&this.setScaleCollection(t),this.setScale(this.app.map.getScale())},t.prototype.initialize=function(e){e&&e.scaleInputBox&&e.scaleInputBox.isEnabled===!0&&(this.isScaleInputBoxEnabled.set(!0),e.scaleInputBox.openByDefault===!0&&this.scaleInputBoxIsVisible.set(!0))},t.prototype.mapExtentChanged=function(){this.setScale(this.app.map.getScale())},t.prototype.setScaleCollection=function(e){var t=this,a=[];e.forEach(function(e){if(t.isValidScale(e.scale)){var i=t.getEssentialScale(e.scale);a.push(i)}}),this.scales.set(a)},t.prototype.setScale=function(e){if(e=Math.round(e),!this.selectedScale.get()||Math.round(parseFloat(this.selectedScale.get().scale))!==e)for(var t=0;t<this.scales.getLength();t++){var a=this.scales.getAt(t);if(Math.round(parseFloat(a.scale))===e){this.selectedScale.set(a);break}}this.inputScale.set(this.scaleToString(e))},t.prototype.scaleToString=function(e){return s.formatNumber(Math.round(e),l.NumberFormat.NUMBER)},t.prototype.stringToScale=function(e){return s.parseNumber(e)},t.prototype.isValidScale=function(e){return e>=this.app.map.getMaxScale()&&e<=this.app.map.getMinScale()},t.prototype.getEssentialScale=function(e){return new n.Scale("1:{0}".format(s.formatNumber(Math.round(e),l.NumberFormat.NUMBER)),e.toString())},t}(a.ViewModelBase);t.ScalebarViewModel=o})},"Mapping/modules/Scalebar/ScaleInputBoxButtonView":function(){define(["require","exports","geocortex/framework/ui/ViewBase"],function(e,t,a){"use strict";var i=function(e){function t(t,a){return e.call(this,t,a)||this}return __extends(t,e),t.prototype.attach=function(t){e.prototype.attach.call(this,t),$(this.root).parent("[class*='left']").length?this.viewModel.isLeft.set(!0):$(this.root).parent("[class*='right']").length&&this.viewModel.isRight.set(!0)},t.prototype.toggleScaleInputBoxActive=function(){this.app.command("ToggleScaleInputBox").execute()},t}(a.ViewBase);t.ScaleInputBoxButtonView=i})},"Mapping/modules/Scalebar/ScaleInputBoxView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/framework-ui/utils/UiUtils"],function(e,t,a,i){"use strict";var n=function(e){function t(t,a){var i=e.call(this,t,a)||this;return i._registerCommandsAndEvents(),i}return __extends(t,e),t.prototype._registerCommandsAndEvents=function(){this.app.command("ToggleScaleInputBox").register(this,this.toggleScaleInputBox)},t.prototype.attach=function(t){e.prototype.attach.call(this,t)},t.prototype.activated=function(){this.app.configuration.mobileMode&&this.viewModel.scaleInputBoxIsVisible.set(!0)},t.prototype.deactivated=function(){this.app.configuration.mobileMode&&this.viewModel.scaleInputBoxIsVisible.set(!1)},t.prototype.resetInputScaleToMapScale=function(){this.viewModel.setScale(this.app.map.getScale())},t.prototype.handleFocusOnInput=function(){var e=this;this.tapToDismissRegistered||(i.tapToDismissThis(this,function(){return e._onOtherInteracted()}),this.tapToDismissRegistered=!0)},t.prototype.handleChangeOnInput=function(){var e=this,t=this.viewModel.stringToScale(this.viewModel.inputScale.get());return this.isValidScale(t)?(this.viewModel.inputScale.set(this.viewModel.scaleToString(t)),this.tapToDismissRegistered||(i.tapToDismissThis(this,function(){return e._onOtherInteracted()}),this.tapToDismissRegistered=!0),!0):(this.resetInputScaleToMapScale(),!0)},t.prototype.isValidScale=function(e){return!isNaN(parseFloat(e))&&isFinite(e)&&parseFloat(e)>0},t.prototype._onOtherInteracted=function(){this.resetInputScaleToMapScale(),this.tapToDismissRegistered=!1},t.prototype.toggleScaleInputBox=function(){if(this.app.configuration.mobileMode)this.app.viewManager.activateView(this);else{if(this.viewModel.isScaleInputBoxEnabled.get()===!1)return;this.viewModel.scaleInputBoxIsVisible.get()?(this.viewModel.scaleInputBoxIsVisible.set(!1),this.app.viewManager.deactivateView(this)):(this.viewModel.scaleInputBoxIsVisible.set(!0),this.app.viewManager.activateView(this))}},t.prototype.handleScaleChange=function(){var e=this;setTimeout(function(){e.viewModel.inputScale.set(e.viewModel.scaleToString(Math.round(e.viewModel.selectedScale.get().scale))),e.app.command("ZoomToScale").execute(e.viewModel.stringToScale(e.viewModel.inputScale.get()))})},t.prototype.handleApply=function(){var e=this;setTimeout(function(){e.app.command("ZoomToScale").execute(e.viewModel.stringToScale(e.viewModel.inputScale.get()))})},t}(a.ViewBase);t.ScaleInputBoxView=n})},"url:/Mapping/modules/Scalebar/ScalebarView.html":'<div class="scale-bar-container" data-binding="{@var: scalebarContainer}">\r\n    <!-- Insert ESRI\'s scalebar here, so that it can participate in the region-view infrastructure -->\r\n    <span class="scale-bar-host" data-binding="{@var: scalebarHost}"></span>\r\n    <img class="scale-switcher" src="Resources/Images/Icons/Toolbar/scale-input-24.png" data-binding="{@event-onclick: toggleScaleInputBoxActive}{@visible:mobileMode}" />\r\n</div>',"url:/Mapping/modules/Scalebar/ScaleInputBoxButtonView.html":'<button class="scale-input-box-toggle" data-binding="{@visible: isScaleInputBoxEnabled}{@event-onclick: toggleScaleInputBoxActive}{@class-scale-input-box-open: scaleInputBoxIsVisible}{@noclass-scale-input-box-closed: scaleInputBoxIsVisible}{@class-scale-input-box-toggle-left: isLeft}{@class-scale-input-box-toggle-right: isRight}{title: @language-feature-scale-input-box-toggle-button}{text: @language-feature-scale-input-box-toggle}" tabindex="0"></button>',"url:/Mapping/modules/Scalebar/ScaleInputBoxView.html":'<div class="scale-input-box-container" data-binding="{@visible: scaleInputBoxIsVisible}{@noclass-custom-scale-control: scales}">\r\n    <form action="javascript:void(0);" data-binding="{@event-onsubmit: handleApply}">\r\n        <label class="form-label" data-binding="{@text: label}"></label>\r\n        <span class="scale-input-box">\r\n            <select class="scale-selector-select scale-selector" data-binding="{@source: scales}{@visible: scales}{@value: selectedScale}{@event-onchange: handleScaleChange}">\r\n                <option data-binding="{@template-for: scales}{@text: displayName}{@attach: @context}"></option>\r\n            </select>\r\n            <input class="scale-selector-input scale-selector" type="text" pattern="[0-9]+([\\.,][0-9]+)?" min="0" step="100" data-binding="{@value:inputScale}{@event-onchange: handleChangeOnInput}{@event-onfocus: handleFocusOnInput}" />\r\n        </span>\r\n        <div class="form-btns">\r\n            <button class="button go-button" data-binding="{@event-onclick: handleApply}{@text: @language-scale-go}"></button>\r\n        </div>\r\n    </form>\r\n</div>\r\n'}}),define(["Mapping/modules/Scalebar/ScalebarModule","Mapping/modules/Scalebar/ScalebarView","Mapping/modules/Scalebar/ScalebarViewModel","Mapping/modules/Scalebar/ScaleInputBoxButtonView","Mapping/modules/Scalebar/ScaleInputBoxView"],function(e,t,a,i,n){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.scalebar.ScalebarModule",e.ScalebarModule),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.scalebar.ScalebarView",t.ScalebarView),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.scalebar.ScalebarViewModel",a.ScalebarViewModel),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.scalebar.ScaleInputBoxButtonView",i.ScaleInputBoxButtonView),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.scalebar.ScaleInputBoxView",n.ScaleInputBoxView)});