!function(){var t="<div class='layer-styles symbol-dialog'>    \x3c!-- Symbolization type selector --\x3e    <div class='symbolization-type-selector form-item'>        <label for='symbolization-type' data-binding='{@text: @language-layerstyles-symbology-type}'></label>        <select id='symbolization-type' data-binding='{@source: availableSymbologyTypes}{@value: symbologyType}'>            <option data-binding='{@template-for: availableSymbologyTypes}{@text: @context}'></option>        </select>    </div>    <div data-binding='{@hidden: symbolizeWithImagery}'>        \x3c!-- Group: Attribute symbology settings. --\x3e        <div data-binding='{@visible: symbolizeByAttribute}'>            <div data-binding='{@widget: AttributeSymbologySettings}{@widget-replace: true}'></div>        </div>        \x3c!-- Symbology settings widget. --\x3e        <div data-binding='{@hidden: symbolizeByAttribute}'>            <div data-binding='{@widget: SimpleSymbolWidget}{@widget-replace: true}'></div>        </div>    </div>    \x3c!-- Image symbology widget. --\x3e    <div class='layer-style-image-selector' data-binding='{@visible: symbolizeWithImagery}'>        <div data-binding='{@widget: PictureSymbolWidget}{@widget-replace: true}'></div>    </div></div>";function s(e,t,i){if("string"==typeof e&&(i=t,t=e),void 0!==i)for(var r=t.split("."),a=null,s=window,n=0,o=r.length;n<o;n++)a=r[n],n==o-1?s[a]=i:s[a]||(s[a]={}),s=s[a];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/LayerStyles/CustomLayerStylesVisualizationProvider":function(){var r,l=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase","geocortex/essentials/LayerStyle","geocortex/infrastructure/VisualizationUtils"],function(e,t,i,n,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,s=(a=i.VisualizationProviderBase,l(o,a),o.prototype.canSupport=function(e){return r.isSymbolizable(e)},o.prototype.handleCurrentLayerChanged=function(e){this.isEnabled.set(!!e.styles&&e.styles.some(function(e){return e.id===n.CUSTOM_STYLE_ID&&e.enabled})),this.isSupported.set(this.canSupport(e)),this.visualizations=[];var t={provider:this,name:this.customStyleMenuItem,id:n.CUSTOM_STYLE_ID};this.visualizations.push(t),this.isEnabled.get()&&(this.enabledVisualization=t)},o.prototype.handleActivate=function(e){for(var t=this.currentLayer.get(),i=t.styles.filter(function(e){return e.id===n.CUSTOM_STYLE_ID})[0],r=!1,a=0,s=t.styles;a<s.length;a++)s[a].enabled=!1;i&&(i.enabled||(r=!0),this.enabledVisualization=e,i.enabled=!0,this.app.command("ResymbolizeLayer").execute({gcxLayer:t,renderer:i.getRenderer()})),this.app.event("CustomSymbolizationStartedEvent").publish(t,r)},o.prototype.handleApply=function(){var e=this.currentLayer.get(),t=e.styles.filter(function(e){return e.id===n.CUSTOM_STYLE_ID})[0],i=this.app.viewManager.getViewById("LayerStyleSelectorView").getRenderer();if(i){if(t)t.setRenderer(i);else{var r=new n.LayerStyle(i,n.CUSTOM_STYLE_ID,n.CUSTOM_STYLE_ID,!0);e.styles.push(r),this.enabledVisualization={provider:this,name:this.customStyleMenuItem,id:n.CUSTOM_STYLE_ID}}this.handleActivate(this.enabledVisualization)}},o.prototype.handleReset=function(){this.app.event("_resetCustomLayerStyleEvent").publish()},o);function o(e,t){var i=a.call(this,e,t)||this;return i.displayName=i.app.getResource(t,"language-layerstyles-custom-name"),i.customStyleMenuItem=i.app.getResource(t,"language-layerstyles-custom-menuitem"),i}t.CustomLayerStylesVisualizationProvider=s})},"Mapping/modules/LayerStyles/LayerStyleSelectorView":function(){var r,l=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/symbology/SymbolType","geocortex/infrastructure/SymbolUtils"],function(e,t,i,r,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s,n=(s=i.ViewBase,l(o,s),o.prototype.attach=function(e){var t=this;s.prototype.attach.call(this,e),this.viewModel=e,this.viewModel.symbologyType.bind(this,function(e){t.pictureSymbologyWidget&&e===t.viewModel.imageType&&t.pictureSymbologyWidget.activated(),t.symbologyWidget&&e===t.viewModel.simpleType&&t.symbologyWidget.activated()})},o.prototype.reset=function(){this.symbologyWidget.reset(),this.attributeSettingsView.reset(),this.pictureSymbologyWidget.reset(),this.viewModel.symbologyType.set(this.viewModel.simpleType)},o.prototype.getRenderer=function(){return this.viewModel.symbolizeByAttribute.get()?(this.attributeSettingsView.applySettings(),this.attributeSettingsView.getRenderer()):this.viewModel.symbolizeWithImagery.get()?(this.pictureSymbologyWidget.applySettings(),this.pictureSymbologyWidget.getRenderer()):(this.symbologyWidget.applySettings(),this.symbologyWidget.getRenderer())},o.prototype.setFeatureType=function(e){e=a.layerFeatureTypeToSymbolType(e),this.symbologyWidget.setFeatureType(e),this.attributeSettingsView.viewModel.featureType.set(e),e===r.SymbolType.POINT?(this.attributeSettingsView.viewModel.noMarker.set(!1),this.viewModel.imageType&&!this.viewModel.availableSymbologyTypes.contains(this.viewModel.imageType)&&this.viewModel.availableSymbologyTypes.addItem(this.viewModel.imageType)):(this.attributeSettingsView.viewModel.noMarker.set(!0),this.viewModel.imageType&&this.viewModel.availableSymbologyTypes.contains(this.viewModel.imageType)&&(this.viewModel.availableSymbologyTypes.removeItem(this.viewModel.imageType),this.viewModel.symbologyType.get()===this.viewModel.imageType&&this.viewModel.symbologyType.set(this.viewModel.simpleType)))},o);function o(){return null!==s&&s.apply(this,arguments)||this}t.LayerStyleSelectorView=n})},"Mapping/modules/LayerStyles/LayerStyleSelectorViewModel":function(){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables"],function(e,t,i,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,s=(a=i.ViewModelBase,o(n,a),n.prototype.initialize=function(e){var t=this;a.prototype.initialize.call(this,e),this.simpleType=this.app.getResource(this.libraryId,"language-layerstyles-symbology-simple"),this.attributeType=this.app.getResource(this.libraryId,"language-layerstyles-symbology-attribute"),this.availableSymbologyTypes.addItem(this.simpleType),this.availableSymbologyTypes.addItem(this.attributeType),e.showImageSelector&&(this.imageType=this.app.getResource(this.libraryId,"language-layerstyles-symbology-image"),this.availableSymbologyTypes.addItem(this.imageType)),this.symbolizeByAttribute.syncTransform(this.symbologyType,function(e){return e===t.attributeType}),this.symbolizeWithImagery.syncTransform(this.symbologyType,function(e){return e===t.imageType}),this.symbologyType.set(this.simpleType)},n);function n(){var e=null!==a&&a.apply(this,arguments)||this;return e.name=new r.Observable(null),e.symbolizeByAttribute=new r.Observable(!1),e.symbolizeWithImagery=new r.Observable(!1),e.availableSymbologyTypes=new r.ObservableCollection([]),e.symbologyType=new r.Observable(""),e}t.LayerStyleSelectorViewModel=s})},"Mapping/modules/LayerStyles/LayerStylesModule":function(){var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/essentials/Field","geocortex/essentials/StreamLayerService","geocortex/essentials/LayerStyle","geocortex/framework/utils/ArrayUtils","geocortex/infrastructure/LayerIntegrationUtils"],function(e,t,i,l,a,y,d,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,s=(r=i.ModuleBase,o(n,r),n.prototype.initialize=function(){var r=this;this.app.command("ResymbolizeLayer").register(this,this.executeResymbolizeLayer,function(){return r.initialized}),this.app.command("RemoveSymbolization").register(this,this.executeRemoveSymbolization,function(){return r.initialized}),this.app.waitUntilApplicationReady().then(function(){!1===r.app.site.esriLegendProcessed.get()?r.app.site.esriLegendProcessed.bind(r,function(){r.populateDefaultRenderers()}):r.populateDefaultRenderers(),r.app.event("LayerAddedEvent").subscribe(r,function(e,t){r.storeMapServiceRenderers(t)})}),this.app.event("CustomSymbolizationStartedEvent").subscribe(this,function(e,t){void 0===t&&(t=!1),t||!r.currentLayer||e.name!==r.currentLayer.name?(r.applyConfiguration(e),r.currentLayer=e):e.mapService&&e.mapService instanceof a.StreamLayerService&&(r.currentLayer.mapService&&e.mapService.displayName===r.currentLayer.mapService.displayName||(r.applyConfiguration(e),r.currentLayer=e))}),this.app.event("ProjectLoadedEvent").subscribe(this,function(){r.currentLayer=null,setTimeout(function(){for(var e=0,t=r.app.site.essentialsMap.allLayers();e<t.length;e++){var i=t[e];(i.mapService.serviceLayer instanceof esri.layers.FeatureLayer||i.mapService.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer)&&i.styles.some(function(e){return e.enabled})&&r.app.event("LayerVisualizationChangedEvent").publish(i)}},1e3)})},n.prototype.executeRemoveSymbolization=function(e){for(var t=p.getGeocortexLayer(e.gcxLayer,this.app),i=t.mapService.serviceLayer,r=t.mapService.id,a=t.id,s=0,n=t.styles;s<n.length;s++)n[s].enabled=!1;if(i instanceof esri.layers.ArcGISDynamicMapServiceLayer){var o=(i.layerDrawingOptions||[]).slice(),l=void 0;l=o[a]?o[a]:new esri.layers.LayerDrawingOptions,this.app.site.defaultRenderers[r]&&this.app.site.defaultRenderers[r][a]?l.renderer=esri.renderer.fromJson(JSON.parse(this.app.site.defaultRenderers[r][a])):l.renderer=null,o[a]=l,i.setLayerDrawingOptions(o)}else if(i instanceof esri.layers.FeatureLayer||i instanceof esri.layers.WFSLayer){var y=null;this.app.site.defaultRenderers[r]&&(y=esri.renderer.fromJson(JSON.parse(this.app.site.defaultRenderers[r]))),(y instanceof esri.renderer.Renderer||i instanceof esri.layers.WFSLayer&&null===y)&&(i.setRenderer(y),i.redraw())}this.app.event("LayerVisualizationChangedEvent").publish(t)},n.prototype.executeResymbolizeLayer=function(e){if(e.gcxLayer&&e.renderer){var t=p.getGeocortexLayer(e.gcxLayer,this.app),i=t.mapService.serviceLayer,r=this._getRenderer(e.renderer),a=!1;if(t.mapService.featureClustering&&t.mapService.featureClustering.enabled&&(this.app.command("RemoveClusterLayer").execute({gcxLayer:t}),a=!0),t.mapService.heatMap&&t.mapService.heatMap.enabled&&this.app.command("RemoveHeatMap").execute({gcxLayer:t}),i instanceof esri.layers.ArcGISDynamicMapServiceLayer){var s=(i.layerDrawingOptions||[]).slice(),n=void 0;(n=s[t.id]?s[t.id]:new esri.layers.LayerDrawingOptions).renderer=r,s[t.id]=n,i.setLayerDrawingOptions(s)}else(i instanceof esri.layers.FeatureLayer||i instanceof esri.layers.WFSLayer)&&(i.setRenderer(r),t.isUserCreated||a?i.refresh():i.redraw());this.app.event("LayerVisualizationChangedEvent").publish(t)}},n.prototype.applyConfiguration=function(t){var i,r=this,e=this.app.viewManager.getViewById("LayerStyleSelectorView"),a=e.viewModel,s=t.mapService.serviceLayer;e.reset(),e.setFeatureType(t.featureType),s instanceof esri.layers.ArcGISDynamicMapServiceLayer?e.attributeSettingsView.viewModel.attributes.set(t.fields.filter(function(e){return-1<r.symbolizableDataTypes.indexOf(e.dataType)&&e.name!==(t.primaryKeyField?t.primaryKeyField.name:"OBJECTID")&&e.visible&&e.dataType!==l.EssentialsFieldTypes.essentialsFieldTypeDate})):e.attributeSettingsView.viewModel.attributes.set(t.fields.filter(function(e){return-1<r.symbolizableDataTypes.indexOf(e.dataType)&&e.name!==(t.primaryKeyField?t.primaryKeyField.name:"OBJECTID")&&e.visible})),a.name.set(y.CUSTOM_STYLE_ID);var n=t.styles.filter(function(e){return e.id===y.CUSTOM_STYLE_ID})[0];if(n){if(i=n.getRenderer(),n.isSimple())"esriPMS"===i.toJson().symbol.type?(e.pictureSymbologyWidget.setFromRenderer(i),a.symbologyType.set(a.imageType)):(e.symbologyWidget.setFromRenderer(i),a.symbologyType.set(a.simpleType));else{e.attributeSettingsView.setFromRenderer(i),a.symbologyType.set(a.attributeType);var o=e.attributeSettingsView.viewModel.attributes.getItems().filter(function(e){return e.name===r._getAttribute(i)})[0];o&&(e.attributeSettingsView.attributeInput.selectedIndex=e.attributeSettingsView.viewModel.attributes.indexOf(o)+1,e.attributeSettingsView.viewModel.currentAttribute.set(o.displayName))}e.attributeSettingsView.applySettings(),e.symbologyWidget.applySettings(),e.pictureSymbologyWidget.applySettings()}},n.prototype.populateDefaultRenderers=function(){for(var e=0,t=this.app.site.essentialsMap.mapServices;e<t.length;e++){var i=t[e];this.storeMapServiceRenderers(i)}this.initialized=!0},n.prototype.storeMapServiceRenderers=function(e){var t=e.serviceLayer;if((t instanceof esri.layers.FeatureLayer||t instanceof esri.layers.WFSLayer)&&!this.app.site.defaultRenderers[e.id])if(e.layers[0]&&e.layers[0].defaultRenderer){this.app.site.defaultRenderers[e.id]=e.layers[0].defaultRenderer;var i=esri.renderer.fromJson(JSON.parse(e.layers[0].defaultRenderer));if(e.heatMap&&e.heatMap.enabled)e.heatMap.defaultRenderer=i;else if(e.featureClustering&&e.featureClustering.enabled){var r=this.app.map.getLayer(d.firstOrDefault(this.app.map.graphicsLayerIds.filter(function(e){return e===t.id+"-cluster"}))),a=this.app.map.getLayer(d.firstOrDefault(this.app.map.graphicsLayerIds.filter(function(e){return e===t.id+"-explodedClusterLayer"})));r&&(r.featureLayerRenderer=i),a&&(a.setRenderer(i),a.redraw())}else t.setRenderer(i),t.redraw()}else if(e.heatMap&&e.heatMap.defaultRenderer&&JSON.stringify(e.heatMap.defaultRenderer.toJson()))this.app.site.defaultRenderers[e.id]=JSON.stringify(e.heatMap.defaultRenderer.toJson());else if(e.featureClustering&&e.featureClustering.enabled){var s=this.app.map.graphicsLayerIds.filter(function(e){return e===t.id+"-cluster"});0<s.length&&(r=this.app.map.getLayer(s[0]))&&r.featureLayerRenderer&&JSON.stringify(r.featureLayerRenderer.toJson())&&(this.app.site.defaultRenderers[e.id]=JSON.stringify(r.featureLayerRenderer.toJson()))}else t.renderer&&JSON.stringify(t.renderer.toJson())&&(this.app.site.defaultRenderers[e.id]=JSON.stringify(t.renderer.toJson()));if(t instanceof esri.layers.ArcGISDynamicMapServiceLayer){for(var n=[],o=0,l=e.layers;o<l.length;o++){var y=l[o];y.defaultRenderer&&this.executeResymbolizeLayer({gcxLayer:y,renderer:y.defaultRenderer})}for(var p in t.layerDrawingOptions)t.layerDrawingOptions.hasOwnProperty(p)&&t.layerDrawingOptions[p].renderer&&(this.app.site.defaultRenderers[e.id]&&this.app.site.defaultRenderers[e.id][p]?this.app.site.defaultRenderers[e.id]&&(n[p]=this.app.site.defaultRenderers[e.id][p]):n[p]=JSON.stringify(t.layerDrawingOptions[p].renderer.toJson()));this.app.site.defaultRenderers[e.id]=n}},n.prototype._getAttribute=function(e){var t=e.toJson();return t.field||t.field1||""},n.prototype._getRenderer=function(e){return"string"==typeof e?esri.renderer.fromJson(JSON.parse(e)):e},n);function n(){var e=null!==r&&r.apply(this,arguments)||this;return e.initialized=!1,e.symbolizableDataTypes=[l.EssentialsFieldTypes.essentialsFieldTypeDate,l.EssentialsFieldTypes.essentialsFieldTypeDouble,l.EssentialsFieldTypes.essentialsFieldTypeInteger,l.EssentialsFieldTypes.essentialsFieldTypeSingle,l.EssentialsFieldTypes.essentialsFieldTypeSmallInteger,l.EssentialsFieldTypes.essentialsFieldTypeString],e}t.LayerStylesModule=s})},"Mapping/modules/LayerStyles/LayerStylesVisualizationProvider":function(){var r,y=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase","geocortex/essentials/LayerStyle","geocortex/infrastructure/VisualizationUtils","geocortex/framework/utils/ArrayUtils"],function(e,t,i,n,r,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,s=(a=i.VisualizationProviderBase,y(l,a),l.prototype.canSupport=function(e){return r.isSymbolizable(e)},l.prototype.handleCurrentLayerChanged=function(e){this.isEnabled.set(!!e.styles&&e.styles.some(function(e){return e.enabled&&e.id!==n.CUSTOM_STYLE_ID})),this.isSupported.set(this.canSupport(e)),this.visualizations=[];for(var t=0,i=e.styles.filter(function(e){return e.id!==n.CUSTOM_STYLE_ID});t<i.length;t++){var r=i[t],a={provider:this,name:r.displayName,id:r.id};this.visualizations.push(a),r.enabled&&(this.enabledVisualization=a)}},l.prototype.handleActivate=function(t){var e=this.currentLayer.get(),i=e.styles.filter(function(e){return e.id===t.id})[0],r=(e.mapService.serviceLayer,e.styles.indexOf(o.firstOrDefault(e.styles.filter(function(e){return e.id===n.CUSTOM_STYLE_ID}))));-1<r?e.styles[r]=new n.LayerStyle(JSON.stringify(i.getRenderer().toJson()),i.displayName,n.CUSTOM_STYLE_ID):e.styles.push(new n.LayerStyle(JSON.stringify(i.getRenderer().toJson()),i.displayName,n.CUSTOM_STYLE_ID));for(var a=0,s=e.styles;a<s.length;a++)s[a].enabled=!1;i&&(this.enabledVisualization=t,i.enabled=!0,this.app.command("ResymbolizeLayer").execute({gcxLayer:e,renderer:i.getRenderer()}))},l.prototype.handleApply=function(){this.handleActivate(this.enabledVisualization)},l);function l(e,t){var i=a.call(this,e,t)||this;return i.displayName=i.app.getResource(t,"language-layerstyles-name"),i}t.LayerStylesVisualizationProvider=s})},"url:/Mapping/modules/LayerStyles/LayerStyleSelectorView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/LayerStyles/LayerStyleSelectorView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/LayerStyles/CustomLayerStylesVisualizationProvider","Mapping/modules/LayerStyles/LayerStyleSelectorView","Mapping/modules/LayerStyles/LayerStyleSelectorViewModel","Mapping/modules/LayerStyles/LayerStylesModule","Mapping/modules/LayerStyles/LayerStylesVisualizationProvider"],function(e,t,i,r,a){s(e,"geocortex.essentialsHtmlViewer.mapping.modules.layerStyles.CustomLayerStylesVisualizationProvider",e.CustomLayerStylesVisualizationProvider),s(t,"geocortex.essentialsHtmlViewer.mapping.modules.layerStyles.LayerStyleSelectorView",t.LayerStyleSelectorView),s(i,"geocortex.essentialsHtmlViewer.mapping.modules.layerStyles.LayerStyleSelectorViewModel",i.LayerStyleSelectorViewModel),s(r,"geocortex.essentialsHtmlViewer.mapping.modules.layerStyles.LayerStylesModule",r.LayerStylesModule),s(a,"geocortex.essentialsHtmlViewer.mapping.modules.layerStyles.LayerStylesVisualizationProvider",a.LayerStylesVisualizationProvider)})}();