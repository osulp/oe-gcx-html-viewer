function shim(e,t,i){if("string"==typeof e&&(i=t,t=e),"undefined"==typeof i)return void console.warn("Undefined shim for: "+t);for(var n=t.split("."),a=null,r=window,s=0,l=n.length;s<l;s++)a=n[s],s==l-1?r[a]=i:r[a]||(r[a]={}),r=r[a]}require({cache:{"Mapping/modules/LayerList/LayerListModule":function(){define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/gis/AppInfo","geocortex/infrastructure/layerList/LayerList","./Handlers/LayerListItemActivityHandlers","geocortex/framework/utils/ArrayUtils","geocortex/infrastructure/layerList/LayerListLayerItem","geocortex/infrastructure/layerList/LayerListMapServiceItem","geocortex/infrastructure/layerList/LayerListKmlFolderItem","geocortex/infrastructure/PromiseUtils","geocortex/infrastructure/ArrayUtils"],function(e,t,i,n,a,r,s,l,o,c,p,d){"use strict";var u=function(e){function t(t,i){return e.call(this,t,i)||this}return __extends(t,e),t.prototype.initialize=function(e){var t=this;this.enableLayerListLegendIntegration=void 0!=e.enableLegendIntegration&&e.enableLegendIntegration,this.onlyShowSwatchesOnVisibleLayers=void 0!=e.onlyShowSwatchesOnVisibleLayers&&e.onlyShowSwatchesOnVisibleLayers,this.autoActivateAncestorVisibilities=void 0!=e.autoActivateAncestorVisibilities&&e.autoActivateAncestorVisibilities,this.groupByOperationalAndBase=void 0==e.groupByOperationalAndBase||e.groupByOperationalAndBase,this.enableLayerIcons=void 0!=e.enableLayerIcons&&e.enableLayerIcons,this.enableLayerListLegendIntegration||this.app.trace.debug("Inline legend integration not enabled for the Configurable LayerList module"),this.onlyShowSwatchesOnVisibleLayers||this.app.trace.debug("The option to only show legend swatches for visible layers is not enabled for the Configurable LayerList module."),this.app.isArcGisWebApp?(this.appInfo=n.AppInfo.fromGeocortexApp(this.app),this._setupLayerList()):this.app.site&&this.app.site.isInitialized?this._setupLayerList():this.app.event("SiteInitializedEvent").once(this,function(){t.appInfo=n.AppInfo.fromGeocortexApp(t.app),t._setupLayerList()}),this.app.event("MapServiceLayersChangedWithResultEvent").subscribe(this,this._handleMapServiceLayersChanged),this.registerActivityHandlers()},t.prototype.registerActivityHandlers=function(){var e=this;this.app.registerActivityTypeHandler("Geocortex.Workflow.Activities.GetLayerListItemInfo",function(t){r.handleGetLayerListItemInfo(e,t)}),this.app.registerActivityTypeHandler("Geocortex.Workflow.Activities.SetLayerListItemInfo",function(t){r.handleSetLayerListItemInfo(e,t)}),this.app.registerActivityIdHandler("__GetLayerListItemInfo",function(t){r.handleGetLayerListItemInfo(e,t)}),this.app.registerActivityIdHandler("__SetLayerListItemInfo",function(t){r.handleSetLayerListItemInfo(e,t)})},t.prototype.subscribeEvents=function(){this.app.event("MapServiceAddedEvent").subscribe(this,this._handleMapServicesAdded),this.app.event("MapServiceRemovedEvent").subscribe(this,this._handleMapServiceRemoved),this.app.event("MapServicePropertyChangedEvent").subscribe(this,this._updateMapService),this.app.event("LayerVisualizationChangedEvent").subscribe(this,this._handleLayerVisualizationChanged)},t.prototype.waitUntilLayerListInitialized=function(){var e=this;return new Promise(function(t,i){e.layerList&&e.layerList.layerListInitialized?t():e.app.event("LayerListInitializedEvent").once(e,function(){return t()})})},t.prototype.getStateFilter=function(){return{activeTheme:!0,layerList:{item:this._getItemFilter()}}},t.prototype.exportState=function(){var e=this.app.site.essentialsMap.layerThemesInfo.activeTheme;return Promise.resolve({activeTheme:e?e.id:null,layerList:this._exportChildItemsState(this.layerList)})},t.prototype.applyState=function(e){var t=this;return this.waitUntilLayerListInitialized().then(function(){t.layerList.suspendMapUpdates=!0;var i=t.app.site.essentialsMap.layerThemesInfo,n=s.firstOrDefault(i.themes,function(t){return t.id===e.activeTheme});n&&n!==i.activeTheme&&n.applyToMap()}).then(function(){return t._applyChildrenState(t.layerList,e.layerList)}).then(function(){t.layerList.suspendMapUpdates=!1})},t.prototype._exportItemState=function(e){var t=this.app.project.convert,i={id:e.id.get(),name:e.name.get(),isVisible:e.isVisible.get(),isExpanded:e.isExpanded.get(),children:[]};return e instanceof l.LayerListLayerItem?i.layer=t.fromGcxLayer(e.layer.gcxLayer):e instanceof o.LayerListMapServiceItem&&(i.mapService=t.fromGcxMapService(e.mapService.gcxMapService)),i.children=this._exportChildItemsState(e),i},t.prototype._exportChildItemsState=function(e){var t=this,i=e.children.get().filter(function(e){return!(e instanceof c.LayerListKmlFolderItem)});return d.ArrayUtils.mapWithErrorCallback(i,function(e){return t._exportItemState(e)},function(e,i){return t.app.trace.warning('Unable to save layer list item "'+e.name.get()+'" to project: '+i)})},t.prototype._applyItemState=function(e,t){var i,n=this,a=t.children.get(),r=this.app.project.convert;return i=e.layer?r.toGcxLayer(e.layer,e.layer.serviceLayer).then(function(e){return s.firstOrDefault(a,function(t){return t instanceof l.LayerListLayerItem&&t.layer.gcxLayer===e})}):e.mapService?r.toGcxMapService(e.mapService).then(function(e){return s.firstOrDefault(a,function(t){return t instanceof o.LayerListMapServiceItem&&t.mapService.gcxMapService===e})}):Promise.resolve(s.firstOrDefault(a,function(t){return t.name.get()===e.name})),i.then(function(t){t&&(t.isExpanded.set(e.isExpanded),t.isVisible.set(e.isVisible),n._applyChildrenState(t,e.children))})["catch"](function(e){})},t.prototype._applyChildrenState=function(e,t){var i=this;return p.PromiseUtils.mapSkipRejected(t,function(t){return i._applyItemState(t,e)})["return"]()},t.prototype._setupLayerList=function(){var e=this,i=this.app&&this.app.site&&this.app.site.layerListRestEndpoint?this.app.site.layerListRestEndpoint:null;this.app.isArcGisWebApp||(this.layerListRestUrl=this.app.site.url+"/map/layerlist");var n=0,r={enableLegendIntegration:this.enableLayerListLegendIntegration,onlyShowSwatchesOnVisibleLayers:this.onlyShowSwatchesOnVisibleLayers,autoActivateAncestorVisibilities:this.autoActivateAncestorVisibilities,serviceLoadFailureIconUri:"Resources/Images/Icons/Toolbar/error-24.png",serviceLoadFailureIconTooltip:this.appInfo.gcxApp.getResource(this.libraryId,"language-layerlist-service-unavailable"),singleLegendIconTooltip:this.appInfo.gcxApp.getResource(this.libraryId,"language-layerlist-single-legend-icon-tooltip"),multiLegendIconTooltip:this.appInfo.gcxApp.getResource(this.libraryId,"language-layerlist-multiple-legend-icon-tooltip"),multiLegendSwatchElement:"<img src='"+t.MULTI_LEGEND_SWATCH_URI+"'  alt=' '/>",groupByOperationalAndBase:this.groupByOperationalAndBase,enableLayerIcons:this.enableLayerIcons};this.layerList=new a.LayerList(this.appInfo,this.layerListRestUrl,i,r),dojo.connect(this.layerList,"onLayerListInitialized",function(t){n=(new Date).getTime()-n,e.app.trace.debug("Layer List initialization took {0}ms ({1}s)".format(n,n/1e3)),e.subscribeEvents(),e.app.event("LayerListInitializedEvent").publish(t)}),dojo.connect(this.layerList,"onLayerListInitializationFailed",function(t){e.app.command("Alert").execute("Layer List initialization failed with error: ".concat(t.message))}),n=(new Date).getTime(),this.layerList.initialize()},t.prototype._handleMapServicesAdded=function(e){this.layerList&&this.layerList.addUserAddedServiceLayer(e)},t.prototype._handleMapServiceRemoved=function(e){this.layerList&&this.layerList.removeServiceLayer(e)},t.prototype._updateMapService=function(e){var t=this.layerList.getUserAddedLayersFolderIndex(e);t=t||0,this.layerList&&(this.layerList.removeServiceLayer(e),this.layerList.addUserAddedServiceLayer(e,t))},t.prototype._handleMapServiceLayersChanged=function(e){var t=this;this.waitUntilLayerListInitialized().then(function(){t.layerList&&e&&e.mapService&&t.layerList.updateServiceLayer(e.mapService,e.newItems,e.oldItems)})},t.prototype._handleLayerVisualizationChanged=function(e){var t=this;this.layerList&&e&&e.mapService&&setTimeout(function(){t.layerList.updateServiceLayerLegendSwatch(e.mapService)},1e3)},t.prototype._getItemFilter=function(){var e=this;return{id:!0,name:!0,isVisible:!0,isExpanded:!0,layer:this.app.project.filter.layer,mapService:this.app.project.filter.serviceLayer,children:{item:function(){return e._getItemFilter()}}}},t}(i.ModuleBase);u.MULTI_LEGEND_SWATCH_URI="Resources/Images/Icons/legend-16.png",t.LayerListModule=u})},"Mapping/modules/LayerList/LayerListState":function(){define(["require","exports"],function(e,t){"use strict"})},"Mapping/modules/LayerList/LayerListView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/layerList/LayerListItem","geocortex/infrastructure/ui/components/FilterControl/FilterControlViewBase"],function(e,t,i,n,a){"use strict";var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.messageRegionName="LayerListStatusMessageRegion",t._longPressTimer=null,t._pressLengthMs=1500,t}return __extends(t,e),t.prototype.activated=function(){e.prototype.activated.call(this),this._dismissNotifications()},t.prototype.deactivated=function(){e.prototype.deactivated.call(this),this._dismissNotifications()},t.prototype._dismissNotifications=function(){var e=this.app.viewManager.getExistingRegionByName(this.messageRegionName);if(e&&e.views.length>0)for(var t=0,i=e.views;t<i.length;t++){var n=i[t];this.app.command("RemoveStatus").execute(n.id),this.app.command("RemoveNotification").execute(n.id)}},t.prototype.attach=function(t){t&&(e.prototype.attach.call(this,t),this.initialize())},t.prototype.initialize=function(){this.viewModel&&!this.viewModel.viewInitialized.get()&&this.root&&(this.title.set(this.app.getResource(this.libraryId,"language-layerlist-title")),this.app.viewManager.notifyDimensionsChanged(this),this.registerCommands(),this.viewModel.viewInitialized.set(!0))},t.prototype.registerCommands=function(){var e=this,t=function(){e.app.command("ActivateView").execute(e.id)};this.app.command("ShowLayerList").register(this,t),this.app.command("SwitchToLayerView").register(this,t)},t.prototype.resolveWidget=function(t,i,n){switch(e.prototype.resolveWidget.call(this,t,i),t){case"TransparencySlider":if(!i||!i.opacity)return null;var r=this.app.viewManager.createView({markupResource:"Mapping/modules/LayerList/Widgets/TransparencySliderView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.modules.layerList.TransparencySliderView",isVisible:!0,libraryId:this.libraryId});return r.attach(i),r;case"LayerListActionsWidget":return this.app.menuRegistry.createMenuWidget(this,i,n);case"LayerListFilterWidget":if(!i)return null;var s=new a.FilterControlViewBase(this.app,this.libraryId);s.handleFilterButtonClick=dojo.hitch(this,this.handleFilterButtonClick),s.handleFilterTextClear=dojo.hitch(this,this.handleFilterTextClear);var r=this.app.viewManager.createView({markupResource:"Mapping/infrastructure/ui/components/FilterControl/FilterControlView.html",typeName:"geocortex.essentialsHtmlViewer.mapping.infrastructure.ui.components.FilterControl.FilterControlViewBase",isVisible:!0},s);return r.attach(i.filterControlViewModel),r;default:return this.app.trace.warning("LayerListView: Unknown Widget"),null}},t.prototype.handleExpanderClick=function(e,t,i){i.isExpanded.set(!i.isExpanded.get())},t.prototype.handleLegendExpanderClick=function(e,t,i){return!(i.legendItems&&i.legendItems.length()>1)||(i.expandLegend.set(!i.expandLegend.get()),!1)},t.prototype.setItemVisibility=function(e,t,i){if(!i)return!1;var a=void 0!=t.checked?t.checked:t.status;return i.setItemVisibility(a),i.type===n.LayerListItemType.FOLDER?this.app.event("FolderClickedEvent").publish(i):i.type===n.LayerListItemType.MAPSERVICE?this.app.event("MapServiceClickedEvent").publish(i):i.type!==n.LayerListItemType.LAYER&&i.type!==n.LayerListItemType.GRAPHICSLAYER||(this.app.event("LayerClickedEvent").publish(i),this.app.event("LayerPressedEvent").publish(i)),!0},t.prototype.setItemVisibilityExclusive=function(e,t,i){if(!i)return!1;i.setItemVisibility(!0);for(var a=i.getSiblings(!1),r=0;r<a.length;r++){var s=a[r];s.radioGroup.get()===i.radioGroup.get()&&s.isVisible.set(!1)}return i.type===n.LayerListItemType.FOLDER?this.app.eventRegistry.event("FolderClickedEvent").publish(i):i.type===n.LayerListItemType.MAPSERVICE?this.app.eventRegistry.event("MapServiceClickedEvent").publish(i):i.type!==n.LayerListItemType.LAYER&&i.type!==n.LayerListItemType.GRAPHICSLAYER||(this.app.eventRegistry.event("LayerClickedEvent").publish(i),this.app.eventRegistry.event("LayerPressedEvent").publish(i)),!0},t.prototype.handleClickShowLegend=function(){this.app.command("SwitchToLegendView").execute()},t.prototype.handleOpacityChanged=function(e,t,i){i.opacity.set(parseFloat(t.value))},t.prototype.handleLayerActions=function(e,t,i){if(i){var a;switch(i.type){case n.LayerListItemType.MAPSERVICE:break;case n.LayerListItemType.LAYER:case n.LayerListItemType.GRAPHICSLAYER:a=i.layer.gcxLayer}a&&this.app.command("ShowLayerActions").execute(a)}},t.prototype.handleMapServiceActions=function(e,t,i){if(i){var a;i.type==n.LayerListItemType.MAPSERVICE&&(a=i.mapService.gcxMapService),a&&this.app.command("ShowMapServiceActions").execute(a)}},t.prototype.handleTouchStart=function(e,t,i){return this._beginLongPress(i),!0},t.prototype.handleMouseDown=function(e,t,i){return this._beginLongPress(i),!0},t.prototype.handleTouchEnd=function(){return this._cancelLongPress(),!0},t.prototype.handleMouseUp=function(){return this._cancelLongPress(),!0},t.prototype._beginLongPress=function(e){var t=this;this._longPressTimer&&clearTimeout(this._longPressTimer),this._longPressTimer=setTimeout(function(){t.app.event("LayerLongPressedEvent").publish(e)},this._pressLengthMs)},t.prototype._cancelLongPress=function(){this._longPressTimer&&(clearTimeout(this._longPressTimer),this._longPressTimer=null)},t.prototype.handleFilterTextClear=function(e,t,i){this.viewModel.filterControlViewModel.filterText.set("")},t.prototype.handleFilterButtonClick=function(e,t,i){this.viewModel.filterControlViewModel.filterText.pulse()},t}(i.ViewBase);t.LayerListView=r})},"Mapping/modules/LayerList/LayerListViewModel":function(){define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/layerList/LayerListItem","geocortex/infrastructure/ui/components/FilterControl/FilterControlViewModelBase"],function(e,t,i,n,a,r){"use strict";var s=function(e){function t(t,i){var a=e.call(this,t,i)||this;return a._childrenChangedToken=null,a._layerList=null,a._isApplyingState=!1,a.layerListItems=new n.ObservableCollection([]),a.layerThemes=new n.ObservableCollection,a.activeLayerTheme=new n.Observable(null),a.viewInitialized=new n.Observable((!1)),a.filterText=new n.Observable(""),a.noFilterQueryMatch=new n.Observable((!1)),a.filterControlViewModel=new r.FilterControlViewModelBase(a.app,a.libraryId),a.filterControlViewModel.filterInputPlaceholder.set(a.getResource("language-layerlist-search-placeholder")),a.filterControlViewModel.filterButtonText.set(a.getResource("language-layerlist-filter-button-text")),a.activeLayerTheme.bind(a,dojo.hitch(a,a._setActiveLayerTheme)),a}return __extends(t,e),t.prototype.initialize=function(t){var i=this;e.prototype.initialize.call(this,t),this.showTransparencySlider=t.showTransparencySlider||!1,this.autoExpandLegendSwatches=t.autoExpandLegendSwatches||!1,this.showTransparencySlider||this.app.trace.info("Transparency sliders not enabled for map services in the Configurable LayerList module"),this.app.event("FilterControlResultChangedEvent").subscribe(this,this._handleFilterResultChanged),this.app.event("LayerListInitializedEvent").once(this,function(e){i._layerList=e;var t=i._layerList.children.get();if(i.layerListItems.clear(),i.setupListItems(t),i.layerListItems.addItems(t),i._childrenChangedToken=i._layerList.children.bind(i,function(e){switch(e.type){case"append":case"insert":var t=i._layerList.children.get().slice(e.rangeStart,e.rangeEnd+1);i.setupListItems(t),i.layerListItems.insertItems(e.rangeStart,t);break;case"remove":case"clear":i.layerListItems.removeRange(e.rangeStart,e.rangeEnd)}}),i._layerList.mapInfo&&i._layerList.mapInfo.gcxMap&&i._layerList.mapInfo.gcxMap.layerThemesInfo){var n=i._layerList.mapInfo.gcxMap.layerThemesInfo;i.layerThemes.addItems(n.themes),n.activeTheme&&i.activeLayerTheme.set(n.activeTheme),dojo.connect(n,"layerThemeChangedEvent",function(e){e.currTheme&&i.activeLayerTheme.get()&&i.activeLayerTheme.get()!==e.currTheme&&i.activeLayerTheme.set(e.currTheme)})}i._layerList.filterControlComponent&&i.filterControlViewModel.setFilterControlComponent(i._layerList.filterControlComponent)})},t.prototype.onDestroy=function(){e.prototype.onDestroy.call(this),this._childrenChangedToken&&this._layerList&&this._layerList.children.unbind(this._childrenChangedToken)},t.prototype.setupListItems=function(e){var t=this,i=function(e){for(var n=0;n<e.length;n++)t._processListItem(e[n]),e[n].children&&e[n].children.length()&&i(e[n].children.get())};i(e)},t.prototype._processListItem=function(e){if(e.canAdjustOpacity.get()&&!this.showTransparencySlider&&e.canAdjustOpacity.set(!1),e.layerList.enableLegendIntegration&&this.autoExpandLegendSwatches&&(e.type===a.LayerListItemType.LAYER||e.type===a.LayerListItemType.GRAPHICSLAYER)){var t=function(){e.expandLegend.set(e.legendItems&&e.legendItems.length()>1)};e.legendItems&&!e.legendItems.length()?e.legendItems.once(this,t):t()}},t.prototype._setActiveLayerTheme=function(e){e&&!e.isActive&&e.applyToMap()},t.prototype._handleFilterResultChanged=function(e){var t=this.filterControlViewModel.getFilterControlComponent();if(t&&e.filterControlId===t.filterControlId){var i=e.filterableItems.some(function(e){return e.queryMatched===!0});this.noFilterQueryMatch.set(!i)}},t}(i.ViewModelBase);t.LayerListViewModel=s})},"Mapping/modules/LayerList/LayersSharingLinkProvider":function(){define(["require","exports","geocortex/infrastructure/sharing/SharingLinkProviderBase","geocortex/infrastructure/layerList/LayerListItem"],function(e,t,i,n){"use strict";var a=function(e){function t(t,a){var r=e.call(this,t,a)||this;return r._layerListItemType=n.LayerListItemType,r._rixits="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/",r.name="layers",r.priority=i.LayerListLinkPriority.LAYERS,r}return __extends(t,e),t.prototype.initialize=function(t){var i=this;e.prototype.initialize.call(this,t),this.app.event("LayerListInitializedEvent").once(this,function(e){i.layerList=e})},t.prototype.apply=function(e){var t=this;e&&(this.layerList?this._applyLayers(e,this.layerList):this.app.event("LayerListInitializedEvent").once(this,function(i){t._applyLayers(e,i)}))},t.prototype.generate=function(){var e=this,t=(this.layerList.children.get(),[]),i=function(t,n){for(var a=0;a<n.length;a++)e._getItemConfiguredVisiblity(n[a])!==n[a].isVisible.get()&&t.push(n[a].name.get()),n[a].children&&n[a].children.length()&&i(t,n[a].children.get())};i(t,this.layerList.children.get());for(var n="",a=0;a<t.length;a++){var r=this._getHashValue(t[a]);n+=this._base10ToBase64(r)}return n},t.prototype._applyLayers=function(e,t){var i=this,n={},a=function(e,t){for(var n=0;n<t.length;n++){var r=i._getHashValue(t[n].name.get()).toString();e[r]=t[n],t[n].children&&t[n].children.length()&&a(e,t[n].children.get())}};a(n,this.layerList.children.get());for(var r=e.match(/.{1,6}/g),s=0;s<r.length;s++){var l=this._base64ToBase10(r[s]).toString();if(n.hasOwnProperty(l)){var o=n[l];o.setItemVisibility(!this._getItemConfiguredVisiblity(o))}}},t.prototype._getItemConfiguredVisiblity=function(e){switch(e.type){case this._layerListItemType.FOLDER:return e.configuredVisible;case this._layerListItemType.MAPSERVICE:case this._layerListItemType.KMLFOLDER:return e.mapService.gcxMapService.configuredVisible;case this._layerListItemType.LAYER:case this._layerListItemType.GRAPHICSLAYER:return e.layer.gcxLayer.configuredVisible;default:return null}},t.prototype._getHashValue=function(e){var t=String.quickHashCode(e);return t<0&&(t>>>=0),t},t.prototype._base10ToBase64=function(e){if(isNaN(Number(e))||null===e||e<0||e===Number.POSITIVE_INFINITY||e===Number.NEGATIVE_INFINITY)return"";for(var t,i=Math.floor(e),n="";;)if(t=i%64,n=this._rixits.charAt(t)+n,i=Math.floor(i/64),0==i)break;for(;n.length<6;)n=this._rixits.charAt(0)+n;return n},t.prototype._base64ToBase10=function(e){if(6!=e.length)return-1;for(var t=0,i=e.split(""),n=0;n<i.length;n++){var a=this._rixits.indexOf(i[n]);if(a<0)return-1;t=64*t+a}return t},t}(i.SharingLinkProviderBase);t.LayersSharingLinkProvider=a})},"Mapping/modules/LayerList/Handlers/LayerListItemActivityHandlers":function(){define(["require","exports","geocortex/framework/utils/ArrayUtils"],function(e,t,i){"use strict";function n(e,t){if(!t)throw new Error("Get Layer List Item Info: required context was not supplied.");if(!e||!e.layerList)throw new Error("Get Layer List Item Info: No layer list available.");e.waitUntilLayerListInitialized().then(function(){var i=t.getValue("ItemId"),n=t.getValue("ItemName"),a=e.layerList.getDescendants()||[];i?a=dojo.filter(a,function(e){return e&&e.id.get()==i}):n&&(a=dojo.filter(a,function(e){return e&&e.name.get()==n}));for(var r=[],s=0;s<a.length;s++){var l=a[s];if(l){var o={isVisible:l.isVisible.get(),isEffectivelyVisible:l.isEffectivelyVisible.get(),isExpanded:l.isExpanded.get(),hasChildren:l.children&&l.children.getLength()>0,name:l.name.get(),id:l.id.get(),parentId:l.parent?l.parent.id.get():null};r.push(o)}}t.setValue("Items",JSON.stringify(r)),t.completeActivity()})}function a(e,t){if(!t)throw new Error("Set Layer List Item Info: required context was not supplied.");if(!e||!e.layerList)throw new Error("Set Layer List Item Info: No layer list available.");e.waitUntilLayerListInitialized().then(function(){var n=t.getValue("ItemId"),a=t.getValue("ItemName"),s=t.getValue("IsVisible"),l=t.getValue("IsEffectivelyVisible"),o=t.getValue("IsExpanded"),c=e.layerList.getDescendants()||[],p=null;return n?p=i.firstOrDefault(c,function(e){return e&&e.id.get()==n}):a&&(p=i.firstOrDefault(c,function(e){var t=e;return t&&t.name&&t.name.get()==a})),p?(null!==o&&p.isExpanded.set(o),null!==l&&r(p,l),null!==s&&p.setItemVisibility(s),void t.completeActivity()):void t.completeActivity()})}function r(e,t){if(e&&e.parent)for(var i=e.getSelfAndAncestors()||[],n=0;n<i.length;n++){var a=i[n];a&&a.id.get()!==e.layerList.id.get()&&a.isVisible.get()!=t&&a.isVisible.set(t)}}t.handleGetLayerListItemInfo=n,t.handleSetLayerListItemInfo=a})},"Mapping/modules/LayerList/LayerActions/LayerActionsView":function(){define(["require","exports","geocortex/infrastructure/menus/MenuView"],function(e,t,i){"use strict";var n=function(e){function t(t,i){return e.call(this,t,i)||this}return __extends(t,e),t.prototype.attach=function(t){t&&(t.layerActionsView=this,e.prototype.attach.call(this,t))},t.prototype.handleClickHyperlink=function(e,t,i){return this.app.followNavigationLink({url:i.uri.get(),element:t})},t}(i.MenuView);t.LayerActionsView=n})},"Mapping/modules/LayerList/LayerActions/LayerActionsViewModel":function(){define(["require","exports","geocortex/infrastructure/menus/MenuViewModel","geocortex/framework/observables","./LayerHyperlinkViewModel"],function(e,t,i,n,a){"use strict";var r=function(e){function t(t,i){var a=e.call(this,t,i)||this;return a.layerHyperlinks=new n.ObservableCollection,a.registerCommands(),a.subscribeToEvents(),a}return __extends(t,e),t.prototype.registerCommands=function(){var e=this;this.app.command("ShowLayerActions").register(this,function(t){t&&e.layerActionsView&&(e.layerActionsView.viewModel.menuContext.set(t),e.layerActionsView.title.set(t.displayName),e.layerHyperlinks.clear(),e.generateHyperlinks(t),e.app.command("ActivateView").execute(e.layerActionsView.id))})},t.prototype.subscribeToEvents=function(){var e=this;this.app.event("LayerDisplayNameChanged").subscribe(this,function(t){e.layerActionsView.title.set(t.displayName)})},t.prototype.generateHyperlinks=function(e){var t=this,i=e.layerHyperlinks;i.forEach(function(i){t.layerHyperlinks.addItem(new a.LayerHyperlinkViewModel(t.app,i,e,t.libraryId))}),e.mapService&&e.mapService.layerHyperlinks&&e.mapService.layerHyperlinks.forEach(function(i){t.layerHyperlinks.addItem(new a.LayerHyperlinkViewModel(t.app,i,e,t.libraryId))})},t}(i.MenuViewModel);t.LayerActionsViewModel=r})},"Mapping/modules/LayerList/LayerActions/LayerHyperlinkViewModel":function(){define(["require","exports","geocortex/infrastructure/menus/MenuViewModel","geocortex/framework/observables"],function(e,t,i,n){"use strict";var a=function(e){function t(t,i,a,r){var s=e.call(this,t,r)||this;s._defaultIconUri="Resources/Images/Icons/link-external-24.png",s._defaultTarget="_blank",s.uri=new n.Observable(""),s.iconUri=new n.Observable(s._defaultIconUri),s.text=new n.Observable(""),s.tooltip=new n.Observable(""),s.target=new n.Observable(s._defaultTarget);var l=a||i.layer;return l?i.uri?(s.uri.set(s.replaceTokens(i.uri,l)),i.iconUri&&s.iconUri.set(s.replaceTokens(i.iconUri,l)),i.text&&s.text.set(s.replaceTokens(i.text,l)),i.toolTip&&s.tooltip.set(s.replaceTokens(i.toolTip,l)),i.target&&s.target.set(i.target)):t.trace.warning(t.getResource(r,"language-hyperlink-no-url-warning")):t.trace.warning(t.getResource(r,"language-hyperlink-no-layer-warning")),s}return __extends(t,e),t.prototype.replaceTokens=function(e,t){var i=this,n=/{[^}]*}/g,a="",r=-1,s=function(){return r++,"{"+r.toString()+"}"},l=e.match(n)||[],o=e.replace(n,s),c=[];if(l.forEach(function(e){var n=e.substring(1,e.length-1),a=null;t&&(a=i.getLayerTokenValue(n,t)),t.mapService&&!a&&(a=i.getMapServiceTokenValue(n,t.mapService)),c.push(a?a:e)}),a=String.prototype.format.apply(o,c),t.properties){var p=Object.getOwnPropertyNames(t.properties);p.forEach(function(e){a=i.replaceToken(e,a,t.properties[e].toString())})}if(t.mapService.properties){var p=Object.getOwnPropertyNames(t.mapService.properties);p.forEach(function(e){a=i.replaceToken(e,a,t.mapService.properties[e].toString())})}return a},t.prototype.replaceToken=function(e,t,i){return t?t.replace("{"+e+"}",i):t},t.prototype.getLayerTokenValue=function(e,t){switch(e.toUpperCase()){case"LAYERDISPLAYNAME":return t.displayName;case"LAYERID":return t.id;case"LAYERNAME":return t.name;case"LAYERDESCRIPTION":return t.description;default:return null}},t.prototype.getMapServiceTokenValue=function(e,t){switch(e.toUpperCase()){case"MAPSERVICEDISPLAYNAME":return t.displayName;case"MAPSERVICEID":return t.id;case"MAPSERVICEURL":return t.url;case"MAPSERVICETOKEN":return t.serviceToken;default:return null}},t}(i.MenuViewModel);t.LayerHyperlinkViewModel=a})},"Mapping/modules/LayerList/MapServiceActions/MapServiceActionsView":function(){define(["require","exports","geocortex/infrastructure/menus/MenuView"],function(e,t,i){"use strict";var n=function(e){function t(t,i){var n=e.call(this,t,i)||this;return n._registerCommandsAndEvents(),n}return __extends(t,e),t.prototype._registerCommandsAndEvents=function(){var e=this;this.trackCommandHandler(this.app.command("ShowMapServiceActions"),this.app.command("ShowMapServiceActions").register(this,this._executeShowMapServiceActions,this._canExecuteShowMapServiceActions)),this.trackCommandHandler(this.app.command("HideMapServiceActions"),this.app.command("HideMapServiceActions").register(this,this._executeHideMapServiceActions,function(){return e.isActive}))},t.prototype._canExecuteShowMapServiceActions=function(e){return null!=this.viewModel&&null!=e&&e.isUserCreated},t.prototype._executeShowMapServiceActions=function(e){this.title.set(e.shortDisplayName||e.displayName),this.viewModel.menuContext.set(e),this.app.command("ActivateView").execute(this.id)},t.prototype._executeHideMapServiceActions=function(){this.app.command("DeactivateView").execute(this.id)},t}(i.MenuView);t.MapServiceActionsView=n})},"Mapping/modules/LayerList/Widgets/TransparencySliderView":function(){define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/infrastructure/FormatUtils","geocortex/infrastructure/NumberFormat"],function(e,t,i,n,a){"use strict";var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.tSliderElement=null,t.initialOpacity=1,t.descriptionText="",t.layerName="",t.SLIDER_MIN_VAL=0,t.SLIDER_MAX_VAL=1,t.SLIDER_STEP_INCREMENT=.01,t}return __extends(t,e),t.prototype.attach=function(t){if(e.prototype.attach.call(this,t),this.viewModel.opacity){this.initialOpacity=this.viewModel.opacity.get();var i=$(this.tSliderElement);this.viewModel.opacity.bind(this,function(e){return i.slider("value",e)})}this.layerName=t.name.get(),this.descriptionText="{0} {1}: {2}".format(this.layerName,this.app.getResource(this.libraryId,"language-layerlist-opacity-slider-description"),n.formatNumber(t.opacity.get(),a.NumberFormat.PERCENT,{fractionalDigits:0}))},t.prototype.added=function(t){e.prototype.added.call(this,t),this._setupJQuerySlider()},t.prototype._setupJQuerySlider=function(){var e=this,t={animate:!0,min:this.SLIDER_MIN_VAL,max:this.SLIDER_MAX_VAL,step:this.SLIDER_STEP_INCREMENT,orientation:"horizontal",value:this.initialOpacity,slide:function(t,i){return e._handleSliderValueChanged(t,i)}},i=$(this.tSliderElement);i.slider(t);var n=i.children(".ui-slider-handle");n.attr("aria-label",this.descriptionText),n.attr("title",this.getResource("language-layerlist-opacity")),n.text(this.getResource("language-layerlist-opacity-slider-handle"))},t.prototype._handleSliderValueChanged=function(e,t){t&&void 0!=t.value&&this.viewModel.opacity&&(this.viewModel.opacity.set(t.value),this.descriptionText="{0} {1}: {2}".format(this.layerName,this.app.getResource(this.libraryId,"language-layerlist-opacity-slider-description"),n.formatNumber(t.value,a.NumberFormat.PERCENT,{fractionalDigits:0})),$(this.tSliderElement).children("a").attr("aria-label",this.descriptionText))},t.prototype.handleTransparencySliderClick=function(){return!1},t}(i.ViewBase);t.TransparencySliderView=r})},"url:/Mapping/modules/LayerList/LayerListView.html":'<div class="results-list-actions-widget" data-binding="{@visible: viewInitialized}{@widget: LayerListActionsWidget}{@widget-context: @context}{@widget-required: false}"\r\n     data-menu-id="LayerListActions" data-menu-template="Mapping/infrastructure/menus/MenuHyperlinkView.html"></div>\r\n\r\n<!-- BEGIN: Optional status messages -->\r\n<div class="region panel-status-region" data-region-name="LayerListStatusMessageRegion" data-region-adapter="geocortex.framework.ui.DivRegionAdapter"></div>\r\n<!-- END: Optional status messages -->\r\n\r\n<div class="layer-list-wrapper">\r\n    <div class="layer-theme-switcher" data-binding="{@visible: layerThemes}">\r\n        <select data-binding="{@source: layerThemes}{@value: activeLayerTheme}{title: @language-layerlist-theme-selector}">\r\n            <option data-binding="{@template-for: layerThemes}{@text: displayName}{@attach: @context}" />\r\n        </select>\r\n    </div>\r\n\r\n    <div class="panel-filter-widget" data-binding="{@visible: viewInitialized}{@widget: LayerListFilterWidget}{@widget-context: @context}{@widget-required: true}"></div>\r\n\r\n    <div class="layer-list" data-binding="{@source: layerListItems}{@visible: viewInitialized}">\r\n        <ul data-binding="{@template-for: layerListItems}">\r\n            <li class="layer layer-info parent-layer" data-binding="{@visible: displayItem}{@class-layer-enabled: inVisibleScaleRange}{@noclass-layer-disabled: inVisibleScaleRange}">\r\n                <div class="layer-item-expander"><button class="tree-expander" data-binding="{title: layerFolderToggleTooltip}{@visible: hasDisplayedChildren}{@class-expanded: isExpanded}{@noclass-collapsed: isExpanded}{@event-onclick: handleExpanderClick}"></button></div>\r\n                <div class="mapservice-actions" data-binding="{@visible: enableMapServiceActions}"><button class="chevron-right-16" data-binding="{title: mapServiceActionsTooltip}{@event-onclick: handleMapServiceActions}"></button></div>\r\n                <div class="layer-actions" data-binding="{@visible: enableLayerActions}"><button class="chevron-right-16" data-binding="{title: @language-layer-actions-tooltip}{@event-onclick: handleLayerActions}"></button></div>\r\n                <div class="widget" data-binding="{@widget: TransparencySlider}{@widget-context: @context}{@widget-required: false}{@visible: canAdjustOpacity}"></div>\r\n                <div class="layer-contents">\r\n                    <span class="layer-item-ctrl">\r\n                        <input type="checkbox" data-binding="{@hidden: hasRadioToggle}{@disabled: hasRadioToggle}{checked: isVisible}{@event-onclick: setItemVisibility}{title: layerToggleTooltip}" />\r\n                        <input type="radio" data-binding="{@visible: hasRadioToggle}{@enabled: hasRadioToggle}{name: radioGroup}{checked: isVisible}{@event-onclick: setItemVisibilityExclusive}{title: layerToggleTooltip}" />\r\n                    </span>\r\n                    <span class="layer-item-ctrl layer-list-mapservice-icon" data-binding="{@visible: iconUri}"><img data-binding="{alt: iconTooltip}{src: iconUri}" /></span>\r\n                    <span class="layer-item-ctrl" data-binding="{@visible: legendIsVisible}"><button class="layer-list-legend-icon" data-binding="{innerHTML: legendSwatch}{title: legendTooltip}{@event-onclick: handleLegendExpanderClick}"></button></span>\r\n                    <span class="display-name" data-binding="{@text: name}{@event-onclick: handleExpanderClick}"></span>\r\n                </div>\r\n            </li>\r\n            <li class="layer" role="treeitem">\r\n                <div data-binding="{@visible: legendIsVisible}">\r\n                    <ul class="legend-list" data-binding="{@visible: expandLegend}{@source: legendItems}{@template: Mapping/modules/LayerList/Templates/LayerListLegendItemTemplate.html}"></ul>\r\n                </div>\r\n                <div data-binding="{@visible: isExpanded}{@source: onDemandItemCollection}{@template: Mapping/modules/LayerList/Templates/LayerListItemTemplate.html}"></div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class="no-results" data-binding="{@visible: noFilterQueryMatch}{@class-no-results-below-theme-switcher: layerThemes}">\r\n        <p data-binding="{@text: @language-layerlist-no-filter-query-matches}"></p>\r\n    </div>\r\n</div>',
"url:/Mapping/modules/LayerList/LayerActions/LayerActionsView.html":'<div class="panel-group no-item" data-binding="{@hidden: visibleMenuItems}{@text: @language-layerlist-no-feature-actions}"></div>\r\n\r\n<div class="panel-group" data-binding="{@visible: visibleMenuItems}{@source: visibleMenuItems}">\r\n    <div class="list-menu active has-icon" data-binding="{@template-for: visibleMenuItems}{@enabled: canExecute}">\r\n        <button class="list-menu-item" data-binding="{@event-onmouseover: getDescription}{@event-onclick: handleMenuItemClick}">\r\n            <img class="list-menu-icon" data-binding="{@visible: iconUri}{src: iconUri}" alt=" ">\r\n            <span class="list-menu-details">\r\n                <strong class="list-menu-name" data-binding="{@text: text}"></strong>\r\n                <span class="list-menu-desc" data-binding="{@text: description}"></span>\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div>\r\n<ul class="list-menu has-icon" data-binding="{@source: layerHyperlinks}">\r\n    <li data-binding="{@template-for: layerHyperlinks}">\r\n        <a class="list-menu-item" data-binding="{@event-onclick: handleClickHyperlink}{href: uri}{target: target}{title: tooltip}">\r\n            <img class="list-menu-icon" data-binding="{src: iconUri}" />\r\n            <span class="list-menu-details list-menu-name" data-binding="{@text: text}"></span>\r\n        </a>\r\n    </li>\r\n</ul>',"url:/Mapping/modules/LayerList/MapServiceActions/MapServiceActionsView.html":'<div class="menu-no-items" data-binding="{@hidden: visibleMenuItems}{@text: @language-menu-no-items}"><!-- No Items. --></div>\r\n\r\n<div class="list-menu active has-icon" data-binding="{@visible: visibleMenuItems}{@source: visibleMenuItems}">\r\n    <div class="list-menu-item" data-binding="{@template-for: visibleMenuItems}{@enabled: canExecute}">\r\n        <button class="list-menu-button" data-binding="{@event-onclick: handleMenuItemClick}{title: description}">\r\n            <img class="list-menu-icon" data-binding="{@visible: iconUri}{src: iconUri}{alt: text}" />\r\n            <span class="list-menu-details">\r\n                <strong class="list-menu-name" data-binding="{@text: text}"></strong>\r\n                <span class="list-menu-desc" data-binding="{@visible: description}{@text: description}"></span>\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div>\r\n',"url:/Mapping/modules/LayerList/Templates/LayerListItemTemplate.html":'<ul class="layers" data-binding="{@template-for: onDemandItemCollection}">\r\n    <li class="layer" data-binding="{@visible: displayItem}{@noclass-layer-invisible: parentEffectivelyVisible}">\r\n        <div class="layer-item-expander"><button class="tree-expander" data-binding="{@visible: hasDisplayedChildren}{@class-expanded: isExpanded}{@noclass-collapsed: isExpanded}{@event-onclick: handleExpanderClick}{title:layerFolderToggleTooltip}"></button></div>\r\n        <div class="layer-info" data-binding="{@class-layer-enabled: inVisibleScaleRange}{@noclass-layer-disabled: inVisibleScaleRange}">\r\n            <div class="mapservice-actions" data-binding="{@visible: enableMapServiceActions}"><button class="chevron-right-16" data-binding="{title: mapServiceActionsTooltip}{@event-onclick: handleMapServiceActions}"></button></div>\r\n            <div class="layer-actions" data-binding="{@visible: enableLayerActions}"><button class="chevron-right-16" data-binding="{title: layerActionsTooltip}{@event-onclick: handleLayerActions}"></button></div>\r\n            <div class="widget" data-binding="{@widget: TransparencySlider}{@widget-context: @context}{@widget-required: false}{@visible: canAdjustOpacity}"></div>\r\n            <div class="layer-contents" data-binding="{@event-mousedown: handleMouseDown}{@event-mouseup: handleMouseUp}{@event-touchstart: handleTouchStart}{@event-touchend: handleTouchEnd}">\r\n                <span class="layer-item-ctrl">\r\n                    <input type="checkbox" data-binding="{@hidden: hasRadioToggle}{@disabled: hasRadioToggle}{checked: isVisible}{disabled: canNotAssignVisibility}{@event-onclick: setItemVisibility}{title: layerToggleTooltip}" />\r\n                    <input type="radio" data-binding="{@visible: hasRadioToggle}{@enabled: hasRadioToggle}{name: radioGroup}{checked: isVisible}{disabled: canNotAssignVisibility}{@event-onclick: setItemVisibilityExclusive}{title: layerToggleTooltip}" />\r\n                </span>\r\n                <span class="layer-item-ctrl layer-list-layer-icon" data-binding="{@visible: iconUri}"><img data-binding="{alt: iconTooltip}{src: iconUri}" /></span>\r\n                <span class="layer-item-ctrl" data-binding="{@visible: legendIsVisible}">\r\n                    <span class="layer-list-legend-icon" data-binding="{innerHTML: legendSwatch}{title: legendTooltip}{@hidden: legendHasMultipleItems}"></span>\r\n                    <button class="layer-list-legend-icon" data-binding="{innerHTML: legendSwatch}{title: legendTooltip}{@event-onclick: handleLegendExpanderClick}{@visible: legendHasMultipleItems}"></button>\r\n                </span>\r\n                <span class="display-name" data-binding="{@text: name}{@event-onclick: handleExpanderClick}"></span>\r\n            </div>\r\n        </div>\r\n        <div data-binding="{@visible: legendIsVisible}">\r\n            <ul class="legend-list" data-binding="{@visible: expandLegend}{@source: legendItems}{@template: Mapping/modules/LayerList/Templates/LayerListLegendItemTemplate.html}"></ul>\r\n        </div>\r\n        <ul class="layers" data-binding="{@visible: isExpanded}{@source: onDemandItemCollection}{@template: Mapping/modules/LayerList/Templates/LayerListItemTemplate.html}"></ul>\r\n    </li>\r\n</ul>\r\n',"url:/Mapping/modules/LayerList/Templates/LayerListLegendItemTemplate.html":'<ul>\r\n    <li class="legend-item leaf clear" data-binding="{@template-for: legendItems}" tabindex="0">\r\n        <div class="legend-item children layer-contents" data-binding="{@visible: isVisibleInLayerListLegend}">\r\n            <div class="legend-swatch" data-binding="{innerHTML: swatchElement}{title: label}"></div>\r\n            <span class="legend-item-label" data-binding="{@text: label}{title: label}"></span>\r\n        </div>\r\n    </li>\r\n</ul>',"url:/Mapping/modules/LayerList/Widgets/TransparencySliderView.html":'<div class="widget">\r\n    <div class="transparency-slider" data-binding="{@var: tSliderElement}{@event-onclick: handleTransparencySliderClick}"></div>\r\n</div>\r\n'}}),define(["Mapping/modules/LayerList/LayerListModule","Mapping/modules/LayerList/LayerListView","Mapping/modules/LayerList/LayerListViewModel","Mapping/modules/LayerList/LayersSharingLinkProvider","Mapping/modules/LayerList/LayerActions/LayerActionsView","Mapping/modules/LayerList/LayerActions/LayerActionsViewModel","Mapping/modules/LayerList/LayerActions/LayerHyperlinkViewModel","Mapping/modules/LayerList/Widgets/TransparencySliderView","Mapping/modules/LayerList/MapServiceActions/MapServiceActionsView"],function(e,t,i,n,a,r,s,l,o){shim(e,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerListModule",e.LayerListModule),shim(t,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerListView",t.LayerListView),shim(i,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerListViewModel",i.LayerListViewModel),shim(n,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayersSharingLinkProvider",n.LayersSharingLinkProvider),shim(a,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerActionsView",a.LayerActionsView),shim(r,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerActionsViewModel",r.LayerActionsViewModel),shim(s,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.LayerHyperlinkViewModel",s.LayerHyperlinkViewModel),shim(l,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.TransparencySliderView",l.TransparencySliderView),shim(o,"geocortex.essentialsHtmlViewer.mapping.modules.layerList.MapServiceActionsView",o.MapServiceActionsView)});