!function(){var t="<div class='heat-maps form-stacked'>    <h2 class='visualization-title' data-binding='{@text: @language-heat-maps-title}'></h2>    <div class='form-item'>        <label class='form-label' data-binding='{@text: @language-heat-maps-intensity}'></label>        <div class='slider-container'>            <div class='slider-label slider-label-min' data-binding='{@text: @language-heat-maps-intensity-slider-min-label}'></div>            <div class='slider-label slider-label-max' data-binding='{@text: @language-heat-maps-intensity-slider-max-label}'></div>            <div class='intensity-slider' data-binding='{@var: sliderElement}'>                <div class='slider-label slider-label-current'></div>            </div>        </div>    </div>    <div class='form-item'>        <label for='heatmapsViewField' data-binding='{@text: @language-heat-maps-intensity-multiplier}'></label>        <select id='heatmapsViewField' data-binding='{@source: fields}{@value: selectedField}{@disabled: disableFields}{title: @language-heat-maps-intensity-multiplier}'>            <option data-binding='{@template-for: fields}{@text: displayName}{value: name}'></option>        </select>    </div></div>";function r(e,t,a){if("string"==typeof e&&(a=t,t=e),void 0!==a)for(var i=t.split("."),r=null,n=window,s=0,o=i.length;s<o;s++)r=i[s],s==o-1?n[r]=a:n[r]||(n[r]={}),n=n[r];else console.warn("Undefined shim for: "+t)}require({cache:{"Mapping/modules/HeatMaps/FieldListItem":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/HeatMaps/GradientOptions":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/HeatMaps/HeatMapsModule":function(){var i,d=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/infrastructure/VisualizationUtils","geocortex/infrastructure/ColorUtils"],function(e,t,a,s,i){"use strict";var r,n;Object.defineProperty(t,"__esModule",{value:!0}),(n=r=t.GradientColorType||(t.GradientColorType={}))[n.OUTERMOST=0]="OUTERMOST",n[n.OUTER=1]="OUTER",n[n.INNER=2]="INNER",n[n.INNERMOST=3]="INNERMOST";var o,l=(o=a.ModuleBase,d(p,o),p.prototype.initialize=function(e){var t=this;if(o.prototype.initialize.call(this,e),Modernizr.canvas){if(null!=e.allowToggleForUserAddedLayers&&(this._allowToggleForUserAddedLayers=e.allowToggleForUserAddedLayers),e.intensity&&(this._defaultIntensity=e.intensity),e.gradientOptions){var a=e.gradientOptions;a.outermostColor&&(this._defaultGradient[r.OUTERMOST]=a.outermostColor),a.outerColor&&(this._defaultGradient[r.OUTER]=a.outerColor),a.innerColor&&(this._defaultGradient[r.INNER]=a.innerColor),a.innermostColor&&(this._defaultGradient[r.INNERMOST]=a.innermostColor)}this.app.waitUntilMapLoaded().then(function(){t._handleMapLoaded(t.app.map)}),this._registerCommandsAndEvents()}else this.app.trace.warning("The heat map module requires a Canvas enabled Browser. IE8 does not support Canvas.")},p.prototype._handleMapLoaded=function(e){var t=this.app.site;if(t&&t.essentialsMap)for(var a=0,i=t.essentialsMap.mapServices;a<i.length;a++){var r=i[a];if(r.heatMap&&r.heatMap.enabled)for(var n=0,s=r.layers;n<s.length;n++){var o=s[n];this.app.command("AddHeatMap").execute({gcxLayer:o,onStartUp:!0})}}},p.prototype._registerCommandsAndEvents=function(){this.app.command("AddHeatMap").register(this,this._executeAddHeatMap,this._canExecuteAddHeatMap),this.app.command("RemoveHeatMap").register(this,this._executeRemoveHeatMap,this._canExecuteRemoveHeatMap)},p.prototype._executeAddHeatMap=function(e){var t=this._getGeocortexLayer(e),a=s.getFeatureHeatMap(t),i=this._createHeatMapRenderer(a);if(i){var r=t.mapService.serviceLayer;r&&r instanceof esri.layers.GraphicsLayer?(!e.onStartUp&&this.app.applicationReady&&0===this.app.pendingModulesForCommand("RemoveVisualization").length&&this.app.command("RemoveVisualization").execute({gcxLayer:t}),a.enabled=!0,a.respectScaleRange||(a.defaultMaxScale=r.maxScale?r.maxScale:0,a.defaultMinScale=r.minScale?r.minScale:0,r.setMaxScale(0),r.setMinScale(0)),a.defaultRenderer=r.renderer,r.setRenderer(i),this.app.command("AddHeatMap").raiseCanExecuteChanged(),this.app.command("RemoveHeatMap").raiseCanExecuteChanged(),this.app.event("HeatMapAddedEvent").publish(t),this.app.event("LayerVisualizationChangedEvent").publish(t)):this.app.trace.warning("Could not add heat map for layer with ID '{0}'. Heat map requires a graphics layer".format(t.id))}else this.app.trace.warning("Could not add heat map for layer with ID '{0}'. Invalid renderer configuration".format(t.id))},p.prototype._canExecuteAddHeatMap=function(e){if("string"!=typeof e&&e.onStartUp)return!0;var t=this._getGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.heatMap)&&!t.mapService.heatMap.enabled},p.prototype._executeRemoveHeatMap=function(e){var t=this._getGeocortexLayer(e),a=s.getFeatureHeatMap(t),i=t.mapService.serviceLayer;if(i&&i instanceof esri.layers.GraphicsLayer){a.enabled=!1;var r=s.getHeatMapRenderer(t);if(r){a.respectScaleRange||(i.setMaxScale(a.defaultMaxScale),i.setMinScale(a.defaultMinScale)),a.intensity=r.blurRadius,a.field=r.field,i.setRenderer(a.defaultRenderer),a.defaultRenderer=null;var n=r._canvas;n.parentNode.removeChild(n),r=n=null}this.app.command("AddHeatMap").raiseCanExecuteChanged(),this.app.command("RemoveHeatMap").raiseCanExecuteChanged(),this.app.event("HeatMapRemovedEvent").publish(t),this.app.event("LayerVisualizationChangedEvent").publish(t)}else this.app.trace.warning("Could not remove heat map for layer with ID '{0}'. Heat map requires a graphics layer".format(t.id))},p.prototype._canExecuteRemoveHeatMap=function(e){if("string"!=typeof e&&e.onStartUp)return!0;var t=this._getGeocortexLayer(e);return!!(t&&t.mapService&&t.mapService.heatMap)&&t.mapService.heatMap.enabled},p.prototype._getGeocortexLayer=function(t){return"string"!=typeof t?t.gcxLayer:this.app.site&&this.app.site.essentialsMap?this.app.site.essentialsMap.allLayers().filter(function(e){return t===e.mapService.id})[0]:null},p.prototype._createHeatMapRenderer=function(e){if(e){var t=this._getHeatMapColors(e),a=new esri.renderer.HeatmapRenderer({colors:t,blurRadius:e.intensity?e.intensity:this._defaultIntensity,field:e.field?e.field:null});if(e.offset){for(var i=[],r=0;r<e.offset.length;r++)i[r]={ratio:e.offset[r],color:t[r]};a.setColorStops(i)}return a}},p.prototype._getHeatMapColors=function(e){var a=this;return 0===e.gradient.length?this._defaultGradient.map(function(e){return i.getStringFromHex(e)}):e.gradient.map(function(e,t){return i.getStringFromList(e)||i.getStringFromHex(a._defaultGradient[t])})},p);function p(){var e=null!==o&&o.apply(this,arguments)||this;return e._allowToggleForUserAddedLayers=!0,e._defaultIntensity=30,e._defaultGradient=["#00FFFFFF","#FF0000FF","#FFFF0000","#FFFFFF00"],e}t.HeatMapsModule=l})},"Mapping/modules/HeatMaps/HeatMapsModuleConfig":function(){define(["require","exports"],function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0})})},"Mapping/modules/HeatMaps/HeatMapsView":function(){var i,o=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});define(["require","exports","geocortex/framework/ui/ViewBase","geocortex/framework/utils/utils"],function(e,t,a,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,n=(r=a.ViewBase,o(s,r),s.prototype.attach=function(e){r.prototype.attach.call(this,e),e.selectedLayer.bind(this,this._onSelectedLayerChanged)},s.prototype.added=function(e){r.prototype.added.call(this,e),this._setupJQuerySlider()},s.prototype._onSelectedLayerChanged=function(e){this.layerName=e.displayName,$(this.sliderElement).slider("value",this.viewModel.intensity.get())},s.prototype._setupJQuerySlider=function(){var a=this,e={animate:!1,min:s.SLIDER_MIN_VAL,max:s.SLIDER_MAX_VAL,step:s.SLIDER_STEP_INCREMENT,orientation:"horizontal",value:s.SLIDER_MIN_VAL,change:function(e,t){return a._handleSliderValueChanged(e,t)}};$(this.sliderElement).slider(e);var t=$(this.sliderElement).children(".ui-slider-handle");t.attr("title",this.getResource("language-heat-maps-intensity-slider-tooltip")),t.text(this.getResource("language-heat-maps-intensity-slider-handle"))},s.prototype._handleSliderValueChanged=function(e,t){if(t&&!i.isNullOrUndefined(t.value)){this.viewModel.intensity.set(t.value);var a="{0} {1}: {2} {3}".format(this.layerName,this.app.getResource(this.libraryId,"language-heat-maps-intensity-slider-intensity"),t.value,this.app.getResource(this.libraryId,"language-heat-maps-intensity-slider-pixels"));$(this.sliderElement).children("a").attr("aria-label",a)}},s.SLIDER_MIN_VAL=0,s.SLIDER_MAX_VAL=100,s.SLIDER_STEP_INCREMENT=1,s);function s(){var e=null!==r&&r.apply(this,arguments)||this;return e.sliderElement=null,e.layerName="",e}t.HeatMapsView=n})},"Mapping/modules/HeatMaps/HeatMapsViewModel":function(){var i,p=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/infrastructure/VisualizationUtils","geocortex/essentials/Field"],function(e,t,a,i,r,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s,o=(s=a.ViewModelBase,p(l,s),l.prototype._getNumericFields=function(e){for(var t=e.fields,a=[{name:l.EMPTY_FIELD,displayName:this.app.getResource(this.libraryId,"language-heat-maps-none")}],i=0,r=t;i<r.length;i++){var n=r[i];this._isNumericFieldType(n.dataType)&&a.push({name:n.name,displayName:n.displayName})}return 1===a.length&&(a[0].displayName=this.app.getResource(this.libraryId,"language-heat-maps-no-fields")),a},l.prototype._isNumericFieldType=function(e){switch(e){case n.EssentialsFieldTypes.essentialsFieldTypeInteger:case n.EssentialsFieldTypes.essentialsFieldTypeSmallInteger:case n.EssentialsFieldTypes.essentialsFieldTypeSingle:case n.EssentialsFieldTypes.essentialsFieldTypeDouble:return!0}return!1},l.EMPTY_FIELD="",l);function l(e,t){var a=s.call(this,e,t)||this;return a._currentHeatMap=null,a.selectedLayer=new i.Observable(null),a.intensity=new i.Observable(null),a.fields=new i.ObservableCollection,a.selectedField=new i.Observable(null),a.disableFields=new i.Observable(!1),a.selectedLayer.bind(a,function(e){a._currentHeatMap=r.getFeatureHeatMap(e),a._currentHeatMap&&(a.fields.set(a._getNumericFields(e)),a.selectedField.set(a._currentHeatMap.field?a._currentHeatMap.field:l.EMPTY_FIELD),a.intensity.set(a._currentHeatMap.intensity))}),a.fields.bind(a,function(e){a.disableFields.set(a.fields.get().length<2)}),a.selectedField.bind(a,function(e){a._currentHeatMap&&a._currentHeatMap.field!==e&&(a._currentHeatMap.field=e)}),a.intensity.bind(a,function(e){a._currentHeatMap&&a._currentHeatMap.intensity!==e&&(a._currentHeatMap.intensity=e)}),a.app.event("VisualizationViewActivatedEvent").subscribe(a,function(e){a.selectedLayer.set(e)}),a}t.HeatMapsViewModel=o})},"Mapping/modules/HeatMaps/HeatMapVisualizationProvider":function(){var i,o=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)},function(e,t){function a(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)});define(["require","exports","geocortex/infrastructure/visualization/VisualizationProviderBase","geocortex/infrastructure/VisualizationUtils"],function(e,t,a,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,i=(n=a.VisualizationProviderBase,o(s,n),s.prototype.canSupport=function(e){return!!Modernizr.canvas&&!(!e||!e.mapService)&&e.mapService.heatMap&&e.mapService.heatMap.userCanToggle},s.prototype.handleCurrentLayerChanged=function(e){if(Modernizr.canvas){var t=r.getFeatureHeatMap(e);this.isEnabled.set(!!t&&t.enabled),this.isSupported.set(!!t&&t.userCanToggle),this.isEnabled.get()&&(this.enabledVisualization=this.visualizations[0])}},s.prototype.handleActivate=function(){this.app.command("AddHeatMap").execute({gcxLayer:this.currentLayer.get()})},s.prototype.handleReset=function(){var e=this.currentLayer.get(),t=r.getFeatureHeatMap(e),a=r.getHeatMapRenderer(e);if(a){var i=!1;a.blurRadius!==t.defaultIntensity&&(t.intensity=t.defaultIntensity,a.setBlurRadius(t.defaultIntensity),i=!0),a.field!==t.defaultField&&(t.field=t.defaultField,a.setField(t.defaultField),i=!0),i&&(e.mapService.serviceLayer.refresh(),this.app.event("VisualizationViewActivatedEvent").publish(e))}},s.prototype.handleApply=function(){var e=this.currentLayer.get(),t=r.getFeatureHeatMap(e),a=r.getHeatMapRenderer(e);if(a){var i=!1;a.blurRadius!==t.intensity&&(a.setBlurRadius(t.intensity),i=!0),a.field!==t.field&&(a.setField(t.field),i=!0),i&&e.mapService.serviceLayer.refresh()}},s);function s(e,t){var a=n.call(this,e,t)||this;a.displayName=a.app.getResource(t,"language-heat-maps-name");var i={provider:a,name:a.displayName,id:a.displayName};return a.enabledVisualization=i,a.visualizations.push(i),a}t.HeatMapVisualizationProvider=i})},"url:/Mapping/modules/HeatMaps/HeatMapsView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/HeatMaps/CSS/common.css","css","LmhlYXQtbWFwcyAuc2xpZGVyLWNvbnRhaW5lciwNCi5oZWF0LW1hcHMgLmludGVuc2l0eS1zbGlkZXIgew0KICAgIGNsZWFyOiBib3RoOw0KfQ0KLmhlYXQtbWFwcyAuc2xpZGVyLWxhYmVsIHsNCiAgICB3aWR0aDogYXV0bzsNCn0NCi5oZWF0LW1hcHMgLnNsaWRlci1sYWJlbC1tYXggew0KICAgIGZsb2F0OiByaWdodDsNCn0="),e.resourceManager.register("Mapping","inv","Mapping/modules/HeatMaps/CSS/large.css","css","LkhlYXRNYXBzVmlldyAudWktc2xpZGVyLWhvcml6b250YWwgLnVpLXNsaWRlci1oYW5kbGUgew0KICAgIHdpZHRoOiAxLjVlbTsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KfQ=="),e.resourceManager.register("Mapping","inv","Mapping/modules/HeatMaps/HeatMapsView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/HeatMaps/HeatMapsModule","Mapping/modules/HeatMaps/HeatMapsView","Mapping/modules/HeatMaps/HeatMapsViewModel","Mapping/modules/HeatMaps/HeatMapVisualizationProvider"],function(e,t,a,i){r(e,"geocortex.essentialsHtmlViewer.mapping.modules.heatMaps.GradientColorType",e.GradientColorType),r(e,"geocortex.essentialsHtmlViewer.mapping.modules.heatMaps.HeatMapsModule",e.HeatMapsModule),r(t,"geocortex.essentialsHtmlViewer.mapping.modules.heatMaps.HeatMapsView",t.HeatMapsView),r(a,"geocortex.essentialsHtmlViewer.mapping.modules.heatMaps.HeatMapsViewModel",a.HeatMapsViewModel),r(i,"geocortex.essentialsHtmlViewer.mapping.modules.heatMaps.HeatMapVisualizationProvider",i.HeatMapVisualizationProvider)})}();