!function(){function e(e,t,a){if("string"==typeof e&&(a=t,t=e),void 0!==a)for(var o=t.split("."),r=null,i=window,p=0,n=o.length;p<n;p++)r=o[p],p==n-1?i[r]=a:i[r]||(i[r]={}),i=i[r];else console.warn("Undefined shim for: "+t)}var t="<div class='exportmap'>    <div class='export-create' data-binding='{@hidden: exportComplete}'>        <div class='export-status' data-binding='{@visible: isExporting}'>            <p data-binding='{@text: @language-export-map-is-exporting}'></p>        </div>        <div data-binding='{@hidden: isExporting}'>            <label for='outputformat' data-binding='{@text: @language-export-map-select-image-format}{@visible: outputFormats}'></label>            <select id='outputformat' data-binding='{@source: outputFormats}{@value: selectedFormat}{@visible: outputFormats}'>                <option data-binding='{@template-for: outputFormats}{@text: @context}{@attach: @context}'></option>            </select>            <input id='georeference' type='checkbox' data-binding='{@value: includeGeoreferenceData}{@enabled: formatSupportsIncludeGeoreferenceData}{@visible: allowIncludeGeoreferenceData}' />            <label for='georeference' class='inline' data-binding='{@text: @language-export-map-include-georeference-data}{@visible: allowIncludeGeoreferenceData}'></label>            <div class='form-btns'>                <button class='export-button button' data-binding='{@event-click: handleExportMapClick}{@text: @language-export-map-create-image}'></button>            </div>        </div>    </div>    <div class='export-complete' data-binding='{@visible: exportComplete}'>        <p data-binding='{@text: @language-export-map-complete-description}'></p>        <div class='form-btns'>            <button class='export-button button' data-binding='{@event-click: handleViewImageClick}{@text: @language-export-map-view-image}'></button>        </div>    </div></div>";require({cache:{"Mapping/modules/ExportMap/ExportMapModule":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])};return function(t,a){function o(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(o.prototype=a.prototype,new o)}}();define(["require","exports","geocortex/framework/application/ModuleBase","geocortex/essentials/utilities/GraphicsLayerUtilities","geocortex/infrastructure/GraphicsLayerIds","geocortex/infrastructure/GraphicsLayerUtils"],function(t,a,o,r,i,p){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n=function(t){function a(){return null!==t&&t.apply(this,arguments)||this}return e(a,t),a.prototype.initialize=function(e){t.prototype.initialize.call(this,e),e.excludeHighlightLayerFromExport&&r.addToGraphicsLayerIdsToExclude([p.ExcludeFromEnum.ExportMapTaskName],i.HIGHLIGHT_LAYER_ID)},a}(o.ModuleBase);a.ExportMapModule=n})},"Mapping/modules/ExportMap/ExportMapView":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])};return function(t,a){function o(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(o.prototype=a.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewBase"],function(t,a,o){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var r=function(t){function a(e,a){var o=t.call(this,e,a)||this;return o.app.command("ShowExportMapDialog").register(o,function(){o.app.viewManager.activateView(o),o.viewModel.exportComplete.set(!1)},function(){return o.app.site&&!!o.app.site.essentialsMap&&!!o.app.site.essentialsMap.supportedExportFormats}),o}return e(a,t),a.prototype.handleExportMapClick=function(e,t,a){this.viewModel.exportMap()},a.prototype.handleViewImageClick=function(e,t,a){window.open(this.viewModel.url.get()),this.viewModel.exportComplete.set(!1)},a}(o.ViewBase);a.ExportMapView=r})},"Mapping/modules/ExportMap/ExportMapViewModel":function(){var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])};return function(t,a){function o(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(o.prototype=a.prototype,new o)}}();define(["require","exports","geocortex/framework/ui/ViewModelBase","geocortex/framework/observables","geocortex/essentials/ReportParameters"],function(t,a,o,r,i){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var p=function(t){function a(e,a){var o=t.call(this,e,a)||this;return o.formatSupportsIncludeGeoreferenceData=new r.Observable(!1),o.isExporting=new r.Observable(!1),o.exportComplete=new r.Observable(!1),o.url=new r.Observable(null),o.outputFormats=new r.ObservableCollection,o.allowIncludeGeoreferenceData=new r.Observable(!0),o.selectedFormat=new r.Observable(null),o.includeGeoreferenceData=new r.Observable(!1),o.app.site&&o.app.site.isInitialized?o.siteInitialized():o.app.event("SiteInitializedEvent").once(o,o.siteInitialized),o.formatSupportsIncludeGeoreferenceData.syncTransform(o.selectedFormat,function(e){return e&&"GeoTIFF"!=e&&"PDF"!=e}),o.includeGeoreferenceData.syncTransform(o.selectedFormat,function(e){return e&&"GeoTIFF"!=e&&"PDF"!=e&&o.includeGeoreferenceData.get()}),o}return e(a,t),a.prototype.siteInitialized=function(){var e=this;if(this.app.site&&this.app.site.essentialsMap&&this.app.site.essentialsMap.supportedExportFormats){var t=this.app.site.essentialsMap.supportedExportFormats.filter(function(t){return!(e.app.site.getEssentialsVersion()<4.03&&"pdf"===t.toLowerCase())});this.outputFormats.set(t),this.app.site.essentialsMap.exportMapImageOptions&&this.app.site.essentialsMap.exportMapImageOptions.defaultOutputFormat?this.selectedFormat.set(this.getFormatIgnoreCase(this.app.site.essentialsMap.exportMapImageOptions.defaultOutputFormat)):this.outputFormats.get().length>0?this.selectedFormat.set(this.outputFormats.getAt(0)):this.selectedFormat.set(this.app.getResource(this.libraryId,"language-export-map-none")),this.app.site.essentialsMap.exportMapImageOptions&&this.allowIncludeGeoreferenceData.set(this.app.site.essentialsMap.exportMapImageOptions.allowIncludeGeoreferenceData)}this.app.command("ShowExportMapDialog").raiseCanExecuteChanged()},a.prototype.getFormatIgnoreCase=function(e){var t=this.outputFormats.get();if(!t||t.length<=0)return null;if(e)for(var a=e.toUpperCase(),o=0;o<t.length;o++){var r=t[o];if(r&&r.toUpperCase()===a)return t[o]}return t[0]},a.prototype.exportMap=function(){var e=this;this.isExporting.set(!0);var t=this.app.site.essentialsMap;this.app.command("ScreenReaderNarrate").execute(this.app.getResource(this.libraryId,"language-export-map-is-exporting"));var a=new i.ReportParameters;a.outputFormat=this.selectedFormat.get(),a.customExtent=this.app.map.extent,a.extentType=i.ReportParameters.CURRENT_EXTENT,this.allowIncludeGeoreferenceData&&(a.includeGeoreferenceData=this.includeGeoreferenceData.get()),void 0!=this.app&&null!=this.app.map&&a.populateMapGraphicsLayers(this.app.map),t.exportMap(a,function(t){e.app.command("ScreenReaderNarrate").execute(e.app.getResource(e.libraryId,"language-export-map-complete-description")),e.isExporting.set(!1),e.url.set(t.href),e.exportComplete.set(!0)},function(t){e.app.command("Alert").execute(e.app.getResource(e.libraryId,"language-export-map-error").format(t.message)),e.app.command("ScreenReaderNarrate").execute(e.app.getResource(e.libraryId,"language-export-map-error").format(t.message)),e.isExporting.set(!1)})},a}(o.ViewModelBase);a.ExportMapViewModel=p})},"url:/Mapping/modules/ExportMap/ExportMapView.html":t}}),require(["geocortex/framework/resourceManager"],function(e){e.resourceManager.register("Mapping","inv","Mapping/modules/ExportMap/CSS/common.css","css","LmV4cG9ydG1hcA0Kew0KICAgIGhlaWdodDogMTAwJTsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KfQ0KDQouZXhwb3J0bWFwIGxhYmVsDQp7DQogICAgY29sb3I6ICM2Njc1ODA7DQogICAgZm9udC1zaXplOiAxLjJlbTsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgICBtYXJnaW46IC43NWVtIDAgMC4yNWVtIDA7DQp9DQoNCi5leHBvcnRtYXAgc2VsZWN0DQp7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCi5leHBvcnRtYXAgaW5wdXRbdHlwZT0nY2hlY2tib3gnXQ0Kew0KICAgIGRpc3BsYXk6IGlubGluZTsNCiAgICBtYXJnaW46IC43NWVtIDAgMC4yNWVtIDA7DQp9DQoNCi5leHBvcnRtYXAgLmlubGluZQ0Kew0KICAgIGRpc3BsYXk6IGlubGluZTsNCn0NCg0KLmV4cG9ydG1hcCBidXR0b25zDQp7DQogICAgbWFyZ2luLXRvcDogLjc1ZW07DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0K"),e.resourceManager.register("Mapping","inv","Mapping/modules/ExportMap/ExportMapView.html","html",t)}),require({cache:{}}),define(["Mapping/modules/ExportMap/ExportMapModule","Mapping/modules/ExportMap/ExportMapView","Mapping/modules/ExportMap/ExportMapViewModel"],function(t,a,o){e(t,"geocortex.essentialsHtmlViewer.mapping.modules.exportMap.ExportMapModule",t.ExportMapModule),e(a,"geocortex.essentialsHtmlViewer.mapping.modules.exportMap.ExportMapView",a.ExportMapView),e(o,"geocortex.essentialsHtmlViewer.mapping.modules.exportMap.ExportMapViewModel",o.ExportMapViewModel)})}();